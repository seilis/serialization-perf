// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: openconfig/openconfig_access_points/openconfig_access_points.proto

#ifndef PROTOBUF_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto__INCLUDED
#define PROTOBUF_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "github.com/openconfig/ygot/proto/ywrapper/ywrapper.pb.h"
#include "github.com/openconfig/ygot/proto/yext/yext.pb.h"
#include "openconfig/enums/enums.pb.h"
// @@protoc_insertion_point(includes)

namespace protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[196];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsAccessPoints_AccessPoint_AssignedApManagers_ApManager_ConfigImpl();
void InitDefaultsAccessPoints_AccessPoint_AssignedApManagers_ApManager_Config();
void InitDefaultsAccessPoints_AccessPoint_AssignedApManagers_ApManager_StateImpl();
void InitDefaultsAccessPoints_AccessPoint_AssignedApManagers_ApManager_State();
void InitDefaultsAccessPoints_AccessPoint_AssignedApManagers_ApManagerImpl();
void InitDefaultsAccessPoints_AccessPoint_AssignedApManagers_ApManager();
void InitDefaultsAccessPoints_AccessPoint_AssignedApManagers_ApManagerKeyImpl();
void InitDefaultsAccessPoints_AccessPoint_AssignedApManagers_ApManagerKey();
void InitDefaultsAccessPoints_AccessPoint_AssignedApManagersImpl();
void InitDefaultsAccessPoints_AccessPoint_AssignedApManagers();
void InitDefaultsAccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxDataDistImpl();
void InitDefaultsAccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxDataDist();
void InitDefaultsAccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxDataWmmImpl();
void InitDefaultsAccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxDataWmm();
void InitDefaultsAccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxMcsImpl();
void InitDefaultsAccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxMcs();
void InitDefaultsAccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxDataDistImpl();
void InitDefaultsAccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxDataDist();
void InitDefaultsAccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxDataWmmImpl();
void InitDefaultsAccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxDataWmm();
void InitDefaultsAccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxMcsImpl();
void InitDefaultsAccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxMcs();
void InitDefaultsAccessPoints_AccessPoint_Bssids_Bssid_State_CountersImpl();
void InitDefaultsAccessPoints_AccessPoint_Bssids_Bssid_State_Counters();
void InitDefaultsAccessPoints_AccessPoint_Bssids_Bssid_StateImpl();
void InitDefaultsAccessPoints_AccessPoint_Bssids_Bssid_State();
void InitDefaultsAccessPoints_AccessPoint_Bssids_BssidImpl();
void InitDefaultsAccessPoints_AccessPoint_Bssids_Bssid();
void InitDefaultsAccessPoints_AccessPoint_Bssids_BssidKeyImpl();
void InitDefaultsAccessPoints_AccessPoint_Bssids_BssidKey();
void InitDefaultsAccessPoints_AccessPoint_BssidsImpl();
void InitDefaultsAccessPoints_AccessPoint_Bssids();
void InitDefaultsAccessPoints_AccessPoint_Radios_Radio_ConfigImpl();
void InitDefaultsAccessPoints_AccessPoint_Radios_Radio_Config();
void InitDefaultsAccessPoints_AccessPoint_Radios_Radio_Neighbors_Neighbor_StateImpl();
void InitDefaultsAccessPoints_AccessPoint_Radios_Radio_Neighbors_Neighbor_State();
void InitDefaultsAccessPoints_AccessPoint_Radios_Radio_Neighbors_NeighborImpl();
void InitDefaultsAccessPoints_AccessPoint_Radios_Radio_Neighbors_Neighbor();
void InitDefaultsAccessPoints_AccessPoint_Radios_Radio_Neighbors_NeighborKeyImpl();
void InitDefaultsAccessPoints_AccessPoint_Radios_Radio_Neighbors_NeighborKey();
void InitDefaultsAccessPoints_AccessPoint_Radios_Radio_NeighborsImpl();
void InitDefaultsAccessPoints_AccessPoint_Radios_Radio_Neighbors();
void InitDefaultsAccessPoints_AccessPoint_Radios_Radio_State_CountersImpl();
void InitDefaultsAccessPoints_AccessPoint_Radios_Radio_State_Counters();
void InitDefaultsAccessPoints_AccessPoint_Radios_Radio_StateImpl();
void InitDefaultsAccessPoints_AccessPoint_Radios_Radio_State();
void InitDefaultsAccessPoints_AccessPoint_Radios_RadioImpl();
void InitDefaultsAccessPoints_AccessPoint_Radios_Radio();
void InitDefaultsAccessPoints_AccessPoint_Radios_RadioKeyImpl();
void InitDefaultsAccessPoints_AccessPoint_Radios_RadioKey();
void InitDefaultsAccessPoints_AccessPoint_RadiosImpl();
void InitDefaultsAccessPoints_AccessPoint_Radios();
void InitDefaultsAccessPoints_AccessPoint_Ssids_Ssid_BandSteering_ConfigImpl();
void InitDefaultsAccessPoints_AccessPoint_Ssids_Ssid_BandSteering_Config();
void InitDefaultsAccessPoints_AccessPoint_Ssids_Ssid_BandSteering_StateImpl();
void InitDefaultsAccessPoints_AccessPoint_Ssids_Ssid_BandSteering_State();
void InitDefaultsAccessPoints_AccessPoint_Ssids_Ssid_BandSteeringImpl();
void InitDefaultsAccessPoints_AccessPoint_Ssids_Ssid_BandSteering();
void InitDefaultsAccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientCapabilities_StateImpl();
void InitDefaultsAccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientCapabilities_State();
void InitDefaultsAccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientCapabilitiesImpl();
void InitDefaultsAccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientCapabilities();
void InitDefaultsAccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientConnection_StateImpl();
void InitDefaultsAccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientConnection_State();
void InitDefaultsAccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientConnectionImpl();
void InitDefaultsAccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientConnection();
void InitDefaultsAccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientRf_StateImpl();
void InitDefaultsAccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientRf_State();
void InitDefaultsAccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientRfImpl();
void InitDefaultsAccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientRf();
void InitDefaultsAccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_Dot11KNeighbors_StateImpl();
void InitDefaultsAccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_Dot11KNeighbors_State();
void InitDefaultsAccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_Dot11KNeighborsImpl();
void InitDefaultsAccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_Dot11KNeighbors();
void InitDefaultsAccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_State_CountersImpl();
void InitDefaultsAccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_State_Counters();
void InitDefaultsAccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_StateImpl();
void InitDefaultsAccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_State();
void InitDefaultsAccessPoints_AccessPoint_Ssids_Ssid_Clients_ClientImpl();
void InitDefaultsAccessPoints_AccessPoint_Ssids_Ssid_Clients_Client();
void InitDefaultsAccessPoints_AccessPoint_Ssids_Ssid_Clients_ClientKeyImpl();
void InitDefaultsAccessPoints_AccessPoint_Ssids_Ssid_Clients_ClientKey();
void InitDefaultsAccessPoints_AccessPoint_Ssids_Ssid_ClientsImpl();
void InitDefaultsAccessPoints_AccessPoint_Ssids_Ssid_Clients();
void InitDefaultsAccessPoints_AccessPoint_Ssids_Ssid_ConfigImpl();
void InitDefaultsAccessPoints_AccessPoint_Ssids_Ssid_Config();
void InitDefaultsAccessPoints_AccessPoint_Ssids_Ssid_Dot11R_ConfigImpl();
void InitDefaultsAccessPoints_AccessPoint_Ssids_Ssid_Dot11R_Config();
void InitDefaultsAccessPoints_AccessPoint_Ssids_Ssid_Dot11R_StateImpl();
void InitDefaultsAccessPoints_AccessPoint_Ssids_Ssid_Dot11R_State();
void InitDefaultsAccessPoints_AccessPoint_Ssids_Ssid_Dot11RImpl();
void InitDefaultsAccessPoints_AccessPoint_Ssids_Ssid_Dot11R();
void InitDefaultsAccessPoints_AccessPoint_Ssids_Ssid_Dot11V_ConfigImpl();
void InitDefaultsAccessPoints_AccessPoint_Ssids_Ssid_Dot11V_Config();
void InitDefaultsAccessPoints_AccessPoint_Ssids_Ssid_Dot11V_StateImpl();
void InitDefaultsAccessPoints_AccessPoint_Ssids_Ssid_Dot11V_State();
void InitDefaultsAccessPoints_AccessPoint_Ssids_Ssid_Dot11VImpl();
void InitDefaultsAccessPoints_AccessPoint_Ssids_Ssid_Dot11V();
void InitDefaultsAccessPoints_AccessPoint_Ssids_Ssid_Dot1XTimers_ConfigImpl();
void InitDefaultsAccessPoints_AccessPoint_Ssids_Ssid_Dot1XTimers_Config();
void InitDefaultsAccessPoints_AccessPoint_Ssids_Ssid_Dot1XTimers_StateImpl();
void InitDefaultsAccessPoints_AccessPoint_Ssids_Ssid_Dot1XTimers_State();
void InitDefaultsAccessPoints_AccessPoint_Ssids_Ssid_Dot1XTimersImpl();
void InitDefaultsAccessPoints_AccessPoint_Ssids_Ssid_Dot1XTimers();
void InitDefaultsAccessPoints_AccessPoint_Ssids_Ssid_StateImpl();
void InitDefaultsAccessPoints_AccessPoint_Ssids_Ssid_State();
void InitDefaultsAccessPoints_AccessPoint_Ssids_Ssid_Wmm_ConfigImpl();
void InitDefaultsAccessPoints_AccessPoint_Ssids_Ssid_Wmm_Config();
void InitDefaultsAccessPoints_AccessPoint_Ssids_Ssid_Wmm_StateImpl();
void InitDefaultsAccessPoints_AccessPoint_Ssids_Ssid_Wmm_State();
void InitDefaultsAccessPoints_AccessPoint_Ssids_Ssid_WmmImpl();
void InitDefaultsAccessPoints_AccessPoint_Ssids_Ssid_Wmm();
void InitDefaultsAccessPoints_AccessPoint_Ssids_SsidImpl();
void InitDefaultsAccessPoints_AccessPoint_Ssids_Ssid();
void InitDefaultsAccessPoints_AccessPoint_Ssids_SsidKeyImpl();
void InitDefaultsAccessPoints_AccessPoint_Ssids_SsidKey();
void InitDefaultsAccessPoints_AccessPoint_SsidsImpl();
void InitDefaultsAccessPoints_AccessPoint_Ssids();
void InitDefaultsAccessPoints_AccessPoint_System_Aaa_Accounting_Config_AccountingMethodUnionImpl();
void InitDefaultsAccessPoints_AccessPoint_System_Aaa_Accounting_Config_AccountingMethodUnion();
void InitDefaultsAccessPoints_AccessPoint_System_Aaa_Accounting_ConfigImpl();
void InitDefaultsAccessPoints_AccessPoint_System_Aaa_Accounting_Config();
void InitDefaultsAccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event_ConfigImpl();
void InitDefaultsAccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event_Config();
void InitDefaultsAccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event_StateImpl();
void InitDefaultsAccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event_State();
void InitDefaultsAccessPoints_AccessPoint_System_Aaa_Accounting_Events_EventImpl();
void InitDefaultsAccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event();
void InitDefaultsAccessPoints_AccessPoint_System_Aaa_Accounting_Events_EventKeyImpl();
void InitDefaultsAccessPoints_AccessPoint_System_Aaa_Accounting_Events_EventKey();
void InitDefaultsAccessPoints_AccessPoint_System_Aaa_Accounting_EventsImpl();
void InitDefaultsAccessPoints_AccessPoint_System_Aaa_Accounting_Events();
void InitDefaultsAccessPoints_AccessPoint_System_Aaa_Accounting_State_AccountingMethodUnionImpl();
void InitDefaultsAccessPoints_AccessPoint_System_Aaa_Accounting_State_AccountingMethodUnion();
void InitDefaultsAccessPoints_AccessPoint_System_Aaa_Accounting_StateImpl();
void InitDefaultsAccessPoints_AccessPoint_System_Aaa_Accounting_State();
void InitDefaultsAccessPoints_AccessPoint_System_Aaa_AccountingImpl();
void InitDefaultsAccessPoints_AccessPoint_System_Aaa_Accounting();
void InitDefaultsAccessPoints_AccessPoint_System_Aaa_Authentication_AdminUser_ConfigImpl();
void InitDefaultsAccessPoints_AccessPoint_System_Aaa_Authentication_AdminUser_Config();
void InitDefaultsAccessPoints_AccessPoint_System_Aaa_Authentication_AdminUser_StateImpl();
void InitDefaultsAccessPoints_AccessPoint_System_Aaa_Authentication_AdminUser_State();
void InitDefaultsAccessPoints_AccessPoint_System_Aaa_Authentication_AdminUserImpl();
void InitDefaultsAccessPoints_AccessPoint_System_Aaa_Authentication_AdminUser();
void InitDefaultsAccessPoints_AccessPoint_System_Aaa_Authentication_Config_AuthenticationMethodUnionImpl();
void InitDefaultsAccessPoints_AccessPoint_System_Aaa_Authentication_Config_AuthenticationMethodUnion();
void InitDefaultsAccessPoints_AccessPoint_System_Aaa_Authentication_ConfigImpl();
void InitDefaultsAccessPoints_AccessPoint_System_Aaa_Authentication_Config();
void InitDefaultsAccessPoints_AccessPoint_System_Aaa_Authentication_State_AuthenticationMethodUnionImpl();
void InitDefaultsAccessPoints_AccessPoint_System_Aaa_Authentication_State_AuthenticationMethodUnion();
void InitDefaultsAccessPoints_AccessPoint_System_Aaa_Authentication_StateImpl();
void InitDefaultsAccessPoints_AccessPoint_System_Aaa_Authentication_State();
void InitDefaultsAccessPoints_AccessPoint_System_Aaa_Authentication_Users_User_ConfigImpl();
void InitDefaultsAccessPoints_AccessPoint_System_Aaa_Authentication_Users_User_Config();
void InitDefaultsAccessPoints_AccessPoint_System_Aaa_Authentication_Users_User_StateImpl();
void InitDefaultsAccessPoints_AccessPoint_System_Aaa_Authentication_Users_User_State();
void InitDefaultsAccessPoints_AccessPoint_System_Aaa_Authentication_Users_UserImpl();
void InitDefaultsAccessPoints_AccessPoint_System_Aaa_Authentication_Users_User();
void InitDefaultsAccessPoints_AccessPoint_System_Aaa_Authentication_Users_UserKeyImpl();
void InitDefaultsAccessPoints_AccessPoint_System_Aaa_Authentication_Users_UserKey();
void InitDefaultsAccessPoints_AccessPoint_System_Aaa_Authentication_UsersImpl();
void InitDefaultsAccessPoints_AccessPoint_System_Aaa_Authentication_Users();
void InitDefaultsAccessPoints_AccessPoint_System_Aaa_AuthenticationImpl();
void InitDefaultsAccessPoints_AccessPoint_System_Aaa_Authentication();
void InitDefaultsAccessPoints_AccessPoint_System_Aaa_Authorization_Config_AuthorizationMethodUnionImpl();
void InitDefaultsAccessPoints_AccessPoint_System_Aaa_Authorization_Config_AuthorizationMethodUnion();
void InitDefaultsAccessPoints_AccessPoint_System_Aaa_Authorization_ConfigImpl();
void InitDefaultsAccessPoints_AccessPoint_System_Aaa_Authorization_Config();
void InitDefaultsAccessPoints_AccessPoint_System_Aaa_Authorization_Events_Event_ConfigImpl();
void InitDefaultsAccessPoints_AccessPoint_System_Aaa_Authorization_Events_Event_Config();
void InitDefaultsAccessPoints_AccessPoint_System_Aaa_Authorization_Events_Event_StateImpl();
void InitDefaultsAccessPoints_AccessPoint_System_Aaa_Authorization_Events_Event_State();
void InitDefaultsAccessPoints_AccessPoint_System_Aaa_Authorization_Events_EventImpl();
void InitDefaultsAccessPoints_AccessPoint_System_Aaa_Authorization_Events_Event();
void InitDefaultsAccessPoints_AccessPoint_System_Aaa_Authorization_Events_EventKeyImpl();
void InitDefaultsAccessPoints_AccessPoint_System_Aaa_Authorization_Events_EventKey();
void InitDefaultsAccessPoints_AccessPoint_System_Aaa_Authorization_EventsImpl();
void InitDefaultsAccessPoints_AccessPoint_System_Aaa_Authorization_Events();
void InitDefaultsAccessPoints_AccessPoint_System_Aaa_Authorization_State_AuthorizationMethodUnionImpl();
void InitDefaultsAccessPoints_AccessPoint_System_Aaa_Authorization_State_AuthorizationMethodUnion();
void InitDefaultsAccessPoints_AccessPoint_System_Aaa_Authorization_StateImpl();
void InitDefaultsAccessPoints_AccessPoint_System_Aaa_Authorization_State();
void InitDefaultsAccessPoints_AccessPoint_System_Aaa_AuthorizationImpl();
void InitDefaultsAccessPoints_AccessPoint_System_Aaa_Authorization();
void InitDefaultsAccessPoints_AccessPoint_System_Aaa_ConfigImpl();
void InitDefaultsAccessPoints_AccessPoint_System_Aaa_Config();
void InitDefaultsAccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_ConfigImpl();
void InitDefaultsAccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Config();
void InitDefaultsAccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_ConfigImpl();
void InitDefaultsAccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Config();
void InitDefaultsAccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_ConfigImpl();
void InitDefaultsAccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_Config();
void InitDefaultsAccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State_CountersImpl();
void InitDefaultsAccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State_Counters();
void InitDefaultsAccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_StateImpl();
void InitDefaultsAccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State();
void InitDefaultsAccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_RadiusImpl();
void InitDefaultsAccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius();
void InitDefaultsAccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_StateImpl();
void InitDefaultsAccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_State();
void InitDefaultsAccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_ConfigImpl();
void InitDefaultsAccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_Config();
void InitDefaultsAccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_StateImpl();
void InitDefaultsAccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_State();
void InitDefaultsAccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_TacacsImpl();
void InitDefaultsAccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs();
void InitDefaultsAccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_ServerImpl();
void InitDefaultsAccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server();
void InitDefaultsAccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_ServerKeyImpl();
void InitDefaultsAccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_ServerKey();
void InitDefaultsAccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_ServersImpl();
void InitDefaultsAccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers();
void InitDefaultsAccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_StateImpl();
void InitDefaultsAccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_State();
void InitDefaultsAccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroupImpl();
void InitDefaultsAccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup();
void InitDefaultsAccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroupKeyImpl();
void InitDefaultsAccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroupKey();
void InitDefaultsAccessPoints_AccessPoint_System_Aaa_ServerGroupsImpl();
void InitDefaultsAccessPoints_AccessPoint_System_Aaa_ServerGroups();
void InitDefaultsAccessPoints_AccessPoint_System_Aaa_StateImpl();
void InitDefaultsAccessPoints_AccessPoint_System_Aaa_State();
void InitDefaultsAccessPoints_AccessPoint_System_AaaImpl();
void InitDefaultsAccessPoints_AccessPoint_System_Aaa();
void InitDefaultsAccessPoints_AccessPoint_System_Alarms_Alarm_ConfigImpl();
void InitDefaultsAccessPoints_AccessPoint_System_Alarms_Alarm_Config();
void InitDefaultsAccessPoints_AccessPoint_System_Alarms_Alarm_StateImpl();
void InitDefaultsAccessPoints_AccessPoint_System_Alarms_Alarm_State();
void InitDefaultsAccessPoints_AccessPoint_System_Alarms_AlarmImpl();
void InitDefaultsAccessPoints_AccessPoint_System_Alarms_Alarm();
void InitDefaultsAccessPoints_AccessPoint_System_Alarms_AlarmKeyImpl();
void InitDefaultsAccessPoints_AccessPoint_System_Alarms_AlarmKey();
void InitDefaultsAccessPoints_AccessPoint_System_AlarmsImpl();
void InitDefaultsAccessPoints_AccessPoint_System_Alarms();
void InitDefaultsAccessPoints_AccessPoint_System_Clock_ConfigImpl();
void InitDefaultsAccessPoints_AccessPoint_System_Clock_Config();
void InitDefaultsAccessPoints_AccessPoint_System_Clock_StateImpl();
void InitDefaultsAccessPoints_AccessPoint_System_Clock_State();
void InitDefaultsAccessPoints_AccessPoint_System_ClockImpl();
void InitDefaultsAccessPoints_AccessPoint_System_Clock();
void InitDefaultsAccessPoints_AccessPoint_System_ConfigImpl();
void InitDefaultsAccessPoints_AccessPoint_System_Config();
void InitDefaultsAccessPoints_AccessPoint_System_Cpus_Cpu_State_HardwareInterruptImpl();
void InitDefaultsAccessPoints_AccessPoint_System_Cpus_Cpu_State_HardwareInterrupt();
void InitDefaultsAccessPoints_AccessPoint_System_Cpus_Cpu_State_IdleImpl();
void InitDefaultsAccessPoints_AccessPoint_System_Cpus_Cpu_State_Idle();
void InitDefaultsAccessPoints_AccessPoint_System_Cpus_Cpu_State_KernelImpl();
void InitDefaultsAccessPoints_AccessPoint_System_Cpus_Cpu_State_Kernel();
void InitDefaultsAccessPoints_AccessPoint_System_Cpus_Cpu_State_NiceImpl();
void InitDefaultsAccessPoints_AccessPoint_System_Cpus_Cpu_State_Nice();
void InitDefaultsAccessPoints_AccessPoint_System_Cpus_Cpu_State_SoftwareInterruptImpl();
void InitDefaultsAccessPoints_AccessPoint_System_Cpus_Cpu_State_SoftwareInterrupt();
void InitDefaultsAccessPoints_AccessPoint_System_Cpus_Cpu_State_TotalImpl();
void InitDefaultsAccessPoints_AccessPoint_System_Cpus_Cpu_State_Total();
void InitDefaultsAccessPoints_AccessPoint_System_Cpus_Cpu_State_UserImpl();
void InitDefaultsAccessPoints_AccessPoint_System_Cpus_Cpu_State_User();
void InitDefaultsAccessPoints_AccessPoint_System_Cpus_Cpu_State_WaitImpl();
void InitDefaultsAccessPoints_AccessPoint_System_Cpus_Cpu_State_Wait();
void InitDefaultsAccessPoints_AccessPoint_System_Cpus_Cpu_StateImpl();
void InitDefaultsAccessPoints_AccessPoint_System_Cpus_Cpu_State();
void InitDefaultsAccessPoints_AccessPoint_System_Cpus_CpuImpl();
void InitDefaultsAccessPoints_AccessPoint_System_Cpus_Cpu();
void InitDefaultsAccessPoints_AccessPoint_System_Cpus_CpuKeyImpl();
void InitDefaultsAccessPoints_AccessPoint_System_Cpus_CpuKey();
void InitDefaultsAccessPoints_AccessPoint_System_CpusImpl();
void InitDefaultsAccessPoints_AccessPoint_System_Cpus();
void InitDefaultsAccessPoints_AccessPoint_System_Dns_ConfigImpl();
void InitDefaultsAccessPoints_AccessPoint_System_Dns_Config();
void InitDefaultsAccessPoints_AccessPoint_System_Dns_HostEntries_HostEntry_ConfigImpl();
void InitDefaultsAccessPoints_AccessPoint_System_Dns_HostEntries_HostEntry_Config();
void InitDefaultsAccessPoints_AccessPoint_System_Dns_HostEntries_HostEntry_StateImpl();
void InitDefaultsAccessPoints_AccessPoint_System_Dns_HostEntries_HostEntry_State();
void InitDefaultsAccessPoints_AccessPoint_System_Dns_HostEntries_HostEntryImpl();
void InitDefaultsAccessPoints_AccessPoint_System_Dns_HostEntries_HostEntry();
void InitDefaultsAccessPoints_AccessPoint_System_Dns_HostEntries_HostEntryKeyImpl();
void InitDefaultsAccessPoints_AccessPoint_System_Dns_HostEntries_HostEntryKey();
void InitDefaultsAccessPoints_AccessPoint_System_Dns_HostEntriesImpl();
void InitDefaultsAccessPoints_AccessPoint_System_Dns_HostEntries();
void InitDefaultsAccessPoints_AccessPoint_System_Dns_Servers_Server_ConfigImpl();
void InitDefaultsAccessPoints_AccessPoint_System_Dns_Servers_Server_Config();
void InitDefaultsAccessPoints_AccessPoint_System_Dns_Servers_Server_StateImpl();
void InitDefaultsAccessPoints_AccessPoint_System_Dns_Servers_Server_State();
void InitDefaultsAccessPoints_AccessPoint_System_Dns_Servers_ServerImpl();
void InitDefaultsAccessPoints_AccessPoint_System_Dns_Servers_Server();
void InitDefaultsAccessPoints_AccessPoint_System_Dns_Servers_ServerKeyImpl();
void InitDefaultsAccessPoints_AccessPoint_System_Dns_Servers_ServerKey();
void InitDefaultsAccessPoints_AccessPoint_System_Dns_ServersImpl();
void InitDefaultsAccessPoints_AccessPoint_System_Dns_Servers();
void InitDefaultsAccessPoints_AccessPoint_System_Dns_StateImpl();
void InitDefaultsAccessPoints_AccessPoint_System_Dns_State();
void InitDefaultsAccessPoints_AccessPoint_System_DnsImpl();
void InitDefaultsAccessPoints_AccessPoint_System_Dns();
void InitDefaultsAccessPoints_AccessPoint_System_Logging_Console_ConfigImpl();
void InitDefaultsAccessPoints_AccessPoint_System_Logging_Console_Config();
void InitDefaultsAccessPoints_AccessPoint_System_Logging_Console_Selectors_Selector_ConfigImpl();
void InitDefaultsAccessPoints_AccessPoint_System_Logging_Console_Selectors_Selector_Config();
void InitDefaultsAccessPoints_AccessPoint_System_Logging_Console_Selectors_Selector_StateImpl();
void InitDefaultsAccessPoints_AccessPoint_System_Logging_Console_Selectors_Selector_State();
void InitDefaultsAccessPoints_AccessPoint_System_Logging_Console_Selectors_SelectorImpl();
void InitDefaultsAccessPoints_AccessPoint_System_Logging_Console_Selectors_Selector();
void InitDefaultsAccessPoints_AccessPoint_System_Logging_Console_Selectors_SelectorKeyImpl();
void InitDefaultsAccessPoints_AccessPoint_System_Logging_Console_Selectors_SelectorKey();
void InitDefaultsAccessPoints_AccessPoint_System_Logging_Console_SelectorsImpl();
void InitDefaultsAccessPoints_AccessPoint_System_Logging_Console_Selectors();
void InitDefaultsAccessPoints_AccessPoint_System_Logging_Console_StateImpl();
void InitDefaultsAccessPoints_AccessPoint_System_Logging_Console_State();
void InitDefaultsAccessPoints_AccessPoint_System_Logging_ConsoleImpl();
void InitDefaultsAccessPoints_AccessPoint_System_Logging_Console();
void InitDefaultsAccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_ConfigImpl();
void InitDefaultsAccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Config();
void InitDefaultsAccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors_Selector_ConfigImpl();
void InitDefaultsAccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors_Selector_Config();
void InitDefaultsAccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors_Selector_StateImpl();
void InitDefaultsAccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors_Selector_State();
void InitDefaultsAccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors_SelectorImpl();
void InitDefaultsAccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors_Selector();
void InitDefaultsAccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors_SelectorKeyImpl();
void InitDefaultsAccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors_SelectorKey();
void InitDefaultsAccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_SelectorsImpl();
void InitDefaultsAccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors();
void InitDefaultsAccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_StateImpl();
void InitDefaultsAccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_State();
void InitDefaultsAccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServerImpl();
void InitDefaultsAccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer();
void InitDefaultsAccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServerKeyImpl();
void InitDefaultsAccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServerKey();
void InitDefaultsAccessPoints_AccessPoint_System_Logging_RemoteServersImpl();
void InitDefaultsAccessPoints_AccessPoint_System_Logging_RemoteServers();
void InitDefaultsAccessPoints_AccessPoint_System_LoggingImpl();
void InitDefaultsAccessPoints_AccessPoint_System_Logging();
void InitDefaultsAccessPoints_AccessPoint_System_Memory_ConfigImpl();
void InitDefaultsAccessPoints_AccessPoint_System_Memory_Config();
void InitDefaultsAccessPoints_AccessPoint_System_Memory_StateImpl();
void InitDefaultsAccessPoints_AccessPoint_System_Memory_State();
void InitDefaultsAccessPoints_AccessPoint_System_MemoryImpl();
void InitDefaultsAccessPoints_AccessPoint_System_Memory();
void InitDefaultsAccessPoints_AccessPoint_System_Ntp_ConfigImpl();
void InitDefaultsAccessPoints_AccessPoint_System_Ntp_Config();
void InitDefaultsAccessPoints_AccessPoint_System_Ntp_NtpKeys_NtpKey_ConfigImpl();
void InitDefaultsAccessPoints_AccessPoint_System_Ntp_NtpKeys_NtpKey_Config();
void InitDefaultsAccessPoints_AccessPoint_System_Ntp_NtpKeys_NtpKey_StateImpl();
void InitDefaultsAccessPoints_AccessPoint_System_Ntp_NtpKeys_NtpKey_State();
void InitDefaultsAccessPoints_AccessPoint_System_Ntp_NtpKeys_NtpKeyImpl();
void InitDefaultsAccessPoints_AccessPoint_System_Ntp_NtpKeys_NtpKey();
void InitDefaultsAccessPoints_AccessPoint_System_Ntp_NtpKeys_NtpKeyKeyImpl();
void InitDefaultsAccessPoints_AccessPoint_System_Ntp_NtpKeys_NtpKeyKey();
void InitDefaultsAccessPoints_AccessPoint_System_Ntp_NtpKeysImpl();
void InitDefaultsAccessPoints_AccessPoint_System_Ntp_NtpKeys();
void InitDefaultsAccessPoints_AccessPoint_System_Ntp_Servers_Server_ConfigImpl();
void InitDefaultsAccessPoints_AccessPoint_System_Ntp_Servers_Server_Config();
void InitDefaultsAccessPoints_AccessPoint_System_Ntp_Servers_Server_StateImpl();
void InitDefaultsAccessPoints_AccessPoint_System_Ntp_Servers_Server_State();
void InitDefaultsAccessPoints_AccessPoint_System_Ntp_Servers_ServerImpl();
void InitDefaultsAccessPoints_AccessPoint_System_Ntp_Servers_Server();
void InitDefaultsAccessPoints_AccessPoint_System_Ntp_Servers_ServerKeyImpl();
void InitDefaultsAccessPoints_AccessPoint_System_Ntp_Servers_ServerKey();
void InitDefaultsAccessPoints_AccessPoint_System_Ntp_ServersImpl();
void InitDefaultsAccessPoints_AccessPoint_System_Ntp_Servers();
void InitDefaultsAccessPoints_AccessPoint_System_Ntp_StateImpl();
void InitDefaultsAccessPoints_AccessPoint_System_Ntp_State();
void InitDefaultsAccessPoints_AccessPoint_System_NtpImpl();
void InitDefaultsAccessPoints_AccessPoint_System_Ntp();
void InitDefaultsAccessPoints_AccessPoint_System_Processes_Process_StateImpl();
void InitDefaultsAccessPoints_AccessPoint_System_Processes_Process_State();
void InitDefaultsAccessPoints_AccessPoint_System_Processes_ProcessImpl();
void InitDefaultsAccessPoints_AccessPoint_System_Processes_Process();
void InitDefaultsAccessPoints_AccessPoint_System_Processes_ProcessKeyImpl();
void InitDefaultsAccessPoints_AccessPoint_System_Processes_ProcessKey();
void InitDefaultsAccessPoints_AccessPoint_System_ProcessesImpl();
void InitDefaultsAccessPoints_AccessPoint_System_Processes();
void InitDefaultsAccessPoints_AccessPoint_System_SshServer_ConfigImpl();
void InitDefaultsAccessPoints_AccessPoint_System_SshServer_Config();
void InitDefaultsAccessPoints_AccessPoint_System_SshServer_StateImpl();
void InitDefaultsAccessPoints_AccessPoint_System_SshServer_State();
void InitDefaultsAccessPoints_AccessPoint_System_SshServerImpl();
void InitDefaultsAccessPoints_AccessPoint_System_SshServer();
void InitDefaultsAccessPoints_AccessPoint_System_StateImpl();
void InitDefaultsAccessPoints_AccessPoint_System_State();
void InitDefaultsAccessPoints_AccessPoint_System_TelnetServer_ConfigImpl();
void InitDefaultsAccessPoints_AccessPoint_System_TelnetServer_Config();
void InitDefaultsAccessPoints_AccessPoint_System_TelnetServer_StateImpl();
void InitDefaultsAccessPoints_AccessPoint_System_TelnetServer_State();
void InitDefaultsAccessPoints_AccessPoint_System_TelnetServerImpl();
void InitDefaultsAccessPoints_AccessPoint_System_TelnetServer();
void InitDefaultsAccessPoints_AccessPoint_SystemImpl();
void InitDefaultsAccessPoints_AccessPoint_System();
void InitDefaultsAccessPoints_AccessPointImpl();
void InitDefaultsAccessPoints_AccessPoint();
void InitDefaultsAccessPoints_AccessPointKeyImpl();
void InitDefaultsAccessPoints_AccessPointKey();
void InitDefaultsAccessPointsImpl();
void InitDefaultsAccessPoints();
inline void InitDefaults() {
  InitDefaultsAccessPoints_AccessPoint_AssignedApManagers_ApManager_Config();
  InitDefaultsAccessPoints_AccessPoint_AssignedApManagers_ApManager_State();
  InitDefaultsAccessPoints_AccessPoint_AssignedApManagers_ApManager();
  InitDefaultsAccessPoints_AccessPoint_AssignedApManagers_ApManagerKey();
  InitDefaultsAccessPoints_AccessPoint_AssignedApManagers();
  InitDefaultsAccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxDataDist();
  InitDefaultsAccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxDataWmm();
  InitDefaultsAccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxMcs();
  InitDefaultsAccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxDataDist();
  InitDefaultsAccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxDataWmm();
  InitDefaultsAccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxMcs();
  InitDefaultsAccessPoints_AccessPoint_Bssids_Bssid_State_Counters();
  InitDefaultsAccessPoints_AccessPoint_Bssids_Bssid_State();
  InitDefaultsAccessPoints_AccessPoint_Bssids_Bssid();
  InitDefaultsAccessPoints_AccessPoint_Bssids_BssidKey();
  InitDefaultsAccessPoints_AccessPoint_Bssids();
  InitDefaultsAccessPoints_AccessPoint_Radios_Radio_Config();
  InitDefaultsAccessPoints_AccessPoint_Radios_Radio_Neighbors_Neighbor_State();
  InitDefaultsAccessPoints_AccessPoint_Radios_Radio_Neighbors_Neighbor();
  InitDefaultsAccessPoints_AccessPoint_Radios_Radio_Neighbors_NeighborKey();
  InitDefaultsAccessPoints_AccessPoint_Radios_Radio_Neighbors();
  InitDefaultsAccessPoints_AccessPoint_Radios_Radio_State_Counters();
  InitDefaultsAccessPoints_AccessPoint_Radios_Radio_State();
  InitDefaultsAccessPoints_AccessPoint_Radios_Radio();
  InitDefaultsAccessPoints_AccessPoint_Radios_RadioKey();
  InitDefaultsAccessPoints_AccessPoint_Radios();
  InitDefaultsAccessPoints_AccessPoint_Ssids_Ssid_BandSteering_Config();
  InitDefaultsAccessPoints_AccessPoint_Ssids_Ssid_BandSteering_State();
  InitDefaultsAccessPoints_AccessPoint_Ssids_Ssid_BandSteering();
  InitDefaultsAccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientCapabilities_State();
  InitDefaultsAccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientCapabilities();
  InitDefaultsAccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientConnection_State();
  InitDefaultsAccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientConnection();
  InitDefaultsAccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientRf_State();
  InitDefaultsAccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientRf();
  InitDefaultsAccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_Dot11KNeighbors_State();
  InitDefaultsAccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_Dot11KNeighbors();
  InitDefaultsAccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_State_Counters();
  InitDefaultsAccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_State();
  InitDefaultsAccessPoints_AccessPoint_Ssids_Ssid_Clients_Client();
  InitDefaultsAccessPoints_AccessPoint_Ssids_Ssid_Clients_ClientKey();
  InitDefaultsAccessPoints_AccessPoint_Ssids_Ssid_Clients();
  InitDefaultsAccessPoints_AccessPoint_Ssids_Ssid_Config();
  InitDefaultsAccessPoints_AccessPoint_Ssids_Ssid_Dot11R_Config();
  InitDefaultsAccessPoints_AccessPoint_Ssids_Ssid_Dot11R_State();
  InitDefaultsAccessPoints_AccessPoint_Ssids_Ssid_Dot11R();
  InitDefaultsAccessPoints_AccessPoint_Ssids_Ssid_Dot11V_Config();
  InitDefaultsAccessPoints_AccessPoint_Ssids_Ssid_Dot11V_State();
  InitDefaultsAccessPoints_AccessPoint_Ssids_Ssid_Dot11V();
  InitDefaultsAccessPoints_AccessPoint_Ssids_Ssid_Dot1XTimers_Config();
  InitDefaultsAccessPoints_AccessPoint_Ssids_Ssid_Dot1XTimers_State();
  InitDefaultsAccessPoints_AccessPoint_Ssids_Ssid_Dot1XTimers();
  InitDefaultsAccessPoints_AccessPoint_Ssids_Ssid_State();
  InitDefaultsAccessPoints_AccessPoint_Ssids_Ssid_Wmm_Config();
  InitDefaultsAccessPoints_AccessPoint_Ssids_Ssid_Wmm_State();
  InitDefaultsAccessPoints_AccessPoint_Ssids_Ssid_Wmm();
  InitDefaultsAccessPoints_AccessPoint_Ssids_Ssid();
  InitDefaultsAccessPoints_AccessPoint_Ssids_SsidKey();
  InitDefaultsAccessPoints_AccessPoint_Ssids();
  InitDefaultsAccessPoints_AccessPoint_System_Aaa_Accounting_Config_AccountingMethodUnion();
  InitDefaultsAccessPoints_AccessPoint_System_Aaa_Accounting_Config();
  InitDefaultsAccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event_Config();
  InitDefaultsAccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event_State();
  InitDefaultsAccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event();
  InitDefaultsAccessPoints_AccessPoint_System_Aaa_Accounting_Events_EventKey();
  InitDefaultsAccessPoints_AccessPoint_System_Aaa_Accounting_Events();
  InitDefaultsAccessPoints_AccessPoint_System_Aaa_Accounting_State_AccountingMethodUnion();
  InitDefaultsAccessPoints_AccessPoint_System_Aaa_Accounting_State();
  InitDefaultsAccessPoints_AccessPoint_System_Aaa_Accounting();
  InitDefaultsAccessPoints_AccessPoint_System_Aaa_Authentication_AdminUser_Config();
  InitDefaultsAccessPoints_AccessPoint_System_Aaa_Authentication_AdminUser_State();
  InitDefaultsAccessPoints_AccessPoint_System_Aaa_Authentication_AdminUser();
  InitDefaultsAccessPoints_AccessPoint_System_Aaa_Authentication_Config_AuthenticationMethodUnion();
  InitDefaultsAccessPoints_AccessPoint_System_Aaa_Authentication_Config();
  InitDefaultsAccessPoints_AccessPoint_System_Aaa_Authentication_State_AuthenticationMethodUnion();
  InitDefaultsAccessPoints_AccessPoint_System_Aaa_Authentication_State();
  InitDefaultsAccessPoints_AccessPoint_System_Aaa_Authentication_Users_User_Config();
  InitDefaultsAccessPoints_AccessPoint_System_Aaa_Authentication_Users_User_State();
  InitDefaultsAccessPoints_AccessPoint_System_Aaa_Authentication_Users_User();
  InitDefaultsAccessPoints_AccessPoint_System_Aaa_Authentication_Users_UserKey();
  InitDefaultsAccessPoints_AccessPoint_System_Aaa_Authentication_Users();
  InitDefaultsAccessPoints_AccessPoint_System_Aaa_Authentication();
  InitDefaultsAccessPoints_AccessPoint_System_Aaa_Authorization_Config_AuthorizationMethodUnion();
  InitDefaultsAccessPoints_AccessPoint_System_Aaa_Authorization_Config();
  InitDefaultsAccessPoints_AccessPoint_System_Aaa_Authorization_Events_Event_Config();
  InitDefaultsAccessPoints_AccessPoint_System_Aaa_Authorization_Events_Event_State();
  InitDefaultsAccessPoints_AccessPoint_System_Aaa_Authorization_Events_Event();
  InitDefaultsAccessPoints_AccessPoint_System_Aaa_Authorization_Events_EventKey();
  InitDefaultsAccessPoints_AccessPoint_System_Aaa_Authorization_Events();
  InitDefaultsAccessPoints_AccessPoint_System_Aaa_Authorization_State_AuthorizationMethodUnion();
  InitDefaultsAccessPoints_AccessPoint_System_Aaa_Authorization_State();
  InitDefaultsAccessPoints_AccessPoint_System_Aaa_Authorization();
  InitDefaultsAccessPoints_AccessPoint_System_Aaa_Config();
  InitDefaultsAccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Config();
  InitDefaultsAccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Config();
  InitDefaultsAccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_Config();
  InitDefaultsAccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State_Counters();
  InitDefaultsAccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State();
  InitDefaultsAccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius();
  InitDefaultsAccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_State();
  InitDefaultsAccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_Config();
  InitDefaultsAccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_State();
  InitDefaultsAccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs();
  InitDefaultsAccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server();
  InitDefaultsAccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_ServerKey();
  InitDefaultsAccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers();
  InitDefaultsAccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_State();
  InitDefaultsAccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup();
  InitDefaultsAccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroupKey();
  InitDefaultsAccessPoints_AccessPoint_System_Aaa_ServerGroups();
  InitDefaultsAccessPoints_AccessPoint_System_Aaa_State();
  InitDefaultsAccessPoints_AccessPoint_System_Aaa();
  InitDefaultsAccessPoints_AccessPoint_System_Alarms_Alarm_Config();
  InitDefaultsAccessPoints_AccessPoint_System_Alarms_Alarm_State();
  InitDefaultsAccessPoints_AccessPoint_System_Alarms_Alarm();
  InitDefaultsAccessPoints_AccessPoint_System_Alarms_AlarmKey();
  InitDefaultsAccessPoints_AccessPoint_System_Alarms();
  InitDefaultsAccessPoints_AccessPoint_System_Clock_Config();
  InitDefaultsAccessPoints_AccessPoint_System_Clock_State();
  InitDefaultsAccessPoints_AccessPoint_System_Clock();
  InitDefaultsAccessPoints_AccessPoint_System_Config();
  InitDefaultsAccessPoints_AccessPoint_System_Cpus_Cpu_State_HardwareInterrupt();
  InitDefaultsAccessPoints_AccessPoint_System_Cpus_Cpu_State_Idle();
  InitDefaultsAccessPoints_AccessPoint_System_Cpus_Cpu_State_Kernel();
  InitDefaultsAccessPoints_AccessPoint_System_Cpus_Cpu_State_Nice();
  InitDefaultsAccessPoints_AccessPoint_System_Cpus_Cpu_State_SoftwareInterrupt();
  InitDefaultsAccessPoints_AccessPoint_System_Cpus_Cpu_State_Total();
  InitDefaultsAccessPoints_AccessPoint_System_Cpus_Cpu_State_User();
  InitDefaultsAccessPoints_AccessPoint_System_Cpus_Cpu_State_Wait();
  InitDefaultsAccessPoints_AccessPoint_System_Cpus_Cpu_State();
  InitDefaultsAccessPoints_AccessPoint_System_Cpus_Cpu();
  InitDefaultsAccessPoints_AccessPoint_System_Cpus_CpuKey();
  InitDefaultsAccessPoints_AccessPoint_System_Cpus();
  InitDefaultsAccessPoints_AccessPoint_System_Dns_Config();
  InitDefaultsAccessPoints_AccessPoint_System_Dns_HostEntries_HostEntry_Config();
  InitDefaultsAccessPoints_AccessPoint_System_Dns_HostEntries_HostEntry_State();
  InitDefaultsAccessPoints_AccessPoint_System_Dns_HostEntries_HostEntry();
  InitDefaultsAccessPoints_AccessPoint_System_Dns_HostEntries_HostEntryKey();
  InitDefaultsAccessPoints_AccessPoint_System_Dns_HostEntries();
  InitDefaultsAccessPoints_AccessPoint_System_Dns_Servers_Server_Config();
  InitDefaultsAccessPoints_AccessPoint_System_Dns_Servers_Server_State();
  InitDefaultsAccessPoints_AccessPoint_System_Dns_Servers_Server();
  InitDefaultsAccessPoints_AccessPoint_System_Dns_Servers_ServerKey();
  InitDefaultsAccessPoints_AccessPoint_System_Dns_Servers();
  InitDefaultsAccessPoints_AccessPoint_System_Dns_State();
  InitDefaultsAccessPoints_AccessPoint_System_Dns();
  InitDefaultsAccessPoints_AccessPoint_System_Logging_Console_Config();
  InitDefaultsAccessPoints_AccessPoint_System_Logging_Console_Selectors_Selector_Config();
  InitDefaultsAccessPoints_AccessPoint_System_Logging_Console_Selectors_Selector_State();
  InitDefaultsAccessPoints_AccessPoint_System_Logging_Console_Selectors_Selector();
  InitDefaultsAccessPoints_AccessPoint_System_Logging_Console_Selectors_SelectorKey();
  InitDefaultsAccessPoints_AccessPoint_System_Logging_Console_Selectors();
  InitDefaultsAccessPoints_AccessPoint_System_Logging_Console_State();
  InitDefaultsAccessPoints_AccessPoint_System_Logging_Console();
  InitDefaultsAccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Config();
  InitDefaultsAccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors_Selector_Config();
  InitDefaultsAccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors_Selector_State();
  InitDefaultsAccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors_Selector();
  InitDefaultsAccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors_SelectorKey();
  InitDefaultsAccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors();
  InitDefaultsAccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_State();
  InitDefaultsAccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer();
  InitDefaultsAccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServerKey();
  InitDefaultsAccessPoints_AccessPoint_System_Logging_RemoteServers();
  InitDefaultsAccessPoints_AccessPoint_System_Logging();
  InitDefaultsAccessPoints_AccessPoint_System_Memory_Config();
  InitDefaultsAccessPoints_AccessPoint_System_Memory_State();
  InitDefaultsAccessPoints_AccessPoint_System_Memory();
  InitDefaultsAccessPoints_AccessPoint_System_Ntp_Config();
  InitDefaultsAccessPoints_AccessPoint_System_Ntp_NtpKeys_NtpKey_Config();
  InitDefaultsAccessPoints_AccessPoint_System_Ntp_NtpKeys_NtpKey_State();
  InitDefaultsAccessPoints_AccessPoint_System_Ntp_NtpKeys_NtpKey();
  InitDefaultsAccessPoints_AccessPoint_System_Ntp_NtpKeys_NtpKeyKey();
  InitDefaultsAccessPoints_AccessPoint_System_Ntp_NtpKeys();
  InitDefaultsAccessPoints_AccessPoint_System_Ntp_Servers_Server_Config();
  InitDefaultsAccessPoints_AccessPoint_System_Ntp_Servers_Server_State();
  InitDefaultsAccessPoints_AccessPoint_System_Ntp_Servers_Server();
  InitDefaultsAccessPoints_AccessPoint_System_Ntp_Servers_ServerKey();
  InitDefaultsAccessPoints_AccessPoint_System_Ntp_Servers();
  InitDefaultsAccessPoints_AccessPoint_System_Ntp_State();
  InitDefaultsAccessPoints_AccessPoint_System_Ntp();
  InitDefaultsAccessPoints_AccessPoint_System_Processes_Process_State();
  InitDefaultsAccessPoints_AccessPoint_System_Processes_Process();
  InitDefaultsAccessPoints_AccessPoint_System_Processes_ProcessKey();
  InitDefaultsAccessPoints_AccessPoint_System_Processes();
  InitDefaultsAccessPoints_AccessPoint_System_SshServer_Config();
  InitDefaultsAccessPoints_AccessPoint_System_SshServer_State();
  InitDefaultsAccessPoints_AccessPoint_System_SshServer();
  InitDefaultsAccessPoints_AccessPoint_System_State();
  InitDefaultsAccessPoints_AccessPoint_System_TelnetServer_Config();
  InitDefaultsAccessPoints_AccessPoint_System_TelnetServer_State();
  InitDefaultsAccessPoints_AccessPoint_System_TelnetServer();
  InitDefaultsAccessPoints_AccessPoint_System();
  InitDefaultsAccessPoints_AccessPoint();
  InitDefaultsAccessPoints_AccessPointKey();
  InitDefaultsAccessPoints();
}
}  // namespace protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto
namespace openconfig {
namespace openconfig_access_points {
class AccessPoints;
class AccessPointsDefaultTypeInternal;
extern AccessPointsDefaultTypeInternal _AccessPoints_default_instance_;
class AccessPoints_AccessPoint;
class AccessPoints_AccessPointDefaultTypeInternal;
extern AccessPoints_AccessPointDefaultTypeInternal _AccessPoints_AccessPoint_default_instance_;
class AccessPoints_AccessPointKey;
class AccessPoints_AccessPointKeyDefaultTypeInternal;
extern AccessPoints_AccessPointKeyDefaultTypeInternal _AccessPoints_AccessPointKey_default_instance_;
class AccessPoints_AccessPoint_AssignedApManagers;
class AccessPoints_AccessPoint_AssignedApManagersDefaultTypeInternal;
extern AccessPoints_AccessPoint_AssignedApManagersDefaultTypeInternal _AccessPoints_AccessPoint_AssignedApManagers_default_instance_;
class AccessPoints_AccessPoint_AssignedApManagers_ApManager;
class AccessPoints_AccessPoint_AssignedApManagers_ApManagerDefaultTypeInternal;
extern AccessPoints_AccessPoint_AssignedApManagers_ApManagerDefaultTypeInternal _AccessPoints_AccessPoint_AssignedApManagers_ApManager_default_instance_;
class AccessPoints_AccessPoint_AssignedApManagers_ApManagerKey;
class AccessPoints_AccessPoint_AssignedApManagers_ApManagerKeyDefaultTypeInternal;
extern AccessPoints_AccessPoint_AssignedApManagers_ApManagerKeyDefaultTypeInternal _AccessPoints_AccessPoint_AssignedApManagers_ApManagerKey_default_instance_;
class AccessPoints_AccessPoint_AssignedApManagers_ApManager_Config;
class AccessPoints_AccessPoint_AssignedApManagers_ApManager_ConfigDefaultTypeInternal;
extern AccessPoints_AccessPoint_AssignedApManagers_ApManager_ConfigDefaultTypeInternal _AccessPoints_AccessPoint_AssignedApManagers_ApManager_Config_default_instance_;
class AccessPoints_AccessPoint_AssignedApManagers_ApManager_State;
class AccessPoints_AccessPoint_AssignedApManagers_ApManager_StateDefaultTypeInternal;
extern AccessPoints_AccessPoint_AssignedApManagers_ApManager_StateDefaultTypeInternal _AccessPoints_AccessPoint_AssignedApManagers_ApManager_State_default_instance_;
class AccessPoints_AccessPoint_Bssids;
class AccessPoints_AccessPoint_BssidsDefaultTypeInternal;
extern AccessPoints_AccessPoint_BssidsDefaultTypeInternal _AccessPoints_AccessPoint_Bssids_default_instance_;
class AccessPoints_AccessPoint_Bssids_Bssid;
class AccessPoints_AccessPoint_Bssids_BssidDefaultTypeInternal;
extern AccessPoints_AccessPoint_Bssids_BssidDefaultTypeInternal _AccessPoints_AccessPoint_Bssids_Bssid_default_instance_;
class AccessPoints_AccessPoint_Bssids_BssidKey;
class AccessPoints_AccessPoint_Bssids_BssidKeyDefaultTypeInternal;
extern AccessPoints_AccessPoint_Bssids_BssidKeyDefaultTypeInternal _AccessPoints_AccessPoint_Bssids_BssidKey_default_instance_;
class AccessPoints_AccessPoint_Bssids_Bssid_State;
class AccessPoints_AccessPoint_Bssids_Bssid_StateDefaultTypeInternal;
extern AccessPoints_AccessPoint_Bssids_Bssid_StateDefaultTypeInternal _AccessPoints_AccessPoint_Bssids_Bssid_State_default_instance_;
class AccessPoints_AccessPoint_Bssids_Bssid_State_Counters;
class AccessPoints_AccessPoint_Bssids_Bssid_State_CountersDefaultTypeInternal;
extern AccessPoints_AccessPoint_Bssids_Bssid_State_CountersDefaultTypeInternal _AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_default_instance_;
class AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxDataDist;
class AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxDataDistDefaultTypeInternal;
extern AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxDataDistDefaultTypeInternal _AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxDataDist_default_instance_;
class AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxDataWmm;
class AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxDataWmmDefaultTypeInternal;
extern AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxDataWmmDefaultTypeInternal _AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxDataWmm_default_instance_;
class AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxMcs;
class AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxMcsDefaultTypeInternal;
extern AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxMcsDefaultTypeInternal _AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxMcs_default_instance_;
class AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxDataDist;
class AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxDataDistDefaultTypeInternal;
extern AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxDataDistDefaultTypeInternal _AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxDataDist_default_instance_;
class AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxDataWmm;
class AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxDataWmmDefaultTypeInternal;
extern AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxDataWmmDefaultTypeInternal _AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxDataWmm_default_instance_;
class AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxMcs;
class AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxMcsDefaultTypeInternal;
extern AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxMcsDefaultTypeInternal _AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxMcs_default_instance_;
class AccessPoints_AccessPoint_Radios;
class AccessPoints_AccessPoint_RadiosDefaultTypeInternal;
extern AccessPoints_AccessPoint_RadiosDefaultTypeInternal _AccessPoints_AccessPoint_Radios_default_instance_;
class AccessPoints_AccessPoint_Radios_Radio;
class AccessPoints_AccessPoint_Radios_RadioDefaultTypeInternal;
extern AccessPoints_AccessPoint_Radios_RadioDefaultTypeInternal _AccessPoints_AccessPoint_Radios_Radio_default_instance_;
class AccessPoints_AccessPoint_Radios_RadioKey;
class AccessPoints_AccessPoint_Radios_RadioKeyDefaultTypeInternal;
extern AccessPoints_AccessPoint_Radios_RadioKeyDefaultTypeInternal _AccessPoints_AccessPoint_Radios_RadioKey_default_instance_;
class AccessPoints_AccessPoint_Radios_Radio_Config;
class AccessPoints_AccessPoint_Radios_Radio_ConfigDefaultTypeInternal;
extern AccessPoints_AccessPoint_Radios_Radio_ConfigDefaultTypeInternal _AccessPoints_AccessPoint_Radios_Radio_Config_default_instance_;
class AccessPoints_AccessPoint_Radios_Radio_Neighbors;
class AccessPoints_AccessPoint_Radios_Radio_NeighborsDefaultTypeInternal;
extern AccessPoints_AccessPoint_Radios_Radio_NeighborsDefaultTypeInternal _AccessPoints_AccessPoint_Radios_Radio_Neighbors_default_instance_;
class AccessPoints_AccessPoint_Radios_Radio_Neighbors_Neighbor;
class AccessPoints_AccessPoint_Radios_Radio_Neighbors_NeighborDefaultTypeInternal;
extern AccessPoints_AccessPoint_Radios_Radio_Neighbors_NeighborDefaultTypeInternal _AccessPoints_AccessPoint_Radios_Radio_Neighbors_Neighbor_default_instance_;
class AccessPoints_AccessPoint_Radios_Radio_Neighbors_NeighborKey;
class AccessPoints_AccessPoint_Radios_Radio_Neighbors_NeighborKeyDefaultTypeInternal;
extern AccessPoints_AccessPoint_Radios_Radio_Neighbors_NeighborKeyDefaultTypeInternal _AccessPoints_AccessPoint_Radios_Radio_Neighbors_NeighborKey_default_instance_;
class AccessPoints_AccessPoint_Radios_Radio_Neighbors_Neighbor_State;
class AccessPoints_AccessPoint_Radios_Radio_Neighbors_Neighbor_StateDefaultTypeInternal;
extern AccessPoints_AccessPoint_Radios_Radio_Neighbors_Neighbor_StateDefaultTypeInternal _AccessPoints_AccessPoint_Radios_Radio_Neighbors_Neighbor_State_default_instance_;
class AccessPoints_AccessPoint_Radios_Radio_State;
class AccessPoints_AccessPoint_Radios_Radio_StateDefaultTypeInternal;
extern AccessPoints_AccessPoint_Radios_Radio_StateDefaultTypeInternal _AccessPoints_AccessPoint_Radios_Radio_State_default_instance_;
class AccessPoints_AccessPoint_Radios_Radio_State_Counters;
class AccessPoints_AccessPoint_Radios_Radio_State_CountersDefaultTypeInternal;
extern AccessPoints_AccessPoint_Radios_Radio_State_CountersDefaultTypeInternal _AccessPoints_AccessPoint_Radios_Radio_State_Counters_default_instance_;
class AccessPoints_AccessPoint_Ssids;
class AccessPoints_AccessPoint_SsidsDefaultTypeInternal;
extern AccessPoints_AccessPoint_SsidsDefaultTypeInternal _AccessPoints_AccessPoint_Ssids_default_instance_;
class AccessPoints_AccessPoint_Ssids_Ssid;
class AccessPoints_AccessPoint_Ssids_SsidDefaultTypeInternal;
extern AccessPoints_AccessPoint_Ssids_SsidDefaultTypeInternal _AccessPoints_AccessPoint_Ssids_Ssid_default_instance_;
class AccessPoints_AccessPoint_Ssids_SsidKey;
class AccessPoints_AccessPoint_Ssids_SsidKeyDefaultTypeInternal;
extern AccessPoints_AccessPoint_Ssids_SsidKeyDefaultTypeInternal _AccessPoints_AccessPoint_Ssids_SsidKey_default_instance_;
class AccessPoints_AccessPoint_Ssids_Ssid_BandSteering;
class AccessPoints_AccessPoint_Ssids_Ssid_BandSteeringDefaultTypeInternal;
extern AccessPoints_AccessPoint_Ssids_Ssid_BandSteeringDefaultTypeInternal _AccessPoints_AccessPoint_Ssids_Ssid_BandSteering_default_instance_;
class AccessPoints_AccessPoint_Ssids_Ssid_BandSteering_Config;
class AccessPoints_AccessPoint_Ssids_Ssid_BandSteering_ConfigDefaultTypeInternal;
extern AccessPoints_AccessPoint_Ssids_Ssid_BandSteering_ConfigDefaultTypeInternal _AccessPoints_AccessPoint_Ssids_Ssid_BandSteering_Config_default_instance_;
class AccessPoints_AccessPoint_Ssids_Ssid_BandSteering_State;
class AccessPoints_AccessPoint_Ssids_Ssid_BandSteering_StateDefaultTypeInternal;
extern AccessPoints_AccessPoint_Ssids_Ssid_BandSteering_StateDefaultTypeInternal _AccessPoints_AccessPoint_Ssids_Ssid_BandSteering_State_default_instance_;
class AccessPoints_AccessPoint_Ssids_Ssid_Clients;
class AccessPoints_AccessPoint_Ssids_Ssid_ClientsDefaultTypeInternal;
extern AccessPoints_AccessPoint_Ssids_Ssid_ClientsDefaultTypeInternal _AccessPoints_AccessPoint_Ssids_Ssid_Clients_default_instance_;
class AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client;
class AccessPoints_AccessPoint_Ssids_Ssid_Clients_ClientDefaultTypeInternal;
extern AccessPoints_AccessPoint_Ssids_Ssid_Clients_ClientDefaultTypeInternal _AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_default_instance_;
class AccessPoints_AccessPoint_Ssids_Ssid_Clients_ClientKey;
class AccessPoints_AccessPoint_Ssids_Ssid_Clients_ClientKeyDefaultTypeInternal;
extern AccessPoints_AccessPoint_Ssids_Ssid_Clients_ClientKeyDefaultTypeInternal _AccessPoints_AccessPoint_Ssids_Ssid_Clients_ClientKey_default_instance_;
class AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientCapabilities;
class AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientCapabilitiesDefaultTypeInternal;
extern AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientCapabilitiesDefaultTypeInternal _AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientCapabilities_default_instance_;
class AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientCapabilities_State;
class AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientCapabilities_StateDefaultTypeInternal;
extern AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientCapabilities_StateDefaultTypeInternal _AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientCapabilities_State_default_instance_;
class AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientConnection;
class AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientConnectionDefaultTypeInternal;
extern AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientConnectionDefaultTypeInternal _AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientConnection_default_instance_;
class AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientConnection_State;
class AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientConnection_StateDefaultTypeInternal;
extern AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientConnection_StateDefaultTypeInternal _AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientConnection_State_default_instance_;
class AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientRf;
class AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientRfDefaultTypeInternal;
extern AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientRfDefaultTypeInternal _AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientRf_default_instance_;
class AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientRf_State;
class AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientRf_StateDefaultTypeInternal;
extern AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientRf_StateDefaultTypeInternal _AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientRf_State_default_instance_;
class AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_Dot11KNeighbors;
class AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_Dot11KNeighborsDefaultTypeInternal;
extern AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_Dot11KNeighborsDefaultTypeInternal _AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_Dot11KNeighbors_default_instance_;
class AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_Dot11KNeighbors_State;
class AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_Dot11KNeighbors_StateDefaultTypeInternal;
extern AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_Dot11KNeighbors_StateDefaultTypeInternal _AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_Dot11KNeighbors_State_default_instance_;
class AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_State;
class AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_StateDefaultTypeInternal;
extern AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_StateDefaultTypeInternal _AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_State_default_instance_;
class AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_State_Counters;
class AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_State_CountersDefaultTypeInternal;
extern AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_State_CountersDefaultTypeInternal _AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_State_Counters_default_instance_;
class AccessPoints_AccessPoint_Ssids_Ssid_Config;
class AccessPoints_AccessPoint_Ssids_Ssid_ConfigDefaultTypeInternal;
extern AccessPoints_AccessPoint_Ssids_Ssid_ConfigDefaultTypeInternal _AccessPoints_AccessPoint_Ssids_Ssid_Config_default_instance_;
class AccessPoints_AccessPoint_Ssids_Ssid_Dot11R;
class AccessPoints_AccessPoint_Ssids_Ssid_Dot11RDefaultTypeInternal;
extern AccessPoints_AccessPoint_Ssids_Ssid_Dot11RDefaultTypeInternal _AccessPoints_AccessPoint_Ssids_Ssid_Dot11R_default_instance_;
class AccessPoints_AccessPoint_Ssids_Ssid_Dot11R_Config;
class AccessPoints_AccessPoint_Ssids_Ssid_Dot11R_ConfigDefaultTypeInternal;
extern AccessPoints_AccessPoint_Ssids_Ssid_Dot11R_ConfigDefaultTypeInternal _AccessPoints_AccessPoint_Ssids_Ssid_Dot11R_Config_default_instance_;
class AccessPoints_AccessPoint_Ssids_Ssid_Dot11R_State;
class AccessPoints_AccessPoint_Ssids_Ssid_Dot11R_StateDefaultTypeInternal;
extern AccessPoints_AccessPoint_Ssids_Ssid_Dot11R_StateDefaultTypeInternal _AccessPoints_AccessPoint_Ssids_Ssid_Dot11R_State_default_instance_;
class AccessPoints_AccessPoint_Ssids_Ssid_Dot11V;
class AccessPoints_AccessPoint_Ssids_Ssid_Dot11VDefaultTypeInternal;
extern AccessPoints_AccessPoint_Ssids_Ssid_Dot11VDefaultTypeInternal _AccessPoints_AccessPoint_Ssids_Ssid_Dot11V_default_instance_;
class AccessPoints_AccessPoint_Ssids_Ssid_Dot11V_Config;
class AccessPoints_AccessPoint_Ssids_Ssid_Dot11V_ConfigDefaultTypeInternal;
extern AccessPoints_AccessPoint_Ssids_Ssid_Dot11V_ConfigDefaultTypeInternal _AccessPoints_AccessPoint_Ssids_Ssid_Dot11V_Config_default_instance_;
class AccessPoints_AccessPoint_Ssids_Ssid_Dot11V_State;
class AccessPoints_AccessPoint_Ssids_Ssid_Dot11V_StateDefaultTypeInternal;
extern AccessPoints_AccessPoint_Ssids_Ssid_Dot11V_StateDefaultTypeInternal _AccessPoints_AccessPoint_Ssids_Ssid_Dot11V_State_default_instance_;
class AccessPoints_AccessPoint_Ssids_Ssid_Dot1XTimers;
class AccessPoints_AccessPoint_Ssids_Ssid_Dot1XTimersDefaultTypeInternal;
extern AccessPoints_AccessPoint_Ssids_Ssid_Dot1XTimersDefaultTypeInternal _AccessPoints_AccessPoint_Ssids_Ssid_Dot1XTimers_default_instance_;
class AccessPoints_AccessPoint_Ssids_Ssid_Dot1XTimers_Config;
class AccessPoints_AccessPoint_Ssids_Ssid_Dot1XTimers_ConfigDefaultTypeInternal;
extern AccessPoints_AccessPoint_Ssids_Ssid_Dot1XTimers_ConfigDefaultTypeInternal _AccessPoints_AccessPoint_Ssids_Ssid_Dot1XTimers_Config_default_instance_;
class AccessPoints_AccessPoint_Ssids_Ssid_Dot1XTimers_State;
class AccessPoints_AccessPoint_Ssids_Ssid_Dot1XTimers_StateDefaultTypeInternal;
extern AccessPoints_AccessPoint_Ssids_Ssid_Dot1XTimers_StateDefaultTypeInternal _AccessPoints_AccessPoint_Ssids_Ssid_Dot1XTimers_State_default_instance_;
class AccessPoints_AccessPoint_Ssids_Ssid_State;
class AccessPoints_AccessPoint_Ssids_Ssid_StateDefaultTypeInternal;
extern AccessPoints_AccessPoint_Ssids_Ssid_StateDefaultTypeInternal _AccessPoints_AccessPoint_Ssids_Ssid_State_default_instance_;
class AccessPoints_AccessPoint_Ssids_Ssid_Wmm;
class AccessPoints_AccessPoint_Ssids_Ssid_WmmDefaultTypeInternal;
extern AccessPoints_AccessPoint_Ssids_Ssid_WmmDefaultTypeInternal _AccessPoints_AccessPoint_Ssids_Ssid_Wmm_default_instance_;
class AccessPoints_AccessPoint_Ssids_Ssid_Wmm_Config;
class AccessPoints_AccessPoint_Ssids_Ssid_Wmm_ConfigDefaultTypeInternal;
extern AccessPoints_AccessPoint_Ssids_Ssid_Wmm_ConfigDefaultTypeInternal _AccessPoints_AccessPoint_Ssids_Ssid_Wmm_Config_default_instance_;
class AccessPoints_AccessPoint_Ssids_Ssid_Wmm_State;
class AccessPoints_AccessPoint_Ssids_Ssid_Wmm_StateDefaultTypeInternal;
extern AccessPoints_AccessPoint_Ssids_Ssid_Wmm_StateDefaultTypeInternal _AccessPoints_AccessPoint_Ssids_Ssid_Wmm_State_default_instance_;
class AccessPoints_AccessPoint_System;
class AccessPoints_AccessPoint_SystemDefaultTypeInternal;
extern AccessPoints_AccessPoint_SystemDefaultTypeInternal _AccessPoints_AccessPoint_System_default_instance_;
class AccessPoints_AccessPoint_System_Aaa;
class AccessPoints_AccessPoint_System_AaaDefaultTypeInternal;
extern AccessPoints_AccessPoint_System_AaaDefaultTypeInternal _AccessPoints_AccessPoint_System_Aaa_default_instance_;
class AccessPoints_AccessPoint_System_Aaa_Accounting;
class AccessPoints_AccessPoint_System_Aaa_AccountingDefaultTypeInternal;
extern AccessPoints_AccessPoint_System_Aaa_AccountingDefaultTypeInternal _AccessPoints_AccessPoint_System_Aaa_Accounting_default_instance_;
class AccessPoints_AccessPoint_System_Aaa_Accounting_Config;
class AccessPoints_AccessPoint_System_Aaa_Accounting_ConfigDefaultTypeInternal;
extern AccessPoints_AccessPoint_System_Aaa_Accounting_ConfigDefaultTypeInternal _AccessPoints_AccessPoint_System_Aaa_Accounting_Config_default_instance_;
class AccessPoints_AccessPoint_System_Aaa_Accounting_Config_AccountingMethodUnion;
class AccessPoints_AccessPoint_System_Aaa_Accounting_Config_AccountingMethodUnionDefaultTypeInternal;
extern AccessPoints_AccessPoint_System_Aaa_Accounting_Config_AccountingMethodUnionDefaultTypeInternal _AccessPoints_AccessPoint_System_Aaa_Accounting_Config_AccountingMethodUnion_default_instance_;
class AccessPoints_AccessPoint_System_Aaa_Accounting_Events;
class AccessPoints_AccessPoint_System_Aaa_Accounting_EventsDefaultTypeInternal;
extern AccessPoints_AccessPoint_System_Aaa_Accounting_EventsDefaultTypeInternal _AccessPoints_AccessPoint_System_Aaa_Accounting_Events_default_instance_;
class AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event;
class AccessPoints_AccessPoint_System_Aaa_Accounting_Events_EventDefaultTypeInternal;
extern AccessPoints_AccessPoint_System_Aaa_Accounting_Events_EventDefaultTypeInternal _AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event_default_instance_;
class AccessPoints_AccessPoint_System_Aaa_Accounting_Events_EventKey;
class AccessPoints_AccessPoint_System_Aaa_Accounting_Events_EventKeyDefaultTypeInternal;
extern AccessPoints_AccessPoint_System_Aaa_Accounting_Events_EventKeyDefaultTypeInternal _AccessPoints_AccessPoint_System_Aaa_Accounting_Events_EventKey_default_instance_;
class AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event_Config;
class AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event_ConfigDefaultTypeInternal;
extern AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event_ConfigDefaultTypeInternal _AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event_Config_default_instance_;
class AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event_State;
class AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event_StateDefaultTypeInternal;
extern AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event_StateDefaultTypeInternal _AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event_State_default_instance_;
class AccessPoints_AccessPoint_System_Aaa_Accounting_State;
class AccessPoints_AccessPoint_System_Aaa_Accounting_StateDefaultTypeInternal;
extern AccessPoints_AccessPoint_System_Aaa_Accounting_StateDefaultTypeInternal _AccessPoints_AccessPoint_System_Aaa_Accounting_State_default_instance_;
class AccessPoints_AccessPoint_System_Aaa_Accounting_State_AccountingMethodUnion;
class AccessPoints_AccessPoint_System_Aaa_Accounting_State_AccountingMethodUnionDefaultTypeInternal;
extern AccessPoints_AccessPoint_System_Aaa_Accounting_State_AccountingMethodUnionDefaultTypeInternal _AccessPoints_AccessPoint_System_Aaa_Accounting_State_AccountingMethodUnion_default_instance_;
class AccessPoints_AccessPoint_System_Aaa_Authentication;
class AccessPoints_AccessPoint_System_Aaa_AuthenticationDefaultTypeInternal;
extern AccessPoints_AccessPoint_System_Aaa_AuthenticationDefaultTypeInternal _AccessPoints_AccessPoint_System_Aaa_Authentication_default_instance_;
class AccessPoints_AccessPoint_System_Aaa_Authentication_AdminUser;
class AccessPoints_AccessPoint_System_Aaa_Authentication_AdminUserDefaultTypeInternal;
extern AccessPoints_AccessPoint_System_Aaa_Authentication_AdminUserDefaultTypeInternal _AccessPoints_AccessPoint_System_Aaa_Authentication_AdminUser_default_instance_;
class AccessPoints_AccessPoint_System_Aaa_Authentication_AdminUser_Config;
class AccessPoints_AccessPoint_System_Aaa_Authentication_AdminUser_ConfigDefaultTypeInternal;
extern AccessPoints_AccessPoint_System_Aaa_Authentication_AdminUser_ConfigDefaultTypeInternal _AccessPoints_AccessPoint_System_Aaa_Authentication_AdminUser_Config_default_instance_;
class AccessPoints_AccessPoint_System_Aaa_Authentication_AdminUser_State;
class AccessPoints_AccessPoint_System_Aaa_Authentication_AdminUser_StateDefaultTypeInternal;
extern AccessPoints_AccessPoint_System_Aaa_Authentication_AdminUser_StateDefaultTypeInternal _AccessPoints_AccessPoint_System_Aaa_Authentication_AdminUser_State_default_instance_;
class AccessPoints_AccessPoint_System_Aaa_Authentication_Config;
class AccessPoints_AccessPoint_System_Aaa_Authentication_ConfigDefaultTypeInternal;
extern AccessPoints_AccessPoint_System_Aaa_Authentication_ConfigDefaultTypeInternal _AccessPoints_AccessPoint_System_Aaa_Authentication_Config_default_instance_;
class AccessPoints_AccessPoint_System_Aaa_Authentication_Config_AuthenticationMethodUnion;
class AccessPoints_AccessPoint_System_Aaa_Authentication_Config_AuthenticationMethodUnionDefaultTypeInternal;
extern AccessPoints_AccessPoint_System_Aaa_Authentication_Config_AuthenticationMethodUnionDefaultTypeInternal _AccessPoints_AccessPoint_System_Aaa_Authentication_Config_AuthenticationMethodUnion_default_instance_;
class AccessPoints_AccessPoint_System_Aaa_Authentication_State;
class AccessPoints_AccessPoint_System_Aaa_Authentication_StateDefaultTypeInternal;
extern AccessPoints_AccessPoint_System_Aaa_Authentication_StateDefaultTypeInternal _AccessPoints_AccessPoint_System_Aaa_Authentication_State_default_instance_;
class AccessPoints_AccessPoint_System_Aaa_Authentication_State_AuthenticationMethodUnion;
class AccessPoints_AccessPoint_System_Aaa_Authentication_State_AuthenticationMethodUnionDefaultTypeInternal;
extern AccessPoints_AccessPoint_System_Aaa_Authentication_State_AuthenticationMethodUnionDefaultTypeInternal _AccessPoints_AccessPoint_System_Aaa_Authentication_State_AuthenticationMethodUnion_default_instance_;
class AccessPoints_AccessPoint_System_Aaa_Authentication_Users;
class AccessPoints_AccessPoint_System_Aaa_Authentication_UsersDefaultTypeInternal;
extern AccessPoints_AccessPoint_System_Aaa_Authentication_UsersDefaultTypeInternal _AccessPoints_AccessPoint_System_Aaa_Authentication_Users_default_instance_;
class AccessPoints_AccessPoint_System_Aaa_Authentication_Users_User;
class AccessPoints_AccessPoint_System_Aaa_Authentication_Users_UserDefaultTypeInternal;
extern AccessPoints_AccessPoint_System_Aaa_Authentication_Users_UserDefaultTypeInternal _AccessPoints_AccessPoint_System_Aaa_Authentication_Users_User_default_instance_;
class AccessPoints_AccessPoint_System_Aaa_Authentication_Users_UserKey;
class AccessPoints_AccessPoint_System_Aaa_Authentication_Users_UserKeyDefaultTypeInternal;
extern AccessPoints_AccessPoint_System_Aaa_Authentication_Users_UserKeyDefaultTypeInternal _AccessPoints_AccessPoint_System_Aaa_Authentication_Users_UserKey_default_instance_;
class AccessPoints_AccessPoint_System_Aaa_Authentication_Users_User_Config;
class AccessPoints_AccessPoint_System_Aaa_Authentication_Users_User_ConfigDefaultTypeInternal;
extern AccessPoints_AccessPoint_System_Aaa_Authentication_Users_User_ConfigDefaultTypeInternal _AccessPoints_AccessPoint_System_Aaa_Authentication_Users_User_Config_default_instance_;
class AccessPoints_AccessPoint_System_Aaa_Authentication_Users_User_State;
class AccessPoints_AccessPoint_System_Aaa_Authentication_Users_User_StateDefaultTypeInternal;
extern AccessPoints_AccessPoint_System_Aaa_Authentication_Users_User_StateDefaultTypeInternal _AccessPoints_AccessPoint_System_Aaa_Authentication_Users_User_State_default_instance_;
class AccessPoints_AccessPoint_System_Aaa_Authorization;
class AccessPoints_AccessPoint_System_Aaa_AuthorizationDefaultTypeInternal;
extern AccessPoints_AccessPoint_System_Aaa_AuthorizationDefaultTypeInternal _AccessPoints_AccessPoint_System_Aaa_Authorization_default_instance_;
class AccessPoints_AccessPoint_System_Aaa_Authorization_Config;
class AccessPoints_AccessPoint_System_Aaa_Authorization_ConfigDefaultTypeInternal;
extern AccessPoints_AccessPoint_System_Aaa_Authorization_ConfigDefaultTypeInternal _AccessPoints_AccessPoint_System_Aaa_Authorization_Config_default_instance_;
class AccessPoints_AccessPoint_System_Aaa_Authorization_Config_AuthorizationMethodUnion;
class AccessPoints_AccessPoint_System_Aaa_Authorization_Config_AuthorizationMethodUnionDefaultTypeInternal;
extern AccessPoints_AccessPoint_System_Aaa_Authorization_Config_AuthorizationMethodUnionDefaultTypeInternal _AccessPoints_AccessPoint_System_Aaa_Authorization_Config_AuthorizationMethodUnion_default_instance_;
class AccessPoints_AccessPoint_System_Aaa_Authorization_Events;
class AccessPoints_AccessPoint_System_Aaa_Authorization_EventsDefaultTypeInternal;
extern AccessPoints_AccessPoint_System_Aaa_Authorization_EventsDefaultTypeInternal _AccessPoints_AccessPoint_System_Aaa_Authorization_Events_default_instance_;
class AccessPoints_AccessPoint_System_Aaa_Authorization_Events_Event;
class AccessPoints_AccessPoint_System_Aaa_Authorization_Events_EventDefaultTypeInternal;
extern AccessPoints_AccessPoint_System_Aaa_Authorization_Events_EventDefaultTypeInternal _AccessPoints_AccessPoint_System_Aaa_Authorization_Events_Event_default_instance_;
class AccessPoints_AccessPoint_System_Aaa_Authorization_Events_EventKey;
class AccessPoints_AccessPoint_System_Aaa_Authorization_Events_EventKeyDefaultTypeInternal;
extern AccessPoints_AccessPoint_System_Aaa_Authorization_Events_EventKeyDefaultTypeInternal _AccessPoints_AccessPoint_System_Aaa_Authorization_Events_EventKey_default_instance_;
class AccessPoints_AccessPoint_System_Aaa_Authorization_Events_Event_Config;
class AccessPoints_AccessPoint_System_Aaa_Authorization_Events_Event_ConfigDefaultTypeInternal;
extern AccessPoints_AccessPoint_System_Aaa_Authorization_Events_Event_ConfigDefaultTypeInternal _AccessPoints_AccessPoint_System_Aaa_Authorization_Events_Event_Config_default_instance_;
class AccessPoints_AccessPoint_System_Aaa_Authorization_Events_Event_State;
class AccessPoints_AccessPoint_System_Aaa_Authorization_Events_Event_StateDefaultTypeInternal;
extern AccessPoints_AccessPoint_System_Aaa_Authorization_Events_Event_StateDefaultTypeInternal _AccessPoints_AccessPoint_System_Aaa_Authorization_Events_Event_State_default_instance_;
class AccessPoints_AccessPoint_System_Aaa_Authorization_State;
class AccessPoints_AccessPoint_System_Aaa_Authorization_StateDefaultTypeInternal;
extern AccessPoints_AccessPoint_System_Aaa_Authorization_StateDefaultTypeInternal _AccessPoints_AccessPoint_System_Aaa_Authorization_State_default_instance_;
class AccessPoints_AccessPoint_System_Aaa_Authorization_State_AuthorizationMethodUnion;
class AccessPoints_AccessPoint_System_Aaa_Authorization_State_AuthorizationMethodUnionDefaultTypeInternal;
extern AccessPoints_AccessPoint_System_Aaa_Authorization_State_AuthorizationMethodUnionDefaultTypeInternal _AccessPoints_AccessPoint_System_Aaa_Authorization_State_AuthorizationMethodUnion_default_instance_;
class AccessPoints_AccessPoint_System_Aaa_Config;
class AccessPoints_AccessPoint_System_Aaa_ConfigDefaultTypeInternal;
extern AccessPoints_AccessPoint_System_Aaa_ConfigDefaultTypeInternal _AccessPoints_AccessPoint_System_Aaa_Config_default_instance_;
class AccessPoints_AccessPoint_System_Aaa_ServerGroups;
class AccessPoints_AccessPoint_System_Aaa_ServerGroupsDefaultTypeInternal;
extern AccessPoints_AccessPoint_System_Aaa_ServerGroupsDefaultTypeInternal _AccessPoints_AccessPoint_System_Aaa_ServerGroups_default_instance_;
class AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup;
class AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroupDefaultTypeInternal;
extern AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroupDefaultTypeInternal _AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_default_instance_;
class AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroupKey;
class AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroupKeyDefaultTypeInternal;
extern AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroupKeyDefaultTypeInternal _AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroupKey_default_instance_;
class AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Config;
class AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_ConfigDefaultTypeInternal;
extern AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_ConfigDefaultTypeInternal _AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Config_default_instance_;
class AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers;
class AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_ServersDefaultTypeInternal;
extern AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_ServersDefaultTypeInternal _AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_default_instance_;
class AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server;
class AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_ServerDefaultTypeInternal;
extern AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_ServerDefaultTypeInternal _AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_default_instance_;
class AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_ServerKey;
class AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_ServerKeyDefaultTypeInternal;
extern AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_ServerKeyDefaultTypeInternal _AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_ServerKey_default_instance_;
class AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Config;
class AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_ConfigDefaultTypeInternal;
extern AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_ConfigDefaultTypeInternal _AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Config_default_instance_;
class AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius;
class AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_RadiusDefaultTypeInternal;
extern AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_RadiusDefaultTypeInternal _AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_default_instance_;
class AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_Config;
class AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_ConfigDefaultTypeInternal;
extern AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_ConfigDefaultTypeInternal _AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_Config_default_instance_;
class AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State;
class AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_StateDefaultTypeInternal;
extern AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_StateDefaultTypeInternal _AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State_default_instance_;
class AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State_Counters;
class AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State_CountersDefaultTypeInternal;
extern AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State_CountersDefaultTypeInternal _AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State_Counters_default_instance_;
class AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_State;
class AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_StateDefaultTypeInternal;
extern AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_StateDefaultTypeInternal _AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_State_default_instance_;
class AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs;
class AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_TacacsDefaultTypeInternal;
extern AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_TacacsDefaultTypeInternal _AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_default_instance_;
class AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_Config;
class AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_ConfigDefaultTypeInternal;
extern AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_ConfigDefaultTypeInternal _AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_Config_default_instance_;
class AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_State;
class AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_StateDefaultTypeInternal;
extern AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_StateDefaultTypeInternal _AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_State_default_instance_;
class AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_State;
class AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_StateDefaultTypeInternal;
extern AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_StateDefaultTypeInternal _AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_State_default_instance_;
class AccessPoints_AccessPoint_System_Aaa_State;
class AccessPoints_AccessPoint_System_Aaa_StateDefaultTypeInternal;
extern AccessPoints_AccessPoint_System_Aaa_StateDefaultTypeInternal _AccessPoints_AccessPoint_System_Aaa_State_default_instance_;
class AccessPoints_AccessPoint_System_Alarms;
class AccessPoints_AccessPoint_System_AlarmsDefaultTypeInternal;
extern AccessPoints_AccessPoint_System_AlarmsDefaultTypeInternal _AccessPoints_AccessPoint_System_Alarms_default_instance_;
class AccessPoints_AccessPoint_System_Alarms_Alarm;
class AccessPoints_AccessPoint_System_Alarms_AlarmDefaultTypeInternal;
extern AccessPoints_AccessPoint_System_Alarms_AlarmDefaultTypeInternal _AccessPoints_AccessPoint_System_Alarms_Alarm_default_instance_;
class AccessPoints_AccessPoint_System_Alarms_AlarmKey;
class AccessPoints_AccessPoint_System_Alarms_AlarmKeyDefaultTypeInternal;
extern AccessPoints_AccessPoint_System_Alarms_AlarmKeyDefaultTypeInternal _AccessPoints_AccessPoint_System_Alarms_AlarmKey_default_instance_;
class AccessPoints_AccessPoint_System_Alarms_Alarm_Config;
class AccessPoints_AccessPoint_System_Alarms_Alarm_ConfigDefaultTypeInternal;
extern AccessPoints_AccessPoint_System_Alarms_Alarm_ConfigDefaultTypeInternal _AccessPoints_AccessPoint_System_Alarms_Alarm_Config_default_instance_;
class AccessPoints_AccessPoint_System_Alarms_Alarm_State;
class AccessPoints_AccessPoint_System_Alarms_Alarm_StateDefaultTypeInternal;
extern AccessPoints_AccessPoint_System_Alarms_Alarm_StateDefaultTypeInternal _AccessPoints_AccessPoint_System_Alarms_Alarm_State_default_instance_;
class AccessPoints_AccessPoint_System_Clock;
class AccessPoints_AccessPoint_System_ClockDefaultTypeInternal;
extern AccessPoints_AccessPoint_System_ClockDefaultTypeInternal _AccessPoints_AccessPoint_System_Clock_default_instance_;
class AccessPoints_AccessPoint_System_Clock_Config;
class AccessPoints_AccessPoint_System_Clock_ConfigDefaultTypeInternal;
extern AccessPoints_AccessPoint_System_Clock_ConfigDefaultTypeInternal _AccessPoints_AccessPoint_System_Clock_Config_default_instance_;
class AccessPoints_AccessPoint_System_Clock_State;
class AccessPoints_AccessPoint_System_Clock_StateDefaultTypeInternal;
extern AccessPoints_AccessPoint_System_Clock_StateDefaultTypeInternal _AccessPoints_AccessPoint_System_Clock_State_default_instance_;
class AccessPoints_AccessPoint_System_Config;
class AccessPoints_AccessPoint_System_ConfigDefaultTypeInternal;
extern AccessPoints_AccessPoint_System_ConfigDefaultTypeInternal _AccessPoints_AccessPoint_System_Config_default_instance_;
class AccessPoints_AccessPoint_System_Cpus;
class AccessPoints_AccessPoint_System_CpusDefaultTypeInternal;
extern AccessPoints_AccessPoint_System_CpusDefaultTypeInternal _AccessPoints_AccessPoint_System_Cpus_default_instance_;
class AccessPoints_AccessPoint_System_Cpus_Cpu;
class AccessPoints_AccessPoint_System_Cpus_CpuDefaultTypeInternal;
extern AccessPoints_AccessPoint_System_Cpus_CpuDefaultTypeInternal _AccessPoints_AccessPoint_System_Cpus_Cpu_default_instance_;
class AccessPoints_AccessPoint_System_Cpus_CpuKey;
class AccessPoints_AccessPoint_System_Cpus_CpuKeyDefaultTypeInternal;
extern AccessPoints_AccessPoint_System_Cpus_CpuKeyDefaultTypeInternal _AccessPoints_AccessPoint_System_Cpus_CpuKey_default_instance_;
class AccessPoints_AccessPoint_System_Cpus_Cpu_State;
class AccessPoints_AccessPoint_System_Cpus_Cpu_StateDefaultTypeInternal;
extern AccessPoints_AccessPoint_System_Cpus_Cpu_StateDefaultTypeInternal _AccessPoints_AccessPoint_System_Cpus_Cpu_State_default_instance_;
class AccessPoints_AccessPoint_System_Cpus_Cpu_State_HardwareInterrupt;
class AccessPoints_AccessPoint_System_Cpus_Cpu_State_HardwareInterruptDefaultTypeInternal;
extern AccessPoints_AccessPoint_System_Cpus_Cpu_State_HardwareInterruptDefaultTypeInternal _AccessPoints_AccessPoint_System_Cpus_Cpu_State_HardwareInterrupt_default_instance_;
class AccessPoints_AccessPoint_System_Cpus_Cpu_State_Idle;
class AccessPoints_AccessPoint_System_Cpus_Cpu_State_IdleDefaultTypeInternal;
extern AccessPoints_AccessPoint_System_Cpus_Cpu_State_IdleDefaultTypeInternal _AccessPoints_AccessPoint_System_Cpus_Cpu_State_Idle_default_instance_;
class AccessPoints_AccessPoint_System_Cpus_Cpu_State_Kernel;
class AccessPoints_AccessPoint_System_Cpus_Cpu_State_KernelDefaultTypeInternal;
extern AccessPoints_AccessPoint_System_Cpus_Cpu_State_KernelDefaultTypeInternal _AccessPoints_AccessPoint_System_Cpus_Cpu_State_Kernel_default_instance_;
class AccessPoints_AccessPoint_System_Cpus_Cpu_State_Nice;
class AccessPoints_AccessPoint_System_Cpus_Cpu_State_NiceDefaultTypeInternal;
extern AccessPoints_AccessPoint_System_Cpus_Cpu_State_NiceDefaultTypeInternal _AccessPoints_AccessPoint_System_Cpus_Cpu_State_Nice_default_instance_;
class AccessPoints_AccessPoint_System_Cpus_Cpu_State_SoftwareInterrupt;
class AccessPoints_AccessPoint_System_Cpus_Cpu_State_SoftwareInterruptDefaultTypeInternal;
extern AccessPoints_AccessPoint_System_Cpus_Cpu_State_SoftwareInterruptDefaultTypeInternal _AccessPoints_AccessPoint_System_Cpus_Cpu_State_SoftwareInterrupt_default_instance_;
class AccessPoints_AccessPoint_System_Cpus_Cpu_State_Total;
class AccessPoints_AccessPoint_System_Cpus_Cpu_State_TotalDefaultTypeInternal;
extern AccessPoints_AccessPoint_System_Cpus_Cpu_State_TotalDefaultTypeInternal _AccessPoints_AccessPoint_System_Cpus_Cpu_State_Total_default_instance_;
class AccessPoints_AccessPoint_System_Cpus_Cpu_State_User;
class AccessPoints_AccessPoint_System_Cpus_Cpu_State_UserDefaultTypeInternal;
extern AccessPoints_AccessPoint_System_Cpus_Cpu_State_UserDefaultTypeInternal _AccessPoints_AccessPoint_System_Cpus_Cpu_State_User_default_instance_;
class AccessPoints_AccessPoint_System_Cpus_Cpu_State_Wait;
class AccessPoints_AccessPoint_System_Cpus_Cpu_State_WaitDefaultTypeInternal;
extern AccessPoints_AccessPoint_System_Cpus_Cpu_State_WaitDefaultTypeInternal _AccessPoints_AccessPoint_System_Cpus_Cpu_State_Wait_default_instance_;
class AccessPoints_AccessPoint_System_Dns;
class AccessPoints_AccessPoint_System_DnsDefaultTypeInternal;
extern AccessPoints_AccessPoint_System_DnsDefaultTypeInternal _AccessPoints_AccessPoint_System_Dns_default_instance_;
class AccessPoints_AccessPoint_System_Dns_Config;
class AccessPoints_AccessPoint_System_Dns_ConfigDefaultTypeInternal;
extern AccessPoints_AccessPoint_System_Dns_ConfigDefaultTypeInternal _AccessPoints_AccessPoint_System_Dns_Config_default_instance_;
class AccessPoints_AccessPoint_System_Dns_HostEntries;
class AccessPoints_AccessPoint_System_Dns_HostEntriesDefaultTypeInternal;
extern AccessPoints_AccessPoint_System_Dns_HostEntriesDefaultTypeInternal _AccessPoints_AccessPoint_System_Dns_HostEntries_default_instance_;
class AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntry;
class AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntryDefaultTypeInternal;
extern AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntryDefaultTypeInternal _AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntry_default_instance_;
class AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntryKey;
class AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntryKeyDefaultTypeInternal;
extern AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntryKeyDefaultTypeInternal _AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntryKey_default_instance_;
class AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntry_Config;
class AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntry_ConfigDefaultTypeInternal;
extern AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntry_ConfigDefaultTypeInternal _AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntry_Config_default_instance_;
class AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntry_State;
class AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntry_StateDefaultTypeInternal;
extern AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntry_StateDefaultTypeInternal _AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntry_State_default_instance_;
class AccessPoints_AccessPoint_System_Dns_Servers;
class AccessPoints_AccessPoint_System_Dns_ServersDefaultTypeInternal;
extern AccessPoints_AccessPoint_System_Dns_ServersDefaultTypeInternal _AccessPoints_AccessPoint_System_Dns_Servers_default_instance_;
class AccessPoints_AccessPoint_System_Dns_Servers_Server;
class AccessPoints_AccessPoint_System_Dns_Servers_ServerDefaultTypeInternal;
extern AccessPoints_AccessPoint_System_Dns_Servers_ServerDefaultTypeInternal _AccessPoints_AccessPoint_System_Dns_Servers_Server_default_instance_;
class AccessPoints_AccessPoint_System_Dns_Servers_ServerKey;
class AccessPoints_AccessPoint_System_Dns_Servers_ServerKeyDefaultTypeInternal;
extern AccessPoints_AccessPoint_System_Dns_Servers_ServerKeyDefaultTypeInternal _AccessPoints_AccessPoint_System_Dns_Servers_ServerKey_default_instance_;
class AccessPoints_AccessPoint_System_Dns_Servers_Server_Config;
class AccessPoints_AccessPoint_System_Dns_Servers_Server_ConfigDefaultTypeInternal;
extern AccessPoints_AccessPoint_System_Dns_Servers_Server_ConfigDefaultTypeInternal _AccessPoints_AccessPoint_System_Dns_Servers_Server_Config_default_instance_;
class AccessPoints_AccessPoint_System_Dns_Servers_Server_State;
class AccessPoints_AccessPoint_System_Dns_Servers_Server_StateDefaultTypeInternal;
extern AccessPoints_AccessPoint_System_Dns_Servers_Server_StateDefaultTypeInternal _AccessPoints_AccessPoint_System_Dns_Servers_Server_State_default_instance_;
class AccessPoints_AccessPoint_System_Dns_State;
class AccessPoints_AccessPoint_System_Dns_StateDefaultTypeInternal;
extern AccessPoints_AccessPoint_System_Dns_StateDefaultTypeInternal _AccessPoints_AccessPoint_System_Dns_State_default_instance_;
class AccessPoints_AccessPoint_System_Logging;
class AccessPoints_AccessPoint_System_LoggingDefaultTypeInternal;
extern AccessPoints_AccessPoint_System_LoggingDefaultTypeInternal _AccessPoints_AccessPoint_System_Logging_default_instance_;
class AccessPoints_AccessPoint_System_Logging_Console;
class AccessPoints_AccessPoint_System_Logging_ConsoleDefaultTypeInternal;
extern AccessPoints_AccessPoint_System_Logging_ConsoleDefaultTypeInternal _AccessPoints_AccessPoint_System_Logging_Console_default_instance_;
class AccessPoints_AccessPoint_System_Logging_Console_Config;
class AccessPoints_AccessPoint_System_Logging_Console_ConfigDefaultTypeInternal;
extern AccessPoints_AccessPoint_System_Logging_Console_ConfigDefaultTypeInternal _AccessPoints_AccessPoint_System_Logging_Console_Config_default_instance_;
class AccessPoints_AccessPoint_System_Logging_Console_Selectors;
class AccessPoints_AccessPoint_System_Logging_Console_SelectorsDefaultTypeInternal;
extern AccessPoints_AccessPoint_System_Logging_Console_SelectorsDefaultTypeInternal _AccessPoints_AccessPoint_System_Logging_Console_Selectors_default_instance_;
class AccessPoints_AccessPoint_System_Logging_Console_Selectors_Selector;
class AccessPoints_AccessPoint_System_Logging_Console_Selectors_SelectorDefaultTypeInternal;
extern AccessPoints_AccessPoint_System_Logging_Console_Selectors_SelectorDefaultTypeInternal _AccessPoints_AccessPoint_System_Logging_Console_Selectors_Selector_default_instance_;
class AccessPoints_AccessPoint_System_Logging_Console_Selectors_SelectorKey;
class AccessPoints_AccessPoint_System_Logging_Console_Selectors_SelectorKeyDefaultTypeInternal;
extern AccessPoints_AccessPoint_System_Logging_Console_Selectors_SelectorKeyDefaultTypeInternal _AccessPoints_AccessPoint_System_Logging_Console_Selectors_SelectorKey_default_instance_;
class AccessPoints_AccessPoint_System_Logging_Console_Selectors_Selector_Config;
class AccessPoints_AccessPoint_System_Logging_Console_Selectors_Selector_ConfigDefaultTypeInternal;
extern AccessPoints_AccessPoint_System_Logging_Console_Selectors_Selector_ConfigDefaultTypeInternal _AccessPoints_AccessPoint_System_Logging_Console_Selectors_Selector_Config_default_instance_;
class AccessPoints_AccessPoint_System_Logging_Console_Selectors_Selector_State;
class AccessPoints_AccessPoint_System_Logging_Console_Selectors_Selector_StateDefaultTypeInternal;
extern AccessPoints_AccessPoint_System_Logging_Console_Selectors_Selector_StateDefaultTypeInternal _AccessPoints_AccessPoint_System_Logging_Console_Selectors_Selector_State_default_instance_;
class AccessPoints_AccessPoint_System_Logging_Console_State;
class AccessPoints_AccessPoint_System_Logging_Console_StateDefaultTypeInternal;
extern AccessPoints_AccessPoint_System_Logging_Console_StateDefaultTypeInternal _AccessPoints_AccessPoint_System_Logging_Console_State_default_instance_;
class AccessPoints_AccessPoint_System_Logging_RemoteServers;
class AccessPoints_AccessPoint_System_Logging_RemoteServersDefaultTypeInternal;
extern AccessPoints_AccessPoint_System_Logging_RemoteServersDefaultTypeInternal _AccessPoints_AccessPoint_System_Logging_RemoteServers_default_instance_;
class AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer;
class AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServerDefaultTypeInternal;
extern AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServerDefaultTypeInternal _AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_default_instance_;
class AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServerKey;
class AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServerKeyDefaultTypeInternal;
extern AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServerKeyDefaultTypeInternal _AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServerKey_default_instance_;
class AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Config;
class AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_ConfigDefaultTypeInternal;
extern AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_ConfigDefaultTypeInternal _AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Config_default_instance_;
class AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors;
class AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_SelectorsDefaultTypeInternal;
extern AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_SelectorsDefaultTypeInternal _AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors_default_instance_;
class AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors_Selector;
class AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors_SelectorDefaultTypeInternal;
extern AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors_SelectorDefaultTypeInternal _AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors_Selector_default_instance_;
class AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors_SelectorKey;
class AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors_SelectorKeyDefaultTypeInternal;
extern AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors_SelectorKeyDefaultTypeInternal _AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors_SelectorKey_default_instance_;
class AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors_Selector_Config;
class AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors_Selector_ConfigDefaultTypeInternal;
extern AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors_Selector_ConfigDefaultTypeInternal _AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors_Selector_Config_default_instance_;
class AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors_Selector_State;
class AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors_Selector_StateDefaultTypeInternal;
extern AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors_Selector_StateDefaultTypeInternal _AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors_Selector_State_default_instance_;
class AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_State;
class AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_StateDefaultTypeInternal;
extern AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_StateDefaultTypeInternal _AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_State_default_instance_;
class AccessPoints_AccessPoint_System_Memory;
class AccessPoints_AccessPoint_System_MemoryDefaultTypeInternal;
extern AccessPoints_AccessPoint_System_MemoryDefaultTypeInternal _AccessPoints_AccessPoint_System_Memory_default_instance_;
class AccessPoints_AccessPoint_System_Memory_Config;
class AccessPoints_AccessPoint_System_Memory_ConfigDefaultTypeInternal;
extern AccessPoints_AccessPoint_System_Memory_ConfigDefaultTypeInternal _AccessPoints_AccessPoint_System_Memory_Config_default_instance_;
class AccessPoints_AccessPoint_System_Memory_State;
class AccessPoints_AccessPoint_System_Memory_StateDefaultTypeInternal;
extern AccessPoints_AccessPoint_System_Memory_StateDefaultTypeInternal _AccessPoints_AccessPoint_System_Memory_State_default_instance_;
class AccessPoints_AccessPoint_System_Ntp;
class AccessPoints_AccessPoint_System_NtpDefaultTypeInternal;
extern AccessPoints_AccessPoint_System_NtpDefaultTypeInternal _AccessPoints_AccessPoint_System_Ntp_default_instance_;
class AccessPoints_AccessPoint_System_Ntp_Config;
class AccessPoints_AccessPoint_System_Ntp_ConfigDefaultTypeInternal;
extern AccessPoints_AccessPoint_System_Ntp_ConfigDefaultTypeInternal _AccessPoints_AccessPoint_System_Ntp_Config_default_instance_;
class AccessPoints_AccessPoint_System_Ntp_NtpKeys;
class AccessPoints_AccessPoint_System_Ntp_NtpKeysDefaultTypeInternal;
extern AccessPoints_AccessPoint_System_Ntp_NtpKeysDefaultTypeInternal _AccessPoints_AccessPoint_System_Ntp_NtpKeys_default_instance_;
class AccessPoints_AccessPoint_System_Ntp_NtpKeys_NtpKey;
class AccessPoints_AccessPoint_System_Ntp_NtpKeys_NtpKeyDefaultTypeInternal;
extern AccessPoints_AccessPoint_System_Ntp_NtpKeys_NtpKeyDefaultTypeInternal _AccessPoints_AccessPoint_System_Ntp_NtpKeys_NtpKey_default_instance_;
class AccessPoints_AccessPoint_System_Ntp_NtpKeys_NtpKeyKey;
class AccessPoints_AccessPoint_System_Ntp_NtpKeys_NtpKeyKeyDefaultTypeInternal;
extern AccessPoints_AccessPoint_System_Ntp_NtpKeys_NtpKeyKeyDefaultTypeInternal _AccessPoints_AccessPoint_System_Ntp_NtpKeys_NtpKeyKey_default_instance_;
class AccessPoints_AccessPoint_System_Ntp_NtpKeys_NtpKey_Config;
class AccessPoints_AccessPoint_System_Ntp_NtpKeys_NtpKey_ConfigDefaultTypeInternal;
extern AccessPoints_AccessPoint_System_Ntp_NtpKeys_NtpKey_ConfigDefaultTypeInternal _AccessPoints_AccessPoint_System_Ntp_NtpKeys_NtpKey_Config_default_instance_;
class AccessPoints_AccessPoint_System_Ntp_NtpKeys_NtpKey_State;
class AccessPoints_AccessPoint_System_Ntp_NtpKeys_NtpKey_StateDefaultTypeInternal;
extern AccessPoints_AccessPoint_System_Ntp_NtpKeys_NtpKey_StateDefaultTypeInternal _AccessPoints_AccessPoint_System_Ntp_NtpKeys_NtpKey_State_default_instance_;
class AccessPoints_AccessPoint_System_Ntp_Servers;
class AccessPoints_AccessPoint_System_Ntp_ServersDefaultTypeInternal;
extern AccessPoints_AccessPoint_System_Ntp_ServersDefaultTypeInternal _AccessPoints_AccessPoint_System_Ntp_Servers_default_instance_;
class AccessPoints_AccessPoint_System_Ntp_Servers_Server;
class AccessPoints_AccessPoint_System_Ntp_Servers_ServerDefaultTypeInternal;
extern AccessPoints_AccessPoint_System_Ntp_Servers_ServerDefaultTypeInternal _AccessPoints_AccessPoint_System_Ntp_Servers_Server_default_instance_;
class AccessPoints_AccessPoint_System_Ntp_Servers_ServerKey;
class AccessPoints_AccessPoint_System_Ntp_Servers_ServerKeyDefaultTypeInternal;
extern AccessPoints_AccessPoint_System_Ntp_Servers_ServerKeyDefaultTypeInternal _AccessPoints_AccessPoint_System_Ntp_Servers_ServerKey_default_instance_;
class AccessPoints_AccessPoint_System_Ntp_Servers_Server_Config;
class AccessPoints_AccessPoint_System_Ntp_Servers_Server_ConfigDefaultTypeInternal;
extern AccessPoints_AccessPoint_System_Ntp_Servers_Server_ConfigDefaultTypeInternal _AccessPoints_AccessPoint_System_Ntp_Servers_Server_Config_default_instance_;
class AccessPoints_AccessPoint_System_Ntp_Servers_Server_State;
class AccessPoints_AccessPoint_System_Ntp_Servers_Server_StateDefaultTypeInternal;
extern AccessPoints_AccessPoint_System_Ntp_Servers_Server_StateDefaultTypeInternal _AccessPoints_AccessPoint_System_Ntp_Servers_Server_State_default_instance_;
class AccessPoints_AccessPoint_System_Ntp_State;
class AccessPoints_AccessPoint_System_Ntp_StateDefaultTypeInternal;
extern AccessPoints_AccessPoint_System_Ntp_StateDefaultTypeInternal _AccessPoints_AccessPoint_System_Ntp_State_default_instance_;
class AccessPoints_AccessPoint_System_Processes;
class AccessPoints_AccessPoint_System_ProcessesDefaultTypeInternal;
extern AccessPoints_AccessPoint_System_ProcessesDefaultTypeInternal _AccessPoints_AccessPoint_System_Processes_default_instance_;
class AccessPoints_AccessPoint_System_Processes_Process;
class AccessPoints_AccessPoint_System_Processes_ProcessDefaultTypeInternal;
extern AccessPoints_AccessPoint_System_Processes_ProcessDefaultTypeInternal _AccessPoints_AccessPoint_System_Processes_Process_default_instance_;
class AccessPoints_AccessPoint_System_Processes_ProcessKey;
class AccessPoints_AccessPoint_System_Processes_ProcessKeyDefaultTypeInternal;
extern AccessPoints_AccessPoint_System_Processes_ProcessKeyDefaultTypeInternal _AccessPoints_AccessPoint_System_Processes_ProcessKey_default_instance_;
class AccessPoints_AccessPoint_System_Processes_Process_State;
class AccessPoints_AccessPoint_System_Processes_Process_StateDefaultTypeInternal;
extern AccessPoints_AccessPoint_System_Processes_Process_StateDefaultTypeInternal _AccessPoints_AccessPoint_System_Processes_Process_State_default_instance_;
class AccessPoints_AccessPoint_System_SshServer;
class AccessPoints_AccessPoint_System_SshServerDefaultTypeInternal;
extern AccessPoints_AccessPoint_System_SshServerDefaultTypeInternal _AccessPoints_AccessPoint_System_SshServer_default_instance_;
class AccessPoints_AccessPoint_System_SshServer_Config;
class AccessPoints_AccessPoint_System_SshServer_ConfigDefaultTypeInternal;
extern AccessPoints_AccessPoint_System_SshServer_ConfigDefaultTypeInternal _AccessPoints_AccessPoint_System_SshServer_Config_default_instance_;
class AccessPoints_AccessPoint_System_SshServer_State;
class AccessPoints_AccessPoint_System_SshServer_StateDefaultTypeInternal;
extern AccessPoints_AccessPoint_System_SshServer_StateDefaultTypeInternal _AccessPoints_AccessPoint_System_SshServer_State_default_instance_;
class AccessPoints_AccessPoint_System_State;
class AccessPoints_AccessPoint_System_StateDefaultTypeInternal;
extern AccessPoints_AccessPoint_System_StateDefaultTypeInternal _AccessPoints_AccessPoint_System_State_default_instance_;
class AccessPoints_AccessPoint_System_TelnetServer;
class AccessPoints_AccessPoint_System_TelnetServerDefaultTypeInternal;
extern AccessPoints_AccessPoint_System_TelnetServerDefaultTypeInternal _AccessPoints_AccessPoint_System_TelnetServer_default_instance_;
class AccessPoints_AccessPoint_System_TelnetServer_Config;
class AccessPoints_AccessPoint_System_TelnetServer_ConfigDefaultTypeInternal;
extern AccessPoints_AccessPoint_System_TelnetServer_ConfigDefaultTypeInternal _AccessPoints_AccessPoint_System_TelnetServer_Config_default_instance_;
class AccessPoints_AccessPoint_System_TelnetServer_State;
class AccessPoints_AccessPoint_System_TelnetServer_StateDefaultTypeInternal;
extern AccessPoints_AccessPoint_System_TelnetServer_StateDefaultTypeInternal _AccessPoints_AccessPoint_System_TelnetServer_State_default_instance_;
}  // namespace openconfig_access_points
}  // namespace openconfig
namespace openconfig {
namespace openconfig_access_points {

enum AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientRf_State_ConnectionMode {
  AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientRf_State_ConnectionMode_CONNECTIONMODE_UNSET = 0,
  AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientRf_State_ConnectionMode_CONNECTIONMODE_A = 1,
  AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientRf_State_ConnectionMode_CONNECTIONMODE_B = 2,
  AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientRf_State_ConnectionMode_CONNECTIONMODE_G = 3,
  AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientRf_State_ConnectionMode_CONNECTIONMODE_N = 4,
  AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientRf_State_ConnectionMode_CONNECTIONMODE_AC = 5,
  AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientRf_State_ConnectionMode_AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientRf_State_ConnectionMode_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientRf_State_ConnectionMode_AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientRf_State_ConnectionMode_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientRf_State_ConnectionMode_IsValid(int value);
const AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientRf_State_ConnectionMode AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientRf_State_ConnectionMode_ConnectionMode_MIN = AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientRf_State_ConnectionMode_CONNECTIONMODE_UNSET;
const AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientRf_State_ConnectionMode AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientRf_State_ConnectionMode_ConnectionMode_MAX = AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientRf_State_ConnectionMode_CONNECTIONMODE_AC;
const int AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientRf_State_ConnectionMode_ConnectionMode_ARRAYSIZE = AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientRf_State_ConnectionMode_ConnectionMode_MAX + 1;

const ::google::protobuf::EnumDescriptor* AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientRf_State_ConnectionMode_descriptor();
inline const ::std::string& AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientRf_State_ConnectionMode_Name(AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientRf_State_ConnectionMode value) {
  return ::google::protobuf::internal::NameOfEnum(
    AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientRf_State_ConnectionMode_descriptor(), value);
}
inline bool AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientRf_State_ConnectionMode_Parse(
    const ::std::string& name, AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientRf_State_ConnectionMode* value) {
  return ::google::protobuf::internal::ParseNamedEnum<AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientRf_State_ConnectionMode>(
    AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientRf_State_ConnectionMode_descriptor(), name, value);
}
enum AccessPoints_AccessPoint_Ssids_Ssid_Config_Opmode {
  AccessPoints_AccessPoint_Ssids_Ssid_Config_Opmode_OPMODE_OPEN = 0,
  AccessPoints_AccessPoint_Ssids_Ssid_Config_Opmode_OPMODE_WPA2_PERSONAL = 2,
  AccessPoints_AccessPoint_Ssids_Ssid_Config_Opmode_OPMODE_WPA2_ENTERPRISE = 3,
  AccessPoints_AccessPoint_Ssids_Ssid_Config_Opmode_AccessPoints_AccessPoint_Ssids_Ssid_Config_Opmode_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  AccessPoints_AccessPoint_Ssids_Ssid_Config_Opmode_AccessPoints_AccessPoint_Ssids_Ssid_Config_Opmode_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool AccessPoints_AccessPoint_Ssids_Ssid_Config_Opmode_IsValid(int value);
const AccessPoints_AccessPoint_Ssids_Ssid_Config_Opmode AccessPoints_AccessPoint_Ssids_Ssid_Config_Opmode_Opmode_MIN = AccessPoints_AccessPoint_Ssids_Ssid_Config_Opmode_OPMODE_OPEN;
const AccessPoints_AccessPoint_Ssids_Ssid_Config_Opmode AccessPoints_AccessPoint_Ssids_Ssid_Config_Opmode_Opmode_MAX = AccessPoints_AccessPoint_Ssids_Ssid_Config_Opmode_OPMODE_WPA2_ENTERPRISE;
const int AccessPoints_AccessPoint_Ssids_Ssid_Config_Opmode_Opmode_ARRAYSIZE = AccessPoints_AccessPoint_Ssids_Ssid_Config_Opmode_Opmode_MAX + 1;

const ::google::protobuf::EnumDescriptor* AccessPoints_AccessPoint_Ssids_Ssid_Config_Opmode_descriptor();
inline const ::std::string& AccessPoints_AccessPoint_Ssids_Ssid_Config_Opmode_Name(AccessPoints_AccessPoint_Ssids_Ssid_Config_Opmode value) {
  return ::google::protobuf::internal::NameOfEnum(
    AccessPoints_AccessPoint_Ssids_Ssid_Config_Opmode_descriptor(), value);
}
inline bool AccessPoints_AccessPoint_Ssids_Ssid_Config_Opmode_Parse(
    const ::std::string& name, AccessPoints_AccessPoint_Ssids_Ssid_Config_Opmode* value) {
  return ::google::protobuf::internal::ParseNamedEnum<AccessPoints_AccessPoint_Ssids_Ssid_Config_Opmode>(
    AccessPoints_AccessPoint_Ssids_Ssid_Config_Opmode_descriptor(), name, value);
}
enum AccessPoints_AccessPoint_Ssids_Ssid_Dot11R_Config_Dot11RMethod {
  AccessPoints_AccessPoint_Ssids_Ssid_Dot11R_Config_Dot11RMethod_DOT11RMETHOD_OVA = 0,
  AccessPoints_AccessPoint_Ssids_Ssid_Dot11R_Config_Dot11RMethod_DOT11RMETHOD_ODS = 2,
  AccessPoints_AccessPoint_Ssids_Ssid_Dot11R_Config_Dot11RMethod_AccessPoints_AccessPoint_Ssids_Ssid_Dot11R_Config_Dot11RMethod_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  AccessPoints_AccessPoint_Ssids_Ssid_Dot11R_Config_Dot11RMethod_AccessPoints_AccessPoint_Ssids_Ssid_Dot11R_Config_Dot11RMethod_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool AccessPoints_AccessPoint_Ssids_Ssid_Dot11R_Config_Dot11RMethod_IsValid(int value);
const AccessPoints_AccessPoint_Ssids_Ssid_Dot11R_Config_Dot11RMethod AccessPoints_AccessPoint_Ssids_Ssid_Dot11R_Config_Dot11RMethod_Dot11RMethod_MIN = AccessPoints_AccessPoint_Ssids_Ssid_Dot11R_Config_Dot11RMethod_DOT11RMETHOD_OVA;
const AccessPoints_AccessPoint_Ssids_Ssid_Dot11R_Config_Dot11RMethod AccessPoints_AccessPoint_Ssids_Ssid_Dot11R_Config_Dot11RMethod_Dot11RMethod_MAX = AccessPoints_AccessPoint_Ssids_Ssid_Dot11R_Config_Dot11RMethod_DOT11RMETHOD_ODS;
const int AccessPoints_AccessPoint_Ssids_Ssid_Dot11R_Config_Dot11RMethod_Dot11RMethod_ARRAYSIZE = AccessPoints_AccessPoint_Ssids_Ssid_Dot11R_Config_Dot11RMethod_Dot11RMethod_MAX + 1;

const ::google::protobuf::EnumDescriptor* AccessPoints_AccessPoint_Ssids_Ssid_Dot11R_Config_Dot11RMethod_descriptor();
inline const ::std::string& AccessPoints_AccessPoint_Ssids_Ssid_Dot11R_Config_Dot11RMethod_Name(AccessPoints_AccessPoint_Ssids_Ssid_Dot11R_Config_Dot11RMethod value) {
  return ::google::protobuf::internal::NameOfEnum(
    AccessPoints_AccessPoint_Ssids_Ssid_Dot11R_Config_Dot11RMethod_descriptor(), value);
}
inline bool AccessPoints_AccessPoint_Ssids_Ssid_Dot11R_Config_Dot11RMethod_Parse(
    const ::std::string& name, AccessPoints_AccessPoint_Ssids_Ssid_Dot11R_Config_Dot11RMethod* value) {
  return ::google::protobuf::internal::ParseNamedEnum<AccessPoints_AccessPoint_Ssids_Ssid_Dot11R_Config_Dot11RMethod>(
    AccessPoints_AccessPoint_Ssids_Ssid_Dot11R_Config_Dot11RMethod_descriptor(), name, value);
}
enum AccessPoints_AccessPoint_Ssids_Ssid_Dot11R_State_Dot11RMethod {
  AccessPoints_AccessPoint_Ssids_Ssid_Dot11R_State_Dot11RMethod_DOT11RMETHOD_OVA = 0,
  AccessPoints_AccessPoint_Ssids_Ssid_Dot11R_State_Dot11RMethod_DOT11RMETHOD_ODS = 2,
  AccessPoints_AccessPoint_Ssids_Ssid_Dot11R_State_Dot11RMethod_AccessPoints_AccessPoint_Ssids_Ssid_Dot11R_State_Dot11RMethod_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  AccessPoints_AccessPoint_Ssids_Ssid_Dot11R_State_Dot11RMethod_AccessPoints_AccessPoint_Ssids_Ssid_Dot11R_State_Dot11RMethod_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool AccessPoints_AccessPoint_Ssids_Ssid_Dot11R_State_Dot11RMethod_IsValid(int value);
const AccessPoints_AccessPoint_Ssids_Ssid_Dot11R_State_Dot11RMethod AccessPoints_AccessPoint_Ssids_Ssid_Dot11R_State_Dot11RMethod_Dot11RMethod_MIN = AccessPoints_AccessPoint_Ssids_Ssid_Dot11R_State_Dot11RMethod_DOT11RMETHOD_OVA;
const AccessPoints_AccessPoint_Ssids_Ssid_Dot11R_State_Dot11RMethod AccessPoints_AccessPoint_Ssids_Ssid_Dot11R_State_Dot11RMethod_Dot11RMethod_MAX = AccessPoints_AccessPoint_Ssids_Ssid_Dot11R_State_Dot11RMethod_DOT11RMETHOD_ODS;
const int AccessPoints_AccessPoint_Ssids_Ssid_Dot11R_State_Dot11RMethod_Dot11RMethod_ARRAYSIZE = AccessPoints_AccessPoint_Ssids_Ssid_Dot11R_State_Dot11RMethod_Dot11RMethod_MAX + 1;

const ::google::protobuf::EnumDescriptor* AccessPoints_AccessPoint_Ssids_Ssid_Dot11R_State_Dot11RMethod_descriptor();
inline const ::std::string& AccessPoints_AccessPoint_Ssids_Ssid_Dot11R_State_Dot11RMethod_Name(AccessPoints_AccessPoint_Ssids_Ssid_Dot11R_State_Dot11RMethod value) {
  return ::google::protobuf::internal::NameOfEnum(
    AccessPoints_AccessPoint_Ssids_Ssid_Dot11R_State_Dot11RMethod_descriptor(), value);
}
inline bool AccessPoints_AccessPoint_Ssids_Ssid_Dot11R_State_Dot11RMethod_Parse(
    const ::std::string& name, AccessPoints_AccessPoint_Ssids_Ssid_Dot11R_State_Dot11RMethod* value) {
  return ::google::protobuf::internal::ParseNamedEnum<AccessPoints_AccessPoint_Ssids_Ssid_Dot11R_State_Dot11RMethod>(
    AccessPoints_AccessPoint_Ssids_Ssid_Dot11R_State_Dot11RMethod_descriptor(), name, value);
}
enum AccessPoints_AccessPoint_Ssids_Ssid_State_Opmode {
  AccessPoints_AccessPoint_Ssids_Ssid_State_Opmode_OPMODE_OPEN = 0,
  AccessPoints_AccessPoint_Ssids_Ssid_State_Opmode_OPMODE_WPA2_PERSONAL = 2,
  AccessPoints_AccessPoint_Ssids_Ssid_State_Opmode_OPMODE_WPA2_ENTERPRISE = 3,
  AccessPoints_AccessPoint_Ssids_Ssid_State_Opmode_AccessPoints_AccessPoint_Ssids_Ssid_State_Opmode_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  AccessPoints_AccessPoint_Ssids_Ssid_State_Opmode_AccessPoints_AccessPoint_Ssids_Ssid_State_Opmode_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool AccessPoints_AccessPoint_Ssids_Ssid_State_Opmode_IsValid(int value);
const AccessPoints_AccessPoint_Ssids_Ssid_State_Opmode AccessPoints_AccessPoint_Ssids_Ssid_State_Opmode_Opmode_MIN = AccessPoints_AccessPoint_Ssids_Ssid_State_Opmode_OPMODE_OPEN;
const AccessPoints_AccessPoint_Ssids_Ssid_State_Opmode AccessPoints_AccessPoint_Ssids_Ssid_State_Opmode_Opmode_MAX = AccessPoints_AccessPoint_Ssids_Ssid_State_Opmode_OPMODE_WPA2_ENTERPRISE;
const int AccessPoints_AccessPoint_Ssids_Ssid_State_Opmode_Opmode_ARRAYSIZE = AccessPoints_AccessPoint_Ssids_Ssid_State_Opmode_Opmode_MAX + 1;

const ::google::protobuf::EnumDescriptor* AccessPoints_AccessPoint_Ssids_Ssid_State_Opmode_descriptor();
inline const ::std::string& AccessPoints_AccessPoint_Ssids_Ssid_State_Opmode_Name(AccessPoints_AccessPoint_Ssids_Ssid_State_Opmode value) {
  return ::google::protobuf::internal::NameOfEnum(
    AccessPoints_AccessPoint_Ssids_Ssid_State_Opmode_descriptor(), value);
}
inline bool AccessPoints_AccessPoint_Ssids_Ssid_State_Opmode_Parse(
    const ::std::string& name, AccessPoints_AccessPoint_Ssids_Ssid_State_Opmode* value) {
  return ::google::protobuf::internal::ParseNamedEnum<AccessPoints_AccessPoint_Ssids_Ssid_State_Opmode>(
    AccessPoints_AccessPoint_Ssids_Ssid_State_Opmode_descriptor(), name, value);
}
enum AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event_Config_Record {
  AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event_Config_Record_RECORD_UNSET = 0,
  AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event_Config_Record_RECORD_START_STOP = 1,
  AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event_Config_Record_RECORD_STOP = 2,
  AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event_Config_Record_AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event_Config_Record_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event_Config_Record_AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event_Config_Record_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event_Config_Record_IsValid(int value);
const AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event_Config_Record AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event_Config_Record_Record_MIN = AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event_Config_Record_RECORD_UNSET;
const AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event_Config_Record AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event_Config_Record_Record_MAX = AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event_Config_Record_RECORD_STOP;
const int AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event_Config_Record_Record_ARRAYSIZE = AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event_Config_Record_Record_MAX + 1;

const ::google::protobuf::EnumDescriptor* AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event_Config_Record_descriptor();
inline const ::std::string& AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event_Config_Record_Name(AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event_Config_Record value) {
  return ::google::protobuf::internal::NameOfEnum(
    AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event_Config_Record_descriptor(), value);
}
inline bool AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event_Config_Record_Parse(
    const ::std::string& name, AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event_Config_Record* value) {
  return ::google::protobuf::internal::ParseNamedEnum<AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event_Config_Record>(
    AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event_Config_Record_descriptor(), name, value);
}
enum AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event_State_Record {
  AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event_State_Record_RECORD_UNSET = 0,
  AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event_State_Record_RECORD_START_STOP = 1,
  AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event_State_Record_RECORD_STOP = 2,
  AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event_State_Record_AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event_State_Record_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event_State_Record_AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event_State_Record_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event_State_Record_IsValid(int value);
const AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event_State_Record AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event_State_Record_Record_MIN = AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event_State_Record_RECORD_UNSET;
const AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event_State_Record AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event_State_Record_Record_MAX = AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event_State_Record_RECORD_STOP;
const int AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event_State_Record_Record_ARRAYSIZE = AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event_State_Record_Record_MAX + 1;

const ::google::protobuf::EnumDescriptor* AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event_State_Record_descriptor();
inline const ::std::string& AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event_State_Record_Name(AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event_State_Record value) {
  return ::google::protobuf::internal::NameOfEnum(
    AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event_State_Record_descriptor(), value);
}
inline bool AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event_State_Record_Parse(
    const ::std::string& name, AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event_State_Record* value) {
  return ::google::protobuf::internal::ParseNamedEnum<AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event_State_Record>(
    AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event_State_Record_descriptor(), name, value);
}
enum AccessPoints_AccessPoint_System_Cpus_Cpu_State_Index {
  AccessPoints_AccessPoint_System_Cpus_Cpu_State_Index_INDEX_UNSET = 0,
  AccessPoints_AccessPoint_System_Cpus_Cpu_State_Index_INDEX_ALL = 1,
  AccessPoints_AccessPoint_System_Cpus_Cpu_State_Index_AccessPoints_AccessPoint_System_Cpus_Cpu_State_Index_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  AccessPoints_AccessPoint_System_Cpus_Cpu_State_Index_AccessPoints_AccessPoint_System_Cpus_Cpu_State_Index_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool AccessPoints_AccessPoint_System_Cpus_Cpu_State_Index_IsValid(int value);
const AccessPoints_AccessPoint_System_Cpus_Cpu_State_Index AccessPoints_AccessPoint_System_Cpus_Cpu_State_Index_Index_MIN = AccessPoints_AccessPoint_System_Cpus_Cpu_State_Index_INDEX_UNSET;
const AccessPoints_AccessPoint_System_Cpus_Cpu_State_Index AccessPoints_AccessPoint_System_Cpus_Cpu_State_Index_Index_MAX = AccessPoints_AccessPoint_System_Cpus_Cpu_State_Index_INDEX_ALL;
const int AccessPoints_AccessPoint_System_Cpus_Cpu_State_Index_Index_ARRAYSIZE = AccessPoints_AccessPoint_System_Cpus_Cpu_State_Index_Index_MAX + 1;

const ::google::protobuf::EnumDescriptor* AccessPoints_AccessPoint_System_Cpus_Cpu_State_Index_descriptor();
inline const ::std::string& AccessPoints_AccessPoint_System_Cpus_Cpu_State_Index_Name(AccessPoints_AccessPoint_System_Cpus_Cpu_State_Index value) {
  return ::google::protobuf::internal::NameOfEnum(
    AccessPoints_AccessPoint_System_Cpus_Cpu_State_Index_descriptor(), value);
}
inline bool AccessPoints_AccessPoint_System_Cpus_Cpu_State_Index_Parse(
    const ::std::string& name, AccessPoints_AccessPoint_System_Cpus_Cpu_State_Index* value) {
  return ::google::protobuf::internal::ParseNamedEnum<AccessPoints_AccessPoint_System_Cpus_Cpu_State_Index>(
    AccessPoints_AccessPoint_System_Cpus_Cpu_State_Index_descriptor(), name, value);
}
enum AccessPoints_AccessPoint_System_Cpus_CpuKey_Index {
  AccessPoints_AccessPoint_System_Cpus_CpuKey_Index_INDEX_UNSET = 0,
  AccessPoints_AccessPoint_System_Cpus_CpuKey_Index_INDEX_ALL = 1,
  AccessPoints_AccessPoint_System_Cpus_CpuKey_Index_AccessPoints_AccessPoint_System_Cpus_CpuKey_Index_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  AccessPoints_AccessPoint_System_Cpus_CpuKey_Index_AccessPoints_AccessPoint_System_Cpus_CpuKey_Index_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool AccessPoints_AccessPoint_System_Cpus_CpuKey_Index_IsValid(int value);
const AccessPoints_AccessPoint_System_Cpus_CpuKey_Index AccessPoints_AccessPoint_System_Cpus_CpuKey_Index_Index_MIN = AccessPoints_AccessPoint_System_Cpus_CpuKey_Index_INDEX_UNSET;
const AccessPoints_AccessPoint_System_Cpus_CpuKey_Index AccessPoints_AccessPoint_System_Cpus_CpuKey_Index_Index_MAX = AccessPoints_AccessPoint_System_Cpus_CpuKey_Index_INDEX_ALL;
const int AccessPoints_AccessPoint_System_Cpus_CpuKey_Index_Index_ARRAYSIZE = AccessPoints_AccessPoint_System_Cpus_CpuKey_Index_Index_MAX + 1;

const ::google::protobuf::EnumDescriptor* AccessPoints_AccessPoint_System_Cpus_CpuKey_Index_descriptor();
inline const ::std::string& AccessPoints_AccessPoint_System_Cpus_CpuKey_Index_Name(AccessPoints_AccessPoint_System_Cpus_CpuKey_Index value) {
  return ::google::protobuf::internal::NameOfEnum(
    AccessPoints_AccessPoint_System_Cpus_CpuKey_Index_descriptor(), value);
}
inline bool AccessPoints_AccessPoint_System_Cpus_CpuKey_Index_Parse(
    const ::std::string& name, AccessPoints_AccessPoint_System_Cpus_CpuKey_Index* value) {
  return ::google::protobuf::internal::ParseNamedEnum<AccessPoints_AccessPoint_System_Cpus_CpuKey_Index>(
    AccessPoints_AccessPoint_System_Cpus_CpuKey_Index_descriptor(), name, value);
}
enum AccessPoints_AccessPoint_System_Ntp_Servers_Server_Config_AssociationType {
  AccessPoints_AccessPoint_System_Ntp_Servers_Server_Config_AssociationType_ASSOCIATIONTYPE_SERVER = 0,
  AccessPoints_AccessPoint_System_Ntp_Servers_Server_Config_AssociationType_ASSOCIATIONTYPE_PEER = 2,
  AccessPoints_AccessPoint_System_Ntp_Servers_Server_Config_AssociationType_ASSOCIATIONTYPE_POOL = 3,
  AccessPoints_AccessPoint_System_Ntp_Servers_Server_Config_AssociationType_AccessPoints_AccessPoint_System_Ntp_Servers_Server_Config_AssociationType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  AccessPoints_AccessPoint_System_Ntp_Servers_Server_Config_AssociationType_AccessPoints_AccessPoint_System_Ntp_Servers_Server_Config_AssociationType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool AccessPoints_AccessPoint_System_Ntp_Servers_Server_Config_AssociationType_IsValid(int value);
const AccessPoints_AccessPoint_System_Ntp_Servers_Server_Config_AssociationType AccessPoints_AccessPoint_System_Ntp_Servers_Server_Config_AssociationType_AssociationType_MIN = AccessPoints_AccessPoint_System_Ntp_Servers_Server_Config_AssociationType_ASSOCIATIONTYPE_SERVER;
const AccessPoints_AccessPoint_System_Ntp_Servers_Server_Config_AssociationType AccessPoints_AccessPoint_System_Ntp_Servers_Server_Config_AssociationType_AssociationType_MAX = AccessPoints_AccessPoint_System_Ntp_Servers_Server_Config_AssociationType_ASSOCIATIONTYPE_POOL;
const int AccessPoints_AccessPoint_System_Ntp_Servers_Server_Config_AssociationType_AssociationType_ARRAYSIZE = AccessPoints_AccessPoint_System_Ntp_Servers_Server_Config_AssociationType_AssociationType_MAX + 1;

const ::google::protobuf::EnumDescriptor* AccessPoints_AccessPoint_System_Ntp_Servers_Server_Config_AssociationType_descriptor();
inline const ::std::string& AccessPoints_AccessPoint_System_Ntp_Servers_Server_Config_AssociationType_Name(AccessPoints_AccessPoint_System_Ntp_Servers_Server_Config_AssociationType value) {
  return ::google::protobuf::internal::NameOfEnum(
    AccessPoints_AccessPoint_System_Ntp_Servers_Server_Config_AssociationType_descriptor(), value);
}
inline bool AccessPoints_AccessPoint_System_Ntp_Servers_Server_Config_AssociationType_Parse(
    const ::std::string& name, AccessPoints_AccessPoint_System_Ntp_Servers_Server_Config_AssociationType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<AccessPoints_AccessPoint_System_Ntp_Servers_Server_Config_AssociationType>(
    AccessPoints_AccessPoint_System_Ntp_Servers_Server_Config_AssociationType_descriptor(), name, value);
}
enum AccessPoints_AccessPoint_System_Ntp_Servers_Server_State_AssociationType {
  AccessPoints_AccessPoint_System_Ntp_Servers_Server_State_AssociationType_ASSOCIATIONTYPE_SERVER = 0,
  AccessPoints_AccessPoint_System_Ntp_Servers_Server_State_AssociationType_ASSOCIATIONTYPE_PEER = 2,
  AccessPoints_AccessPoint_System_Ntp_Servers_Server_State_AssociationType_ASSOCIATIONTYPE_POOL = 3,
  AccessPoints_AccessPoint_System_Ntp_Servers_Server_State_AssociationType_AccessPoints_AccessPoint_System_Ntp_Servers_Server_State_AssociationType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  AccessPoints_AccessPoint_System_Ntp_Servers_Server_State_AssociationType_AccessPoints_AccessPoint_System_Ntp_Servers_Server_State_AssociationType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool AccessPoints_AccessPoint_System_Ntp_Servers_Server_State_AssociationType_IsValid(int value);
const AccessPoints_AccessPoint_System_Ntp_Servers_Server_State_AssociationType AccessPoints_AccessPoint_System_Ntp_Servers_Server_State_AssociationType_AssociationType_MIN = AccessPoints_AccessPoint_System_Ntp_Servers_Server_State_AssociationType_ASSOCIATIONTYPE_SERVER;
const AccessPoints_AccessPoint_System_Ntp_Servers_Server_State_AssociationType AccessPoints_AccessPoint_System_Ntp_Servers_Server_State_AssociationType_AssociationType_MAX = AccessPoints_AccessPoint_System_Ntp_Servers_Server_State_AssociationType_ASSOCIATIONTYPE_POOL;
const int AccessPoints_AccessPoint_System_Ntp_Servers_Server_State_AssociationType_AssociationType_ARRAYSIZE = AccessPoints_AccessPoint_System_Ntp_Servers_Server_State_AssociationType_AssociationType_MAX + 1;

const ::google::protobuf::EnumDescriptor* AccessPoints_AccessPoint_System_Ntp_Servers_Server_State_AssociationType_descriptor();
inline const ::std::string& AccessPoints_AccessPoint_System_Ntp_Servers_Server_State_AssociationType_Name(AccessPoints_AccessPoint_System_Ntp_Servers_Server_State_AssociationType value) {
  return ::google::protobuf::internal::NameOfEnum(
    AccessPoints_AccessPoint_System_Ntp_Servers_Server_State_AssociationType_descriptor(), value);
}
inline bool AccessPoints_AccessPoint_System_Ntp_Servers_Server_State_AssociationType_Parse(
    const ::std::string& name, AccessPoints_AccessPoint_System_Ntp_Servers_Server_State_AssociationType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<AccessPoints_AccessPoint_System_Ntp_Servers_Server_State_AssociationType>(
    AccessPoints_AccessPoint_System_Ntp_Servers_Server_State_AssociationType_descriptor(), name, value);
}
enum AccessPoints_AccessPoint_System_SshServer_Config_ProtocolVersion {
  AccessPoints_AccessPoint_System_SshServer_Config_ProtocolVersion_PROTOCOLVERSION_V2 = 0,
  AccessPoints_AccessPoint_System_SshServer_Config_ProtocolVersion_PROTOCOLVERSION_V1 = 2,
  AccessPoints_AccessPoint_System_SshServer_Config_ProtocolVersion_PROTOCOLVERSION_V1_V2 = 3,
  AccessPoints_AccessPoint_System_SshServer_Config_ProtocolVersion_AccessPoints_AccessPoint_System_SshServer_Config_ProtocolVersion_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  AccessPoints_AccessPoint_System_SshServer_Config_ProtocolVersion_AccessPoints_AccessPoint_System_SshServer_Config_ProtocolVersion_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool AccessPoints_AccessPoint_System_SshServer_Config_ProtocolVersion_IsValid(int value);
const AccessPoints_AccessPoint_System_SshServer_Config_ProtocolVersion AccessPoints_AccessPoint_System_SshServer_Config_ProtocolVersion_ProtocolVersion_MIN = AccessPoints_AccessPoint_System_SshServer_Config_ProtocolVersion_PROTOCOLVERSION_V2;
const AccessPoints_AccessPoint_System_SshServer_Config_ProtocolVersion AccessPoints_AccessPoint_System_SshServer_Config_ProtocolVersion_ProtocolVersion_MAX = AccessPoints_AccessPoint_System_SshServer_Config_ProtocolVersion_PROTOCOLVERSION_V1_V2;
const int AccessPoints_AccessPoint_System_SshServer_Config_ProtocolVersion_ProtocolVersion_ARRAYSIZE = AccessPoints_AccessPoint_System_SshServer_Config_ProtocolVersion_ProtocolVersion_MAX + 1;

const ::google::protobuf::EnumDescriptor* AccessPoints_AccessPoint_System_SshServer_Config_ProtocolVersion_descriptor();
inline const ::std::string& AccessPoints_AccessPoint_System_SshServer_Config_ProtocolVersion_Name(AccessPoints_AccessPoint_System_SshServer_Config_ProtocolVersion value) {
  return ::google::protobuf::internal::NameOfEnum(
    AccessPoints_AccessPoint_System_SshServer_Config_ProtocolVersion_descriptor(), value);
}
inline bool AccessPoints_AccessPoint_System_SshServer_Config_ProtocolVersion_Parse(
    const ::std::string& name, AccessPoints_AccessPoint_System_SshServer_Config_ProtocolVersion* value) {
  return ::google::protobuf::internal::ParseNamedEnum<AccessPoints_AccessPoint_System_SshServer_Config_ProtocolVersion>(
    AccessPoints_AccessPoint_System_SshServer_Config_ProtocolVersion_descriptor(), name, value);
}
enum AccessPoints_AccessPoint_System_SshServer_State_ProtocolVersion {
  AccessPoints_AccessPoint_System_SshServer_State_ProtocolVersion_PROTOCOLVERSION_V2 = 0,
  AccessPoints_AccessPoint_System_SshServer_State_ProtocolVersion_PROTOCOLVERSION_V1 = 2,
  AccessPoints_AccessPoint_System_SshServer_State_ProtocolVersion_PROTOCOLVERSION_V1_V2 = 3,
  AccessPoints_AccessPoint_System_SshServer_State_ProtocolVersion_AccessPoints_AccessPoint_System_SshServer_State_ProtocolVersion_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  AccessPoints_AccessPoint_System_SshServer_State_ProtocolVersion_AccessPoints_AccessPoint_System_SshServer_State_ProtocolVersion_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool AccessPoints_AccessPoint_System_SshServer_State_ProtocolVersion_IsValid(int value);
const AccessPoints_AccessPoint_System_SshServer_State_ProtocolVersion AccessPoints_AccessPoint_System_SshServer_State_ProtocolVersion_ProtocolVersion_MIN = AccessPoints_AccessPoint_System_SshServer_State_ProtocolVersion_PROTOCOLVERSION_V2;
const AccessPoints_AccessPoint_System_SshServer_State_ProtocolVersion AccessPoints_AccessPoint_System_SshServer_State_ProtocolVersion_ProtocolVersion_MAX = AccessPoints_AccessPoint_System_SshServer_State_ProtocolVersion_PROTOCOLVERSION_V1_V2;
const int AccessPoints_AccessPoint_System_SshServer_State_ProtocolVersion_ProtocolVersion_ARRAYSIZE = AccessPoints_AccessPoint_System_SshServer_State_ProtocolVersion_ProtocolVersion_MAX + 1;

const ::google::protobuf::EnumDescriptor* AccessPoints_AccessPoint_System_SshServer_State_ProtocolVersion_descriptor();
inline const ::std::string& AccessPoints_AccessPoint_System_SshServer_State_ProtocolVersion_Name(AccessPoints_AccessPoint_System_SshServer_State_ProtocolVersion value) {
  return ::google::protobuf::internal::NameOfEnum(
    AccessPoints_AccessPoint_System_SshServer_State_ProtocolVersion_descriptor(), value);
}
inline bool AccessPoints_AccessPoint_System_SshServer_State_ProtocolVersion_Parse(
    const ::std::string& name, AccessPoints_AccessPoint_System_SshServer_State_ProtocolVersion* value) {
  return ::google::protobuf::internal::ParseNamedEnum<AccessPoints_AccessPoint_System_SshServer_State_ProtocolVersion>(
    AccessPoints_AccessPoint_System_SshServer_State_ProtocolVersion_descriptor(), name, value);
}
// ===================================================================

class AccessPoints_AccessPoint_AssignedApManagers_ApManager_Config : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_access_points.AccessPoints.AccessPoint.AssignedApManagers.ApManager.Config) */ {
 public:
  AccessPoints_AccessPoint_AssignedApManagers_ApManager_Config();
  virtual ~AccessPoints_AccessPoint_AssignedApManagers_ApManager_Config();

  AccessPoints_AccessPoint_AssignedApManagers_ApManager_Config(const AccessPoints_AccessPoint_AssignedApManagers_ApManager_Config& from);

  inline AccessPoints_AccessPoint_AssignedApManagers_ApManager_Config& operator=(const AccessPoints_AccessPoint_AssignedApManagers_ApManager_Config& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AccessPoints_AccessPoint_AssignedApManagers_ApManager_Config(AccessPoints_AccessPoint_AssignedApManagers_ApManager_Config&& from) noexcept
    : AccessPoints_AccessPoint_AssignedApManagers_ApManager_Config() {
    *this = ::std::move(from);
  }

  inline AccessPoints_AccessPoint_AssignedApManagers_ApManager_Config& operator=(AccessPoints_AccessPoint_AssignedApManagers_ApManager_Config&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AccessPoints_AccessPoint_AssignedApManagers_ApManager_Config& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AccessPoints_AccessPoint_AssignedApManagers_ApManager_Config* internal_default_instance() {
    return reinterpret_cast<const AccessPoints_AccessPoint_AssignedApManagers_ApManager_Config*>(
               &_AccessPoints_AccessPoint_AssignedApManagers_ApManager_Config_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(AccessPoints_AccessPoint_AssignedApManagers_ApManager_Config* other);
  friend void swap(AccessPoints_AccessPoint_AssignedApManagers_ApManager_Config& a, AccessPoints_AccessPoint_AssignedApManagers_ApManager_Config& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AccessPoints_AccessPoint_AssignedApManagers_ApManager_Config* New() const PROTOBUF_FINAL { return New(NULL); }

  AccessPoints_AccessPoint_AssignedApManagers_ApManager_Config* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AccessPoints_AccessPoint_AssignedApManagers_ApManager_Config& from);
  void MergeFrom(const AccessPoints_AccessPoint_AssignedApManagers_ApManager_Config& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AccessPoints_AccessPoint_AssignedApManagers_ApManager_Config* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .ywrapper.StringValue ap_manager_ipv6_address = 35007832 [(.yext.schemapath) = "/access-points/access-point/assigned-ap-managers/ap-manager/config/ap-manager-ipv6-address"];
  int ap_manager_ipv6_address_size() const;
  void clear_ap_manager_ipv6_address();
  static const int kApManagerIpv6AddressFieldNumber = 35007832;
  const ::ywrapper::StringValue& ap_manager_ipv6_address(int index) const;
  ::ywrapper::StringValue* mutable_ap_manager_ipv6_address(int index);
  ::ywrapper::StringValue* add_ap_manager_ipv6_address();
  ::google::protobuf::RepeatedPtrField< ::ywrapper::StringValue >*
      mutable_ap_manager_ipv6_address();
  const ::google::protobuf::RepeatedPtrField< ::ywrapper::StringValue >&
      ap_manager_ipv6_address() const;

  // .ywrapper.StringValue id = 34871349 [(.yext.schemapath) = "/access-points/access-point/assigned-ap-managers/ap-manager/config/id"];
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 34871349;
  const ::ywrapper::StringValue& id() const;
  ::ywrapper::StringValue* release_id();
  ::ywrapper::StringValue* mutable_id();
  void set_allocated_id(::ywrapper::StringValue* id);

  // .ywrapper.StringValue fqdn = 235081911 [(.yext.schemapath) = "/access-points/access-point/assigned-ap-managers/ap-manager/config/fqdn"];
  bool has_fqdn() const;
  void clear_fqdn();
  static const int kFqdnFieldNumber = 235081911;
  const ::ywrapper::StringValue& fqdn() const;
  ::ywrapper::StringValue* release_fqdn();
  ::ywrapper::StringValue* mutable_fqdn();
  void set_allocated_fqdn(::ywrapper::StringValue* fqdn);

  // .ywrapper.StringValue ap_manager_ipv4_address = 420165418 [(.yext.schemapath) = "/access-points/access-point/assigned-ap-managers/ap-manager/config/ap-manager-ipv4-address"];
  bool has_ap_manager_ipv4_address() const;
  void clear_ap_manager_ipv4_address();
  static const int kApManagerIpv4AddressFieldNumber = 420165418;
  const ::ywrapper::StringValue& ap_manager_ipv4_address() const;
  ::ywrapper::StringValue* release_ap_manager_ipv4_address();
  ::ywrapper::StringValue* mutable_ap_manager_ipv4_address();
  void set_allocated_ap_manager_ipv4_address(::ywrapper::StringValue* ap_manager_ipv4_address);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_access_points.AccessPoints.AccessPoint.AssignedApManagers.ApManager.Config)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::ywrapper::StringValue > ap_manager_ipv6_address_;
  ::ywrapper::StringValue* id_;
  ::ywrapper::StringValue* fqdn_;
  ::ywrapper::StringValue* ap_manager_ipv4_address_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::InitDefaultsAccessPoints_AccessPoint_AssignedApManagers_ApManager_ConfigImpl();
};
// -------------------------------------------------------------------

class AccessPoints_AccessPoint_AssignedApManagers_ApManager_State : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_access_points.AccessPoints.AccessPoint.AssignedApManagers.ApManager.State) */ {
 public:
  AccessPoints_AccessPoint_AssignedApManagers_ApManager_State();
  virtual ~AccessPoints_AccessPoint_AssignedApManagers_ApManager_State();

  AccessPoints_AccessPoint_AssignedApManagers_ApManager_State(const AccessPoints_AccessPoint_AssignedApManagers_ApManager_State& from);

  inline AccessPoints_AccessPoint_AssignedApManagers_ApManager_State& operator=(const AccessPoints_AccessPoint_AssignedApManagers_ApManager_State& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AccessPoints_AccessPoint_AssignedApManagers_ApManager_State(AccessPoints_AccessPoint_AssignedApManagers_ApManager_State&& from) noexcept
    : AccessPoints_AccessPoint_AssignedApManagers_ApManager_State() {
    *this = ::std::move(from);
  }

  inline AccessPoints_AccessPoint_AssignedApManagers_ApManager_State& operator=(AccessPoints_AccessPoint_AssignedApManagers_ApManager_State&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AccessPoints_AccessPoint_AssignedApManagers_ApManager_State& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AccessPoints_AccessPoint_AssignedApManagers_ApManager_State* internal_default_instance() {
    return reinterpret_cast<const AccessPoints_AccessPoint_AssignedApManagers_ApManager_State*>(
               &_AccessPoints_AccessPoint_AssignedApManagers_ApManager_State_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(AccessPoints_AccessPoint_AssignedApManagers_ApManager_State* other);
  friend void swap(AccessPoints_AccessPoint_AssignedApManagers_ApManager_State& a, AccessPoints_AccessPoint_AssignedApManagers_ApManager_State& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AccessPoints_AccessPoint_AssignedApManagers_ApManager_State* New() const PROTOBUF_FINAL { return New(NULL); }

  AccessPoints_AccessPoint_AssignedApManagers_ApManager_State* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AccessPoints_AccessPoint_AssignedApManagers_ApManager_State& from);
  void MergeFrom(const AccessPoints_AccessPoint_AssignedApManagers_ApManager_State& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AccessPoints_AccessPoint_AssignedApManagers_ApManager_State* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .ywrapper.StringValue ap_manager_ipv6_address = 454146723 [(.yext.schemapath) = "/access-points/access-point/assigned-ap-managers/ap-manager/state/ap-manager-ipv6-address"];
  int ap_manager_ipv6_address_size() const;
  void clear_ap_manager_ipv6_address();
  static const int kApManagerIpv6AddressFieldNumber = 454146723;
  const ::ywrapper::StringValue& ap_manager_ipv6_address(int index) const;
  ::ywrapper::StringValue* mutable_ap_manager_ipv6_address(int index);
  ::ywrapper::StringValue* add_ap_manager_ipv6_address();
  ::google::protobuf::RepeatedPtrField< ::ywrapper::StringValue >*
      mutable_ap_manager_ipv6_address();
  const ::google::protobuf::RepeatedPtrField< ::ywrapper::StringValue >&
      ap_manager_ipv6_address() const;

  // .ywrapper.StringValue id = 43308820 [(.yext.schemapath) = "/access-points/access-point/assigned-ap-managers/ap-manager/state/id"];
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 43308820;
  const ::ywrapper::StringValue& id() const;
  ::ywrapper::StringValue* release_id();
  ::ywrapper::StringValue* mutable_id();
  void set_allocated_id(::ywrapper::StringValue* id);

  // .ywrapper.StringValue fqdn = 321879454 [(.yext.schemapath) = "/access-points/access-point/assigned-ap-managers/ap-manager/state/fqdn"];
  bool has_fqdn() const;
  void clear_fqdn();
  static const int kFqdnFieldNumber = 321879454;
  const ::ywrapper::StringValue& fqdn() const;
  ::ywrapper::StringValue* release_fqdn();
  ::ywrapper::StringValue* mutable_fqdn();
  void set_allocated_fqdn(::ywrapper::StringValue* fqdn);

  // .ywrapper.StringValue ap_manager_ipv4_address = 328704945 [(.yext.schemapath) = "/access-points/access-point/assigned-ap-managers/ap-manager/state/ap-manager-ipv4-address"];
  bool has_ap_manager_ipv4_address() const;
  void clear_ap_manager_ipv4_address();
  static const int kApManagerIpv4AddressFieldNumber = 328704945;
  const ::ywrapper::StringValue& ap_manager_ipv4_address() const;
  ::ywrapper::StringValue* release_ap_manager_ipv4_address();
  ::ywrapper::StringValue* mutable_ap_manager_ipv4_address();
  void set_allocated_ap_manager_ipv4_address(::ywrapper::StringValue* ap_manager_ipv4_address);

  // .ywrapper.BoolValue joined = 518346540 [(.yext.schemapath) = "/access-points/access-point/assigned-ap-managers/ap-manager/state/joined"];
  bool has_joined() const;
  void clear_joined();
  static const int kJoinedFieldNumber = 518346540;
  const ::ywrapper::BoolValue& joined() const;
  ::ywrapper::BoolValue* release_joined();
  ::ywrapper::BoolValue* mutable_joined();
  void set_allocated_joined(::ywrapper::BoolValue* joined);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_access_points.AccessPoints.AccessPoint.AssignedApManagers.ApManager.State)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::ywrapper::StringValue > ap_manager_ipv6_address_;
  ::ywrapper::StringValue* id_;
  ::ywrapper::StringValue* fqdn_;
  ::ywrapper::StringValue* ap_manager_ipv4_address_;
  ::ywrapper::BoolValue* joined_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::InitDefaultsAccessPoints_AccessPoint_AssignedApManagers_ApManager_StateImpl();
};
// -------------------------------------------------------------------

class AccessPoints_AccessPoint_AssignedApManagers_ApManager : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_access_points.AccessPoints.AccessPoint.AssignedApManagers.ApManager) */ {
 public:
  AccessPoints_AccessPoint_AssignedApManagers_ApManager();
  virtual ~AccessPoints_AccessPoint_AssignedApManagers_ApManager();

  AccessPoints_AccessPoint_AssignedApManagers_ApManager(const AccessPoints_AccessPoint_AssignedApManagers_ApManager& from);

  inline AccessPoints_AccessPoint_AssignedApManagers_ApManager& operator=(const AccessPoints_AccessPoint_AssignedApManagers_ApManager& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AccessPoints_AccessPoint_AssignedApManagers_ApManager(AccessPoints_AccessPoint_AssignedApManagers_ApManager&& from) noexcept
    : AccessPoints_AccessPoint_AssignedApManagers_ApManager() {
    *this = ::std::move(from);
  }

  inline AccessPoints_AccessPoint_AssignedApManagers_ApManager& operator=(AccessPoints_AccessPoint_AssignedApManagers_ApManager&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AccessPoints_AccessPoint_AssignedApManagers_ApManager& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AccessPoints_AccessPoint_AssignedApManagers_ApManager* internal_default_instance() {
    return reinterpret_cast<const AccessPoints_AccessPoint_AssignedApManagers_ApManager*>(
               &_AccessPoints_AccessPoint_AssignedApManagers_ApManager_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(AccessPoints_AccessPoint_AssignedApManagers_ApManager* other);
  friend void swap(AccessPoints_AccessPoint_AssignedApManagers_ApManager& a, AccessPoints_AccessPoint_AssignedApManagers_ApManager& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AccessPoints_AccessPoint_AssignedApManagers_ApManager* New() const PROTOBUF_FINAL { return New(NULL); }

  AccessPoints_AccessPoint_AssignedApManagers_ApManager* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AccessPoints_AccessPoint_AssignedApManagers_ApManager& from);
  void MergeFrom(const AccessPoints_AccessPoint_AssignedApManagers_ApManager& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AccessPoints_AccessPoint_AssignedApManagers_ApManager* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef AccessPoints_AccessPoint_AssignedApManagers_ApManager_Config Config;
  typedef AccessPoints_AccessPoint_AssignedApManagers_ApManager_State State;

  // accessors -------------------------------------------------------

  // .openconfig.openconfig_access_points.AccessPoints.AccessPoint.AssignedApManagers.ApManager.State state = 83170980 [(.yext.schemapath) = "/access-points/access-point/assigned-ap-managers/ap-manager/state"];
  bool has_state() const;
  void clear_state();
  static const int kStateFieldNumber = 83170980;
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_AssignedApManagers_ApManager_State& state() const;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_AssignedApManagers_ApManager_State* release_state();
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_AssignedApManagers_ApManager_State* mutable_state();
  void set_allocated_state(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_AssignedApManagers_ApManager_State* state);

  // .openconfig.openconfig_access_points.AccessPoints.AccessPoint.AssignedApManagers.ApManager.Config config = 401060675 [(.yext.schemapath) = "/access-points/access-point/assigned-ap-managers/ap-manager/config"];
  bool has_config() const;
  void clear_config();
  static const int kConfigFieldNumber = 401060675;
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_AssignedApManagers_ApManager_Config& config() const;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_AssignedApManagers_ApManager_Config* release_config();
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_AssignedApManagers_ApManager_Config* mutable_config();
  void set_allocated_config(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_AssignedApManagers_ApManager_Config* config);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_access_points.AccessPoints.AccessPoint.AssignedApManagers.ApManager)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_AssignedApManagers_ApManager_State* state_;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_AssignedApManagers_ApManager_Config* config_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::InitDefaultsAccessPoints_AccessPoint_AssignedApManagers_ApManagerImpl();
};
// -------------------------------------------------------------------

class AccessPoints_AccessPoint_AssignedApManagers_ApManagerKey : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_access_points.AccessPoints.AccessPoint.AssignedApManagers.ApManagerKey) */ {
 public:
  AccessPoints_AccessPoint_AssignedApManagers_ApManagerKey();
  virtual ~AccessPoints_AccessPoint_AssignedApManagers_ApManagerKey();

  AccessPoints_AccessPoint_AssignedApManagers_ApManagerKey(const AccessPoints_AccessPoint_AssignedApManagers_ApManagerKey& from);

  inline AccessPoints_AccessPoint_AssignedApManagers_ApManagerKey& operator=(const AccessPoints_AccessPoint_AssignedApManagers_ApManagerKey& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AccessPoints_AccessPoint_AssignedApManagers_ApManagerKey(AccessPoints_AccessPoint_AssignedApManagers_ApManagerKey&& from) noexcept
    : AccessPoints_AccessPoint_AssignedApManagers_ApManagerKey() {
    *this = ::std::move(from);
  }

  inline AccessPoints_AccessPoint_AssignedApManagers_ApManagerKey& operator=(AccessPoints_AccessPoint_AssignedApManagers_ApManagerKey&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AccessPoints_AccessPoint_AssignedApManagers_ApManagerKey& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AccessPoints_AccessPoint_AssignedApManagers_ApManagerKey* internal_default_instance() {
    return reinterpret_cast<const AccessPoints_AccessPoint_AssignedApManagers_ApManagerKey*>(
               &_AccessPoints_AccessPoint_AssignedApManagers_ApManagerKey_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(AccessPoints_AccessPoint_AssignedApManagers_ApManagerKey* other);
  friend void swap(AccessPoints_AccessPoint_AssignedApManagers_ApManagerKey& a, AccessPoints_AccessPoint_AssignedApManagers_ApManagerKey& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AccessPoints_AccessPoint_AssignedApManagers_ApManagerKey* New() const PROTOBUF_FINAL { return New(NULL); }

  AccessPoints_AccessPoint_AssignedApManagers_ApManagerKey* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AccessPoints_AccessPoint_AssignedApManagers_ApManagerKey& from);
  void MergeFrom(const AccessPoints_AccessPoint_AssignedApManagers_ApManagerKey& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AccessPoints_AccessPoint_AssignedApManagers_ApManagerKey* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string id = 1 [(.yext.schemapath) = "/access-points/access-point/assigned-ap-managers/ap-manager/id"];
  void clear_id();
  static const int kIdFieldNumber = 1;
  const ::std::string& id() const;
  void set_id(const ::std::string& value);
  #if LANG_CXX11
  void set_id(::std::string&& value);
  #endif
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  ::std::string* mutable_id();
  ::std::string* release_id();
  void set_allocated_id(::std::string* id);

  // .openconfig.openconfig_access_points.AccessPoints.AccessPoint.AssignedApManagers.ApManager ap_manager = 2;
  bool has_ap_manager() const;
  void clear_ap_manager();
  static const int kApManagerFieldNumber = 2;
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_AssignedApManagers_ApManager& ap_manager() const;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_AssignedApManagers_ApManager* release_ap_manager();
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_AssignedApManagers_ApManager* mutable_ap_manager();
  void set_allocated_ap_manager(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_AssignedApManagers_ApManager* ap_manager);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_access_points.AccessPoints.AccessPoint.AssignedApManagers.ApManagerKey)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr id_;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_AssignedApManagers_ApManager* ap_manager_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::InitDefaultsAccessPoints_AccessPoint_AssignedApManagers_ApManagerKeyImpl();
};
// -------------------------------------------------------------------

class AccessPoints_AccessPoint_AssignedApManagers : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_access_points.AccessPoints.AccessPoint.AssignedApManagers) */ {
 public:
  AccessPoints_AccessPoint_AssignedApManagers();
  virtual ~AccessPoints_AccessPoint_AssignedApManagers();

  AccessPoints_AccessPoint_AssignedApManagers(const AccessPoints_AccessPoint_AssignedApManagers& from);

  inline AccessPoints_AccessPoint_AssignedApManagers& operator=(const AccessPoints_AccessPoint_AssignedApManagers& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AccessPoints_AccessPoint_AssignedApManagers(AccessPoints_AccessPoint_AssignedApManagers&& from) noexcept
    : AccessPoints_AccessPoint_AssignedApManagers() {
    *this = ::std::move(from);
  }

  inline AccessPoints_AccessPoint_AssignedApManagers& operator=(AccessPoints_AccessPoint_AssignedApManagers&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AccessPoints_AccessPoint_AssignedApManagers& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AccessPoints_AccessPoint_AssignedApManagers* internal_default_instance() {
    return reinterpret_cast<const AccessPoints_AccessPoint_AssignedApManagers*>(
               &_AccessPoints_AccessPoint_AssignedApManagers_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(AccessPoints_AccessPoint_AssignedApManagers* other);
  friend void swap(AccessPoints_AccessPoint_AssignedApManagers& a, AccessPoints_AccessPoint_AssignedApManagers& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AccessPoints_AccessPoint_AssignedApManagers* New() const PROTOBUF_FINAL { return New(NULL); }

  AccessPoints_AccessPoint_AssignedApManagers* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AccessPoints_AccessPoint_AssignedApManagers& from);
  void MergeFrom(const AccessPoints_AccessPoint_AssignedApManagers& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AccessPoints_AccessPoint_AssignedApManagers* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef AccessPoints_AccessPoint_AssignedApManagers_ApManager ApManager;
  typedef AccessPoints_AccessPoint_AssignedApManagers_ApManagerKey ApManagerKey;

  // accessors -------------------------------------------------------

  // repeated .openconfig.openconfig_access_points.AccessPoints.AccessPoint.AssignedApManagers.ApManagerKey ap_manager = 57137442 [(.yext.schemapath) = "/access-points/access-point/assigned-ap-managers/ap-manager"];
  int ap_manager_size() const;
  void clear_ap_manager();
  static const int kApManagerFieldNumber = 57137442;
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_AssignedApManagers_ApManagerKey& ap_manager(int index) const;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_AssignedApManagers_ApManagerKey* mutable_ap_manager(int index);
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_AssignedApManagers_ApManagerKey* add_ap_manager();
  ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_AssignedApManagers_ApManagerKey >*
      mutable_ap_manager();
  const ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_AssignedApManagers_ApManagerKey >&
      ap_manager() const;

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_access_points.AccessPoints.AccessPoint.AssignedApManagers)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_AssignedApManagers_ApManagerKey > ap_manager_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::InitDefaultsAccessPoints_AccessPoint_AssignedApManagersImpl();
};
// -------------------------------------------------------------------

class AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxDataDist : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.RxDataDist) */ {
 public:
  AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxDataDist();
  virtual ~AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxDataDist();

  AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxDataDist(const AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxDataDist& from);

  inline AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxDataDist& operator=(const AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxDataDist& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxDataDist(AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxDataDist&& from) noexcept
    : AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxDataDist() {
    *this = ::std::move(from);
  }

  inline AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxDataDist& operator=(AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxDataDist&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxDataDist& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxDataDist* internal_default_instance() {
    return reinterpret_cast<const AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxDataDist*>(
               &_AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxDataDist_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxDataDist* other);
  friend void swap(AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxDataDist& a, AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxDataDist& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxDataDist* New() const PROTOBUF_FINAL { return New(NULL); }

  AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxDataDist* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxDataDist& from);
  void MergeFrom(const AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxDataDist& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxDataDist* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .ywrapper.UintValue rx_1025_2048 = 21640095 [(.yext.schemapath) = "/access-points/access-point/bssids/bssid/state/counters/rx-data-dist/rx-1025-2048"];
  bool has_rx_1025_2048() const;
  void clear_rx_1025_2048();
  static const int kRx10252048FieldNumber = 21640095;
  const ::ywrapper::UintValue& rx_1025_2048() const;
  ::ywrapper::UintValue* release_rx_1025_2048();
  ::ywrapper::UintValue* mutable_rx_1025_2048();
  void set_allocated_rx_1025_2048(::ywrapper::UintValue* rx_1025_2048);

  // .ywrapper.UintValue rx_131073_262144 = 39261633 [(.yext.schemapath) = "/access-points/access-point/bssids/bssid/state/counters/rx-data-dist/rx-131073-262144"];
  bool has_rx_131073_262144() const;
  void clear_rx_131073_262144();
  static const int kRx131073262144FieldNumber = 39261633;
  const ::ywrapper::UintValue& rx_131073_262144() const;
  ::ywrapper::UintValue* release_rx_131073_262144();
  ::ywrapper::UintValue* mutable_rx_131073_262144();
  void set_allocated_rx_131073_262144(::ywrapper::UintValue* rx_131073_262144);

  // .ywrapper.UintValue rx_65537_131072 = 40498515 [(.yext.schemapath) = "/access-points/access-point/bssids/bssid/state/counters/rx-data-dist/rx-65537-131072"];
  bool has_rx_65537_131072() const;
  void clear_rx_65537_131072();
  static const int kRx65537131072FieldNumber = 40498515;
  const ::ywrapper::UintValue& rx_65537_131072() const;
  ::ywrapper::UintValue* release_rx_65537_131072();
  ::ywrapper::UintValue* mutable_rx_65537_131072();
  void set_allocated_rx_65537_131072(::ywrapper::UintValue* rx_65537_131072);

  // .ywrapper.UintValue rx_513_1024 = 87832527 [(.yext.schemapath) = "/access-points/access-point/bssids/bssid/state/counters/rx-data-dist/rx-513-1024"];
  bool has_rx_513_1024() const;
  void clear_rx_513_1024();
  static const int kRx5131024FieldNumber = 87832527;
  const ::ywrapper::UintValue& rx_513_1024() const;
  ::ywrapper::UintValue* release_rx_513_1024();
  ::ywrapper::UintValue* mutable_rx_513_1024();
  void set_allocated_rx_513_1024(::ywrapper::UintValue* rx_513_1024);

  // .ywrapper.UintValue rx_8193_16384 = 109135014 [(.yext.schemapath) = "/access-points/access-point/bssids/bssid/state/counters/rx-data-dist/rx-8193-16384"];
  bool has_rx_8193_16384() const;
  void clear_rx_8193_16384();
  static const int kRx819316384FieldNumber = 109135014;
  const ::ywrapper::UintValue& rx_8193_16384() const;
  ::ywrapper::UintValue* release_rx_8193_16384();
  ::ywrapper::UintValue* mutable_rx_8193_16384();
  void set_allocated_rx_8193_16384(::ywrapper::UintValue* rx_8193_16384);

  // .ywrapper.UintValue rx_4097_8192 = 114719685 [(.yext.schemapath) = "/access-points/access-point/bssids/bssid/state/counters/rx-data-dist/rx-4097-8192"];
  bool has_rx_4097_8192() const;
  void clear_rx_4097_8192();
  static const int kRx40978192FieldNumber = 114719685;
  const ::ywrapper::UintValue& rx_4097_8192() const;
  ::ywrapper::UintValue* release_rx_4097_8192();
  ::ywrapper::UintValue* mutable_rx_4097_8192();
  void set_allocated_rx_4097_8192(::ywrapper::UintValue* rx_4097_8192);

  // .ywrapper.UintValue rx_0_64 = 143422199 [(.yext.schemapath) = "/access-points/access-point/bssids/bssid/state/counters/rx-data-dist/rx-0-64"];
  bool has_rx_0_64() const;
  void clear_rx_0_64();
  static const int kRx064FieldNumber = 143422199;
  const ::ywrapper::UintValue& rx_0_64() const;
  ::ywrapper::UintValue* release_rx_0_64();
  ::ywrapper::UintValue* mutable_rx_0_64();
  void set_allocated_rx_0_64(::ywrapper::UintValue* rx_0_64);

  // .ywrapper.UintValue rx_32769_65536 = 146888689 [(.yext.schemapath) = "/access-points/access-point/bssids/bssid/state/counters/rx-data-dist/rx-32769-65536"];
  bool has_rx_32769_65536() const;
  void clear_rx_32769_65536();
  static const int kRx3276965536FieldNumber = 146888689;
  const ::ywrapper::UintValue& rx_32769_65536() const;
  ::ywrapper::UintValue* release_rx_32769_65536();
  ::ywrapper::UintValue* mutable_rx_32769_65536();
  void set_allocated_rx_32769_65536(::ywrapper::UintValue* rx_32769_65536);

  // .ywrapper.UintValue rx_257_512 = 158965569 [(.yext.schemapath) = "/access-points/access-point/bssids/bssid/state/counters/rx-data-dist/rx-257-512"];
  bool has_rx_257_512() const;
  void clear_rx_257_512();
  static const int kRx257512FieldNumber = 158965569;
  const ::ywrapper::UintValue& rx_257_512() const;
  ::ywrapper::UintValue* release_rx_257_512();
  ::ywrapper::UintValue* mutable_rx_257_512();
  void set_allocated_rx_257_512(::ywrapper::UintValue* rx_257_512);

  // .ywrapper.UintValue rx_2049_4096 = 216726557 [(.yext.schemapath) = "/access-points/access-point/bssids/bssid/state/counters/rx-data-dist/rx-2049-4096"];
  bool has_rx_2049_4096() const;
  void clear_rx_2049_4096();
  static const int kRx20494096FieldNumber = 216726557;
  const ::ywrapper::UintValue& rx_2049_4096() const;
  ::ywrapper::UintValue* release_rx_2049_4096();
  ::ywrapper::UintValue* mutable_rx_2049_4096();
  void set_allocated_rx_2049_4096(::ywrapper::UintValue* rx_2049_4096);

  // .ywrapper.UintValue rx_65_128 = 222945107 [(.yext.schemapath) = "/access-points/access-point/bssids/bssid/state/counters/rx-data-dist/rx-65-128"];
  bool has_rx_65_128() const;
  void clear_rx_65_128();
  static const int kRx65128FieldNumber = 222945107;
  const ::ywrapper::UintValue& rx_65_128() const;
  ::ywrapper::UintValue* release_rx_65_128();
  ::ywrapper::UintValue* mutable_rx_65_128();
  void set_allocated_rx_65_128(::ywrapper::UintValue* rx_65_128);

  // .ywrapper.UintValue rx_524289_1048576 = 240442274 [(.yext.schemapath) = "/access-points/access-point/bssids/bssid/state/counters/rx-data-dist/rx-524289-1048576"];
  bool has_rx_524289_1048576() const;
  void clear_rx_524289_1048576();
  static const int kRx5242891048576FieldNumber = 240442274;
  const ::ywrapper::UintValue& rx_524289_1048576() const;
  ::ywrapper::UintValue* release_rx_524289_1048576();
  ::ywrapper::UintValue* mutable_rx_524289_1048576();
  void set_allocated_rx_524289_1048576(::ywrapper::UintValue* rx_524289_1048576);

  // .ywrapper.UintValue rx_16385_32768 = 357129086 [(.yext.schemapath) = "/access-points/access-point/bssids/bssid/state/counters/rx-data-dist/rx-16385-32768"];
  bool has_rx_16385_32768() const;
  void clear_rx_16385_32768();
  static const int kRx1638532768FieldNumber = 357129086;
  const ::ywrapper::UintValue& rx_16385_32768() const;
  ::ywrapper::UintValue* release_rx_16385_32768();
  ::ywrapper::UintValue* mutable_rx_16385_32768();
  void set_allocated_rx_16385_32768(::ywrapper::UintValue* rx_16385_32768);

  // .ywrapper.UintValue rx_129_256 = 393371098 [(.yext.schemapath) = "/access-points/access-point/bssids/bssid/state/counters/rx-data-dist/rx-129-256"];
  bool has_rx_129_256() const;
  void clear_rx_129_256();
  static const int kRx129256FieldNumber = 393371098;
  const ::ywrapper::UintValue& rx_129_256() const;
  ::ywrapper::UintValue* release_rx_129_256();
  ::ywrapper::UintValue* mutable_rx_129_256();
  void set_allocated_rx_129_256(::ywrapper::UintValue* rx_129_256);

  // .ywrapper.UintValue rx_262145_524288 = 509798284 [(.yext.schemapath) = "/access-points/access-point/bssids/bssid/state/counters/rx-data-dist/rx-262145-524288"];
  bool has_rx_262145_524288() const;
  void clear_rx_262145_524288();
  static const int kRx262145524288FieldNumber = 509798284;
  const ::ywrapper::UintValue& rx_262145_524288() const;
  ::ywrapper::UintValue* release_rx_262145_524288();
  ::ywrapper::UintValue* mutable_rx_262145_524288();
  void set_allocated_rx_262145_524288(::ywrapper::UintValue* rx_262145_524288);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.RxDataDist)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ywrapper::UintValue* rx_1025_2048_;
  ::ywrapper::UintValue* rx_131073_262144_;
  ::ywrapper::UintValue* rx_65537_131072_;
  ::ywrapper::UintValue* rx_513_1024_;
  ::ywrapper::UintValue* rx_8193_16384_;
  ::ywrapper::UintValue* rx_4097_8192_;
  ::ywrapper::UintValue* rx_0_64_;
  ::ywrapper::UintValue* rx_32769_65536_;
  ::ywrapper::UintValue* rx_257_512_;
  ::ywrapper::UintValue* rx_2049_4096_;
  ::ywrapper::UintValue* rx_65_128_;
  ::ywrapper::UintValue* rx_524289_1048576_;
  ::ywrapper::UintValue* rx_16385_32768_;
  ::ywrapper::UintValue* rx_129_256_;
  ::ywrapper::UintValue* rx_262145_524288_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::InitDefaultsAccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxDataDistImpl();
};
// -------------------------------------------------------------------

class AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxDataWmm : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.RxDataWmm) */ {
 public:
  AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxDataWmm();
  virtual ~AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxDataWmm();

  AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxDataWmm(const AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxDataWmm& from);

  inline AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxDataWmm& operator=(const AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxDataWmm& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxDataWmm(AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxDataWmm&& from) noexcept
    : AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxDataWmm() {
    *this = ::std::move(from);
  }

  inline AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxDataWmm& operator=(AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxDataWmm&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxDataWmm& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxDataWmm* internal_default_instance() {
    return reinterpret_cast<const AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxDataWmm*>(
               &_AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxDataWmm_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxDataWmm* other);
  friend void swap(AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxDataWmm& a, AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxDataWmm& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxDataWmm* New() const PROTOBUF_FINAL { return New(NULL); }

  AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxDataWmm* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxDataWmm& from);
  void MergeFrom(const AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxDataWmm& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxDataWmm* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .ywrapper.UintValue vi = 170177969 [(.yext.schemapath) = "/access-points/access-point/bssids/bssid/state/counters/rx-data-wmm/vi"];
  bool has_vi() const;
  void clear_vi();
  static const int kViFieldNumber = 170177969;
  const ::ywrapper::UintValue& vi() const;
  ::ywrapper::UintValue* release_vi();
  ::ywrapper::UintValue* mutable_vi();
  void set_allocated_vi(::ywrapper::UintValue* vi);

  // .ywrapper.UintValue vo = 170177975 [(.yext.schemapath) = "/access-points/access-point/bssids/bssid/state/counters/rx-data-wmm/vo"];
  bool has_vo() const;
  void clear_vo();
  static const int kVoFieldNumber = 170177975;
  const ::ywrapper::UintValue& vo() const;
  ::ywrapper::UintValue* release_vo();
  ::ywrapper::UintValue* mutable_vo();
  void set_allocated_vo(::ywrapper::UintValue* vo);

  // .ywrapper.UintValue be = 505730353 [(.yext.schemapath) = "/access-points/access-point/bssids/bssid/state/counters/rx-data-wmm/be"];
  bool has_be() const;
  void clear_be();
  static const int kBeFieldNumber = 505730353;
  const ::ywrapper::UintValue& be() const;
  ::ywrapper::UintValue* release_be();
  ::ywrapper::UintValue* mutable_be();
  void set_allocated_be(::ywrapper::UintValue* be);

  // .ywrapper.UintValue bk = 505730367 [(.yext.schemapath) = "/access-points/access-point/bssids/bssid/state/counters/rx-data-wmm/bk"];
  bool has_bk() const;
  void clear_bk();
  static const int kBkFieldNumber = 505730367;
  const ::ywrapper::UintValue& bk() const;
  ::ywrapper::UintValue* release_bk();
  ::ywrapper::UintValue* mutable_bk();
  void set_allocated_bk(::ywrapper::UintValue* bk);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.RxDataWmm)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ywrapper::UintValue* vi_;
  ::ywrapper::UintValue* vo_;
  ::ywrapper::UintValue* be_;
  ::ywrapper::UintValue* bk_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::InitDefaultsAccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxDataWmmImpl();
};
// -------------------------------------------------------------------

class AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxMcs : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.RxMcs) */ {
 public:
  AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxMcs();
  virtual ~AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxMcs();

  AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxMcs(const AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxMcs& from);

  inline AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxMcs& operator=(const AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxMcs& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxMcs(AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxMcs&& from) noexcept
    : AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxMcs() {
    *this = ::std::move(from);
  }

  inline AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxMcs& operator=(AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxMcs&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxMcs& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxMcs* internal_default_instance() {
    return reinterpret_cast<const AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxMcs*>(
               &_AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxMcs_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxMcs* other);
  friend void swap(AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxMcs& a, AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxMcs& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxMcs* New() const PROTOBUF_FINAL { return New(NULL); }

  AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxMcs* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxMcs& from);
  void MergeFrom(const AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxMcs& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxMcs* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .ywrapper.UintValue mcs8 = 6642482 [(.yext.schemapath) = "/access-points/access-point/bssids/bssid/state/counters/rx-mcs/mcs8"];
  bool has_mcs8() const;
  void clear_mcs8();
  static const int kMcs8FieldNumber = 6642482;
  const ::ywrapper::UintValue& mcs8() const;
  ::ywrapper::UintValue* release_mcs8();
  ::ywrapper::UintValue* mutable_mcs8();
  void set_allocated_mcs8(::ywrapper::UintValue* mcs8);

  // .ywrapper.UintValue mcs9 = 6642483 [(.yext.schemapath) = "/access-points/access-point/bssids/bssid/state/counters/rx-mcs/mcs9"];
  bool has_mcs9() const;
  void clear_mcs9();
  static const int kMcs9FieldNumber = 6642483;
  const ::ywrapper::UintValue& mcs9() const;
  ::ywrapper::UintValue* release_mcs9();
  ::ywrapper::UintValue* mutable_mcs9();
  void set_allocated_mcs9(::ywrapper::UintValue* mcs9);

  // .ywrapper.UintValue mcs2 = 6642488 [(.yext.schemapath) = "/access-points/access-point/bssids/bssid/state/counters/rx-mcs/mcs2"];
  bool has_mcs2() const;
  void clear_mcs2();
  static const int kMcs2FieldNumber = 6642488;
  const ::ywrapper::UintValue& mcs2() const;
  ::ywrapper::UintValue* release_mcs2();
  ::ywrapper::UintValue* mutable_mcs2();
  void set_allocated_mcs2(::ywrapper::UintValue* mcs2);

  // .ywrapper.UintValue mcs3 = 6642489 [(.yext.schemapath) = "/access-points/access-point/bssids/bssid/state/counters/rx-mcs/mcs3"];
  bool has_mcs3() const;
  void clear_mcs3();
  static const int kMcs3FieldNumber = 6642489;
  const ::ywrapper::UintValue& mcs3() const;
  ::ywrapper::UintValue* release_mcs3();
  ::ywrapper::UintValue* mutable_mcs3();
  void set_allocated_mcs3(::ywrapper::UintValue* mcs3);

  // .ywrapper.UintValue mcs0 = 6642490 [(.yext.schemapath) = "/access-points/access-point/bssids/bssid/state/counters/rx-mcs/mcs0"];
  bool has_mcs0() const;
  void clear_mcs0();
  static const int kMcs0FieldNumber = 6642490;
  const ::ywrapper::UintValue& mcs0() const;
  ::ywrapper::UintValue* release_mcs0();
  ::ywrapper::UintValue* mutable_mcs0();
  void set_allocated_mcs0(::ywrapper::UintValue* mcs0);

  // .ywrapper.UintValue mcs1 = 6642491 [(.yext.schemapath) = "/access-points/access-point/bssids/bssid/state/counters/rx-mcs/mcs1"];
  bool has_mcs1() const;
  void clear_mcs1();
  static const int kMcs1FieldNumber = 6642491;
  const ::ywrapper::UintValue& mcs1() const;
  ::ywrapper::UintValue* release_mcs1();
  ::ywrapper::UintValue* mutable_mcs1();
  void set_allocated_mcs1(::ywrapper::UintValue* mcs1);

  // .ywrapper.UintValue mcs6 = 6642492 [(.yext.schemapath) = "/access-points/access-point/bssids/bssid/state/counters/rx-mcs/mcs6"];
  bool has_mcs6() const;
  void clear_mcs6();
  static const int kMcs6FieldNumber = 6642492;
  const ::ywrapper::UintValue& mcs6() const;
  ::ywrapper::UintValue* release_mcs6();
  ::ywrapper::UintValue* mutable_mcs6();
  void set_allocated_mcs6(::ywrapper::UintValue* mcs6);

  // .ywrapper.UintValue mcs7 = 6642493 [(.yext.schemapath) = "/access-points/access-point/bssids/bssid/state/counters/rx-mcs/mcs7"];
  bool has_mcs7() const;
  void clear_mcs7();
  static const int kMcs7FieldNumber = 6642493;
  const ::ywrapper::UintValue& mcs7() const;
  ::ywrapper::UintValue* release_mcs7();
  ::ywrapper::UintValue* mutable_mcs7();
  void set_allocated_mcs7(::ywrapper::UintValue* mcs7);

  // .ywrapper.UintValue mcs4 = 6642494 [(.yext.schemapath) = "/access-points/access-point/bssids/bssid/state/counters/rx-mcs/mcs4"];
  bool has_mcs4() const;
  void clear_mcs4();
  static const int kMcs4FieldNumber = 6642494;
  const ::ywrapper::UintValue& mcs4() const;
  ::ywrapper::UintValue* release_mcs4();
  ::ywrapper::UintValue* mutable_mcs4();
  void set_allocated_mcs4(::ywrapper::UintValue* mcs4);

  // .ywrapper.UintValue mcs5 = 6642495 [(.yext.schemapath) = "/access-points/access-point/bssids/bssid/state/counters/rx-mcs/mcs5"];
  bool has_mcs5() const;
  void clear_mcs5();
  static const int kMcs5FieldNumber = 6642495;
  const ::ywrapper::UintValue& mcs5() const;
  ::ywrapper::UintValue* release_mcs5();
  ::ywrapper::UintValue* mutable_mcs5();
  void set_allocated_mcs5(::ywrapper::UintValue* mcs5);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.RxMcs)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ywrapper::UintValue* mcs8_;
  ::ywrapper::UintValue* mcs9_;
  ::ywrapper::UintValue* mcs2_;
  ::ywrapper::UintValue* mcs3_;
  ::ywrapper::UintValue* mcs0_;
  ::ywrapper::UintValue* mcs1_;
  ::ywrapper::UintValue* mcs6_;
  ::ywrapper::UintValue* mcs7_;
  ::ywrapper::UintValue* mcs4_;
  ::ywrapper::UintValue* mcs5_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::InitDefaultsAccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxMcsImpl();
};
// -------------------------------------------------------------------

class AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxDataDist : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.TxDataDist) */ {
 public:
  AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxDataDist();
  virtual ~AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxDataDist();

  AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxDataDist(const AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxDataDist& from);

  inline AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxDataDist& operator=(const AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxDataDist& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxDataDist(AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxDataDist&& from) noexcept
    : AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxDataDist() {
    *this = ::std::move(from);
  }

  inline AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxDataDist& operator=(AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxDataDist&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxDataDist& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxDataDist* internal_default_instance() {
    return reinterpret_cast<const AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxDataDist*>(
               &_AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxDataDist_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void Swap(AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxDataDist* other);
  friend void swap(AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxDataDist& a, AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxDataDist& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxDataDist* New() const PROTOBUF_FINAL { return New(NULL); }

  AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxDataDist* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxDataDist& from);
  void MergeFrom(const AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxDataDist& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxDataDist* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .ywrapper.UintValue tx_513_1024 = 33435479 [(.yext.schemapath) = "/access-points/access-point/bssids/bssid/state/counters/tx-data-dist/tx-513-1024"];
  bool has_tx_513_1024() const;
  void clear_tx_513_1024();
  static const int kTx5131024FieldNumber = 33435479;
  const ::ywrapper::UintValue& tx_513_1024() const;
  ::ywrapper::UintValue* release_tx_513_1024();
  ::ywrapper::UintValue* mutable_tx_513_1024();
  void set_allocated_tx_513_1024(::ywrapper::UintValue* tx_513_1024);

  // .ywrapper.UintValue tx_257_512 = 115951001 [(.yext.schemapath) = "/access-points/access-point/bssids/bssid/state/counters/tx-data-dist/tx-257-512"];
  bool has_tx_257_512() const;
  void clear_tx_257_512();
  static const int kTx257512FieldNumber = 115951001;
  const ::ywrapper::UintValue& tx_257_512() const;
  ::ywrapper::UintValue* release_tx_257_512();
  ::ywrapper::UintValue* mutable_tx_257_512();
  void set_allocated_tx_257_512(::ywrapper::UintValue* tx_257_512);

  // .ywrapper.UintValue tx_524289_1048576 = 140166202 [(.yext.schemapath) = "/access-points/access-point/bssids/bssid/state/counters/tx-data-dist/tx-524289-1048576"];
  bool has_tx_524289_1048576() const;
  void clear_tx_524289_1048576();
  static const int kTx5242891048576FieldNumber = 140166202;
  const ::ywrapper::UintValue& tx_524289_1048576() const;
  ::ywrapper::UintValue* release_tx_524289_1048576();
  ::ywrapper::UintValue* mutable_tx_524289_1048576();
  void set_allocated_tx_524289_1048576(::ywrapper::UintValue* tx_524289_1048576);

  // .ywrapper.UintValue tx_131073_262144 = 162458105 [(.yext.schemapath) = "/access-points/access-point/bssids/bssid/state/counters/tx-data-dist/tx-131073-262144"];
  bool has_tx_131073_262144() const;
  void clear_tx_131073_262144();
  static const int kTx131073262144FieldNumber = 162458105;
  const ::ywrapper::UintValue& tx_131073_262144() const;
  ::ywrapper::UintValue* release_tx_131073_262144();
  ::ywrapper::UintValue* mutable_tx_131073_262144();
  void set_allocated_tx_131073_262144(::ywrapper::UintValue* tx_131073_262144);

  // .ywrapper.UintValue tx_65537_131072 = 183849915 [(.yext.schemapath) = "/access-points/access-point/bssids/bssid/state/counters/tx-data-dist/tx-65537-131072"];
  bool has_tx_65537_131072() const;
  void clear_tx_65537_131072();
  static const int kTx65537131072FieldNumber = 183849915;
  const ::ywrapper::UintValue& tx_65537_131072() const;
  ::ywrapper::UintValue* release_tx_65537_131072();
  ::ywrapper::UintValue* mutable_tx_65537_131072();
  void set_allocated_tx_65537_131072(::ywrapper::UintValue* tx_65537_131072);

  // .ywrapper.UintValue tx_262145_524288 = 247601604 [(.yext.schemapath) = "/access-points/access-point/bssids/bssid/state/counters/tx-data-dist/tx-262145-524288"];
  bool has_tx_262145_524288() const;
  void clear_tx_262145_524288();
  static const int kTx262145524288FieldNumber = 247601604;
  const ::ywrapper::UintValue& tx_262145_524288() const;
  ::ywrapper::UintValue* release_tx_262145_524288();
  ::ywrapper::UintValue* mutable_tx_262145_524288();
  void set_allocated_tx_262145_524288(::ywrapper::UintValue* tx_262145_524288);

  // .ywrapper.UintValue tx_0_64 = 250529087 [(.yext.schemapath) = "/access-points/access-point/bssids/bssid/state/counters/tx-data-dist/tx-0-64"];
  bool has_tx_0_64() const;
  void clear_tx_0_64();
  static const int kTx064FieldNumber = 250529087;
  const ::ywrapper::UintValue& tx_0_64() const;
  ::ywrapper::UintValue* release_tx_0_64();
  ::ywrapper::UintValue* mutable_tx_0_64();
  void set_allocated_tx_0_64(::ywrapper::UintValue* tx_0_64);

  // .ywrapper.UintValue tx_1025_2048 = 305880711 [(.yext.schemapath) = "/access-points/access-point/bssids/bssid/state/counters/tx-data-dist/tx-1025-2048"];
  bool has_tx_1025_2048() const;
  void clear_tx_1025_2048();
  static const int kTx10252048FieldNumber = 305880711;
  const ::ywrapper::UintValue& tx_1025_2048() const;
  ::ywrapper::UintValue* release_tx_1025_2048();
  ::ywrapper::UintValue* mutable_tx_1025_2048();
  void set_allocated_tx_1025_2048(::ywrapper::UintValue* tx_1025_2048);

  // .ywrapper.UintValue tx_8193_16384 = 315748638 [(.yext.schemapath) = "/access-points/access-point/bssids/bssid/state/counters/tx-data-dist/tx-8193-16384"];
  bool has_tx_8193_16384() const;
  void clear_tx_8193_16384();
  static const int kTx819316384FieldNumber = 315748638;
  const ::ywrapper::UintValue& tx_8193_16384() const;
  ::ywrapper::UintValue* release_tx_8193_16384();
  ::ywrapper::UintValue* mutable_tx_8193_16384();
  void set_allocated_tx_8193_16384(::ywrapper::UintValue* tx_8193_16384);

  // .ywrapper.UintValue tx_16385_32768 = 349262166 [(.yext.schemapath) = "/access-points/access-point/bssids/bssid/state/counters/tx-data-dist/tx-16385-32768"];
  bool has_tx_16385_32768() const;
  void clear_tx_16385_32768();
  static const int kTx1638532768FieldNumber = 349262166;
  const ::ywrapper::UintValue& tx_16385_32768() const;
  ::ywrapper::UintValue* release_tx_16385_32768();
  ::ywrapper::UintValue* mutable_tx_16385_32768();
  void set_allocated_tx_16385_32768(::ywrapper::UintValue* tx_16385_32768);

  // .ywrapper.UintValue tx_65_128 = 394305867 [(.yext.schemapath) = "/access-points/access-point/bssids/bssid/state/counters/tx-data-dist/tx-65-128"];
  bool has_tx_65_128() const;
  void clear_tx_65_128();
  static const int kTx65128FieldNumber = 394305867;
  const ::ywrapper::UintValue& tx_65_128() const;
  ::ywrapper::UintValue* release_tx_65_128();
  ::ywrapper::UintValue* mutable_tx_65_128();
  void set_allocated_tx_65_128(::ywrapper::UintValue* tx_65_128);

  // .ywrapper.UintValue tx_32769_65536 = 422821273 [(.yext.schemapath) = "/access-points/access-point/bssids/bssid/state/counters/tx-data-dist/tx-32769-65536"];
  bool has_tx_32769_65536() const;
  void clear_tx_32769_65536();
  static const int kTx3276965536FieldNumber = 422821273;
  const ::ywrapper::UintValue& tx_32769_65536() const;
  ::ywrapper::UintValue* release_tx_32769_65536();
  ::ywrapper::UintValue* mutable_tx_32769_65536();
  void set_allocated_tx_32769_65536(::ywrapper::UintValue* tx_32769_65536);

  // .ywrapper.UintValue tx_2049_4096 = 462525077 [(.yext.schemapath) = "/access-points/access-point/bssids/bssid/state/counters/tx-data-dist/tx-2049-4096"];
  bool has_tx_2049_4096() const;
  void clear_tx_2049_4096();
  static const int kTx20494096FieldNumber = 462525077;
  const ::ywrapper::UintValue& tx_2049_4096() const;
  ::ywrapper::UintValue* release_tx_2049_4096();
  ::ywrapper::UintValue* mutable_tx_2049_4096();
  void set_allocated_tx_2049_4096(::ywrapper::UintValue* tx_2049_4096);

  // .ywrapper.UintValue tx_4097_8192 = 491057293 [(.yext.schemapath) = "/access-points/access-point/bssids/bssid/state/counters/tx-data-dist/tx-4097-8192"];
  bool has_tx_4097_8192() const;
  void clear_tx_4097_8192();
  static const int kTx40978192FieldNumber = 491057293;
  const ::ywrapper::UintValue& tx_4097_8192() const;
  ::ywrapper::UintValue* release_tx_4097_8192();
  ::ywrapper::UintValue* mutable_tx_4097_8192();
  void set_allocated_tx_4097_8192(::ywrapper::UintValue* tx_4097_8192);

  // .ywrapper.UintValue tx_129_256 = 508408610 [(.yext.schemapath) = "/access-points/access-point/bssids/bssid/state/counters/tx-data-dist/tx-129-256"];
  bool has_tx_129_256() const;
  void clear_tx_129_256();
  static const int kTx129256FieldNumber = 508408610;
  const ::ywrapper::UintValue& tx_129_256() const;
  ::ywrapper::UintValue* release_tx_129_256();
  ::ywrapper::UintValue* mutable_tx_129_256();
  void set_allocated_tx_129_256(::ywrapper::UintValue* tx_129_256);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.TxDataDist)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ywrapper::UintValue* tx_513_1024_;
  ::ywrapper::UintValue* tx_257_512_;
  ::ywrapper::UintValue* tx_524289_1048576_;
  ::ywrapper::UintValue* tx_131073_262144_;
  ::ywrapper::UintValue* tx_65537_131072_;
  ::ywrapper::UintValue* tx_262145_524288_;
  ::ywrapper::UintValue* tx_0_64_;
  ::ywrapper::UintValue* tx_1025_2048_;
  ::ywrapper::UintValue* tx_8193_16384_;
  ::ywrapper::UintValue* tx_16385_32768_;
  ::ywrapper::UintValue* tx_65_128_;
  ::ywrapper::UintValue* tx_32769_65536_;
  ::ywrapper::UintValue* tx_2049_4096_;
  ::ywrapper::UintValue* tx_4097_8192_;
  ::ywrapper::UintValue* tx_129_256_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::InitDefaultsAccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxDataDistImpl();
};
// -------------------------------------------------------------------

class AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxDataWmm : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.TxDataWmm) */ {
 public:
  AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxDataWmm();
  virtual ~AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxDataWmm();

  AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxDataWmm(const AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxDataWmm& from);

  inline AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxDataWmm& operator=(const AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxDataWmm& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxDataWmm(AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxDataWmm&& from) noexcept
    : AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxDataWmm() {
    *this = ::std::move(from);
  }

  inline AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxDataWmm& operator=(AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxDataWmm&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxDataWmm& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxDataWmm* internal_default_instance() {
    return reinterpret_cast<const AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxDataWmm*>(
               &_AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxDataWmm_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    9;

  void Swap(AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxDataWmm* other);
  friend void swap(AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxDataWmm& a, AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxDataWmm& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxDataWmm* New() const PROTOBUF_FINAL { return New(NULL); }

  AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxDataWmm* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxDataWmm& from);
  void MergeFrom(const AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxDataWmm& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxDataWmm* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .ywrapper.UintValue be = 321631815 [(.yext.schemapath) = "/access-points/access-point/bssids/bssid/state/counters/tx-data-wmm/be"];
  bool has_be() const;
  void clear_be();
  static const int kBeFieldNumber = 321631815;
  const ::ywrapper::UintValue& be() const;
  ::ywrapper::UintValue* release_be();
  ::ywrapper::UintValue* mutable_be();
  void set_allocated_be(::ywrapper::UintValue* be);

  // .ywrapper.UintValue bk = 321631817 [(.yext.schemapath) = "/access-points/access-point/bssids/bssid/state/counters/tx-data-wmm/bk"];
  bool has_bk() const;
  void clear_bk();
  static const int kBkFieldNumber = 321631817;
  const ::ywrapper::UintValue& bk() const;
  ::ywrapper::UintValue* release_bk();
  ::ywrapper::UintValue* mutable_bk();
  void set_allocated_bk(::ywrapper::UintValue* bk);

  // .ywrapper.UintValue vi = 522950351 [(.yext.schemapath) = "/access-points/access-point/bssids/bssid/state/counters/tx-data-wmm/vi"];
  bool has_vi() const;
  void clear_vi();
  static const int kViFieldNumber = 522950351;
  const ::ywrapper::UintValue& vi() const;
  ::ywrapper::UintValue* release_vi();
  ::ywrapper::UintValue* mutable_vi();
  void set_allocated_vi(::ywrapper::UintValue* vi);

  // .ywrapper.UintValue vo = 522950345 [(.yext.schemapath) = "/access-points/access-point/bssids/bssid/state/counters/tx-data-wmm/vo"];
  bool has_vo() const;
  void clear_vo();
  static const int kVoFieldNumber = 522950345;
  const ::ywrapper::UintValue& vo() const;
  ::ywrapper::UintValue* release_vo();
  ::ywrapper::UintValue* mutable_vo();
  void set_allocated_vo(::ywrapper::UintValue* vo);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.TxDataWmm)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ywrapper::UintValue* be_;
  ::ywrapper::UintValue* bk_;
  ::ywrapper::UintValue* vi_;
  ::ywrapper::UintValue* vo_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::InitDefaultsAccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxDataWmmImpl();
};
// -------------------------------------------------------------------

class AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxMcs : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.TxMcs) */ {
 public:
  AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxMcs();
  virtual ~AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxMcs();

  AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxMcs(const AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxMcs& from);

  inline AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxMcs& operator=(const AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxMcs& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxMcs(AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxMcs&& from) noexcept
    : AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxMcs() {
    *this = ::std::move(from);
  }

  inline AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxMcs& operator=(AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxMcs&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxMcs& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxMcs* internal_default_instance() {
    return reinterpret_cast<const AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxMcs*>(
               &_AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxMcs_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    10;

  void Swap(AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxMcs* other);
  friend void swap(AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxMcs& a, AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxMcs& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxMcs* New() const PROTOBUF_FINAL { return New(NULL); }

  AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxMcs* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxMcs& from);
  void MergeFrom(const AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxMcs& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxMcs* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .ywrapper.UintValue mcs0 = 431477292 [(.yext.schemapath) = "/access-points/access-point/bssids/bssid/state/counters/tx-mcs/mcs0"];
  bool has_mcs0() const;
  void clear_mcs0();
  static const int kMcs0FieldNumber = 431477292;
  const ::ywrapper::UintValue& mcs0() const;
  ::ywrapper::UintValue* release_mcs0();
  ::ywrapper::UintValue* mutable_mcs0();
  void set_allocated_mcs0(::ywrapper::UintValue* mcs0);

  // .ywrapper.UintValue mcs1 = 431477293 [(.yext.schemapath) = "/access-points/access-point/bssids/bssid/state/counters/tx-mcs/mcs1"];
  bool has_mcs1() const;
  void clear_mcs1();
  static const int kMcs1FieldNumber = 431477293;
  const ::ywrapper::UintValue& mcs1() const;
  ::ywrapper::UintValue* release_mcs1();
  ::ywrapper::UintValue* mutable_mcs1();
  void set_allocated_mcs1(::ywrapper::UintValue* mcs1);

  // .ywrapper.UintValue mcs2 = 431477294 [(.yext.schemapath) = "/access-points/access-point/bssids/bssid/state/counters/tx-mcs/mcs2"];
  bool has_mcs2() const;
  void clear_mcs2();
  static const int kMcs2FieldNumber = 431477294;
  const ::ywrapper::UintValue& mcs2() const;
  ::ywrapper::UintValue* release_mcs2();
  ::ywrapper::UintValue* mutable_mcs2();
  void set_allocated_mcs2(::ywrapper::UintValue* mcs2);

  // .ywrapper.UintValue mcs3 = 431477295 [(.yext.schemapath) = "/access-points/access-point/bssids/bssid/state/counters/tx-mcs/mcs3"];
  bool has_mcs3() const;
  void clear_mcs3();
  static const int kMcs3FieldNumber = 431477295;
  const ::ywrapper::UintValue& mcs3() const;
  ::ywrapper::UintValue* release_mcs3();
  ::ywrapper::UintValue* mutable_mcs3();
  void set_allocated_mcs3(::ywrapper::UintValue* mcs3);

  // .ywrapper.UintValue mcs4 = 431477288 [(.yext.schemapath) = "/access-points/access-point/bssids/bssid/state/counters/tx-mcs/mcs4"];
  bool has_mcs4() const;
  void clear_mcs4();
  static const int kMcs4FieldNumber = 431477288;
  const ::ywrapper::UintValue& mcs4() const;
  ::ywrapper::UintValue* release_mcs4();
  ::ywrapper::UintValue* mutable_mcs4();
  void set_allocated_mcs4(::ywrapper::UintValue* mcs4);

  // .ywrapper.UintValue mcs5 = 431477289 [(.yext.schemapath) = "/access-points/access-point/bssids/bssid/state/counters/tx-mcs/mcs5"];
  bool has_mcs5() const;
  void clear_mcs5();
  static const int kMcs5FieldNumber = 431477289;
  const ::ywrapper::UintValue& mcs5() const;
  ::ywrapper::UintValue* release_mcs5();
  ::ywrapper::UintValue* mutable_mcs5();
  void set_allocated_mcs5(::ywrapper::UintValue* mcs5);

  // .ywrapper.UintValue mcs6 = 431477290 [(.yext.schemapath) = "/access-points/access-point/bssids/bssid/state/counters/tx-mcs/mcs6"];
  bool has_mcs6() const;
  void clear_mcs6();
  static const int kMcs6FieldNumber = 431477290;
  const ::ywrapper::UintValue& mcs6() const;
  ::ywrapper::UintValue* release_mcs6();
  ::ywrapper::UintValue* mutable_mcs6();
  void set_allocated_mcs6(::ywrapper::UintValue* mcs6);

  // .ywrapper.UintValue mcs7 = 431477291 [(.yext.schemapath) = "/access-points/access-point/bssids/bssid/state/counters/tx-mcs/mcs7"];
  bool has_mcs7() const;
  void clear_mcs7();
  static const int kMcs7FieldNumber = 431477291;
  const ::ywrapper::UintValue& mcs7() const;
  ::ywrapper::UintValue* release_mcs7();
  ::ywrapper::UintValue* mutable_mcs7();
  void set_allocated_mcs7(::ywrapper::UintValue* mcs7);

  // .ywrapper.UintValue mcs8 = 431477284 [(.yext.schemapath) = "/access-points/access-point/bssids/bssid/state/counters/tx-mcs/mcs8"];
  bool has_mcs8() const;
  void clear_mcs8();
  static const int kMcs8FieldNumber = 431477284;
  const ::ywrapper::UintValue& mcs8() const;
  ::ywrapper::UintValue* release_mcs8();
  ::ywrapper::UintValue* mutable_mcs8();
  void set_allocated_mcs8(::ywrapper::UintValue* mcs8);

  // .ywrapper.UintValue mcs9 = 431477285 [(.yext.schemapath) = "/access-points/access-point/bssids/bssid/state/counters/tx-mcs/mcs9"];
  bool has_mcs9() const;
  void clear_mcs9();
  static const int kMcs9FieldNumber = 431477285;
  const ::ywrapper::UintValue& mcs9() const;
  ::ywrapper::UintValue* release_mcs9();
  ::ywrapper::UintValue* mutable_mcs9();
  void set_allocated_mcs9(::ywrapper::UintValue* mcs9);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.TxMcs)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ywrapper::UintValue* mcs0_;
  ::ywrapper::UintValue* mcs1_;
  ::ywrapper::UintValue* mcs2_;
  ::ywrapper::UintValue* mcs3_;
  ::ywrapper::UintValue* mcs4_;
  ::ywrapper::UintValue* mcs5_;
  ::ywrapper::UintValue* mcs6_;
  ::ywrapper::UintValue* mcs7_;
  ::ywrapper::UintValue* mcs8_;
  ::ywrapper::UintValue* mcs9_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::InitDefaultsAccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxMcsImpl();
};
// -------------------------------------------------------------------

class AccessPoints_AccessPoint_Bssids_Bssid_State_Counters : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters) */ {
 public:
  AccessPoints_AccessPoint_Bssids_Bssid_State_Counters();
  virtual ~AccessPoints_AccessPoint_Bssids_Bssid_State_Counters();

  AccessPoints_AccessPoint_Bssids_Bssid_State_Counters(const AccessPoints_AccessPoint_Bssids_Bssid_State_Counters& from);

  inline AccessPoints_AccessPoint_Bssids_Bssid_State_Counters& operator=(const AccessPoints_AccessPoint_Bssids_Bssid_State_Counters& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AccessPoints_AccessPoint_Bssids_Bssid_State_Counters(AccessPoints_AccessPoint_Bssids_Bssid_State_Counters&& from) noexcept
    : AccessPoints_AccessPoint_Bssids_Bssid_State_Counters() {
    *this = ::std::move(from);
  }

  inline AccessPoints_AccessPoint_Bssids_Bssid_State_Counters& operator=(AccessPoints_AccessPoint_Bssids_Bssid_State_Counters&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AccessPoints_AccessPoint_Bssids_Bssid_State_Counters& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AccessPoints_AccessPoint_Bssids_Bssid_State_Counters* internal_default_instance() {
    return reinterpret_cast<const AccessPoints_AccessPoint_Bssids_Bssid_State_Counters*>(
               &_AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    11;

  void Swap(AccessPoints_AccessPoint_Bssids_Bssid_State_Counters* other);
  friend void swap(AccessPoints_AccessPoint_Bssids_Bssid_State_Counters& a, AccessPoints_AccessPoint_Bssids_Bssid_State_Counters& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AccessPoints_AccessPoint_Bssids_Bssid_State_Counters* New() const PROTOBUF_FINAL { return New(NULL); }

  AccessPoints_AccessPoint_Bssids_Bssid_State_Counters* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AccessPoints_AccessPoint_Bssids_Bssid_State_Counters& from);
  void MergeFrom(const AccessPoints_AccessPoint_Bssids_Bssid_State_Counters& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AccessPoints_AccessPoint_Bssids_Bssid_State_Counters* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxDataDist RxDataDist;
  typedef AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxDataWmm RxDataWmm;
  typedef AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxMcs RxMcs;
  typedef AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxDataDist TxDataDist;
  typedef AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxDataWmm TxDataWmm;
  typedef AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxMcs TxMcs;

  // accessors -------------------------------------------------------

  // .ywrapper.UintValue tx_mgmt = 25484760 [(.yext.schemapath) = "/access-points/access-point/bssids/bssid/state/counters/tx-mgmt"];
  bool has_tx_mgmt() const;
  void clear_tx_mgmt();
  static const int kTxMgmtFieldNumber = 25484760;
  const ::ywrapper::UintValue& tx_mgmt() const;
  ::ywrapper::UintValue* release_tx_mgmt();
  ::ywrapper::UintValue* mutable_tx_mgmt();
  void set_allocated_tx_mgmt(::ywrapper::UintValue* tx_mgmt);

  // .ywrapper.UintValue tx_retries_data = 30080596 [(.yext.schemapath) = "/access-points/access-point/bssids/bssid/state/counters/tx-retries-data"];
  bool has_tx_retries_data() const;
  void clear_tx_retries_data();
  static const int kTxRetriesDataFieldNumber = 30080596;
  const ::ywrapper::UintValue& tx_retries_data() const;
  ::ywrapper::UintValue* release_tx_retries_data();
  ::ywrapper::UintValue* mutable_tx_retries_data();
  void set_allocated_tx_retries_data(::ywrapper::UintValue* tx_retries_data);

  // .ywrapper.UintValue rx_retries_data = 63230482 [(.yext.schemapath) = "/access-points/access-point/bssids/bssid/state/counters/rx-retries-data"];
  bool has_rx_retries_data() const;
  void clear_rx_retries_data();
  static const int kRxRetriesDataFieldNumber = 63230482;
  const ::ywrapper::UintValue& rx_retries_data() const;
  ::ywrapper::UintValue* release_rx_retries_data();
  ::ywrapper::UintValue* mutable_rx_retries_data();
  void set_allocated_rx_retries_data(::ywrapper::UintValue* rx_retries_data);

  // .openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.RxMcs rx_mcs = 119858772 [(.yext.schemapath) = "/access-points/access-point/bssids/bssid/state/counters/rx-mcs"];
  bool has_rx_mcs() const;
  void clear_rx_mcs();
  static const int kRxMcsFieldNumber = 119858772;
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxMcs& rx_mcs() const;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxMcs* release_rx_mcs();
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxMcs* mutable_rx_mcs();
  void set_allocated_rx_mcs(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxMcs* rx_mcs);

  // .ywrapper.UintValue rx_retries = 143381957 [(.yext.schemapath) = "/access-points/access-point/bssids/bssid/state/counters/rx-retries"];
  bool has_rx_retries() const;
  void clear_rx_retries();
  static const int kRxRetriesFieldNumber = 143381957;
  const ::ywrapper::UintValue& rx_retries() const;
  ::ywrapper::UintValue* release_rx_retries();
  ::ywrapper::UintValue* mutable_rx_retries();
  void set_allocated_rx_retries(::ywrapper::UintValue* rx_retries);

  // .ywrapper.UintValue rx_mgmt = 151792630 [(.yext.schemapath) = "/access-points/access-point/bssids/bssid/state/counters/rx-mgmt"];
  bool has_rx_mgmt() const;
  void clear_rx_mgmt();
  static const int kRxMgmtFieldNumber = 151792630;
  const ::ywrapper::UintValue& rx_mgmt() const;
  ::ywrapper::UintValue* release_rx_mgmt();
  ::ywrapper::UintValue* mutable_rx_mgmt();
  void set_allocated_rx_mgmt(::ywrapper::UintValue* rx_mgmt);

  // .ywrapper.UintValue rx_bytes_data = 159230175 [(.yext.schemapath) = "/access-points/access-point/bssids/bssid/state/counters/rx-bytes-data"];
  bool has_rx_bytes_data() const;
  void clear_rx_bytes_data();
  static const int kRxBytesDataFieldNumber = 159230175;
  const ::ywrapper::UintValue& rx_bytes_data() const;
  ::ywrapper::UintValue* release_rx_bytes_data();
  ::ywrapper::UintValue* mutable_rx_bytes_data();
  void set_allocated_rx_bytes_data(::ywrapper::UintValue* rx_bytes_data);

  // .openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.TxMcs tx_mcs = 186904038 [(.yext.schemapath) = "/access-points/access-point/bssids/bssid/state/counters/tx-mcs"];
  bool has_tx_mcs() const;
  void clear_tx_mcs();
  static const int kTxMcsFieldNumber = 186904038;
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxMcs& tx_mcs() const;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxMcs* release_tx_mcs();
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxMcs* mutable_tx_mcs();
  void set_allocated_tx_mcs(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxMcs* tx_mcs);

  // .ywrapper.UintValue rx_control = 247598360 [(.yext.schemapath) = "/access-points/access-point/bssids/bssid/state/counters/rx-control"];
  bool has_rx_control() const;
  void clear_rx_control();
  static const int kRxControlFieldNumber = 247598360;
  const ::ywrapper::UintValue& rx_control() const;
  ::ywrapper::UintValue* release_rx_control();
  ::ywrapper::UintValue* mutable_rx_control();
  void set_allocated_rx_control(::ywrapper::UintValue* rx_control);

  // .openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.TxDataWmm tx_data_wmm = 279344129 [(.yext.schemapath) = "/access-points/access-point/bssids/bssid/state/counters/tx-data-wmm"];
  bool has_tx_data_wmm() const;
  void clear_tx_data_wmm();
  static const int kTxDataWmmFieldNumber = 279344129;
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxDataWmm& tx_data_wmm() const;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxDataWmm* release_tx_data_wmm();
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxDataWmm* mutable_tx_data_wmm();
  void set_allocated_tx_data_wmm(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxDataWmm* tx_data_wmm);

  // .ywrapper.UintValue tx_bytes_data = 318830013 [(.yext.schemapath) = "/access-points/access-point/bssids/bssid/state/counters/tx-bytes-data"];
  bool has_tx_bytes_data() const;
  void clear_tx_bytes_data();
  static const int kTxBytesDataFieldNumber = 318830013;
  const ::ywrapper::UintValue& tx_bytes_data() const;
  ::ywrapper::UintValue* release_tx_bytes_data();
  ::ywrapper::UintValue* mutable_tx_bytes_data();
  void set_allocated_tx_bytes_data(::ywrapper::UintValue* tx_bytes_data);

  // .ywrapper.UintValue tx_control = 334314718 [(.yext.schemapath) = "/access-points/access-point/bssids/bssid/state/counters/tx-control"];
  bool has_tx_control() const;
  void clear_tx_control();
  static const int kTxControlFieldNumber = 334314718;
  const ::ywrapper::UintValue& tx_control() const;
  ::ywrapper::UintValue* release_tx_control();
  ::ywrapper::UintValue* mutable_tx_control();
  void set_allocated_tx_control(::ywrapper::UintValue* tx_control);

  // .ywrapper.UintValue tx_retries = 343186923 [(.yext.schemapath) = "/access-points/access-point/bssids/bssid/state/counters/tx-retries"];
  bool has_tx_retries() const;
  void clear_tx_retries();
  static const int kTxRetriesFieldNumber = 343186923;
  const ::ywrapper::UintValue& tx_retries() const;
  ::ywrapper::UintValue* release_tx_retries();
  ::ywrapper::UintValue* mutable_tx_retries();
  void set_allocated_tx_retries(::ywrapper::UintValue* tx_retries);

  // .openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.RxDataWmm rx_data_wmm = 351323239 [(.yext.schemapath) = "/access-points/access-point/bssids/bssid/state/counters/rx-data-wmm"];
  bool has_rx_data_wmm() const;
  void clear_rx_data_wmm();
  static const int kRxDataWmmFieldNumber = 351323239;
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxDataWmm& rx_data_wmm() const;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxDataWmm* release_rx_data_wmm();
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxDataWmm* mutable_rx_data_wmm();
  void set_allocated_rx_data_wmm(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxDataWmm* rx_data_wmm);

  // .openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.RxDataDist rx_data_dist = 387518846 [(.yext.schemapath) = "/access-points/access-point/bssids/bssid/state/counters/rx-data-dist"];
  bool has_rx_data_dist() const;
  void clear_rx_data_dist();
  static const int kRxDataDistFieldNumber = 387518846;
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxDataDist& rx_data_dist() const;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxDataDist* release_rx_data_dist();
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxDataDist* mutable_rx_data_dist();
  void set_allocated_rx_data_dist(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxDataDist* rx_data_dist);

  // .openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.TxDataDist tx_data_dist = 393055292 [(.yext.schemapath) = "/access-points/access-point/bssids/bssid/state/counters/tx-data-dist"];
  bool has_tx_data_dist() const;
  void clear_tx_data_dist();
  static const int kTxDataDistFieldNumber = 393055292;
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxDataDist& tx_data_dist() const;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxDataDist* release_tx_data_dist();
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxDataDist* mutable_tx_data_dist();
  void set_allocated_tx_data_dist(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxDataDist* tx_data_dist);

  // .ywrapper.UintValue rx_retries_subframe = 452796363 [(.yext.schemapath) = "/access-points/access-point/bssids/bssid/state/counters/rx-retries-subframe"];
  bool has_rx_retries_subframe() const;
  void clear_rx_retries_subframe();
  static const int kRxRetriesSubframeFieldNumber = 452796363;
  const ::ywrapper::UintValue& rx_retries_subframe() const;
  ::ywrapper::UintValue* release_rx_retries_subframe();
  ::ywrapper::UintValue* mutable_rx_retries_subframe();
  void set_allocated_rx_retries_subframe(::ywrapper::UintValue* rx_retries_subframe);

  // .ywrapper.UintValue tx_retries_subframe = 536002493 [(.yext.schemapath) = "/access-points/access-point/bssids/bssid/state/counters/tx-retries-subframe"];
  bool has_tx_retries_subframe() const;
  void clear_tx_retries_subframe();
  static const int kTxRetriesSubframeFieldNumber = 536002493;
  const ::ywrapper::UintValue& tx_retries_subframe() const;
  ::ywrapper::UintValue* release_tx_retries_subframe();
  ::ywrapper::UintValue* mutable_tx_retries_subframe();
  void set_allocated_tx_retries_subframe(::ywrapper::UintValue* tx_retries_subframe);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ywrapper::UintValue* tx_mgmt_;
  ::ywrapper::UintValue* tx_retries_data_;
  ::ywrapper::UintValue* rx_retries_data_;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxMcs* rx_mcs_;
  ::ywrapper::UintValue* rx_retries_;
  ::ywrapper::UintValue* rx_mgmt_;
  ::ywrapper::UintValue* rx_bytes_data_;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxMcs* tx_mcs_;
  ::ywrapper::UintValue* rx_control_;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxDataWmm* tx_data_wmm_;
  ::ywrapper::UintValue* tx_bytes_data_;
  ::ywrapper::UintValue* tx_control_;
  ::ywrapper::UintValue* tx_retries_;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxDataWmm* rx_data_wmm_;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxDataDist* rx_data_dist_;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxDataDist* tx_data_dist_;
  ::ywrapper::UintValue* rx_retries_subframe_;
  ::ywrapper::UintValue* tx_retries_subframe_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::InitDefaultsAccessPoints_AccessPoint_Bssids_Bssid_State_CountersImpl();
};
// -------------------------------------------------------------------

class AccessPoints_AccessPoint_Bssids_Bssid_State : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State) */ {
 public:
  AccessPoints_AccessPoint_Bssids_Bssid_State();
  virtual ~AccessPoints_AccessPoint_Bssids_Bssid_State();

  AccessPoints_AccessPoint_Bssids_Bssid_State(const AccessPoints_AccessPoint_Bssids_Bssid_State& from);

  inline AccessPoints_AccessPoint_Bssids_Bssid_State& operator=(const AccessPoints_AccessPoint_Bssids_Bssid_State& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AccessPoints_AccessPoint_Bssids_Bssid_State(AccessPoints_AccessPoint_Bssids_Bssid_State&& from) noexcept
    : AccessPoints_AccessPoint_Bssids_Bssid_State() {
    *this = ::std::move(from);
  }

  inline AccessPoints_AccessPoint_Bssids_Bssid_State& operator=(AccessPoints_AccessPoint_Bssids_Bssid_State&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AccessPoints_AccessPoint_Bssids_Bssid_State& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AccessPoints_AccessPoint_Bssids_Bssid_State* internal_default_instance() {
    return reinterpret_cast<const AccessPoints_AccessPoint_Bssids_Bssid_State*>(
               &_AccessPoints_AccessPoint_Bssids_Bssid_State_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    12;

  void Swap(AccessPoints_AccessPoint_Bssids_Bssid_State* other);
  friend void swap(AccessPoints_AccessPoint_Bssids_Bssid_State& a, AccessPoints_AccessPoint_Bssids_Bssid_State& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AccessPoints_AccessPoint_Bssids_Bssid_State* New() const PROTOBUF_FINAL { return New(NULL); }

  AccessPoints_AccessPoint_Bssids_Bssid_State* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AccessPoints_AccessPoint_Bssids_Bssid_State& from);
  void MergeFrom(const AccessPoints_AccessPoint_Bssids_Bssid_State& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AccessPoints_AccessPoint_Bssids_Bssid_State* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef AccessPoints_AccessPoint_Bssids_Bssid_State_Counters Counters;

  // accessors -------------------------------------------------------

  // .ywrapper.UintValue num_associated_clients = 239913592 [(.yext.schemapath) = "/access-points/access-point/bssids/bssid/state/num-associated-clients"];
  bool has_num_associated_clients() const;
  void clear_num_associated_clients();
  static const int kNumAssociatedClientsFieldNumber = 239913592;
  const ::ywrapper::UintValue& num_associated_clients() const;
  ::ywrapper::UintValue* release_num_associated_clients();
  ::ywrapper::UintValue* mutable_num_associated_clients();
  void set_allocated_num_associated_clients(::ywrapper::UintValue* num_associated_clients);

  // .ywrapper.StringValue ess = 272594563 [(.yext.schemapath) = "/access-points/access-point/bssids/bssid/state/ess"];
  bool has_ess() const;
  void clear_ess();
  static const int kEssFieldNumber = 272594563;
  const ::ywrapper::StringValue& ess() const;
  ::ywrapper::StringValue* release_ess();
  ::ywrapper::StringValue* mutable_ess();
  void set_allocated_ess(::ywrapper::StringValue* ess);

  // .openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters counters = 351841403 [(.yext.schemapath) = "/access-points/access-point/bssids/bssid/state/counters"];
  bool has_counters() const;
  void clear_counters();
  static const int kCountersFieldNumber = 351841403;
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Bssids_Bssid_State_Counters& counters() const;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Bssids_Bssid_State_Counters* release_counters();
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Bssids_Bssid_State_Counters* mutable_counters();
  void set_allocated_counters(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Bssids_Bssid_State_Counters* counters);

  // .ywrapper.StringValue bssid = 354430463 [(.yext.schemapath) = "/access-points/access-point/bssids/bssid/state/bssid"];
  bool has_bssid() const;
  void clear_bssid();
  static const int kBssidFieldNumber = 354430463;
  const ::ywrapper::StringValue& bssid() const;
  ::ywrapper::StringValue* release_bssid();
  ::ywrapper::StringValue* mutable_bssid();
  void set_allocated_bssid(::ywrapper::StringValue* bssid);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ywrapper::UintValue* num_associated_clients_;
  ::ywrapper::StringValue* ess_;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Bssids_Bssid_State_Counters* counters_;
  ::ywrapper::StringValue* bssid_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::InitDefaultsAccessPoints_AccessPoint_Bssids_Bssid_StateImpl();
};
// -------------------------------------------------------------------

class AccessPoints_AccessPoint_Bssids_Bssid : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid) */ {
 public:
  AccessPoints_AccessPoint_Bssids_Bssid();
  virtual ~AccessPoints_AccessPoint_Bssids_Bssid();

  AccessPoints_AccessPoint_Bssids_Bssid(const AccessPoints_AccessPoint_Bssids_Bssid& from);

  inline AccessPoints_AccessPoint_Bssids_Bssid& operator=(const AccessPoints_AccessPoint_Bssids_Bssid& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AccessPoints_AccessPoint_Bssids_Bssid(AccessPoints_AccessPoint_Bssids_Bssid&& from) noexcept
    : AccessPoints_AccessPoint_Bssids_Bssid() {
    *this = ::std::move(from);
  }

  inline AccessPoints_AccessPoint_Bssids_Bssid& operator=(AccessPoints_AccessPoint_Bssids_Bssid&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AccessPoints_AccessPoint_Bssids_Bssid& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AccessPoints_AccessPoint_Bssids_Bssid* internal_default_instance() {
    return reinterpret_cast<const AccessPoints_AccessPoint_Bssids_Bssid*>(
               &_AccessPoints_AccessPoint_Bssids_Bssid_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    13;

  void Swap(AccessPoints_AccessPoint_Bssids_Bssid* other);
  friend void swap(AccessPoints_AccessPoint_Bssids_Bssid& a, AccessPoints_AccessPoint_Bssids_Bssid& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AccessPoints_AccessPoint_Bssids_Bssid* New() const PROTOBUF_FINAL { return New(NULL); }

  AccessPoints_AccessPoint_Bssids_Bssid* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AccessPoints_AccessPoint_Bssids_Bssid& from);
  void MergeFrom(const AccessPoints_AccessPoint_Bssids_Bssid& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AccessPoints_AccessPoint_Bssids_Bssid* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef AccessPoints_AccessPoint_Bssids_Bssid_State State;

  // accessors -------------------------------------------------------

  // .openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State state = 110851873 [(.yext.schemapath) = "/access-points/access-point/bssids/bssid/state"];
  bool has_state() const;
  void clear_state();
  static const int kStateFieldNumber = 110851873;
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Bssids_Bssid_State& state() const;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Bssids_Bssid_State* release_state();
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Bssids_Bssid_State* mutable_state();
  void set_allocated_state(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Bssids_Bssid_State* state);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Bssids_Bssid_State* state_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::InitDefaultsAccessPoints_AccessPoint_Bssids_BssidImpl();
};
// -------------------------------------------------------------------

class AccessPoints_AccessPoint_Bssids_BssidKey : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.BssidKey) */ {
 public:
  AccessPoints_AccessPoint_Bssids_BssidKey();
  virtual ~AccessPoints_AccessPoint_Bssids_BssidKey();

  AccessPoints_AccessPoint_Bssids_BssidKey(const AccessPoints_AccessPoint_Bssids_BssidKey& from);

  inline AccessPoints_AccessPoint_Bssids_BssidKey& operator=(const AccessPoints_AccessPoint_Bssids_BssidKey& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AccessPoints_AccessPoint_Bssids_BssidKey(AccessPoints_AccessPoint_Bssids_BssidKey&& from) noexcept
    : AccessPoints_AccessPoint_Bssids_BssidKey() {
    *this = ::std::move(from);
  }

  inline AccessPoints_AccessPoint_Bssids_BssidKey& operator=(AccessPoints_AccessPoint_Bssids_BssidKey&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AccessPoints_AccessPoint_Bssids_BssidKey& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AccessPoints_AccessPoint_Bssids_BssidKey* internal_default_instance() {
    return reinterpret_cast<const AccessPoints_AccessPoint_Bssids_BssidKey*>(
               &_AccessPoints_AccessPoint_Bssids_BssidKey_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    14;

  void Swap(AccessPoints_AccessPoint_Bssids_BssidKey* other);
  friend void swap(AccessPoints_AccessPoint_Bssids_BssidKey& a, AccessPoints_AccessPoint_Bssids_BssidKey& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AccessPoints_AccessPoint_Bssids_BssidKey* New() const PROTOBUF_FINAL { return New(NULL); }

  AccessPoints_AccessPoint_Bssids_BssidKey* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AccessPoints_AccessPoint_Bssids_BssidKey& from);
  void MergeFrom(const AccessPoints_AccessPoint_Bssids_BssidKey& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AccessPoints_AccessPoint_Bssids_BssidKey* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string bssid_key = 1 [(.yext.schemapath) = "/access-points/access-point/bssids/bssid/bssid"];
  void clear_bssid_key();
  static const int kBssidKeyFieldNumber = 1;
  const ::std::string& bssid_key() const;
  void set_bssid_key(const ::std::string& value);
  #if LANG_CXX11
  void set_bssid_key(::std::string&& value);
  #endif
  void set_bssid_key(const char* value);
  void set_bssid_key(const char* value, size_t size);
  ::std::string* mutable_bssid_key();
  ::std::string* release_bssid_key();
  void set_allocated_bssid_key(::std::string* bssid_key);

  // .openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid bssid = 2;
  bool has_bssid() const;
  void clear_bssid();
  static const int kBssidFieldNumber = 2;
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Bssids_Bssid& bssid() const;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Bssids_Bssid* release_bssid();
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Bssids_Bssid* mutable_bssid();
  void set_allocated_bssid(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Bssids_Bssid* bssid);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.BssidKey)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr bssid_key_;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Bssids_Bssid* bssid_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::InitDefaultsAccessPoints_AccessPoint_Bssids_BssidKeyImpl();
};
// -------------------------------------------------------------------

class AccessPoints_AccessPoint_Bssids : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids) */ {
 public:
  AccessPoints_AccessPoint_Bssids();
  virtual ~AccessPoints_AccessPoint_Bssids();

  AccessPoints_AccessPoint_Bssids(const AccessPoints_AccessPoint_Bssids& from);

  inline AccessPoints_AccessPoint_Bssids& operator=(const AccessPoints_AccessPoint_Bssids& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AccessPoints_AccessPoint_Bssids(AccessPoints_AccessPoint_Bssids&& from) noexcept
    : AccessPoints_AccessPoint_Bssids() {
    *this = ::std::move(from);
  }

  inline AccessPoints_AccessPoint_Bssids& operator=(AccessPoints_AccessPoint_Bssids&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AccessPoints_AccessPoint_Bssids& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AccessPoints_AccessPoint_Bssids* internal_default_instance() {
    return reinterpret_cast<const AccessPoints_AccessPoint_Bssids*>(
               &_AccessPoints_AccessPoint_Bssids_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    15;

  void Swap(AccessPoints_AccessPoint_Bssids* other);
  friend void swap(AccessPoints_AccessPoint_Bssids& a, AccessPoints_AccessPoint_Bssids& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AccessPoints_AccessPoint_Bssids* New() const PROTOBUF_FINAL { return New(NULL); }

  AccessPoints_AccessPoint_Bssids* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AccessPoints_AccessPoint_Bssids& from);
  void MergeFrom(const AccessPoints_AccessPoint_Bssids& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AccessPoints_AccessPoint_Bssids* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef AccessPoints_AccessPoint_Bssids_Bssid Bssid;
  typedef AccessPoints_AccessPoint_Bssids_BssidKey BssidKey;

  // accessors -------------------------------------------------------

  // repeated .openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.BssidKey bssid = 476509079 [(.yext.schemapath) = "/access-points/access-point/bssids/bssid"];
  int bssid_size() const;
  void clear_bssid();
  static const int kBssidFieldNumber = 476509079;
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Bssids_BssidKey& bssid(int index) const;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Bssids_BssidKey* mutable_bssid(int index);
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Bssids_BssidKey* add_bssid();
  ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Bssids_BssidKey >*
      mutable_bssid();
  const ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Bssids_BssidKey >&
      bssid() const;

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Bssids_BssidKey > bssid_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::InitDefaultsAccessPoints_AccessPoint_BssidsImpl();
};
// -------------------------------------------------------------------

class AccessPoints_AccessPoint_Radios_Radio_Config : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.Config) */ {
 public:
  AccessPoints_AccessPoint_Radios_Radio_Config();
  virtual ~AccessPoints_AccessPoint_Radios_Radio_Config();

  AccessPoints_AccessPoint_Radios_Radio_Config(const AccessPoints_AccessPoint_Radios_Radio_Config& from);

  inline AccessPoints_AccessPoint_Radios_Radio_Config& operator=(const AccessPoints_AccessPoint_Radios_Radio_Config& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AccessPoints_AccessPoint_Radios_Radio_Config(AccessPoints_AccessPoint_Radios_Radio_Config&& from) noexcept
    : AccessPoints_AccessPoint_Radios_Radio_Config() {
    *this = ::std::move(from);
  }

  inline AccessPoints_AccessPoint_Radios_Radio_Config& operator=(AccessPoints_AccessPoint_Radios_Radio_Config&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AccessPoints_AccessPoint_Radios_Radio_Config& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AccessPoints_AccessPoint_Radios_Radio_Config* internal_default_instance() {
    return reinterpret_cast<const AccessPoints_AccessPoint_Radios_Radio_Config*>(
               &_AccessPoints_AccessPoint_Radios_Radio_Config_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    16;

  void Swap(AccessPoints_AccessPoint_Radios_Radio_Config* other);
  friend void swap(AccessPoints_AccessPoint_Radios_Radio_Config& a, AccessPoints_AccessPoint_Radios_Radio_Config& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AccessPoints_AccessPoint_Radios_Radio_Config* New() const PROTOBUF_FINAL { return New(NULL); }

  AccessPoints_AccessPoint_Radios_Radio_Config* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AccessPoints_AccessPoint_Radios_Radio_Config& from);
  void MergeFrom(const AccessPoints_AccessPoint_Radios_Radio_Config& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AccessPoints_AccessPoint_Radios_Radio_Config* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .ywrapper.UintValue allowed_channels = 377176594 [(.yext.schemapath) = "/access-points/access-point/radios/radio/config/allowed-channels"];
  int allowed_channels_size() const;
  void clear_allowed_channels();
  static const int kAllowedChannelsFieldNumber = 377176594;
  const ::ywrapper::UintValue& allowed_channels(int index) const;
  ::ywrapper::UintValue* mutable_allowed_channels(int index);
  ::ywrapper::UintValue* add_allowed_channels();
  ::google::protobuf::RepeatedPtrField< ::ywrapper::UintValue >*
      mutable_allowed_channels();
  const ::google::protobuf::RepeatedPtrField< ::ywrapper::UintValue >&
      allowed_channels() const;

  // .ywrapper.UintValue transmit_power = 13864931 [(.yext.schemapath) = "/access-points/access-point/radios/radio/config/transmit-power"];
  bool has_transmit_power() const;
  void clear_transmit_power();
  static const int kTransmitPowerFieldNumber = 13864931;
  const ::ywrapper::UintValue& transmit_power() const;
  ::ywrapper::UintValue* release_transmit_power();
  ::ywrapper::UintValue* mutable_transmit_power();
  void set_allocated_transmit_power(::ywrapper::UintValue* transmit_power);

  // .ywrapper.UintValue id = 51792420 [(.yext.schemapath) = "/access-points/access-point/radios/radio/config/id"];
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 51792420;
  const ::ywrapper::UintValue& id() const;
  ::ywrapper::UintValue* release_id();
  ::ywrapper::UintValue* mutable_id();
  void set_allocated_id(::ywrapper::UintValue* id);

  // .ywrapper.BoolValue enabled = 61757750 [(.yext.schemapath) = "/access-points/access-point/radios/radio/config/enabled"];
  bool has_enabled() const;
  void clear_enabled();
  static const int kEnabledFieldNumber = 61757750;
  const ::ywrapper::BoolValue& enabled() const;
  ::ywrapper::BoolValue* release_enabled();
  ::ywrapper::BoolValue* mutable_enabled();
  void set_allocated_enabled(::ywrapper::BoolValue* enabled);

  // .ywrapper.BoolValue scanning = 120410214 [(.yext.schemapath) = "/access-points/access-point/radios/radio/config/scanning"];
  bool has_scanning() const;
  void clear_scanning();
  static const int kScanningFieldNumber = 120410214;
  const ::ywrapper::BoolValue& scanning() const;
  ::ywrapper::BoolValue* release_scanning();
  ::ywrapper::BoolValue* mutable_scanning();
  void set_allocated_scanning(::ywrapper::BoolValue* scanning);

  // .ywrapper.BoolValue dca = 121063389 [(.yext.schemapath) = "/access-points/access-point/radios/radio/config/dca"];
  bool has_dca() const;
  void clear_dca();
  static const int kDcaFieldNumber = 121063389;
  const ::ywrapper::BoolValue& dca() const;
  ::ywrapper::BoolValue* release_dca();
  ::ywrapper::BoolValue* mutable_dca();
  void set_allocated_dca(::ywrapper::BoolValue* dca);

  // .ywrapper.UintValue channel = 142234560 [(.yext.schemapath) = "/access-points/access-point/radios/radio/config/channel"];
  bool has_channel() const;
  void clear_channel();
  static const int kChannelFieldNumber = 142234560;
  const ::ywrapper::UintValue& channel() const;
  ::ywrapper::UintValue* release_channel();
  ::ywrapper::UintValue* mutable_channel();
  void set_allocated_channel(::ywrapper::UintValue* channel);

  // .ywrapper.BoolValue scanning_defer_traffic = 201270109 [(.yext.schemapath) = "/access-points/access-point/radios/radio/config/scanning-defer-traffic"];
  bool has_scanning_defer_traffic() const;
  void clear_scanning_defer_traffic();
  static const int kScanningDeferTrafficFieldNumber = 201270109;
  const ::ywrapper::BoolValue& scanning_defer_traffic() const;
  ::ywrapper::BoolValue* release_scanning_defer_traffic();
  ::ywrapper::BoolValue* mutable_scanning_defer_traffic();
  void set_allocated_scanning_defer_traffic(::ywrapper::BoolValue* scanning_defer_traffic);

  // .ywrapper.UintValue scanning_interval = 227708400 [(.yext.schemapath) = "/access-points/access-point/radios/radio/config/scanning-interval"];
  bool has_scanning_interval() const;
  void clear_scanning_interval();
  static const int kScanningIntervalFieldNumber = 227708400;
  const ::ywrapper::UintValue& scanning_interval() const;
  ::ywrapper::UintValue* release_scanning_interval();
  ::ywrapper::UintValue* mutable_scanning_interval();
  void set_allocated_scanning_interval(::ywrapper::UintValue* scanning_interval);

  // .ywrapper.UintValue scanning_dwell_time = 301364873 [(.yext.schemapath) = "/access-points/access-point/radios/radio/config/scanning-dwell-time"];
  bool has_scanning_dwell_time() const;
  void clear_scanning_dwell_time();
  static const int kScanningDwellTimeFieldNumber = 301364873;
  const ::ywrapper::UintValue& scanning_dwell_time() const;
  ::ywrapper::UintValue* release_scanning_dwell_time();
  ::ywrapper::UintValue* mutable_scanning_dwell_time();
  void set_allocated_scanning_dwell_time(::ywrapper::UintValue* scanning_dwell_time);

  // .ywrapper.UintValue dtp_min = 302371266 [(.yext.schemapath) = "/access-points/access-point/radios/radio/config/dtp-min"];
  bool has_dtp_min() const;
  void clear_dtp_min();
  static const int kDtpMinFieldNumber = 302371266;
  const ::ywrapper::UintValue& dtp_min() const;
  ::ywrapper::UintValue* release_dtp_min();
  ::ywrapper::UintValue* mutable_dtp_min();
  void set_allocated_dtp_min(::ywrapper::UintValue* dtp_min);

  // .ywrapper.UintValue channel_width = 312377251 [(.yext.schemapath) = "/access-points/access-point/radios/radio/config/channel-width"];
  bool has_channel_width() const;
  void clear_channel_width();
  static const int kChannelWidthFieldNumber = 312377251;
  const ::ywrapper::UintValue& channel_width() const;
  ::ywrapper::UintValue* release_channel_width();
  ::ywrapper::UintValue* mutable_channel_width();
  void set_allocated_channel_width(::ywrapper::UintValue* channel_width);

  // .ywrapper.BoolValue dtp = 372714633 [(.yext.schemapath) = "/access-points/access-point/radios/radio/config/dtp"];
  bool has_dtp() const;
  void clear_dtp();
  static const int kDtpFieldNumber = 372714633;
  const ::ywrapper::BoolValue& dtp() const;
  ::ywrapper::BoolValue* release_dtp();
  ::ywrapper::BoolValue* mutable_dtp();
  void set_allocated_dtp(::ywrapper::BoolValue* dtp);

  // .ywrapper.IntValue antenna_gain = 395589676 [(.yext.schemapath) = "/access-points/access-point/radios/radio/config/antenna-gain"];
  bool has_antenna_gain() const;
  void clear_antenna_gain();
  static const int kAntennaGainFieldNumber = 395589676;
  const ::ywrapper::IntValue& antenna_gain() const;
  ::ywrapper::IntValue* release_antenna_gain();
  ::ywrapper::IntValue* mutable_antenna_gain();
  void set_allocated_antenna_gain(::ywrapper::IntValue* antenna_gain);

  // .ywrapper.UintValue dtp_max = 436592188 [(.yext.schemapath) = "/access-points/access-point/radios/radio/config/dtp-max"];
  bool has_dtp_max() const;
  void clear_dtp_max();
  static const int kDtpMaxFieldNumber = 436592188;
  const ::ywrapper::UintValue& dtp_max() const;
  ::ywrapper::UintValue* release_dtp_max();
  ::ywrapper::UintValue* mutable_dtp_max();
  void set_allocated_dtp_max(::ywrapper::UintValue* dtp_max);

  // .ywrapper.UintValue scanning_defer_clients = 508920778 [(.yext.schemapath) = "/access-points/access-point/radios/radio/config/scanning-defer-clients"];
  bool has_scanning_defer_clients() const;
  void clear_scanning_defer_clients();
  static const int kScanningDeferClientsFieldNumber = 508920778;
  const ::ywrapper::UintValue& scanning_defer_clients() const;
  ::ywrapper::UintValue* release_scanning_defer_clients();
  ::ywrapper::UintValue* mutable_scanning_defer_clients();
  void set_allocated_scanning_defer_clients(::ywrapper::UintValue* scanning_defer_clients);

  // .openconfig.enums.OpenconfigWifiTypesOPERATINGFREQUENCY operating_frequency = 326739705 [(.yext.schemapath) = "/access-points/access-point/radios/radio/config/operating-frequency"];
  void clear_operating_frequency();
  static const int kOperatingFrequencyFieldNumber = 326739705;
  ::openconfig::enums::OpenconfigWifiTypesOPERATINGFREQUENCY operating_frequency() const;
  void set_operating_frequency(::openconfig::enums::OpenconfigWifiTypesOPERATINGFREQUENCY value);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.Config)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::ywrapper::UintValue > allowed_channels_;
  ::ywrapper::UintValue* transmit_power_;
  ::ywrapper::UintValue* id_;
  ::ywrapper::BoolValue* enabled_;
  ::ywrapper::BoolValue* scanning_;
  ::ywrapper::BoolValue* dca_;
  ::ywrapper::UintValue* channel_;
  ::ywrapper::BoolValue* scanning_defer_traffic_;
  ::ywrapper::UintValue* scanning_interval_;
  ::ywrapper::UintValue* scanning_dwell_time_;
  ::ywrapper::UintValue* dtp_min_;
  ::ywrapper::UintValue* channel_width_;
  ::ywrapper::BoolValue* dtp_;
  ::ywrapper::IntValue* antenna_gain_;
  ::ywrapper::UintValue* dtp_max_;
  ::ywrapper::UintValue* scanning_defer_clients_;
  int operating_frequency_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::InitDefaultsAccessPoints_AccessPoint_Radios_Radio_ConfigImpl();
};
// -------------------------------------------------------------------

class AccessPoints_AccessPoint_Radios_Radio_Neighbors_Neighbor_State : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.Neighbors.Neighbor.State) */ {
 public:
  AccessPoints_AccessPoint_Radios_Radio_Neighbors_Neighbor_State();
  virtual ~AccessPoints_AccessPoint_Radios_Radio_Neighbors_Neighbor_State();

  AccessPoints_AccessPoint_Radios_Radio_Neighbors_Neighbor_State(const AccessPoints_AccessPoint_Radios_Radio_Neighbors_Neighbor_State& from);

  inline AccessPoints_AccessPoint_Radios_Radio_Neighbors_Neighbor_State& operator=(const AccessPoints_AccessPoint_Radios_Radio_Neighbors_Neighbor_State& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AccessPoints_AccessPoint_Radios_Radio_Neighbors_Neighbor_State(AccessPoints_AccessPoint_Radios_Radio_Neighbors_Neighbor_State&& from) noexcept
    : AccessPoints_AccessPoint_Radios_Radio_Neighbors_Neighbor_State() {
    *this = ::std::move(from);
  }

  inline AccessPoints_AccessPoint_Radios_Radio_Neighbors_Neighbor_State& operator=(AccessPoints_AccessPoint_Radios_Radio_Neighbors_Neighbor_State&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AccessPoints_AccessPoint_Radios_Radio_Neighbors_Neighbor_State& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AccessPoints_AccessPoint_Radios_Radio_Neighbors_Neighbor_State* internal_default_instance() {
    return reinterpret_cast<const AccessPoints_AccessPoint_Radios_Radio_Neighbors_Neighbor_State*>(
               &_AccessPoints_AccessPoint_Radios_Radio_Neighbors_Neighbor_State_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    17;

  void Swap(AccessPoints_AccessPoint_Radios_Radio_Neighbors_Neighbor_State* other);
  friend void swap(AccessPoints_AccessPoint_Radios_Radio_Neighbors_Neighbor_State& a, AccessPoints_AccessPoint_Radios_Radio_Neighbors_Neighbor_State& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AccessPoints_AccessPoint_Radios_Radio_Neighbors_Neighbor_State* New() const PROTOBUF_FINAL { return New(NULL); }

  AccessPoints_AccessPoint_Radios_Radio_Neighbors_Neighbor_State* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AccessPoints_AccessPoint_Radios_Radio_Neighbors_Neighbor_State& from);
  void MergeFrom(const AccessPoints_AccessPoint_Radios_Radio_Neighbors_Neighbor_State& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AccessPoints_AccessPoint_Radios_Radio_Neighbors_Neighbor_State* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .ywrapper.UintValue last_seen = 4425411 [(.yext.schemapath) = "/access-points/access-point/radios/radio/neighbors/neighbor/state/last-seen"];
  bool has_last_seen() const;
  void clear_last_seen();
  static const int kLastSeenFieldNumber = 4425411;
  const ::ywrapper::UintValue& last_seen() const;
  ::ywrapper::UintValue* release_last_seen();
  ::ywrapper::UintValue* mutable_last_seen();
  void set_allocated_last_seen(::ywrapper::UintValue* last_seen);

  // .ywrapper.IntValue rssi = 162047120 [(.yext.schemapath) = "/access-points/access-point/radios/radio/neighbors/neighbor/state/rssi"];
  bool has_rssi() const;
  void clear_rssi();
  static const int kRssiFieldNumber = 162047120;
  const ::ywrapper::IntValue& rssi() const;
  ::ywrapper::IntValue* release_rssi();
  ::ywrapper::IntValue* mutable_rssi();
  void set_allocated_rssi(::ywrapper::IntValue* rssi);

  // .ywrapper.StringValue ssid = 320899124 [(.yext.schemapath) = "/access-points/access-point/radios/radio/neighbors/neighbor/state/ssid"];
  bool has_ssid() const;
  void clear_ssid();
  static const int kSsidFieldNumber = 320899124;
  const ::ywrapper::StringValue& ssid() const;
  ::ywrapper::StringValue* release_ssid();
  ::ywrapper::StringValue* mutable_ssid();
  void set_allocated_ssid(::ywrapper::StringValue* ssid);

  // .ywrapper.StringValue bssid = 401305860 [(.yext.schemapath) = "/access-points/access-point/radios/radio/neighbors/neighbor/state/bssid"];
  bool has_bssid() const;
  void clear_bssid();
  static const int kBssidFieldNumber = 401305860;
  const ::ywrapper::StringValue& bssid() const;
  ::ywrapper::StringValue* release_bssid();
  ::ywrapper::StringValue* mutable_bssid();
  void set_allocated_bssid(::ywrapper::StringValue* bssid);

  // .ywrapper.UintValue primary_channel = 458175343 [(.yext.schemapath) = "/access-points/access-point/radios/radio/neighbors/neighbor/state/primary-channel"];
  bool has_primary_channel() const;
  void clear_primary_channel();
  static const int kPrimaryChannelFieldNumber = 458175343;
  const ::ywrapper::UintValue& primary_channel() const;
  ::ywrapper::UintValue* release_primary_channel();
  ::ywrapper::UintValue* mutable_primary_channel();
  void set_allocated_primary_channel(::ywrapper::UintValue* primary_channel);

  // .ywrapper.UintValue channel = 528074318 [(.yext.schemapath) = "/access-points/access-point/radios/radio/neighbors/neighbor/state/channel"];
  bool has_channel() const;
  void clear_channel();
  static const int kChannelFieldNumber = 528074318;
  const ::ywrapper::UintValue& channel() const;
  ::ywrapper::UintValue* release_channel();
  ::ywrapper::UintValue* mutable_channel();
  void set_allocated_channel(::ywrapper::UintValue* channel);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.Neighbors.Neighbor.State)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ywrapper::UintValue* last_seen_;
  ::ywrapper::IntValue* rssi_;
  ::ywrapper::StringValue* ssid_;
  ::ywrapper::StringValue* bssid_;
  ::ywrapper::UintValue* primary_channel_;
  ::ywrapper::UintValue* channel_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::InitDefaultsAccessPoints_AccessPoint_Radios_Radio_Neighbors_Neighbor_StateImpl();
};
// -------------------------------------------------------------------

class AccessPoints_AccessPoint_Radios_Radio_Neighbors_Neighbor : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.Neighbors.Neighbor) */ {
 public:
  AccessPoints_AccessPoint_Radios_Radio_Neighbors_Neighbor();
  virtual ~AccessPoints_AccessPoint_Radios_Radio_Neighbors_Neighbor();

  AccessPoints_AccessPoint_Radios_Radio_Neighbors_Neighbor(const AccessPoints_AccessPoint_Radios_Radio_Neighbors_Neighbor& from);

  inline AccessPoints_AccessPoint_Radios_Radio_Neighbors_Neighbor& operator=(const AccessPoints_AccessPoint_Radios_Radio_Neighbors_Neighbor& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AccessPoints_AccessPoint_Radios_Radio_Neighbors_Neighbor(AccessPoints_AccessPoint_Radios_Radio_Neighbors_Neighbor&& from) noexcept
    : AccessPoints_AccessPoint_Radios_Radio_Neighbors_Neighbor() {
    *this = ::std::move(from);
  }

  inline AccessPoints_AccessPoint_Radios_Radio_Neighbors_Neighbor& operator=(AccessPoints_AccessPoint_Radios_Radio_Neighbors_Neighbor&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AccessPoints_AccessPoint_Radios_Radio_Neighbors_Neighbor& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AccessPoints_AccessPoint_Radios_Radio_Neighbors_Neighbor* internal_default_instance() {
    return reinterpret_cast<const AccessPoints_AccessPoint_Radios_Radio_Neighbors_Neighbor*>(
               &_AccessPoints_AccessPoint_Radios_Radio_Neighbors_Neighbor_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    18;

  void Swap(AccessPoints_AccessPoint_Radios_Radio_Neighbors_Neighbor* other);
  friend void swap(AccessPoints_AccessPoint_Radios_Radio_Neighbors_Neighbor& a, AccessPoints_AccessPoint_Radios_Radio_Neighbors_Neighbor& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AccessPoints_AccessPoint_Radios_Radio_Neighbors_Neighbor* New() const PROTOBUF_FINAL { return New(NULL); }

  AccessPoints_AccessPoint_Radios_Radio_Neighbors_Neighbor* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AccessPoints_AccessPoint_Radios_Radio_Neighbors_Neighbor& from);
  void MergeFrom(const AccessPoints_AccessPoint_Radios_Radio_Neighbors_Neighbor& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AccessPoints_AccessPoint_Radios_Radio_Neighbors_Neighbor* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef AccessPoints_AccessPoint_Radios_Radio_Neighbors_Neighbor_State State;

  // accessors -------------------------------------------------------

  // .openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.Neighbors.Neighbor.State state = 508862922 [(.yext.schemapath) = "/access-points/access-point/radios/radio/neighbors/neighbor/state"];
  bool has_state() const;
  void clear_state();
  static const int kStateFieldNumber = 508862922;
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Radios_Radio_Neighbors_Neighbor_State& state() const;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Radios_Radio_Neighbors_Neighbor_State* release_state();
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Radios_Radio_Neighbors_Neighbor_State* mutable_state();
  void set_allocated_state(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Radios_Radio_Neighbors_Neighbor_State* state);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.Neighbors.Neighbor)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Radios_Radio_Neighbors_Neighbor_State* state_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::InitDefaultsAccessPoints_AccessPoint_Radios_Radio_Neighbors_NeighborImpl();
};
// -------------------------------------------------------------------

class AccessPoints_AccessPoint_Radios_Radio_Neighbors_NeighborKey : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.Neighbors.NeighborKey) */ {
 public:
  AccessPoints_AccessPoint_Radios_Radio_Neighbors_NeighborKey();
  virtual ~AccessPoints_AccessPoint_Radios_Radio_Neighbors_NeighborKey();

  AccessPoints_AccessPoint_Radios_Radio_Neighbors_NeighborKey(const AccessPoints_AccessPoint_Radios_Radio_Neighbors_NeighborKey& from);

  inline AccessPoints_AccessPoint_Radios_Radio_Neighbors_NeighborKey& operator=(const AccessPoints_AccessPoint_Radios_Radio_Neighbors_NeighborKey& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AccessPoints_AccessPoint_Radios_Radio_Neighbors_NeighborKey(AccessPoints_AccessPoint_Radios_Radio_Neighbors_NeighborKey&& from) noexcept
    : AccessPoints_AccessPoint_Radios_Radio_Neighbors_NeighborKey() {
    *this = ::std::move(from);
  }

  inline AccessPoints_AccessPoint_Radios_Radio_Neighbors_NeighborKey& operator=(AccessPoints_AccessPoint_Radios_Radio_Neighbors_NeighborKey&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AccessPoints_AccessPoint_Radios_Radio_Neighbors_NeighborKey& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AccessPoints_AccessPoint_Radios_Radio_Neighbors_NeighborKey* internal_default_instance() {
    return reinterpret_cast<const AccessPoints_AccessPoint_Radios_Radio_Neighbors_NeighborKey*>(
               &_AccessPoints_AccessPoint_Radios_Radio_Neighbors_NeighborKey_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    19;

  void Swap(AccessPoints_AccessPoint_Radios_Radio_Neighbors_NeighborKey* other);
  friend void swap(AccessPoints_AccessPoint_Radios_Radio_Neighbors_NeighborKey& a, AccessPoints_AccessPoint_Radios_Radio_Neighbors_NeighborKey& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AccessPoints_AccessPoint_Radios_Radio_Neighbors_NeighborKey* New() const PROTOBUF_FINAL { return New(NULL); }

  AccessPoints_AccessPoint_Radios_Radio_Neighbors_NeighborKey* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AccessPoints_AccessPoint_Radios_Radio_Neighbors_NeighborKey& from);
  void MergeFrom(const AccessPoints_AccessPoint_Radios_Radio_Neighbors_NeighborKey& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AccessPoints_AccessPoint_Radios_Radio_Neighbors_NeighborKey* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string bssid = 1 [(.yext.schemapath) = "/access-points/access-point/radios/radio/neighbors/neighbor/bssid"];
  void clear_bssid();
  static const int kBssidFieldNumber = 1;
  const ::std::string& bssid() const;
  void set_bssid(const ::std::string& value);
  #if LANG_CXX11
  void set_bssid(::std::string&& value);
  #endif
  void set_bssid(const char* value);
  void set_bssid(const char* value, size_t size);
  ::std::string* mutable_bssid();
  ::std::string* release_bssid();
  void set_allocated_bssid(::std::string* bssid);

  // .openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.Neighbors.Neighbor neighbor = 2;
  bool has_neighbor() const;
  void clear_neighbor();
  static const int kNeighborFieldNumber = 2;
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Radios_Radio_Neighbors_Neighbor& neighbor() const;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Radios_Radio_Neighbors_Neighbor* release_neighbor();
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Radios_Radio_Neighbors_Neighbor* mutable_neighbor();
  void set_allocated_neighbor(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Radios_Radio_Neighbors_Neighbor* neighbor);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.Neighbors.NeighborKey)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr bssid_;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Radios_Radio_Neighbors_Neighbor* neighbor_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::InitDefaultsAccessPoints_AccessPoint_Radios_Radio_Neighbors_NeighborKeyImpl();
};
// -------------------------------------------------------------------

class AccessPoints_AccessPoint_Radios_Radio_Neighbors : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.Neighbors) */ {
 public:
  AccessPoints_AccessPoint_Radios_Radio_Neighbors();
  virtual ~AccessPoints_AccessPoint_Radios_Radio_Neighbors();

  AccessPoints_AccessPoint_Radios_Radio_Neighbors(const AccessPoints_AccessPoint_Radios_Radio_Neighbors& from);

  inline AccessPoints_AccessPoint_Radios_Radio_Neighbors& operator=(const AccessPoints_AccessPoint_Radios_Radio_Neighbors& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AccessPoints_AccessPoint_Radios_Radio_Neighbors(AccessPoints_AccessPoint_Radios_Radio_Neighbors&& from) noexcept
    : AccessPoints_AccessPoint_Radios_Radio_Neighbors() {
    *this = ::std::move(from);
  }

  inline AccessPoints_AccessPoint_Radios_Radio_Neighbors& operator=(AccessPoints_AccessPoint_Radios_Radio_Neighbors&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AccessPoints_AccessPoint_Radios_Radio_Neighbors& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AccessPoints_AccessPoint_Radios_Radio_Neighbors* internal_default_instance() {
    return reinterpret_cast<const AccessPoints_AccessPoint_Radios_Radio_Neighbors*>(
               &_AccessPoints_AccessPoint_Radios_Radio_Neighbors_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    20;

  void Swap(AccessPoints_AccessPoint_Radios_Radio_Neighbors* other);
  friend void swap(AccessPoints_AccessPoint_Radios_Radio_Neighbors& a, AccessPoints_AccessPoint_Radios_Radio_Neighbors& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AccessPoints_AccessPoint_Radios_Radio_Neighbors* New() const PROTOBUF_FINAL { return New(NULL); }

  AccessPoints_AccessPoint_Radios_Radio_Neighbors* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AccessPoints_AccessPoint_Radios_Radio_Neighbors& from);
  void MergeFrom(const AccessPoints_AccessPoint_Radios_Radio_Neighbors& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AccessPoints_AccessPoint_Radios_Radio_Neighbors* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef AccessPoints_AccessPoint_Radios_Radio_Neighbors_Neighbor Neighbor;
  typedef AccessPoints_AccessPoint_Radios_Radio_Neighbors_NeighborKey NeighborKey;

  // accessors -------------------------------------------------------

  // repeated .openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.Neighbors.NeighborKey neighbor = 69564256 [(.yext.schemapath) = "/access-points/access-point/radios/radio/neighbors/neighbor"];
  int neighbor_size() const;
  void clear_neighbor();
  static const int kNeighborFieldNumber = 69564256;
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Radios_Radio_Neighbors_NeighborKey& neighbor(int index) const;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Radios_Radio_Neighbors_NeighborKey* mutable_neighbor(int index);
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Radios_Radio_Neighbors_NeighborKey* add_neighbor();
  ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Radios_Radio_Neighbors_NeighborKey >*
      mutable_neighbor();
  const ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Radios_Radio_Neighbors_NeighborKey >&
      neighbor() const;

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.Neighbors)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Radios_Radio_Neighbors_NeighborKey > neighbor_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::InitDefaultsAccessPoints_AccessPoint_Radios_Radio_NeighborsImpl();
};
// -------------------------------------------------------------------

class AccessPoints_AccessPoint_Radios_Radio_State_Counters : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.State.Counters) */ {
 public:
  AccessPoints_AccessPoint_Radios_Radio_State_Counters();
  virtual ~AccessPoints_AccessPoint_Radios_Radio_State_Counters();

  AccessPoints_AccessPoint_Radios_Radio_State_Counters(const AccessPoints_AccessPoint_Radios_Radio_State_Counters& from);

  inline AccessPoints_AccessPoint_Radios_Radio_State_Counters& operator=(const AccessPoints_AccessPoint_Radios_Radio_State_Counters& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AccessPoints_AccessPoint_Radios_Radio_State_Counters(AccessPoints_AccessPoint_Radios_Radio_State_Counters&& from) noexcept
    : AccessPoints_AccessPoint_Radios_Radio_State_Counters() {
    *this = ::std::move(from);
  }

  inline AccessPoints_AccessPoint_Radios_Radio_State_Counters& operator=(AccessPoints_AccessPoint_Radios_Radio_State_Counters&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AccessPoints_AccessPoint_Radios_Radio_State_Counters& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AccessPoints_AccessPoint_Radios_Radio_State_Counters* internal_default_instance() {
    return reinterpret_cast<const AccessPoints_AccessPoint_Radios_Radio_State_Counters*>(
               &_AccessPoints_AccessPoint_Radios_Radio_State_Counters_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    21;

  void Swap(AccessPoints_AccessPoint_Radios_Radio_State_Counters* other);
  friend void swap(AccessPoints_AccessPoint_Radios_Radio_State_Counters& a, AccessPoints_AccessPoint_Radios_Radio_State_Counters& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AccessPoints_AccessPoint_Radios_Radio_State_Counters* New() const PROTOBUF_FINAL { return New(NULL); }

  AccessPoints_AccessPoint_Radios_Radio_State_Counters* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AccessPoints_AccessPoint_Radios_Radio_State_Counters& from);
  void MergeFrom(const AccessPoints_AccessPoint_Radios_Radio_State_Counters& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AccessPoints_AccessPoint_Radios_Radio_State_Counters* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .ywrapper.IntValue noise_floor = 382544921 [(.yext.schemapath) = "/access-points/access-point/radios/radio/state/counters/noise-floor"];
  bool has_noise_floor() const;
  void clear_noise_floor();
  static const int kNoiseFloorFieldNumber = 382544921;
  const ::ywrapper::IntValue& noise_floor() const;
  ::ywrapper::IntValue* release_noise_floor();
  ::ywrapper::IntValue* mutable_noise_floor();
  void set_allocated_noise_floor(::ywrapper::IntValue* noise_floor);

  // .ywrapper.UintValue failed_fcs_frames = 471565761 [(.yext.schemapath) = "/access-points/access-point/radios/radio/state/counters/failed-fcs-frames"];
  bool has_failed_fcs_frames() const;
  void clear_failed_fcs_frames();
  static const int kFailedFcsFramesFieldNumber = 471565761;
  const ::ywrapper::UintValue& failed_fcs_frames() const;
  ::ywrapper::UintValue* release_failed_fcs_frames();
  ::ywrapper::UintValue* mutable_failed_fcs_frames();
  void set_allocated_failed_fcs_frames(::ywrapper::UintValue* failed_fcs_frames);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.State.Counters)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ywrapper::IntValue* noise_floor_;
  ::ywrapper::UintValue* failed_fcs_frames_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::InitDefaultsAccessPoints_AccessPoint_Radios_Radio_State_CountersImpl();
};
// -------------------------------------------------------------------

class AccessPoints_AccessPoint_Radios_Radio_State : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.State) */ {
 public:
  AccessPoints_AccessPoint_Radios_Radio_State();
  virtual ~AccessPoints_AccessPoint_Radios_Radio_State();

  AccessPoints_AccessPoint_Radios_Radio_State(const AccessPoints_AccessPoint_Radios_Radio_State& from);

  inline AccessPoints_AccessPoint_Radios_Radio_State& operator=(const AccessPoints_AccessPoint_Radios_Radio_State& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AccessPoints_AccessPoint_Radios_Radio_State(AccessPoints_AccessPoint_Radios_Radio_State&& from) noexcept
    : AccessPoints_AccessPoint_Radios_Radio_State() {
    *this = ::std::move(from);
  }

  inline AccessPoints_AccessPoint_Radios_Radio_State& operator=(AccessPoints_AccessPoint_Radios_Radio_State&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AccessPoints_AccessPoint_Radios_Radio_State& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AccessPoints_AccessPoint_Radios_Radio_State* internal_default_instance() {
    return reinterpret_cast<const AccessPoints_AccessPoint_Radios_Radio_State*>(
               &_AccessPoints_AccessPoint_Radios_Radio_State_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    22;

  void Swap(AccessPoints_AccessPoint_Radios_Radio_State* other);
  friend void swap(AccessPoints_AccessPoint_Radios_Radio_State& a, AccessPoints_AccessPoint_Radios_Radio_State& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AccessPoints_AccessPoint_Radios_Radio_State* New() const PROTOBUF_FINAL { return New(NULL); }

  AccessPoints_AccessPoint_Radios_Radio_State* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AccessPoints_AccessPoint_Radios_Radio_State& from);
  void MergeFrom(const AccessPoints_AccessPoint_Radios_Radio_State& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AccessPoints_AccessPoint_Radios_Radio_State* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef AccessPoints_AccessPoint_Radios_Radio_State_Counters Counters;

  // accessors -------------------------------------------------------

  // repeated .ywrapper.UintValue allowed_channels = 262666109 [(.yext.schemapath) = "/access-points/access-point/radios/radio/state/allowed-channels"];
  int allowed_channels_size() const;
  void clear_allowed_channels();
  static const int kAllowedChannelsFieldNumber = 262666109;
  const ::ywrapper::UintValue& allowed_channels(int index) const;
  ::ywrapper::UintValue* mutable_allowed_channels(int index);
  ::ywrapper::UintValue* add_allowed_channels();
  ::google::protobuf::RepeatedPtrField< ::ywrapper::UintValue >*
      mutable_allowed_channels();
  const ::google::protobuf::RepeatedPtrField< ::ywrapper::UintValue >&
      allowed_channels() const;

  // .ywrapper.IntValue antenna_gain = 57872087 [(.yext.schemapath) = "/access-points/access-point/radios/radio/state/antenna-gain"];
  bool has_antenna_gain() const;
  void clear_antenna_gain();
  static const int kAntennaGainFieldNumber = 57872087;
  const ::ywrapper::IntValue& antenna_gain() const;
  ::ywrapper::IntValue* release_antenna_gain();
  ::ywrapper::IntValue* mutable_antenna_gain();
  void set_allocated_antenna_gain(::ywrapper::IntValue* antenna_gain);

  // .openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.State.Counters counters = 85857871 [(.yext.schemapath) = "/access-points/access-point/radios/radio/state/counters"];
  bool has_counters() const;
  void clear_counters();
  static const int kCountersFieldNumber = 85857871;
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Radios_Radio_State_Counters& counters() const;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Radios_Radio_State_Counters* release_counters();
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Radios_Radio_State_Counters* mutable_counters();
  void set_allocated_counters(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Radios_Radio_State_Counters* counters);

  // .ywrapper.UintValue transmit_power = 109974624 [(.yext.schemapath) = "/access-points/access-point/radios/radio/state/transmit-power"];
  bool has_transmit_power() const;
  void clear_transmit_power();
  static const int kTransmitPowerFieldNumber = 109974624;
  const ::ywrapper::UintValue& transmit_power() const;
  ::ywrapper::UintValue* release_transmit_power();
  ::ywrapper::UintValue* mutable_transmit_power();
  void set_allocated_transmit_power(::ywrapper::UintValue* transmit_power);

  // .ywrapper.UintValue dtp_max = 114225861 [(.yext.schemapath) = "/access-points/access-point/radios/radio/state/dtp-max"];
  bool has_dtp_max() const;
  void clear_dtp_max();
  static const int kDtpMaxFieldNumber = 114225861;
  const ::ywrapper::UintValue& dtp_max() const;
  ::ywrapper::UintValue* release_dtp_max();
  ::ywrapper::UintValue* mutable_dtp_max();
  void set_allocated_dtp_max(::ywrapper::UintValue* dtp_max);

  // .ywrapper.BoolValue enabled = 129422531 [(.yext.schemapath) = "/access-points/access-point/radios/radio/state/enabled"];
  bool has_enabled() const;
  void clear_enabled();
  static const int kEnabledFieldNumber = 129422531;
  const ::ywrapper::BoolValue& enabled() const;
  ::ywrapper::BoolValue* release_enabled();
  ::ywrapper::BoolValue* mutable_enabled();
  void set_allocated_enabled(::ywrapper::BoolValue* enabled);

  // .ywrapper.BoolValue scanning = 140421665 [(.yext.schemapath) = "/access-points/access-point/radios/radio/state/scanning"];
  bool has_scanning() const;
  void clear_scanning();
  static const int kScanningFieldNumber = 140421665;
  const ::ywrapper::BoolValue& scanning() const;
  ::ywrapper::BoolValue* release_scanning();
  ::ywrapper::BoolValue* mutable_scanning();
  void set_allocated_scanning(::ywrapper::BoolValue* scanning);

  // .ywrapper.UintValue scanning_defer_clients = 144804173 [(.yext.schemapath) = "/access-points/access-point/radios/radio/state/scanning-defer-clients"];
  bool has_scanning_defer_clients() const;
  void clear_scanning_defer_clients();
  static const int kScanningDeferClientsFieldNumber = 144804173;
  const ::ywrapper::UintValue& scanning_defer_clients() const;
  ::ywrapper::UintValue* release_scanning_defer_clients();
  ::ywrapper::UintValue* mutable_scanning_defer_clients();
  void set_allocated_scanning_defer_clients(::ywrapper::UintValue* scanning_defer_clients);

  // .ywrapper.UintValue channel_width = 145442034 [(.yext.schemapath) = "/access-points/access-point/radios/radio/state/channel-width"];
  bool has_channel_width() const;
  void clear_channel_width();
  static const int kChannelWidthFieldNumber = 145442034;
  const ::ywrapper::UintValue& channel_width() const;
  ::ywrapper::UintValue* release_channel_width();
  ::ywrapper::UintValue* mutable_channel_width();
  void set_allocated_channel_width(::ywrapper::UintValue* channel_width);

  // .ywrapper.UintValue rx_noise_channel_utilization = 169818606 [(.yext.schemapath) = "/access-points/access-point/radios/radio/state/rx-noise-channel-utilization"];
  bool has_rx_noise_channel_utilization() const;
  void clear_rx_noise_channel_utilization();
  static const int kRxNoiseChannelUtilizationFieldNumber = 169818606;
  const ::ywrapper::UintValue& rx_noise_channel_utilization() const;
  ::ywrapper::UintValue* release_rx_noise_channel_utilization();
  ::ywrapper::UintValue* mutable_rx_noise_channel_utilization();
  void set_allocated_rx_noise_channel_utilization(::ywrapper::UintValue* rx_noise_channel_utilization);

  // .ywrapper.UintValue tx_dot11_channel_utilization = 200526165 [(.yext.schemapath) = "/access-points/access-point/radios/radio/state/tx-dot11-channel-utilization"];
  bool has_tx_dot11_channel_utilization() const;
  void clear_tx_dot11_channel_utilization();
  static const int kTxDot11ChannelUtilizationFieldNumber = 200526165;
  const ::ywrapper::UintValue& tx_dot11_channel_utilization() const;
  ::ywrapper::UintValue* release_tx_dot11_channel_utilization();
  ::ywrapper::UintValue* mutable_tx_dot11_channel_utilization();
  void set_allocated_tx_dot11_channel_utilization(::ywrapper::UintValue* tx_dot11_channel_utilization);

  // .ywrapper.BoolValue scanning_defer_traffic = 212283074 [(.yext.schemapath) = "/access-points/access-point/radios/radio/state/scanning-defer-traffic"];
  bool has_scanning_defer_traffic() const;
  void clear_scanning_defer_traffic();
  static const int kScanningDeferTrafficFieldNumber = 212283074;
  const ::ywrapper::BoolValue& scanning_defer_traffic() const;
  ::ywrapper::BoolValue* release_scanning_defer_traffic();
  ::ywrapper::BoolValue* mutable_scanning_defer_traffic();
  void set_allocated_scanning_defer_traffic(::ywrapper::BoolValue* scanning_defer_traffic);

  // .ywrapper.UintValue dfs_hit_time = 217001949 [(.yext.schemapath) = "/access-points/access-point/radios/radio/state/dfs-hit-time"];
  bool has_dfs_hit_time() const;
  void clear_dfs_hit_time();
  static const int kDfsHitTimeFieldNumber = 217001949;
  const ::ywrapper::UintValue& dfs_hit_time() const;
  ::ywrapper::UintValue* release_dfs_hit_time();
  ::ywrapper::UintValue* mutable_dfs_hit_time();
  void set_allocated_dfs_hit_time(::ywrapper::UintValue* dfs_hit_time);

  // .ywrapper.BoolValue dca = 220593508 [(.yext.schemapath) = "/access-points/access-point/radios/radio/state/dca"];
  bool has_dca() const;
  void clear_dca();
  static const int kDcaFieldNumber = 220593508;
  const ::ywrapper::BoolValue& dca() const;
  ::ywrapper::BoolValue* release_dca();
  ::ywrapper::BoolValue* mutable_dca();
  void set_allocated_dca(::ywrapper::BoolValue* dca);

  // .ywrapper.UintValue scanning_interval = 224778997 [(.yext.schemapath) = "/access-points/access-point/radios/radio/state/scanning-interval"];
  bool has_scanning_interval() const;
  void clear_scanning_interval();
  static const int kScanningIntervalFieldNumber = 224778997;
  const ::ywrapper::UintValue& scanning_interval() const;
  ::ywrapper::UintValue* release_scanning_interval();
  ::ywrapper::UintValue* mutable_scanning_interval();
  void set_allocated_scanning_interval(::ywrapper::UintValue* scanning_interval);

  // .ywrapper.UintValue channel = 248347633 [(.yext.schemapath) = "/access-points/access-point/radios/radio/state/channel"];
  bool has_channel() const;
  void clear_channel();
  static const int kChannelFieldNumber = 248347633;
  const ::ywrapper::UintValue& channel() const;
  ::ywrapper::UintValue* release_channel();
  ::ywrapper::UintValue* mutable_channel();
  void set_allocated_channel(::ywrapper::UintValue* channel);

  // .ywrapper.StringValue base_radio_mac = 260970223 [(.yext.schemapath) = "/access-points/access-point/radios/radio/state/base-radio-mac"];
  bool has_base_radio_mac() const;
  void clear_base_radio_mac();
  static const int kBaseRadioMacFieldNumber = 260970223;
  const ::ywrapper::StringValue& base_radio_mac() const;
  ::ywrapper::StringValue* release_base_radio_mac();
  ::ywrapper::StringValue* mutable_base_radio_mac();
  void set_allocated_base_radio_mac(::ywrapper::StringValue* base_radio_mac);

  // .ywrapper.UintValue scanning_dwell_time = 271355480 [(.yext.schemapath) = "/access-points/access-point/radios/radio/state/scanning-dwell-time"];
  bool has_scanning_dwell_time() const;
  void clear_scanning_dwell_time();
  static const int kScanningDwellTimeFieldNumber = 271355480;
  const ::ywrapper::UintValue& scanning_dwell_time() const;
  ::ywrapper::UintValue* release_scanning_dwell_time();
  ::ywrapper::UintValue* mutable_scanning_dwell_time();
  void set_allocated_scanning_dwell_time(::ywrapper::UintValue* scanning_dwell_time);

  // .ywrapper.UintValue rx_dot11_channel_utilization = 292487107 [(.yext.schemapath) = "/access-points/access-point/radios/radio/state/rx-dot11-channel-utilization"];
  bool has_rx_dot11_channel_utilization() const;
  void clear_rx_dot11_channel_utilization();
  static const int kRxDot11ChannelUtilizationFieldNumber = 292487107;
  const ::ywrapper::UintValue& rx_dot11_channel_utilization() const;
  ::ywrapper::UintValue* release_rx_dot11_channel_utilization();
  ::ywrapper::UintValue* mutable_rx_dot11_channel_utilization();
  void set_allocated_rx_dot11_channel_utilization(::ywrapper::UintValue* rx_dot11_channel_utilization);

  // .ywrapper.UintValue total_channel_utilization = 304999823 [(.yext.schemapath) = "/access-points/access-point/radios/radio/state/total-channel-utilization"];
  bool has_total_channel_utilization() const;
  void clear_total_channel_utilization();
  static const int kTotalChannelUtilizationFieldNumber = 304999823;
  const ::ywrapper::UintValue& total_channel_utilization() const;
  ::ywrapper::UintValue* release_total_channel_utilization();
  ::ywrapper::UintValue* mutable_total_channel_utilization();
  void set_allocated_total_channel_utilization(::ywrapper::UintValue* total_channel_utilization);

  // .ywrapper.BoolValue dtp = 371592000 [(.yext.schemapath) = "/access-points/access-point/radios/radio/state/dtp"];
  bool has_dtp() const;
  void clear_dtp();
  static const int kDtpFieldNumber = 371592000;
  const ::ywrapper::BoolValue& dtp() const;
  ::ywrapper::BoolValue* release_dtp();
  ::ywrapper::BoolValue* mutable_dtp();
  void set_allocated_dtp(::ywrapper::BoolValue* dtp);

  // .ywrapper.UintValue id = 440497527 [(.yext.schemapath) = "/access-points/access-point/radios/radio/state/id"];
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 440497527;
  const ::ywrapper::UintValue& id() const;
  ::ywrapper::UintValue* release_id();
  ::ywrapper::UintValue* mutable_id();
  void set_allocated_id(::ywrapper::UintValue* id);

  // .ywrapper.UintValue dtp_min = 516875851 [(.yext.schemapath) = "/access-points/access-point/radios/radio/state/dtp-min"];
  bool has_dtp_min() const;
  void clear_dtp_min();
  static const int kDtpMinFieldNumber = 516875851;
  const ::ywrapper::UintValue& dtp_min() const;
  ::ywrapper::UintValue* release_dtp_min();
  ::ywrapper::UintValue* mutable_dtp_min();
  void set_allocated_dtp_min(::ywrapper::UintValue* dtp_min);

  // .openconfig.enums.OpenconfigWifiTypesOPERATINGFREQUENCY operating_frequency = 383131064 [(.yext.schemapath) = "/access-points/access-point/radios/radio/state/operating-frequency"];
  void clear_operating_frequency();
  static const int kOperatingFrequencyFieldNumber = 383131064;
  ::openconfig::enums::OpenconfigWifiTypesOPERATINGFREQUENCY operating_frequency() const;
  void set_operating_frequency(::openconfig::enums::OpenconfigWifiTypesOPERATINGFREQUENCY value);

  // .openconfig.enums.OpenconfigWifiTypesCHANGEREASONTYPE channel_change_reason = 457538455 [(.yext.schemapath) = "/access-points/access-point/radios/radio/state/channel-change-reason"];
  void clear_channel_change_reason();
  static const int kChannelChangeReasonFieldNumber = 457538455;
  ::openconfig::enums::OpenconfigWifiTypesCHANGEREASONTYPE channel_change_reason() const;
  void set_channel_change_reason(::openconfig::enums::OpenconfigWifiTypesCHANGEREASONTYPE value);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.State)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::ywrapper::UintValue > allowed_channels_;
  ::ywrapper::IntValue* antenna_gain_;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Radios_Radio_State_Counters* counters_;
  ::ywrapper::UintValue* transmit_power_;
  ::ywrapper::UintValue* dtp_max_;
  ::ywrapper::BoolValue* enabled_;
  ::ywrapper::BoolValue* scanning_;
  ::ywrapper::UintValue* scanning_defer_clients_;
  ::ywrapper::UintValue* channel_width_;
  ::ywrapper::UintValue* rx_noise_channel_utilization_;
  ::ywrapper::UintValue* tx_dot11_channel_utilization_;
  ::ywrapper::BoolValue* scanning_defer_traffic_;
  ::ywrapper::UintValue* dfs_hit_time_;
  ::ywrapper::BoolValue* dca_;
  ::ywrapper::UintValue* scanning_interval_;
  ::ywrapper::UintValue* channel_;
  ::ywrapper::StringValue* base_radio_mac_;
  ::ywrapper::UintValue* scanning_dwell_time_;
  ::ywrapper::UintValue* rx_dot11_channel_utilization_;
  ::ywrapper::UintValue* total_channel_utilization_;
  ::ywrapper::BoolValue* dtp_;
  ::ywrapper::UintValue* id_;
  ::ywrapper::UintValue* dtp_min_;
  int operating_frequency_;
  int channel_change_reason_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::InitDefaultsAccessPoints_AccessPoint_Radios_Radio_StateImpl();
};
// -------------------------------------------------------------------

class AccessPoints_AccessPoint_Radios_Radio : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio) */ {
 public:
  AccessPoints_AccessPoint_Radios_Radio();
  virtual ~AccessPoints_AccessPoint_Radios_Radio();

  AccessPoints_AccessPoint_Radios_Radio(const AccessPoints_AccessPoint_Radios_Radio& from);

  inline AccessPoints_AccessPoint_Radios_Radio& operator=(const AccessPoints_AccessPoint_Radios_Radio& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AccessPoints_AccessPoint_Radios_Radio(AccessPoints_AccessPoint_Radios_Radio&& from) noexcept
    : AccessPoints_AccessPoint_Radios_Radio() {
    *this = ::std::move(from);
  }

  inline AccessPoints_AccessPoint_Radios_Radio& operator=(AccessPoints_AccessPoint_Radios_Radio&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AccessPoints_AccessPoint_Radios_Radio& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AccessPoints_AccessPoint_Radios_Radio* internal_default_instance() {
    return reinterpret_cast<const AccessPoints_AccessPoint_Radios_Radio*>(
               &_AccessPoints_AccessPoint_Radios_Radio_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    23;

  void Swap(AccessPoints_AccessPoint_Radios_Radio* other);
  friend void swap(AccessPoints_AccessPoint_Radios_Radio& a, AccessPoints_AccessPoint_Radios_Radio& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AccessPoints_AccessPoint_Radios_Radio* New() const PROTOBUF_FINAL { return New(NULL); }

  AccessPoints_AccessPoint_Radios_Radio* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AccessPoints_AccessPoint_Radios_Radio& from);
  void MergeFrom(const AccessPoints_AccessPoint_Radios_Radio& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AccessPoints_AccessPoint_Radios_Radio* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef AccessPoints_AccessPoint_Radios_Radio_Config Config;
  typedef AccessPoints_AccessPoint_Radios_Radio_Neighbors Neighbors;
  typedef AccessPoints_AccessPoint_Radios_Radio_State State;

  // accessors -------------------------------------------------------

  // .openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.Neighbors neighbors = 292366027 [(.yext.schemapath) = "/access-points/access-point/radios/radio/neighbors"];
  bool has_neighbors() const;
  void clear_neighbors();
  static const int kNeighborsFieldNumber = 292366027;
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Radios_Radio_Neighbors& neighbors() const;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Radios_Radio_Neighbors* release_neighbors();
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Radios_Radio_Neighbors* mutable_neighbors();
  void set_allocated_neighbors(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Radios_Radio_Neighbors* neighbors);

  // .openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.Config config = 340450580 [(.yext.schemapath) = "/access-points/access-point/radios/radio/config"];
  bool has_config() const;
  void clear_config();
  static const int kConfigFieldNumber = 340450580;
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Radios_Radio_Config& config() const;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Radios_Radio_Config* release_config();
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Radios_Radio_Config* mutable_config();
  void set_allocated_config(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Radios_Radio_Config* config);

  // .openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.State state = 381530797 [(.yext.schemapath) = "/access-points/access-point/radios/radio/state"];
  bool has_state() const;
  void clear_state();
  static const int kStateFieldNumber = 381530797;
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Radios_Radio_State& state() const;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Radios_Radio_State* release_state();
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Radios_Radio_State* mutable_state();
  void set_allocated_state(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Radios_Radio_State* state);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Radios_Radio_Neighbors* neighbors_;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Radios_Radio_Config* config_;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Radios_Radio_State* state_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::InitDefaultsAccessPoints_AccessPoint_Radios_RadioImpl();
};
// -------------------------------------------------------------------

class AccessPoints_AccessPoint_Radios_RadioKey : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.RadioKey) */ {
 public:
  AccessPoints_AccessPoint_Radios_RadioKey();
  virtual ~AccessPoints_AccessPoint_Radios_RadioKey();

  AccessPoints_AccessPoint_Radios_RadioKey(const AccessPoints_AccessPoint_Radios_RadioKey& from);

  inline AccessPoints_AccessPoint_Radios_RadioKey& operator=(const AccessPoints_AccessPoint_Radios_RadioKey& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AccessPoints_AccessPoint_Radios_RadioKey(AccessPoints_AccessPoint_Radios_RadioKey&& from) noexcept
    : AccessPoints_AccessPoint_Radios_RadioKey() {
    *this = ::std::move(from);
  }

  inline AccessPoints_AccessPoint_Radios_RadioKey& operator=(AccessPoints_AccessPoint_Radios_RadioKey&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AccessPoints_AccessPoint_Radios_RadioKey& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AccessPoints_AccessPoint_Radios_RadioKey* internal_default_instance() {
    return reinterpret_cast<const AccessPoints_AccessPoint_Radios_RadioKey*>(
               &_AccessPoints_AccessPoint_Radios_RadioKey_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    24;

  void Swap(AccessPoints_AccessPoint_Radios_RadioKey* other);
  friend void swap(AccessPoints_AccessPoint_Radios_RadioKey& a, AccessPoints_AccessPoint_Radios_RadioKey& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AccessPoints_AccessPoint_Radios_RadioKey* New() const PROTOBUF_FINAL { return New(NULL); }

  AccessPoints_AccessPoint_Radios_RadioKey* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AccessPoints_AccessPoint_Radios_RadioKey& from);
  void MergeFrom(const AccessPoints_AccessPoint_Radios_RadioKey& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AccessPoints_AccessPoint_Radios_RadioKey* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio radio = 2;
  bool has_radio() const;
  void clear_radio();
  static const int kRadioFieldNumber = 2;
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Radios_Radio& radio() const;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Radios_Radio* release_radio();
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Radios_Radio* mutable_radio();
  void set_allocated_radio(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Radios_Radio* radio);

  // uint64 id = 1 [(.yext.schemapath) = "/access-points/access-point/radios/radio/id"];
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint64 id() const;
  void set_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.RadioKey)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Radios_Radio* radio_;
  ::google::protobuf::uint64 id_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::InitDefaultsAccessPoints_AccessPoint_Radios_RadioKeyImpl();
};
// -------------------------------------------------------------------

class AccessPoints_AccessPoint_Radios : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios) */ {
 public:
  AccessPoints_AccessPoint_Radios();
  virtual ~AccessPoints_AccessPoint_Radios();

  AccessPoints_AccessPoint_Radios(const AccessPoints_AccessPoint_Radios& from);

  inline AccessPoints_AccessPoint_Radios& operator=(const AccessPoints_AccessPoint_Radios& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AccessPoints_AccessPoint_Radios(AccessPoints_AccessPoint_Radios&& from) noexcept
    : AccessPoints_AccessPoint_Radios() {
    *this = ::std::move(from);
  }

  inline AccessPoints_AccessPoint_Radios& operator=(AccessPoints_AccessPoint_Radios&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AccessPoints_AccessPoint_Radios& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AccessPoints_AccessPoint_Radios* internal_default_instance() {
    return reinterpret_cast<const AccessPoints_AccessPoint_Radios*>(
               &_AccessPoints_AccessPoint_Radios_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    25;

  void Swap(AccessPoints_AccessPoint_Radios* other);
  friend void swap(AccessPoints_AccessPoint_Radios& a, AccessPoints_AccessPoint_Radios& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AccessPoints_AccessPoint_Radios* New() const PROTOBUF_FINAL { return New(NULL); }

  AccessPoints_AccessPoint_Radios* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AccessPoints_AccessPoint_Radios& from);
  void MergeFrom(const AccessPoints_AccessPoint_Radios& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AccessPoints_AccessPoint_Radios* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef AccessPoints_AccessPoint_Radios_Radio Radio;
  typedef AccessPoints_AccessPoint_Radios_RadioKey RadioKey;

  // accessors -------------------------------------------------------

  // repeated .openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.RadioKey radio = 488065651 [(.yext.schemapath) = "/access-points/access-point/radios/radio"];
  int radio_size() const;
  void clear_radio();
  static const int kRadioFieldNumber = 488065651;
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Radios_RadioKey& radio(int index) const;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Radios_RadioKey* mutable_radio(int index);
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Radios_RadioKey* add_radio();
  ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Radios_RadioKey >*
      mutable_radio();
  const ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Radios_RadioKey >&
      radio() const;

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Radios_RadioKey > radio_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::InitDefaultsAccessPoints_AccessPoint_RadiosImpl();
};
// -------------------------------------------------------------------

class AccessPoints_AccessPoint_Ssids_Ssid_BandSteering_Config : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.BandSteering.Config) */ {
 public:
  AccessPoints_AccessPoint_Ssids_Ssid_BandSteering_Config();
  virtual ~AccessPoints_AccessPoint_Ssids_Ssid_BandSteering_Config();

  AccessPoints_AccessPoint_Ssids_Ssid_BandSteering_Config(const AccessPoints_AccessPoint_Ssids_Ssid_BandSteering_Config& from);

  inline AccessPoints_AccessPoint_Ssids_Ssid_BandSteering_Config& operator=(const AccessPoints_AccessPoint_Ssids_Ssid_BandSteering_Config& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AccessPoints_AccessPoint_Ssids_Ssid_BandSteering_Config(AccessPoints_AccessPoint_Ssids_Ssid_BandSteering_Config&& from) noexcept
    : AccessPoints_AccessPoint_Ssids_Ssid_BandSteering_Config() {
    *this = ::std::move(from);
  }

  inline AccessPoints_AccessPoint_Ssids_Ssid_BandSteering_Config& operator=(AccessPoints_AccessPoint_Ssids_Ssid_BandSteering_Config&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AccessPoints_AccessPoint_Ssids_Ssid_BandSteering_Config& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AccessPoints_AccessPoint_Ssids_Ssid_BandSteering_Config* internal_default_instance() {
    return reinterpret_cast<const AccessPoints_AccessPoint_Ssids_Ssid_BandSteering_Config*>(
               &_AccessPoints_AccessPoint_Ssids_Ssid_BandSteering_Config_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    26;

  void Swap(AccessPoints_AccessPoint_Ssids_Ssid_BandSteering_Config* other);
  friend void swap(AccessPoints_AccessPoint_Ssids_Ssid_BandSteering_Config& a, AccessPoints_AccessPoint_Ssids_Ssid_BandSteering_Config& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AccessPoints_AccessPoint_Ssids_Ssid_BandSteering_Config* New() const PROTOBUF_FINAL { return New(NULL); }

  AccessPoints_AccessPoint_Ssids_Ssid_BandSteering_Config* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AccessPoints_AccessPoint_Ssids_Ssid_BandSteering_Config& from);
  void MergeFrom(const AccessPoints_AccessPoint_Ssids_Ssid_BandSteering_Config& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AccessPoints_AccessPoint_Ssids_Ssid_BandSteering_Config* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .ywrapper.IntValue steering_rssi = 241689858 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/band-steering/config/steering-rssi"];
  bool has_steering_rssi() const;
  void clear_steering_rssi();
  static const int kSteeringRssiFieldNumber = 241689858;
  const ::ywrapper::IntValue& steering_rssi() const;
  ::ywrapper::IntValue* release_steering_rssi();
  ::ywrapper::IntValue* mutable_steering_rssi();
  void set_allocated_steering_rssi(::ywrapper::IntValue* steering_rssi);

  // .ywrapper.BoolValue band_steering = 533262210 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/band-steering/config/band-steering"];
  bool has_band_steering() const;
  void clear_band_steering();
  static const int kBandSteeringFieldNumber = 533262210;
  const ::ywrapper::BoolValue& band_steering() const;
  ::ywrapper::BoolValue* release_band_steering();
  ::ywrapper::BoolValue* mutable_band_steering();
  void set_allocated_band_steering(::ywrapper::BoolValue* band_steering);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.BandSteering.Config)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ywrapper::IntValue* steering_rssi_;
  ::ywrapper::BoolValue* band_steering_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::InitDefaultsAccessPoints_AccessPoint_Ssids_Ssid_BandSteering_ConfigImpl();
};
// -------------------------------------------------------------------

class AccessPoints_AccessPoint_Ssids_Ssid_BandSteering_State : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.BandSteering.State) */ {
 public:
  AccessPoints_AccessPoint_Ssids_Ssid_BandSteering_State();
  virtual ~AccessPoints_AccessPoint_Ssids_Ssid_BandSteering_State();

  AccessPoints_AccessPoint_Ssids_Ssid_BandSteering_State(const AccessPoints_AccessPoint_Ssids_Ssid_BandSteering_State& from);

  inline AccessPoints_AccessPoint_Ssids_Ssid_BandSteering_State& operator=(const AccessPoints_AccessPoint_Ssids_Ssid_BandSteering_State& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AccessPoints_AccessPoint_Ssids_Ssid_BandSteering_State(AccessPoints_AccessPoint_Ssids_Ssid_BandSteering_State&& from) noexcept
    : AccessPoints_AccessPoint_Ssids_Ssid_BandSteering_State() {
    *this = ::std::move(from);
  }

  inline AccessPoints_AccessPoint_Ssids_Ssid_BandSteering_State& operator=(AccessPoints_AccessPoint_Ssids_Ssid_BandSteering_State&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AccessPoints_AccessPoint_Ssids_Ssid_BandSteering_State& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AccessPoints_AccessPoint_Ssids_Ssid_BandSteering_State* internal_default_instance() {
    return reinterpret_cast<const AccessPoints_AccessPoint_Ssids_Ssid_BandSteering_State*>(
               &_AccessPoints_AccessPoint_Ssids_Ssid_BandSteering_State_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    27;

  void Swap(AccessPoints_AccessPoint_Ssids_Ssid_BandSteering_State* other);
  friend void swap(AccessPoints_AccessPoint_Ssids_Ssid_BandSteering_State& a, AccessPoints_AccessPoint_Ssids_Ssid_BandSteering_State& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AccessPoints_AccessPoint_Ssids_Ssid_BandSteering_State* New() const PROTOBUF_FINAL { return New(NULL); }

  AccessPoints_AccessPoint_Ssids_Ssid_BandSteering_State* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AccessPoints_AccessPoint_Ssids_Ssid_BandSteering_State& from);
  void MergeFrom(const AccessPoints_AccessPoint_Ssids_Ssid_BandSteering_State& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AccessPoints_AccessPoint_Ssids_Ssid_BandSteering_State* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .ywrapper.IntValue steering_rssi = 414866207 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/band-steering/state/steering-rssi"];
  bool has_steering_rssi() const;
  void clear_steering_rssi();
  static const int kSteeringRssiFieldNumber = 414866207;
  const ::ywrapper::IntValue& steering_rssi() const;
  ::ywrapper::IntValue* release_steering_rssi();
  ::ywrapper::IntValue* mutable_steering_rssi();
  void set_allocated_steering_rssi(::ywrapper::IntValue* steering_rssi);

  // .ywrapper.BoolValue band_steering = 446209579 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/band-steering/state/band-steering"];
  bool has_band_steering() const;
  void clear_band_steering();
  static const int kBandSteeringFieldNumber = 446209579;
  const ::ywrapper::BoolValue& band_steering() const;
  ::ywrapper::BoolValue* release_band_steering();
  ::ywrapper::BoolValue* mutable_band_steering();
  void set_allocated_band_steering(::ywrapper::BoolValue* band_steering);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.BandSteering.State)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ywrapper::IntValue* steering_rssi_;
  ::ywrapper::BoolValue* band_steering_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::InitDefaultsAccessPoints_AccessPoint_Ssids_Ssid_BandSteering_StateImpl();
};
// -------------------------------------------------------------------

class AccessPoints_AccessPoint_Ssids_Ssid_BandSteering : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.BandSteering) */ {
 public:
  AccessPoints_AccessPoint_Ssids_Ssid_BandSteering();
  virtual ~AccessPoints_AccessPoint_Ssids_Ssid_BandSteering();

  AccessPoints_AccessPoint_Ssids_Ssid_BandSteering(const AccessPoints_AccessPoint_Ssids_Ssid_BandSteering& from);

  inline AccessPoints_AccessPoint_Ssids_Ssid_BandSteering& operator=(const AccessPoints_AccessPoint_Ssids_Ssid_BandSteering& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AccessPoints_AccessPoint_Ssids_Ssid_BandSteering(AccessPoints_AccessPoint_Ssids_Ssid_BandSteering&& from) noexcept
    : AccessPoints_AccessPoint_Ssids_Ssid_BandSteering() {
    *this = ::std::move(from);
  }

  inline AccessPoints_AccessPoint_Ssids_Ssid_BandSteering& operator=(AccessPoints_AccessPoint_Ssids_Ssid_BandSteering&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AccessPoints_AccessPoint_Ssids_Ssid_BandSteering& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AccessPoints_AccessPoint_Ssids_Ssid_BandSteering* internal_default_instance() {
    return reinterpret_cast<const AccessPoints_AccessPoint_Ssids_Ssid_BandSteering*>(
               &_AccessPoints_AccessPoint_Ssids_Ssid_BandSteering_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    28;

  void Swap(AccessPoints_AccessPoint_Ssids_Ssid_BandSteering* other);
  friend void swap(AccessPoints_AccessPoint_Ssids_Ssid_BandSteering& a, AccessPoints_AccessPoint_Ssids_Ssid_BandSteering& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AccessPoints_AccessPoint_Ssids_Ssid_BandSteering* New() const PROTOBUF_FINAL { return New(NULL); }

  AccessPoints_AccessPoint_Ssids_Ssid_BandSteering* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AccessPoints_AccessPoint_Ssids_Ssid_BandSteering& from);
  void MergeFrom(const AccessPoints_AccessPoint_Ssids_Ssid_BandSteering& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AccessPoints_AccessPoint_Ssids_Ssid_BandSteering* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef AccessPoints_AccessPoint_Ssids_Ssid_BandSteering_Config Config;
  typedef AccessPoints_AccessPoint_Ssids_Ssid_BandSteering_State State;

  // accessors -------------------------------------------------------

  // .openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.BandSteering.State state = 45444217 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/band-steering/state"];
  bool has_state() const;
  void clear_state();
  static const int kStateFieldNumber = 45444217;
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_BandSteering_State& state() const;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_BandSteering_State* release_state();
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_BandSteering_State* mutable_state();
  void set_allocated_state(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_BandSteering_State* state);

  // .openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.BandSteering.Config config = 480153216 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/band-steering/config"];
  bool has_config() const;
  void clear_config();
  static const int kConfigFieldNumber = 480153216;
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_BandSteering_Config& config() const;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_BandSteering_Config* release_config();
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_BandSteering_Config* mutable_config();
  void set_allocated_config(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_BandSteering_Config* config);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.BandSteering)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_BandSteering_State* state_;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_BandSteering_Config* config_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::InitDefaultsAccessPoints_AccessPoint_Ssids_Ssid_BandSteeringImpl();
};
// -------------------------------------------------------------------

class AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientCapabilities_State : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Clients.Client.ClientCapabilities.State) */ {
 public:
  AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientCapabilities_State();
  virtual ~AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientCapabilities_State();

  AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientCapabilities_State(const AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientCapabilities_State& from);

  inline AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientCapabilities_State& operator=(const AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientCapabilities_State& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientCapabilities_State(AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientCapabilities_State&& from) noexcept
    : AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientCapabilities_State() {
    *this = ::std::move(from);
  }

  inline AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientCapabilities_State& operator=(AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientCapabilities_State&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientCapabilities_State& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientCapabilities_State* internal_default_instance() {
    return reinterpret_cast<const AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientCapabilities_State*>(
               &_AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientCapabilities_State_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    29;

  void Swap(AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientCapabilities_State* other);
  friend void swap(AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientCapabilities_State& a, AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientCapabilities_State& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientCapabilities_State* New() const PROTOBUF_FINAL { return New(NULL); }

  AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientCapabilities_State* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientCapabilities_State& from);
  void MergeFrom(const AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientCapabilities_State& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientCapabilities_State* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .ywrapper.UintValue channel_support = 101977719 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/clients/client/client-capabilities/state/channel-support"];
  int channel_support_size() const;
  void clear_channel_support();
  static const int kChannelSupportFieldNumber = 101977719;
  const ::ywrapper::UintValue& channel_support(int index) const;
  ::ywrapper::UintValue* mutable_channel_support(int index);
  ::ywrapper::UintValue* add_channel_support();
  ::google::protobuf::RepeatedPtrField< ::ywrapper::UintValue >*
      mutable_channel_support();
  const ::google::protobuf::RepeatedPtrField< ::ywrapper::UintValue >&
      channel_support() const;

  // repeated .openconfig.enums.OpenconfigWifiTypesCLIENTCAPABILITIES client_capabilities = 373949492 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/clients/client/client-capabilities/state/client-capabilities"];
  int client_capabilities_size() const;
  void clear_client_capabilities();
  static const int kClientCapabilitiesFieldNumber = 373949492;
  ::openconfig::enums::OpenconfigWifiTypesCLIENTCAPABILITIES client_capabilities(int index) const;
  void set_client_capabilities(int index, ::openconfig::enums::OpenconfigWifiTypesCLIENTCAPABILITIES value);
  void add_client_capabilities(::openconfig::enums::OpenconfigWifiTypesCLIENTCAPABILITIES value);
  const ::google::protobuf::RepeatedField<int>& client_capabilities() const;
  ::google::protobuf::RepeatedField<int>* mutable_client_capabilities();

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Clients.Client.ClientCapabilities.State)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::ywrapper::UintValue > channel_support_;
  ::google::protobuf::RepeatedField<int> client_capabilities_;
  mutable int _client_capabilities_cached_byte_size_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::InitDefaultsAccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientCapabilities_StateImpl();
};
// -------------------------------------------------------------------

class AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientCapabilities : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Clients.Client.ClientCapabilities) */ {
 public:
  AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientCapabilities();
  virtual ~AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientCapabilities();

  AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientCapabilities(const AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientCapabilities& from);

  inline AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientCapabilities& operator=(const AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientCapabilities& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientCapabilities(AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientCapabilities&& from) noexcept
    : AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientCapabilities() {
    *this = ::std::move(from);
  }

  inline AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientCapabilities& operator=(AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientCapabilities&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientCapabilities& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientCapabilities* internal_default_instance() {
    return reinterpret_cast<const AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientCapabilities*>(
               &_AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientCapabilities_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    30;

  void Swap(AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientCapabilities* other);
  friend void swap(AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientCapabilities& a, AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientCapabilities& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientCapabilities* New() const PROTOBUF_FINAL { return New(NULL); }

  AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientCapabilities* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientCapabilities& from);
  void MergeFrom(const AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientCapabilities& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientCapabilities* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientCapabilities_State State;

  // accessors -------------------------------------------------------

  // .openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Clients.Client.ClientCapabilities.State state = 249137545 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/clients/client/client-capabilities/state"];
  bool has_state() const;
  void clear_state();
  static const int kStateFieldNumber = 249137545;
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientCapabilities_State& state() const;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientCapabilities_State* release_state();
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientCapabilities_State* mutable_state();
  void set_allocated_state(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientCapabilities_State* state);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Clients.Client.ClientCapabilities)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientCapabilities_State* state_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::InitDefaultsAccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientCapabilitiesImpl();
};
// -------------------------------------------------------------------

class AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientConnection_State : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Clients.Client.ClientConnection.State) */ {
 public:
  AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientConnection_State();
  virtual ~AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientConnection_State();

  AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientConnection_State(const AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientConnection_State& from);

  inline AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientConnection_State& operator=(const AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientConnection_State& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientConnection_State(AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientConnection_State&& from) noexcept
    : AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientConnection_State() {
    *this = ::std::move(from);
  }

  inline AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientConnection_State& operator=(AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientConnection_State&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientConnection_State& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientConnection_State* internal_default_instance() {
    return reinterpret_cast<const AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientConnection_State*>(
               &_AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientConnection_State_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    31;

  void Swap(AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientConnection_State* other);
  friend void swap(AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientConnection_State& a, AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientConnection_State& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientConnection_State* New() const PROTOBUF_FINAL { return New(NULL); }

  AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientConnection_State* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientConnection_State& from);
  void MergeFrom(const AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientConnection_State& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientConnection_State* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .ywrapper.StringValue hostname = 70608921 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/clients/client/client-connection/state/hostname"];
  bool has_hostname() const;
  void clear_hostname();
  static const int kHostnameFieldNumber = 70608921;
  const ::ywrapper::StringValue& hostname() const;
  ::ywrapper::StringValue* release_hostname();
  ::ywrapper::StringValue* mutable_hostname();
  void set_allocated_hostname(::ywrapper::StringValue* hostname);

  // .ywrapper.StringValue ipv4_address = 97222160 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/clients/client/client-connection/state/ipv4-address"];
  bool has_ipv4_address() const;
  void clear_ipv4_address();
  static const int kIpv4AddressFieldNumber = 97222160;
  const ::ywrapper::StringValue& ipv4_address() const;
  ::ywrapper::StringValue* release_ipv4_address();
  ::ywrapper::StringValue* mutable_ipv4_address();
  void set_allocated_ipv4_address(::ywrapper::StringValue* ipv4_address);

  // .ywrapper.StringValue username = 146636734 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/clients/client/client-connection/state/username"];
  bool has_username() const;
  void clear_username();
  static const int kUsernameFieldNumber = 146636734;
  const ::ywrapper::StringValue& username() const;
  ::ywrapper::StringValue* release_username();
  ::ywrapper::StringValue* mutable_username();
  void set_allocated_username(::ywrapper::StringValue* username);

  // .ywrapper.UintValue connection_time = 299049484 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/clients/client/client-connection/state/connection-time"];
  bool has_connection_time() const;
  void clear_connection_time();
  static const int kConnectionTimeFieldNumber = 299049484;
  const ::ywrapper::UintValue& connection_time() const;
  ::ywrapper::UintValue* release_connection_time();
  ::ywrapper::UintValue* mutable_connection_time();
  void set_allocated_connection_time(::ywrapper::UintValue* connection_time);

  // .ywrapper.StringValue operating_system = 302484799 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/clients/client/client-connection/state/operating-system"];
  bool has_operating_system() const;
  void clear_operating_system();
  static const int kOperatingSystemFieldNumber = 302484799;
  const ::ywrapper::StringValue& operating_system() const;
  ::ywrapper::StringValue* release_operating_system();
  ::ywrapper::StringValue* mutable_operating_system();
  void set_allocated_operating_system(::ywrapper::StringValue* operating_system);

  // .ywrapper.StringValue ipv6_address = 366913794 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/clients/client/client-connection/state/ipv6-address"];
  bool has_ipv6_address() const;
  void clear_ipv6_address();
  static const int kIpv6AddressFieldNumber = 366913794;
  const ::ywrapper::StringValue& ipv6_address() const;
  ::ywrapper::StringValue* release_ipv6_address();
  ::ywrapper::StringValue* mutable_ipv6_address();
  void set_allocated_ipv6_address(::ywrapper::StringValue* ipv6_address);

  // .openconfig.enums.OpenconfigWifiTypesCLIENTSTATE client_state = 178171191 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/clients/client/client-connection/state/client-state"];
  void clear_client_state();
  static const int kClientStateFieldNumber = 178171191;
  ::openconfig::enums::OpenconfigWifiTypesCLIENTSTATE client_state() const;
  void set_client_state(::openconfig::enums::OpenconfigWifiTypesCLIENTSTATE value);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Clients.Client.ClientConnection.State)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ywrapper::StringValue* hostname_;
  ::ywrapper::StringValue* ipv4_address_;
  ::ywrapper::StringValue* username_;
  ::ywrapper::UintValue* connection_time_;
  ::ywrapper::StringValue* operating_system_;
  ::ywrapper::StringValue* ipv6_address_;
  int client_state_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::InitDefaultsAccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientConnection_StateImpl();
};
// -------------------------------------------------------------------

class AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientConnection : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Clients.Client.ClientConnection) */ {
 public:
  AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientConnection();
  virtual ~AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientConnection();

  AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientConnection(const AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientConnection& from);

  inline AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientConnection& operator=(const AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientConnection& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientConnection(AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientConnection&& from) noexcept
    : AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientConnection() {
    *this = ::std::move(from);
  }

  inline AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientConnection& operator=(AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientConnection&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientConnection& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientConnection* internal_default_instance() {
    return reinterpret_cast<const AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientConnection*>(
               &_AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientConnection_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    32;

  void Swap(AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientConnection* other);
  friend void swap(AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientConnection& a, AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientConnection& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientConnection* New() const PROTOBUF_FINAL { return New(NULL); }

  AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientConnection* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientConnection& from);
  void MergeFrom(const AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientConnection& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientConnection* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientConnection_State State;

  // accessors -------------------------------------------------------

  // .openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Clients.Client.ClientConnection.State state = 248348919 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/clients/client/client-connection/state"];
  bool has_state() const;
  void clear_state();
  static const int kStateFieldNumber = 248348919;
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientConnection_State& state() const;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientConnection_State* release_state();
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientConnection_State* mutable_state();
  void set_allocated_state(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientConnection_State* state);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Clients.Client.ClientConnection)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientConnection_State* state_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::InitDefaultsAccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientConnectionImpl();
};
// -------------------------------------------------------------------

class AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientRf_State : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Clients.Client.ClientRf.State) */ {
 public:
  AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientRf_State();
  virtual ~AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientRf_State();

  AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientRf_State(const AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientRf_State& from);

  inline AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientRf_State& operator=(const AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientRf_State& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientRf_State(AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientRf_State&& from) noexcept
    : AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientRf_State() {
    *this = ::std::move(from);
  }

  inline AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientRf_State& operator=(AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientRf_State&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientRf_State& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientRf_State* internal_default_instance() {
    return reinterpret_cast<const AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientRf_State*>(
               &_AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientRf_State_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    33;

  void Swap(AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientRf_State* other);
  friend void swap(AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientRf_State& a, AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientRf_State& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientRf_State* New() const PROTOBUF_FINAL { return New(NULL); }

  AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientRf_State* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientRf_State& from);
  void MergeFrom(const AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientRf_State& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientRf_State* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientRf_State_ConnectionMode ConnectionMode;
  static const ConnectionMode CONNECTIONMODE_UNSET =
    AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientRf_State_ConnectionMode_CONNECTIONMODE_UNSET;
  static const ConnectionMode CONNECTIONMODE_A =
    AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientRf_State_ConnectionMode_CONNECTIONMODE_A;
  static const ConnectionMode CONNECTIONMODE_B =
    AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientRf_State_ConnectionMode_CONNECTIONMODE_B;
  static const ConnectionMode CONNECTIONMODE_G =
    AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientRf_State_ConnectionMode_CONNECTIONMODE_G;
  static const ConnectionMode CONNECTIONMODE_N =
    AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientRf_State_ConnectionMode_CONNECTIONMODE_N;
  static const ConnectionMode CONNECTIONMODE_AC =
    AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientRf_State_ConnectionMode_CONNECTIONMODE_AC;
  static inline bool ConnectionMode_IsValid(int value) {
    return AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientRf_State_ConnectionMode_IsValid(value);
  }
  static const ConnectionMode ConnectionMode_MIN =
    AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientRf_State_ConnectionMode_ConnectionMode_MIN;
  static const ConnectionMode ConnectionMode_MAX =
    AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientRf_State_ConnectionMode_ConnectionMode_MAX;
  static const int ConnectionMode_ARRAYSIZE =
    AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientRf_State_ConnectionMode_ConnectionMode_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  ConnectionMode_descriptor() {
    return AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientRf_State_ConnectionMode_descriptor();
  }
  static inline const ::std::string& ConnectionMode_Name(ConnectionMode value) {
    return AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientRf_State_ConnectionMode_Name(value);
  }
  static inline bool ConnectionMode_Parse(const ::std::string& name,
      ConnectionMode* value) {
    return AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientRf_State_ConnectionMode_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .ywrapper.UintValue snr = 235628765 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/clients/client/client-rf/state/snr"];
  bool has_snr() const;
  void clear_snr();
  static const int kSnrFieldNumber = 235628765;
  const ::ywrapper::UintValue& snr() const;
  ::ywrapper::UintValue* release_snr();
  ::ywrapper::UintValue* mutable_snr();
  void set_allocated_snr(::ywrapper::UintValue* snr);

  // .ywrapper.UintValue ss = 240836072 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/clients/client/client-rf/state/ss"];
  bool has_ss() const;
  void clear_ss();
  static const int kSsFieldNumber = 240836072;
  const ::ywrapper::UintValue& ss() const;
  ::ywrapper::UintValue* release_ss();
  ::ywrapper::UintValue* mutable_ss();
  void set_allocated_ss(::ywrapper::UintValue* ss);

  // .ywrapper.UintValue frequency = 286587908 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/clients/client/client-rf/state/frequency"];
  bool has_frequency() const;
  void clear_frequency();
  static const int kFrequencyFieldNumber = 286587908;
  const ::ywrapper::UintValue& frequency() const;
  ::ywrapper::UintValue* release_frequency();
  ::ywrapper::UintValue* mutable_frequency();
  void set_allocated_frequency(::ywrapper::UintValue* frequency);

  // .ywrapper.IntValue rssi = 323836415 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/clients/client/client-rf/state/rssi"];
  bool has_rssi() const;
  void clear_rssi();
  static const int kRssiFieldNumber = 323836415;
  const ::ywrapper::IntValue& rssi() const;
  ::ywrapper::IntValue* release_rssi();
  ::ywrapper::IntValue* mutable_rssi();
  void set_allocated_rssi(::ywrapper::IntValue* rssi);

  // .ywrapper.UintValue phy_rate = 382033986 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/clients/client/client-rf/state/phy-rate"];
  bool has_phy_rate() const;
  void clear_phy_rate();
  static const int kPhyRateFieldNumber = 382033986;
  const ::ywrapper::UintValue& phy_rate() const;
  ::ywrapper::UintValue* release_phy_rate();
  ::ywrapper::UintValue* mutable_phy_rate();
  void set_allocated_phy_rate(::ywrapper::UintValue* phy_rate);

  // .openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Clients.Client.ClientRf.State.ConnectionMode connection_mode = 383209746 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/clients/client/client-rf/state/connection-mode"];
  void clear_connection_mode();
  static const int kConnectionModeFieldNumber = 383209746;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientRf_State_ConnectionMode connection_mode() const;
  void set_connection_mode(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientRf_State_ConnectionMode value);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Clients.Client.ClientRf.State)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ywrapper::UintValue* snr_;
  ::ywrapper::UintValue* ss_;
  ::ywrapper::UintValue* frequency_;
  ::ywrapper::IntValue* rssi_;
  ::ywrapper::UintValue* phy_rate_;
  int connection_mode_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::InitDefaultsAccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientRf_StateImpl();
};
// -------------------------------------------------------------------

class AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientRf : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Clients.Client.ClientRf) */ {
 public:
  AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientRf();
  virtual ~AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientRf();

  AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientRf(const AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientRf& from);

  inline AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientRf& operator=(const AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientRf& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientRf(AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientRf&& from) noexcept
    : AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientRf() {
    *this = ::std::move(from);
  }

  inline AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientRf& operator=(AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientRf&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientRf& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientRf* internal_default_instance() {
    return reinterpret_cast<const AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientRf*>(
               &_AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientRf_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    34;

  void Swap(AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientRf* other);
  friend void swap(AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientRf& a, AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientRf& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientRf* New() const PROTOBUF_FINAL { return New(NULL); }

  AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientRf* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientRf& from);
  void MergeFrom(const AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientRf& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientRf* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientRf_State State;

  // accessors -------------------------------------------------------

  // .openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Clients.Client.ClientRf.State state = 62147291 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/clients/client/client-rf/state"];
  bool has_state() const;
  void clear_state();
  static const int kStateFieldNumber = 62147291;
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientRf_State& state() const;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientRf_State* release_state();
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientRf_State* mutable_state();
  void set_allocated_state(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientRf_State* state);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Clients.Client.ClientRf)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientRf_State* state_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::InitDefaultsAccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientRfImpl();
};
// -------------------------------------------------------------------

class AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_Dot11KNeighbors_State : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Clients.Client.Dot11KNeighbors.State) */ {
 public:
  AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_Dot11KNeighbors_State();
  virtual ~AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_Dot11KNeighbors_State();

  AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_Dot11KNeighbors_State(const AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_Dot11KNeighbors_State& from);

  inline AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_Dot11KNeighbors_State& operator=(const AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_Dot11KNeighbors_State& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_Dot11KNeighbors_State(AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_Dot11KNeighbors_State&& from) noexcept
    : AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_Dot11KNeighbors_State() {
    *this = ::std::move(from);
  }

  inline AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_Dot11KNeighbors_State& operator=(AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_Dot11KNeighbors_State&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_Dot11KNeighbors_State& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_Dot11KNeighbors_State* internal_default_instance() {
    return reinterpret_cast<const AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_Dot11KNeighbors_State*>(
               &_AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_Dot11KNeighbors_State_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    35;

  void Swap(AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_Dot11KNeighbors_State* other);
  friend void swap(AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_Dot11KNeighbors_State& a, AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_Dot11KNeighbors_State& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_Dot11KNeighbors_State* New() const PROTOBUF_FINAL { return New(NULL); }

  AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_Dot11KNeighbors_State* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_Dot11KNeighbors_State& from);
  void MergeFrom(const AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_Dot11KNeighbors_State& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_Dot11KNeighbors_State* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .ywrapper.UintValue neighbor_channel = 53393662 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/clients/client/dot11k-neighbors/state/neighbor-channel"];
  bool has_neighbor_channel() const;
  void clear_neighbor_channel();
  static const int kNeighborChannelFieldNumber = 53393662;
  const ::ywrapper::UintValue& neighbor_channel() const;
  ::ywrapper::UintValue* release_neighbor_channel();
  ::ywrapper::UintValue* mutable_neighbor_channel();
  void set_allocated_neighbor_channel(::ywrapper::UintValue* neighbor_channel);

  // .ywrapper.IntValue neighbor_rssi = 173899328 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/clients/client/dot11k-neighbors/state/neighbor-rssi"];
  bool has_neighbor_rssi() const;
  void clear_neighbor_rssi();
  static const int kNeighborRssiFieldNumber = 173899328;
  const ::ywrapper::IntValue& neighbor_rssi() const;
  ::ywrapper::IntValue* release_neighbor_rssi();
  ::ywrapper::IntValue* mutable_neighbor_rssi();
  void set_allocated_neighbor_rssi(::ywrapper::IntValue* neighbor_rssi);

  // .ywrapper.UintValue channel_load_report = 489610331 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/clients/client/dot11k-neighbors/state/channel-load-report"];
  bool has_channel_load_report() const;
  void clear_channel_load_report();
  static const int kChannelLoadReportFieldNumber = 489610331;
  const ::ywrapper::UintValue& channel_load_report() const;
  ::ywrapper::UintValue* release_channel_load_report();
  ::ywrapper::UintValue* mutable_channel_load_report();
  void set_allocated_channel_load_report(::ywrapper::UintValue* channel_load_report);

  // .ywrapper.StringValue neighbor_bssid = 498949236 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/clients/client/dot11k-neighbors/state/neighbor-bssid"];
  bool has_neighbor_bssid() const;
  void clear_neighbor_bssid();
  static const int kNeighborBssidFieldNumber = 498949236;
  const ::ywrapper::StringValue& neighbor_bssid() const;
  ::ywrapper::StringValue* release_neighbor_bssid();
  ::ywrapper::StringValue* mutable_neighbor_bssid();
  void set_allocated_neighbor_bssid(::ywrapper::StringValue* neighbor_bssid);

  // .ywrapper.UintValue neighbor_antenna = 507846906 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/clients/client/dot11k-neighbors/state/neighbor-antenna"];
  bool has_neighbor_antenna() const;
  void clear_neighbor_antenna();
  static const int kNeighborAntennaFieldNumber = 507846906;
  const ::ywrapper::UintValue& neighbor_antenna() const;
  ::ywrapper::UintValue* release_neighbor_antenna();
  ::ywrapper::UintValue* mutable_neighbor_antenna();
  void set_allocated_neighbor_antenna(::ywrapper::UintValue* neighbor_antenna);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Clients.Client.Dot11KNeighbors.State)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ywrapper::UintValue* neighbor_channel_;
  ::ywrapper::IntValue* neighbor_rssi_;
  ::ywrapper::UintValue* channel_load_report_;
  ::ywrapper::StringValue* neighbor_bssid_;
  ::ywrapper::UintValue* neighbor_antenna_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::InitDefaultsAccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_Dot11KNeighbors_StateImpl();
};
// -------------------------------------------------------------------

class AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_Dot11KNeighbors : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Clients.Client.Dot11KNeighbors) */ {
 public:
  AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_Dot11KNeighbors();
  virtual ~AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_Dot11KNeighbors();

  AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_Dot11KNeighbors(const AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_Dot11KNeighbors& from);

  inline AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_Dot11KNeighbors& operator=(const AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_Dot11KNeighbors& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_Dot11KNeighbors(AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_Dot11KNeighbors&& from) noexcept
    : AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_Dot11KNeighbors() {
    *this = ::std::move(from);
  }

  inline AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_Dot11KNeighbors& operator=(AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_Dot11KNeighbors&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_Dot11KNeighbors& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_Dot11KNeighbors* internal_default_instance() {
    return reinterpret_cast<const AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_Dot11KNeighbors*>(
               &_AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_Dot11KNeighbors_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    36;

  void Swap(AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_Dot11KNeighbors* other);
  friend void swap(AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_Dot11KNeighbors& a, AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_Dot11KNeighbors& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_Dot11KNeighbors* New() const PROTOBUF_FINAL { return New(NULL); }

  AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_Dot11KNeighbors* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_Dot11KNeighbors& from);
  void MergeFrom(const AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_Dot11KNeighbors& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_Dot11KNeighbors* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_Dot11KNeighbors_State State;

  // accessors -------------------------------------------------------

  // .openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Clients.Client.Dot11KNeighbors.State state = 63168671 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/clients/client/dot11k-neighbors/state"];
  bool has_state() const;
  void clear_state();
  static const int kStateFieldNumber = 63168671;
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_Dot11KNeighbors_State& state() const;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_Dot11KNeighbors_State* release_state();
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_Dot11KNeighbors_State* mutable_state();
  void set_allocated_state(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_Dot11KNeighbors_State* state);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Clients.Client.Dot11KNeighbors)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_Dot11KNeighbors_State* state_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::InitDefaultsAccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_Dot11KNeighborsImpl();
};
// -------------------------------------------------------------------

class AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_State_Counters : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Clients.Client.State.Counters) */ {
 public:
  AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_State_Counters();
  virtual ~AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_State_Counters();

  AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_State_Counters(const AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_State_Counters& from);

  inline AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_State_Counters& operator=(const AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_State_Counters& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_State_Counters(AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_State_Counters&& from) noexcept
    : AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_State_Counters() {
    *this = ::std::move(from);
  }

  inline AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_State_Counters& operator=(AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_State_Counters&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_State_Counters& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_State_Counters* internal_default_instance() {
    return reinterpret_cast<const AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_State_Counters*>(
               &_AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_State_Counters_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    37;

  void Swap(AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_State_Counters* other);
  friend void swap(AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_State_Counters& a, AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_State_Counters& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_State_Counters* New() const PROTOBUF_FINAL { return New(NULL); }

  AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_State_Counters* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_State_Counters& from);
  void MergeFrom(const AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_State_Counters& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_State_Counters* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .ywrapper.UintValue rx_bytes = 374808599 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/clients/client/state/counters/rx-bytes"];
  bool has_rx_bytes() const;
  void clear_rx_bytes();
  static const int kRxBytesFieldNumber = 374808599;
  const ::ywrapper::UintValue& rx_bytes() const;
  ::ywrapper::UintValue* release_rx_bytes();
  ::ywrapper::UintValue* mutable_rx_bytes();
  void set_allocated_rx_bytes(::ywrapper::UintValue* rx_bytes);

  // .ywrapper.UintValue tx_retries = 421101202 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/clients/client/state/counters/tx-retries"];
  bool has_tx_retries() const;
  void clear_tx_retries();
  static const int kTxRetriesFieldNumber = 421101202;
  const ::ywrapper::UintValue& tx_retries() const;
  ::ywrapper::UintValue* release_tx_retries();
  ::ywrapper::UintValue* mutable_tx_retries();
  void set_allocated_tx_retries(::ywrapper::UintValue* tx_retries);

  // .ywrapper.UintValue rx_retries = 459608640 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/clients/client/state/counters/rx-retries"];
  bool has_rx_retries() const;
  void clear_rx_retries();
  static const int kRxRetriesFieldNumber = 459608640;
  const ::ywrapper::UintValue& rx_retries() const;
  ::ywrapper::UintValue* release_rx_retries();
  ::ywrapper::UintValue* mutable_rx_retries();
  void set_allocated_rx_retries(::ywrapper::UintValue* rx_retries);

  // .ywrapper.UintValue tx_bytes = 529493213 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/clients/client/state/counters/tx-bytes"];
  bool has_tx_bytes() const;
  void clear_tx_bytes();
  static const int kTxBytesFieldNumber = 529493213;
  const ::ywrapper::UintValue& tx_bytes() const;
  ::ywrapper::UintValue* release_tx_bytes();
  ::ywrapper::UintValue* mutable_tx_bytes();
  void set_allocated_tx_bytes(::ywrapper::UintValue* tx_bytes);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Clients.Client.State.Counters)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ywrapper::UintValue* rx_bytes_;
  ::ywrapper::UintValue* tx_retries_;
  ::ywrapper::UintValue* rx_retries_;
  ::ywrapper::UintValue* tx_bytes_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::InitDefaultsAccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_State_CountersImpl();
};
// -------------------------------------------------------------------

class AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_State : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Clients.Client.State) */ {
 public:
  AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_State();
  virtual ~AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_State();

  AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_State(const AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_State& from);

  inline AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_State& operator=(const AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_State& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_State(AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_State&& from) noexcept
    : AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_State() {
    *this = ::std::move(from);
  }

  inline AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_State& operator=(AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_State&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_State& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_State* internal_default_instance() {
    return reinterpret_cast<const AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_State*>(
               &_AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_State_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    38;

  void Swap(AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_State* other);
  friend void swap(AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_State& a, AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_State& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_State* New() const PROTOBUF_FINAL { return New(NULL); }

  AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_State* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_State& from);
  void MergeFrom(const AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_State& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_State* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_State_Counters Counters;

  // accessors -------------------------------------------------------

  // .ywrapper.StringValue mac = 244865024 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/clients/client/state/mac"];
  bool has_mac() const;
  void clear_mac();
  static const int kMacFieldNumber = 244865024;
  const ::ywrapper::StringValue& mac() const;
  ::ywrapper::StringValue* release_mac();
  ::ywrapper::StringValue* mutable_mac();
  void set_allocated_mac(::ywrapper::StringValue* mac);

  // .openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Clients.Client.State.Counters counters = 366574872 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/clients/client/state/counters"];
  bool has_counters() const;
  void clear_counters();
  static const int kCountersFieldNumber = 366574872;
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_State_Counters& counters() const;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_State_Counters* release_counters();
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_State_Counters* mutable_counters();
  void set_allocated_counters(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_State_Counters* counters);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Clients.Client.State)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ywrapper::StringValue* mac_;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_State_Counters* counters_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::InitDefaultsAccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_StateImpl();
};
// -------------------------------------------------------------------

class AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Clients.Client) */ {
 public:
  AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client();
  virtual ~AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client();

  AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client(const AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client& from);

  inline AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client& operator=(const AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client(AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client&& from) noexcept
    : AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client() {
    *this = ::std::move(from);
  }

  inline AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client& operator=(AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client* internal_default_instance() {
    return reinterpret_cast<const AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client*>(
               &_AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    39;

  void Swap(AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client* other);
  friend void swap(AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client& a, AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client* New() const PROTOBUF_FINAL { return New(NULL); }

  AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client& from);
  void MergeFrom(const AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientCapabilities ClientCapabilities;
  typedef AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientConnection ClientConnection;
  typedef AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientRf ClientRf;
  typedef AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_Dot11KNeighbors Dot11KNeighbors;
  typedef AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_State State;

  // accessors -------------------------------------------------------

  // .openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Clients.Client.State state = 49326624 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/clients/client/state"];
  bool has_state() const;
  void clear_state();
  static const int kStateFieldNumber = 49326624;
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_State& state() const;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_State* release_state();
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_State* mutable_state();
  void set_allocated_state(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_State* state);

  // .openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Clients.Client.ClientConnection client_connection = 143477045 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/clients/client/client-connection"];
  bool has_client_connection() const;
  void clear_client_connection();
  static const int kClientConnectionFieldNumber = 143477045;
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientConnection& client_connection() const;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientConnection* release_client_connection();
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientConnection* mutable_client_connection();
  void set_allocated_client_connection(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientConnection* client_connection);

  // .openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Clients.Client.ClientRf client_rf = 367682393 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/clients/client/client-rf"];
  bool has_client_rf() const;
  void clear_client_rf();
  static const int kClientRfFieldNumber = 367682393;
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientRf& client_rf() const;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientRf* release_client_rf();
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientRf* mutable_client_rf();
  void set_allocated_client_rf(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientRf* client_rf);

  // .openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Clients.Client.Dot11KNeighbors dot11k_neighbors = 383304525 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/clients/client/dot11k-neighbors"];
  bool has_dot11k_neighbors() const;
  void clear_dot11k_neighbors();
  static const int kDot11KNeighborsFieldNumber = 383304525;
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_Dot11KNeighbors& dot11k_neighbors() const;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_Dot11KNeighbors* release_dot11k_neighbors();
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_Dot11KNeighbors* mutable_dot11k_neighbors();
  void set_allocated_dot11k_neighbors(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_Dot11KNeighbors* dot11k_neighbors);

  // .openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Clients.Client.ClientCapabilities client_capabilities = 426048559 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/clients/client/client-capabilities"];
  bool has_client_capabilities() const;
  void clear_client_capabilities();
  static const int kClientCapabilitiesFieldNumber = 426048559;
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientCapabilities& client_capabilities() const;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientCapabilities* release_client_capabilities();
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientCapabilities* mutable_client_capabilities();
  void set_allocated_client_capabilities(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientCapabilities* client_capabilities);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Clients.Client)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_State* state_;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientConnection* client_connection_;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientRf* client_rf_;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_Dot11KNeighbors* dot11k_neighbors_;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientCapabilities* client_capabilities_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::InitDefaultsAccessPoints_AccessPoint_Ssids_Ssid_Clients_ClientImpl();
};
// -------------------------------------------------------------------

class AccessPoints_AccessPoint_Ssids_Ssid_Clients_ClientKey : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Clients.ClientKey) */ {
 public:
  AccessPoints_AccessPoint_Ssids_Ssid_Clients_ClientKey();
  virtual ~AccessPoints_AccessPoint_Ssids_Ssid_Clients_ClientKey();

  AccessPoints_AccessPoint_Ssids_Ssid_Clients_ClientKey(const AccessPoints_AccessPoint_Ssids_Ssid_Clients_ClientKey& from);

  inline AccessPoints_AccessPoint_Ssids_Ssid_Clients_ClientKey& operator=(const AccessPoints_AccessPoint_Ssids_Ssid_Clients_ClientKey& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AccessPoints_AccessPoint_Ssids_Ssid_Clients_ClientKey(AccessPoints_AccessPoint_Ssids_Ssid_Clients_ClientKey&& from) noexcept
    : AccessPoints_AccessPoint_Ssids_Ssid_Clients_ClientKey() {
    *this = ::std::move(from);
  }

  inline AccessPoints_AccessPoint_Ssids_Ssid_Clients_ClientKey& operator=(AccessPoints_AccessPoint_Ssids_Ssid_Clients_ClientKey&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AccessPoints_AccessPoint_Ssids_Ssid_Clients_ClientKey& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AccessPoints_AccessPoint_Ssids_Ssid_Clients_ClientKey* internal_default_instance() {
    return reinterpret_cast<const AccessPoints_AccessPoint_Ssids_Ssid_Clients_ClientKey*>(
               &_AccessPoints_AccessPoint_Ssids_Ssid_Clients_ClientKey_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    40;

  void Swap(AccessPoints_AccessPoint_Ssids_Ssid_Clients_ClientKey* other);
  friend void swap(AccessPoints_AccessPoint_Ssids_Ssid_Clients_ClientKey& a, AccessPoints_AccessPoint_Ssids_Ssid_Clients_ClientKey& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AccessPoints_AccessPoint_Ssids_Ssid_Clients_ClientKey* New() const PROTOBUF_FINAL { return New(NULL); }

  AccessPoints_AccessPoint_Ssids_Ssid_Clients_ClientKey* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AccessPoints_AccessPoint_Ssids_Ssid_Clients_ClientKey& from);
  void MergeFrom(const AccessPoints_AccessPoint_Ssids_Ssid_Clients_ClientKey& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AccessPoints_AccessPoint_Ssids_Ssid_Clients_ClientKey* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string mac = 1 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/clients/client/mac"];
  void clear_mac();
  static const int kMacFieldNumber = 1;
  const ::std::string& mac() const;
  void set_mac(const ::std::string& value);
  #if LANG_CXX11
  void set_mac(::std::string&& value);
  #endif
  void set_mac(const char* value);
  void set_mac(const char* value, size_t size);
  ::std::string* mutable_mac();
  ::std::string* release_mac();
  void set_allocated_mac(::std::string* mac);

  // .openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Clients.Client client = 2;
  bool has_client() const;
  void clear_client();
  static const int kClientFieldNumber = 2;
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client& client() const;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client* release_client();
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client* mutable_client();
  void set_allocated_client(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client* client);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Clients.ClientKey)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr mac_;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client* client_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::InitDefaultsAccessPoints_AccessPoint_Ssids_Ssid_Clients_ClientKeyImpl();
};
// -------------------------------------------------------------------

class AccessPoints_AccessPoint_Ssids_Ssid_Clients : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Clients) */ {
 public:
  AccessPoints_AccessPoint_Ssids_Ssid_Clients();
  virtual ~AccessPoints_AccessPoint_Ssids_Ssid_Clients();

  AccessPoints_AccessPoint_Ssids_Ssid_Clients(const AccessPoints_AccessPoint_Ssids_Ssid_Clients& from);

  inline AccessPoints_AccessPoint_Ssids_Ssid_Clients& operator=(const AccessPoints_AccessPoint_Ssids_Ssid_Clients& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AccessPoints_AccessPoint_Ssids_Ssid_Clients(AccessPoints_AccessPoint_Ssids_Ssid_Clients&& from) noexcept
    : AccessPoints_AccessPoint_Ssids_Ssid_Clients() {
    *this = ::std::move(from);
  }

  inline AccessPoints_AccessPoint_Ssids_Ssid_Clients& operator=(AccessPoints_AccessPoint_Ssids_Ssid_Clients&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AccessPoints_AccessPoint_Ssids_Ssid_Clients& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AccessPoints_AccessPoint_Ssids_Ssid_Clients* internal_default_instance() {
    return reinterpret_cast<const AccessPoints_AccessPoint_Ssids_Ssid_Clients*>(
               &_AccessPoints_AccessPoint_Ssids_Ssid_Clients_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    41;

  void Swap(AccessPoints_AccessPoint_Ssids_Ssid_Clients* other);
  friend void swap(AccessPoints_AccessPoint_Ssids_Ssid_Clients& a, AccessPoints_AccessPoint_Ssids_Ssid_Clients& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AccessPoints_AccessPoint_Ssids_Ssid_Clients* New() const PROTOBUF_FINAL { return New(NULL); }

  AccessPoints_AccessPoint_Ssids_Ssid_Clients* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AccessPoints_AccessPoint_Ssids_Ssid_Clients& from);
  void MergeFrom(const AccessPoints_AccessPoint_Ssids_Ssid_Clients& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AccessPoints_AccessPoint_Ssids_Ssid_Clients* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client Client;
  typedef AccessPoints_AccessPoint_Ssids_Ssid_Clients_ClientKey ClientKey;

  // accessors -------------------------------------------------------

  // repeated .openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Clients.ClientKey client = 49373022 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/clients/client"];
  int client_size() const;
  void clear_client();
  static const int kClientFieldNumber = 49373022;
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Clients_ClientKey& client(int index) const;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Clients_ClientKey* mutable_client(int index);
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Clients_ClientKey* add_client();
  ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Clients_ClientKey >*
      mutable_client();
  const ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Clients_ClientKey >&
      client() const;

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Clients)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Clients_ClientKey > client_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::InitDefaultsAccessPoints_AccessPoint_Ssids_Ssid_ClientsImpl();
};
// -------------------------------------------------------------------

class AccessPoints_AccessPoint_Ssids_Ssid_Config : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Config) */ {
 public:
  AccessPoints_AccessPoint_Ssids_Ssid_Config();
  virtual ~AccessPoints_AccessPoint_Ssids_Ssid_Config();

  AccessPoints_AccessPoint_Ssids_Ssid_Config(const AccessPoints_AccessPoint_Ssids_Ssid_Config& from);

  inline AccessPoints_AccessPoint_Ssids_Ssid_Config& operator=(const AccessPoints_AccessPoint_Ssids_Ssid_Config& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AccessPoints_AccessPoint_Ssids_Ssid_Config(AccessPoints_AccessPoint_Ssids_Ssid_Config&& from) noexcept
    : AccessPoints_AccessPoint_Ssids_Ssid_Config() {
    *this = ::std::move(from);
  }

  inline AccessPoints_AccessPoint_Ssids_Ssid_Config& operator=(AccessPoints_AccessPoint_Ssids_Ssid_Config&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AccessPoints_AccessPoint_Ssids_Ssid_Config& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AccessPoints_AccessPoint_Ssids_Ssid_Config* internal_default_instance() {
    return reinterpret_cast<const AccessPoints_AccessPoint_Ssids_Ssid_Config*>(
               &_AccessPoints_AccessPoint_Ssids_Ssid_Config_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    42;

  void Swap(AccessPoints_AccessPoint_Ssids_Ssid_Config* other);
  friend void swap(AccessPoints_AccessPoint_Ssids_Ssid_Config& a, AccessPoints_AccessPoint_Ssids_Ssid_Config& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AccessPoints_AccessPoint_Ssids_Ssid_Config* New() const PROTOBUF_FINAL { return New(NULL); }

  AccessPoints_AccessPoint_Ssids_Ssid_Config* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AccessPoints_AccessPoint_Ssids_Ssid_Config& from);
  void MergeFrom(const AccessPoints_AccessPoint_Ssids_Ssid_Config& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AccessPoints_AccessPoint_Ssids_Ssid_Config* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef AccessPoints_AccessPoint_Ssids_Ssid_Config_Opmode Opmode;
  static const Opmode OPMODE_OPEN =
    AccessPoints_AccessPoint_Ssids_Ssid_Config_Opmode_OPMODE_OPEN;
  static const Opmode OPMODE_WPA2_PERSONAL =
    AccessPoints_AccessPoint_Ssids_Ssid_Config_Opmode_OPMODE_WPA2_PERSONAL;
  static const Opmode OPMODE_WPA2_ENTERPRISE =
    AccessPoints_AccessPoint_Ssids_Ssid_Config_Opmode_OPMODE_WPA2_ENTERPRISE;
  static inline bool Opmode_IsValid(int value) {
    return AccessPoints_AccessPoint_Ssids_Ssid_Config_Opmode_IsValid(value);
  }
  static const Opmode Opmode_MIN =
    AccessPoints_AccessPoint_Ssids_Ssid_Config_Opmode_Opmode_MIN;
  static const Opmode Opmode_MAX =
    AccessPoints_AccessPoint_Ssids_Ssid_Config_Opmode_Opmode_MAX;
  static const int Opmode_ARRAYSIZE =
    AccessPoints_AccessPoint_Ssids_Ssid_Config_Opmode_Opmode_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Opmode_descriptor() {
    return AccessPoints_AccessPoint_Ssids_Ssid_Config_Opmode_descriptor();
  }
  static inline const ::std::string& Opmode_Name(Opmode value) {
    return AccessPoints_AccessPoint_Ssids_Ssid_Config_Opmode_Name(value);
  }
  static inline bool Opmode_Parse(const ::std::string& name,
      Opmode* value) {
    return AccessPoints_AccessPoint_Ssids_Ssid_Config_Opmode_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .openconfig.enums.OpenconfigWifiTypesDATARATE basic_data_rates = 152957844 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/config/basic-data-rates"];
  int basic_data_rates_size() const;
  void clear_basic_data_rates();
  static const int kBasicDataRatesFieldNumber = 152957844;
  ::openconfig::enums::OpenconfigWifiTypesDATARATE basic_data_rates(int index) const;
  void set_basic_data_rates(int index, ::openconfig::enums::OpenconfigWifiTypesDATARATE value);
  void add_basic_data_rates(::openconfig::enums::OpenconfigWifiTypesDATARATE value);
  const ::google::protobuf::RepeatedField<int>& basic_data_rates() const;
  ::google::protobuf::RepeatedField<int>* mutable_basic_data_rates();

  // repeated .openconfig.enums.OpenconfigWifiTypesDATARATE supported_data_rates = 373081616 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/config/supported-data-rates"];
  int supported_data_rates_size() const;
  void clear_supported_data_rates();
  static const int kSupportedDataRatesFieldNumber = 373081616;
  ::openconfig::enums::OpenconfigWifiTypesDATARATE supported_data_rates(int index) const;
  void set_supported_data_rates(int index, ::openconfig::enums::OpenconfigWifiTypesDATARATE value);
  void add_supported_data_rates(::openconfig::enums::OpenconfigWifiTypesDATARATE value);
  const ::google::protobuf::RepeatedField<int>& supported_data_rates() const;
  ::google::protobuf::RepeatedField<int>* mutable_supported_data_rates();

  // .ywrapper.StringValue server_group = 4432650 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/config/server-group"];
  bool has_server_group() const;
  void clear_server_group();
  static const int kServerGroupFieldNumber = 4432650;
  const ::ywrapper::StringValue& server_group() const;
  ::ywrapper::StringValue* release_server_group();
  ::ywrapper::StringValue* mutable_server_group();
  void set_allocated_server_group(::ywrapper::StringValue* server_group);

  // .ywrapper.BoolValue csa = 10921288 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/config/csa"];
  bool has_csa() const;
  void clear_csa();
  static const int kCsaFieldNumber = 10921288;
  const ::ywrapper::BoolValue& csa() const;
  ::ywrapper::BoolValue* release_csa();
  ::ywrapper::BoolValue* mutable_csa();
  void set_allocated_csa(::ywrapper::BoolValue* csa);

  // .ywrapper.BoolValue okc = 12892766 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/config/okc"];
  bool has_okc() const;
  void clear_okc();
  static const int kOkcFieldNumber = 12892766;
  const ::ywrapper::BoolValue& okc() const;
  ::ywrapper::BoolValue* release_okc();
  ::ywrapper::BoolValue* mutable_okc();
  void set_allocated_okc(::ywrapper::BoolValue* okc);

  // .ywrapper.StringValue wpa2_psk = 29027968 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/config/wpa2-psk"];
  bool has_wpa2_psk() const;
  void clear_wpa2_psk();
  static const int kWpa2PskFieldNumber = 29027968;
  const ::ywrapper::StringValue& wpa2_psk() const;
  ::ywrapper::StringValue* release_wpa2_psk();
  ::ywrapper::StringValue* mutable_wpa2_psk();
  void set_allocated_wpa2_psk(::ywrapper::StringValue* wpa2_psk);

  // .ywrapper.BoolValue hidden = 59524017 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/config/hidden"];
  bool has_hidden() const;
  void clear_hidden();
  static const int kHiddenFieldNumber = 59524017;
  const ::ywrapper::BoolValue& hidden() const;
  ::ywrapper::BoolValue* release_hidden();
  ::ywrapper::BoolValue* mutable_hidden();
  void set_allocated_hidden(::ywrapper::BoolValue* hidden);

  // .ywrapper.BoolValue dva = 95942216 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/config/dva"];
  bool has_dva() const;
  void clear_dva();
  static const int kDvaFieldNumber = 95942216;
  const ::ywrapper::BoolValue& dva() const;
  ::ywrapper::BoolValue* release_dva();
  ::ywrapper::BoolValue* mutable_dva();
  void set_allocated_dva(::ywrapper::BoolValue* dva);

  // .ywrapper.BoolValue dot11k = 122548655 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/config/dot11k"];
  bool has_dot11k() const;
  void clear_dot11k();
  static const int kDot11KFieldNumber = 122548655;
  const ::ywrapper::BoolValue& dot11k() const;
  ::ywrapper::BoolValue* release_dot11k();
  ::ywrapper::BoolValue* mutable_dot11k();
  void set_allocated_dot11k(::ywrapper::BoolValue* dot11k);

  // .ywrapper.BoolValue multicast_filter = 126597300 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/config/multicast-filter"];
  bool has_multicast_filter() const;
  void clear_multicast_filter();
  static const int kMulticastFilterFieldNumber = 126597300;
  const ::ywrapper::BoolValue& multicast_filter() const;
  ::ywrapper::BoolValue* release_multicast_filter();
  ::ywrapper::BoolValue* mutable_multicast_filter();
  void set_allocated_multicast_filter(::ywrapper::BoolValue* multicast_filter);

  // .ywrapper.UintValue ptk_timeout = 206828754 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/config/ptk-timeout"];
  bool has_ptk_timeout() const;
  void clear_ptk_timeout();
  static const int kPtkTimeoutFieldNumber = 206828754;
  const ::ywrapper::UintValue& ptk_timeout() const;
  ::ywrapper::UintValue* release_ptk_timeout();
  ::ywrapper::UintValue* mutable_ptk_timeout();
  void set_allocated_ptk_timeout(::ywrapper::UintValue* ptk_timeout);

  // .ywrapper.UintValue gtk_timeout = 241734605 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/config/gtk-timeout"];
  bool has_gtk_timeout() const;
  void clear_gtk_timeout();
  static const int kGtkTimeoutFieldNumber = 241734605;
  const ::ywrapper::UintValue& gtk_timeout() const;
  ::ywrapper::UintValue* release_gtk_timeout();
  ::ywrapper::UintValue* mutable_gtk_timeout();
  void set_allocated_gtk_timeout(::ywrapper::UintValue* gtk_timeout);

  // .ywrapper.BoolValue enabled = 243311784 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/config/enabled"];
  bool has_enabled() const;
  void clear_enabled();
  static const int kEnabledFieldNumber = 243311784;
  const ::ywrapper::BoolValue& enabled() const;
  ::ywrapper::BoolValue* release_enabled();
  ::ywrapper::BoolValue* mutable_enabled();
  void set_allocated_enabled(::ywrapper::BoolValue* enabled);

  // .ywrapper.UintValue vlan_id = 261414696 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/config/vlan-id"];
  bool has_vlan_id() const;
  void clear_vlan_id();
  static const int kVlanIdFieldNumber = 261414696;
  const ::ywrapper::UintValue& vlan_id() const;
  ::ywrapper::UintValue* release_vlan_id();
  ::ywrapper::UintValue* mutable_vlan_id();
  void set_allocated_vlan_id(::ywrapper::UintValue* vlan_id);

  // .ywrapper.BoolValue ipv6_ndp_filter = 299064706 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/config/ipv6-ndp-filter"];
  bool has_ipv6_ndp_filter() const;
  void clear_ipv6_ndp_filter();
  static const int kIpv6NdpFilterFieldNumber = 299064706;
  const ::ywrapper::BoolValue& ipv6_ndp_filter() const;
  ::ywrapper::BoolValue* release_ipv6_ndp_filter();
  ::ywrapper::BoolValue* mutable_ipv6_ndp_filter();
  void set_allocated_ipv6_ndp_filter(::ywrapper::BoolValue* ipv6_ndp_filter);

  // .ywrapper.StringValue mobility_domain = 333478803 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/config/mobility-domain"];
  bool has_mobility_domain() const;
  void clear_mobility_domain();
  static const int kMobilityDomainFieldNumber = 333478803;
  const ::ywrapper::StringValue& mobility_domain() const;
  ::ywrapper::StringValue* release_mobility_domain();
  ::ywrapper::StringValue* mutable_mobility_domain();
  void set_allocated_mobility_domain(::ywrapper::StringValue* mobility_domain);

  // .ywrapper.BoolValue qbss_load = 373022163 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/config/qbss-load"];
  bool has_qbss_load() const;
  void clear_qbss_load();
  static const int kQbssLoadFieldNumber = 373022163;
  const ::ywrapper::BoolValue& qbss_load() const;
  ::ywrapper::BoolValue* release_qbss_load();
  ::ywrapper::BoolValue* mutable_qbss_load();
  void set_allocated_qbss_load(::ywrapper::BoolValue* qbss_load);

  // .ywrapper.StringValue name = 377095704 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/config/name"];
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 377095704;
  const ::ywrapper::StringValue& name() const;
  ::ywrapper::StringValue* release_name();
  ::ywrapper::StringValue* mutable_name();
  void set_allocated_name(::ywrapper::StringValue* name);

  // .ywrapper.BoolValue broadcast_filter = 380494917 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/config/broadcast-filter"];
  bool has_broadcast_filter() const;
  void clear_broadcast_filter();
  static const int kBroadcastFilterFieldNumber = 380494917;
  const ::ywrapper::BoolValue& broadcast_filter() const;
  ::ywrapper::BoolValue* release_broadcast_filter();
  ::ywrapper::BoolValue* mutable_broadcast_filter();
  void set_allocated_broadcast_filter(::ywrapper::BoolValue* broadcast_filter);

  // .ywrapper.BoolValue advertise_apname = 430443627 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/config/advertise-apname"];
  bool has_advertise_apname() const;
  void clear_advertise_apname();
  static const int kAdvertiseApnameFieldNumber = 430443627;
  const ::ywrapper::BoolValue& advertise_apname() const;
  ::ywrapper::BoolValue* release_advertise_apname();
  ::ywrapper::BoolValue* mutable_advertise_apname();
  void set_allocated_advertise_apname(::ywrapper::BoolValue* advertise_apname);

  // .ywrapper.BoolValue station_isolation = 479304948 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/config/station-isolation"];
  bool has_station_isolation() const;
  void clear_station_isolation();
  static const int kStationIsolationFieldNumber = 479304948;
  const ::ywrapper::BoolValue& station_isolation() const;
  ::ywrapper::BoolValue* release_station_isolation();
  ::ywrapper::BoolValue* mutable_station_isolation();
  void set_allocated_station_isolation(::ywrapper::BoolValue* station_isolation);

  // .ywrapper.BoolValue dhcp_required = 495414066 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/config/dhcp-required"];
  bool has_dhcp_required() const;
  void clear_dhcp_required();
  static const int kDhcpRequiredFieldNumber = 495414066;
  const ::ywrapper::BoolValue& dhcp_required() const;
  ::ywrapper::BoolValue* release_dhcp_required();
  ::ywrapper::BoolValue* mutable_dhcp_required();
  void set_allocated_dhcp_required(::ywrapper::BoolValue* dhcp_required);

  // .ywrapper.UintValue ipv6_ndp_filter_timer = 497415066 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/config/ipv6-ndp-filter-timer"];
  bool has_ipv6_ndp_filter_timer() const;
  void clear_ipv6_ndp_filter_timer();
  static const int kIpv6NdpFilterTimerFieldNumber = 497415066;
  const ::ywrapper::UintValue& ipv6_ndp_filter_timer() const;
  ::ywrapper::UintValue* release_ipv6_ndp_filter_timer();
  ::ywrapper::UintValue* mutable_ipv6_ndp_filter_timer();
  void set_allocated_ipv6_ndp_filter_timer(::ywrapper::UintValue* ipv6_ndp_filter_timer);

  // .openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Config.Opmode opmode = 88589157 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/config/opmode"];
  void clear_opmode();
  static const int kOpmodeFieldNumber = 88589157;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Config_Opmode opmode() const;
  void set_opmode(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Config_Opmode value);

  // .openconfig.enums.OpenconfigWifiTypesOPERATINGFREQUENCY operating_frequency = 231725667 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/config/operating-frequency"];
  void clear_operating_frequency();
  static const int kOperatingFrequencyFieldNumber = 231725667;
  ::openconfig::enums::OpenconfigWifiTypesOPERATINGFREQUENCY operating_frequency() const;
  void set_operating_frequency(::openconfig::enums::OpenconfigWifiTypesOPERATINGFREQUENCY value);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Config)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField<int> basic_data_rates_;
  mutable int _basic_data_rates_cached_byte_size_;
  ::google::protobuf::RepeatedField<int> supported_data_rates_;
  mutable int _supported_data_rates_cached_byte_size_;
  ::ywrapper::StringValue* server_group_;
  ::ywrapper::BoolValue* csa_;
  ::ywrapper::BoolValue* okc_;
  ::ywrapper::StringValue* wpa2_psk_;
  ::ywrapper::BoolValue* hidden_;
  ::ywrapper::BoolValue* dva_;
  ::ywrapper::BoolValue* dot11k_;
  ::ywrapper::BoolValue* multicast_filter_;
  ::ywrapper::UintValue* ptk_timeout_;
  ::ywrapper::UintValue* gtk_timeout_;
  ::ywrapper::BoolValue* enabled_;
  ::ywrapper::UintValue* vlan_id_;
  ::ywrapper::BoolValue* ipv6_ndp_filter_;
  ::ywrapper::StringValue* mobility_domain_;
  ::ywrapper::BoolValue* qbss_load_;
  ::ywrapper::StringValue* name_;
  ::ywrapper::BoolValue* broadcast_filter_;
  ::ywrapper::BoolValue* advertise_apname_;
  ::ywrapper::BoolValue* station_isolation_;
  ::ywrapper::BoolValue* dhcp_required_;
  ::ywrapper::UintValue* ipv6_ndp_filter_timer_;
  int opmode_;
  int operating_frequency_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::InitDefaultsAccessPoints_AccessPoint_Ssids_Ssid_ConfigImpl();
};
// -------------------------------------------------------------------

class AccessPoints_AccessPoint_Ssids_Ssid_Dot11R_Config : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Dot11R.Config) */ {
 public:
  AccessPoints_AccessPoint_Ssids_Ssid_Dot11R_Config();
  virtual ~AccessPoints_AccessPoint_Ssids_Ssid_Dot11R_Config();

  AccessPoints_AccessPoint_Ssids_Ssid_Dot11R_Config(const AccessPoints_AccessPoint_Ssids_Ssid_Dot11R_Config& from);

  inline AccessPoints_AccessPoint_Ssids_Ssid_Dot11R_Config& operator=(const AccessPoints_AccessPoint_Ssids_Ssid_Dot11R_Config& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AccessPoints_AccessPoint_Ssids_Ssid_Dot11R_Config(AccessPoints_AccessPoint_Ssids_Ssid_Dot11R_Config&& from) noexcept
    : AccessPoints_AccessPoint_Ssids_Ssid_Dot11R_Config() {
    *this = ::std::move(from);
  }

  inline AccessPoints_AccessPoint_Ssids_Ssid_Dot11R_Config& operator=(AccessPoints_AccessPoint_Ssids_Ssid_Dot11R_Config&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AccessPoints_AccessPoint_Ssids_Ssid_Dot11R_Config& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AccessPoints_AccessPoint_Ssids_Ssid_Dot11R_Config* internal_default_instance() {
    return reinterpret_cast<const AccessPoints_AccessPoint_Ssids_Ssid_Dot11R_Config*>(
               &_AccessPoints_AccessPoint_Ssids_Ssid_Dot11R_Config_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    43;

  void Swap(AccessPoints_AccessPoint_Ssids_Ssid_Dot11R_Config* other);
  friend void swap(AccessPoints_AccessPoint_Ssids_Ssid_Dot11R_Config& a, AccessPoints_AccessPoint_Ssids_Ssid_Dot11R_Config& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AccessPoints_AccessPoint_Ssids_Ssid_Dot11R_Config* New() const PROTOBUF_FINAL { return New(NULL); }

  AccessPoints_AccessPoint_Ssids_Ssid_Dot11R_Config* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AccessPoints_AccessPoint_Ssids_Ssid_Dot11R_Config& from);
  void MergeFrom(const AccessPoints_AccessPoint_Ssids_Ssid_Dot11R_Config& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AccessPoints_AccessPoint_Ssids_Ssid_Dot11R_Config* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef AccessPoints_AccessPoint_Ssids_Ssid_Dot11R_Config_Dot11RMethod Dot11RMethod;
  static const Dot11RMethod DOT11RMETHOD_OVA =
    AccessPoints_AccessPoint_Ssids_Ssid_Dot11R_Config_Dot11RMethod_DOT11RMETHOD_OVA;
  static const Dot11RMethod DOT11RMETHOD_ODS =
    AccessPoints_AccessPoint_Ssids_Ssid_Dot11R_Config_Dot11RMethod_DOT11RMETHOD_ODS;
  static inline bool Dot11RMethod_IsValid(int value) {
    return AccessPoints_AccessPoint_Ssids_Ssid_Dot11R_Config_Dot11RMethod_IsValid(value);
  }
  static const Dot11RMethod Dot11RMethod_MIN =
    AccessPoints_AccessPoint_Ssids_Ssid_Dot11R_Config_Dot11RMethod_Dot11RMethod_MIN;
  static const Dot11RMethod Dot11RMethod_MAX =
    AccessPoints_AccessPoint_Ssids_Ssid_Dot11R_Config_Dot11RMethod_Dot11RMethod_MAX;
  static const int Dot11RMethod_ARRAYSIZE =
    AccessPoints_AccessPoint_Ssids_Ssid_Dot11R_Config_Dot11RMethod_Dot11RMethod_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Dot11RMethod_descriptor() {
    return AccessPoints_AccessPoint_Ssids_Ssid_Dot11R_Config_Dot11RMethod_descriptor();
  }
  static inline const ::std::string& Dot11RMethod_Name(Dot11RMethod value) {
    return AccessPoints_AccessPoint_Ssids_Ssid_Dot11R_Config_Dot11RMethod_Name(value);
  }
  static inline bool Dot11RMethod_Parse(const ::std::string& name,
      Dot11RMethod* value) {
    return AccessPoints_AccessPoint_Ssids_Ssid_Dot11R_Config_Dot11RMethod_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .ywrapper.BoolValue dot11r = 196944768 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/dot11r/config/dot11r"];
  bool has_dot11r() const;
  void clear_dot11r();
  static const int kDot11RFieldNumber = 196944768;
  const ::ywrapper::BoolValue& dot11r() const;
  ::ywrapper::BoolValue* release_dot11r();
  ::ywrapper::BoolValue* mutable_dot11r();
  void set_allocated_dot11r(::ywrapper::BoolValue* dot11r);

  // .ywrapper.UintValue dot11r_r1key_timeout = 205779077 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/dot11r/config/dot11r-r1key-timeout"];
  bool has_dot11r_r1key_timeout() const;
  void clear_dot11r_r1key_timeout();
  static const int kDot11RR1KeyTimeoutFieldNumber = 205779077;
  const ::ywrapper::UintValue& dot11r_r1key_timeout() const;
  ::ywrapper::UintValue* release_dot11r_r1key_timeout();
  ::ywrapper::UintValue* mutable_dot11r_r1key_timeout();
  void set_allocated_dot11r_r1key_timeout(::ywrapper::UintValue* dot11r_r1key_timeout);

  // .ywrapper.UintValue dot11r_domainid = 381501970 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/dot11r/config/dot11r-domainid"];
  bool has_dot11r_domainid() const;
  void clear_dot11r_domainid();
  static const int kDot11RDomainidFieldNumber = 381501970;
  const ::ywrapper::UintValue& dot11r_domainid() const;
  ::ywrapper::UintValue* release_dot11r_domainid();
  ::ywrapper::UintValue* mutable_dot11r_domainid();
  void set_allocated_dot11r_domainid(::ywrapper::UintValue* dot11r_domainid);

  // .openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Dot11R.Config.Dot11RMethod dot11r_method = 145788970 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/dot11r/config/dot11r-method"];
  void clear_dot11r_method();
  static const int kDot11RMethodFieldNumber = 145788970;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Dot11R_Config_Dot11RMethod dot11r_method() const;
  void set_dot11r_method(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Dot11R_Config_Dot11RMethod value);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Dot11R.Config)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ywrapper::BoolValue* dot11r_;
  ::ywrapper::UintValue* dot11r_r1key_timeout_;
  ::ywrapper::UintValue* dot11r_domainid_;
  int dot11r_method_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::InitDefaultsAccessPoints_AccessPoint_Ssids_Ssid_Dot11R_ConfigImpl();
};
// -------------------------------------------------------------------

class AccessPoints_AccessPoint_Ssids_Ssid_Dot11R_State : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Dot11R.State) */ {
 public:
  AccessPoints_AccessPoint_Ssids_Ssid_Dot11R_State();
  virtual ~AccessPoints_AccessPoint_Ssids_Ssid_Dot11R_State();

  AccessPoints_AccessPoint_Ssids_Ssid_Dot11R_State(const AccessPoints_AccessPoint_Ssids_Ssid_Dot11R_State& from);

  inline AccessPoints_AccessPoint_Ssids_Ssid_Dot11R_State& operator=(const AccessPoints_AccessPoint_Ssids_Ssid_Dot11R_State& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AccessPoints_AccessPoint_Ssids_Ssid_Dot11R_State(AccessPoints_AccessPoint_Ssids_Ssid_Dot11R_State&& from) noexcept
    : AccessPoints_AccessPoint_Ssids_Ssid_Dot11R_State() {
    *this = ::std::move(from);
  }

  inline AccessPoints_AccessPoint_Ssids_Ssid_Dot11R_State& operator=(AccessPoints_AccessPoint_Ssids_Ssid_Dot11R_State&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AccessPoints_AccessPoint_Ssids_Ssid_Dot11R_State& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AccessPoints_AccessPoint_Ssids_Ssid_Dot11R_State* internal_default_instance() {
    return reinterpret_cast<const AccessPoints_AccessPoint_Ssids_Ssid_Dot11R_State*>(
               &_AccessPoints_AccessPoint_Ssids_Ssid_Dot11R_State_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    44;

  void Swap(AccessPoints_AccessPoint_Ssids_Ssid_Dot11R_State* other);
  friend void swap(AccessPoints_AccessPoint_Ssids_Ssid_Dot11R_State& a, AccessPoints_AccessPoint_Ssids_Ssid_Dot11R_State& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AccessPoints_AccessPoint_Ssids_Ssid_Dot11R_State* New() const PROTOBUF_FINAL { return New(NULL); }

  AccessPoints_AccessPoint_Ssids_Ssid_Dot11R_State* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AccessPoints_AccessPoint_Ssids_Ssid_Dot11R_State& from);
  void MergeFrom(const AccessPoints_AccessPoint_Ssids_Ssid_Dot11R_State& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AccessPoints_AccessPoint_Ssids_Ssid_Dot11R_State* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef AccessPoints_AccessPoint_Ssids_Ssid_Dot11R_State_Dot11RMethod Dot11RMethod;
  static const Dot11RMethod DOT11RMETHOD_OVA =
    AccessPoints_AccessPoint_Ssids_Ssid_Dot11R_State_Dot11RMethod_DOT11RMETHOD_OVA;
  static const Dot11RMethod DOT11RMETHOD_ODS =
    AccessPoints_AccessPoint_Ssids_Ssid_Dot11R_State_Dot11RMethod_DOT11RMETHOD_ODS;
  static inline bool Dot11RMethod_IsValid(int value) {
    return AccessPoints_AccessPoint_Ssids_Ssid_Dot11R_State_Dot11RMethod_IsValid(value);
  }
  static const Dot11RMethod Dot11RMethod_MIN =
    AccessPoints_AccessPoint_Ssids_Ssid_Dot11R_State_Dot11RMethod_Dot11RMethod_MIN;
  static const Dot11RMethod Dot11RMethod_MAX =
    AccessPoints_AccessPoint_Ssids_Ssid_Dot11R_State_Dot11RMethod_Dot11RMethod_MAX;
  static const int Dot11RMethod_ARRAYSIZE =
    AccessPoints_AccessPoint_Ssids_Ssid_Dot11R_State_Dot11RMethod_Dot11RMethod_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Dot11RMethod_descriptor() {
    return AccessPoints_AccessPoint_Ssids_Ssid_Dot11R_State_Dot11RMethod_descriptor();
  }
  static inline const ::std::string& Dot11RMethod_Name(Dot11RMethod value) {
    return AccessPoints_AccessPoint_Ssids_Ssid_Dot11R_State_Dot11RMethod_Name(value);
  }
  static inline bool Dot11RMethod_Parse(const ::std::string& name,
      Dot11RMethod* value) {
    return AccessPoints_AccessPoint_Ssids_Ssid_Dot11R_State_Dot11RMethod_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .ywrapper.UintValue dot11r_domainid = 126600447 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/dot11r/state/dot11r-domainid"];
  bool has_dot11r_domainid() const;
  void clear_dot11r_domainid();
  static const int kDot11RDomainidFieldNumber = 126600447;
  const ::ywrapper::UintValue& dot11r_domainid() const;
  ::ywrapper::UintValue* release_dot11r_domainid();
  ::ywrapper::UintValue* mutable_dot11r_domainid();
  void set_allocated_dot11r_domainid(::ywrapper::UintValue* dot11r_domainid);

  // .ywrapper.BoolValue dot11r = 372456859 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/dot11r/state/dot11r"];
  bool has_dot11r() const;
  void clear_dot11r();
  static const int kDot11RFieldNumber = 372456859;
  const ::ywrapper::BoolValue& dot11r() const;
  ::ywrapper::BoolValue* release_dot11r();
  ::ywrapper::BoolValue* mutable_dot11r();
  void set_allocated_dot11r(::ywrapper::BoolValue* dot11r);

  // .ywrapper.UintValue dot11r_r1key_timeout = 438778830 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/dot11r/state/dot11r-r1key-timeout"];
  bool has_dot11r_r1key_timeout() const;
  void clear_dot11r_r1key_timeout();
  static const int kDot11RR1KeyTimeoutFieldNumber = 438778830;
  const ::ywrapper::UintValue& dot11r_r1key_timeout() const;
  ::ywrapper::UintValue* release_dot11r_r1key_timeout();
  ::ywrapper::UintValue* mutable_dot11r_r1key_timeout();
  void set_allocated_dot11r_r1key_timeout(::ywrapper::UintValue* dot11r_r1key_timeout);

  // .openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Dot11R.State.Dot11RMethod dot11r_method = 127604447 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/dot11r/state/dot11r-method"];
  void clear_dot11r_method();
  static const int kDot11RMethodFieldNumber = 127604447;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Dot11R_State_Dot11RMethod dot11r_method() const;
  void set_dot11r_method(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Dot11R_State_Dot11RMethod value);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Dot11R.State)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ywrapper::UintValue* dot11r_domainid_;
  ::ywrapper::BoolValue* dot11r_;
  ::ywrapper::UintValue* dot11r_r1key_timeout_;
  int dot11r_method_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::InitDefaultsAccessPoints_AccessPoint_Ssids_Ssid_Dot11R_StateImpl();
};
// -------------------------------------------------------------------

class AccessPoints_AccessPoint_Ssids_Ssid_Dot11R : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Dot11R) */ {
 public:
  AccessPoints_AccessPoint_Ssids_Ssid_Dot11R();
  virtual ~AccessPoints_AccessPoint_Ssids_Ssid_Dot11R();

  AccessPoints_AccessPoint_Ssids_Ssid_Dot11R(const AccessPoints_AccessPoint_Ssids_Ssid_Dot11R& from);

  inline AccessPoints_AccessPoint_Ssids_Ssid_Dot11R& operator=(const AccessPoints_AccessPoint_Ssids_Ssid_Dot11R& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AccessPoints_AccessPoint_Ssids_Ssid_Dot11R(AccessPoints_AccessPoint_Ssids_Ssid_Dot11R&& from) noexcept
    : AccessPoints_AccessPoint_Ssids_Ssid_Dot11R() {
    *this = ::std::move(from);
  }

  inline AccessPoints_AccessPoint_Ssids_Ssid_Dot11R& operator=(AccessPoints_AccessPoint_Ssids_Ssid_Dot11R&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AccessPoints_AccessPoint_Ssids_Ssid_Dot11R& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AccessPoints_AccessPoint_Ssids_Ssid_Dot11R* internal_default_instance() {
    return reinterpret_cast<const AccessPoints_AccessPoint_Ssids_Ssid_Dot11R*>(
               &_AccessPoints_AccessPoint_Ssids_Ssid_Dot11R_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    45;

  void Swap(AccessPoints_AccessPoint_Ssids_Ssid_Dot11R* other);
  friend void swap(AccessPoints_AccessPoint_Ssids_Ssid_Dot11R& a, AccessPoints_AccessPoint_Ssids_Ssid_Dot11R& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AccessPoints_AccessPoint_Ssids_Ssid_Dot11R* New() const PROTOBUF_FINAL { return New(NULL); }

  AccessPoints_AccessPoint_Ssids_Ssid_Dot11R* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AccessPoints_AccessPoint_Ssids_Ssid_Dot11R& from);
  void MergeFrom(const AccessPoints_AccessPoint_Ssids_Ssid_Dot11R& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AccessPoints_AccessPoint_Ssids_Ssid_Dot11R* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef AccessPoints_AccessPoint_Ssids_Ssid_Dot11R_Config Config;
  typedef AccessPoints_AccessPoint_Ssids_Ssid_Dot11R_State State;

  // accessors -------------------------------------------------------

  // .openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Dot11R.State state = 187410917 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/dot11r/state"];
  bool has_state() const;
  void clear_state();
  static const int kStateFieldNumber = 187410917;
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Dot11R_State& state() const;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Dot11R_State* release_state();
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Dot11R_State* mutable_state();
  void set_allocated_state(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Dot11R_State* state);

  // .openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Dot11R.Config config = 365623788 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/dot11r/config"];
  bool has_config() const;
  void clear_config();
  static const int kConfigFieldNumber = 365623788;
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Dot11R_Config& config() const;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Dot11R_Config* release_config();
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Dot11R_Config* mutable_config();
  void set_allocated_config(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Dot11R_Config* config);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Dot11R)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Dot11R_State* state_;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Dot11R_Config* config_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::InitDefaultsAccessPoints_AccessPoint_Ssids_Ssid_Dot11RImpl();
};
// -------------------------------------------------------------------

class AccessPoints_AccessPoint_Ssids_Ssid_Dot11V_Config : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Dot11V.Config) */ {
 public:
  AccessPoints_AccessPoint_Ssids_Ssid_Dot11V_Config();
  virtual ~AccessPoints_AccessPoint_Ssids_Ssid_Dot11V_Config();

  AccessPoints_AccessPoint_Ssids_Ssid_Dot11V_Config(const AccessPoints_AccessPoint_Ssids_Ssid_Dot11V_Config& from);

  inline AccessPoints_AccessPoint_Ssids_Ssid_Dot11V_Config& operator=(const AccessPoints_AccessPoint_Ssids_Ssid_Dot11V_Config& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AccessPoints_AccessPoint_Ssids_Ssid_Dot11V_Config(AccessPoints_AccessPoint_Ssids_Ssid_Dot11V_Config&& from) noexcept
    : AccessPoints_AccessPoint_Ssids_Ssid_Dot11V_Config() {
    *this = ::std::move(from);
  }

  inline AccessPoints_AccessPoint_Ssids_Ssid_Dot11V_Config& operator=(AccessPoints_AccessPoint_Ssids_Ssid_Dot11V_Config&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AccessPoints_AccessPoint_Ssids_Ssid_Dot11V_Config& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AccessPoints_AccessPoint_Ssids_Ssid_Dot11V_Config* internal_default_instance() {
    return reinterpret_cast<const AccessPoints_AccessPoint_Ssids_Ssid_Dot11V_Config*>(
               &_AccessPoints_AccessPoint_Ssids_Ssid_Dot11V_Config_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    46;

  void Swap(AccessPoints_AccessPoint_Ssids_Ssid_Dot11V_Config* other);
  friend void swap(AccessPoints_AccessPoint_Ssids_Ssid_Dot11V_Config& a, AccessPoints_AccessPoint_Ssids_Ssid_Dot11V_Config& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AccessPoints_AccessPoint_Ssids_Ssid_Dot11V_Config* New() const PROTOBUF_FINAL { return New(NULL); }

  AccessPoints_AccessPoint_Ssids_Ssid_Dot11V_Config* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AccessPoints_AccessPoint_Ssids_Ssid_Dot11V_Config& from);
  void MergeFrom(const AccessPoints_AccessPoint_Ssids_Ssid_Dot11V_Config& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AccessPoints_AccessPoint_Ssids_Ssid_Dot11V_Config* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .ywrapper.BoolValue dot11v_bsstransition = 43017806 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/dot11v/config/dot11v-bsstransition"];
  bool has_dot11v_bsstransition() const;
  void clear_dot11v_bsstransition();
  static const int kDot11VBsstransitionFieldNumber = 43017806;
  const ::ywrapper::BoolValue& dot11v_bsstransition() const;
  ::ywrapper::BoolValue* release_dot11v_bsstransition();
  ::ywrapper::BoolValue* mutable_dot11v_bsstransition();
  void set_allocated_dot11v_bsstransition(::ywrapper::BoolValue* dot11v_bsstransition);

  // .ywrapper.UintValue dot11v_bssidle_timeout = 110172327 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/dot11v/config/dot11v-bssidle-timeout"];
  bool has_dot11v_bssidle_timeout() const;
  void clear_dot11v_bssidle_timeout();
  static const int kDot11VBssidleTimeoutFieldNumber = 110172327;
  const ::ywrapper::UintValue& dot11v_bssidle_timeout() const;
  ::ywrapper::UintValue* release_dot11v_bssidle_timeout();
  ::ywrapper::UintValue* mutable_dot11v_bssidle_timeout();
  void set_allocated_dot11v_bssidle_timeout(::ywrapper::UintValue* dot11v_bssidle_timeout);

  // .ywrapper.BoolValue dot11v_dms = 279296311 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/dot11v/config/dot11v-dms"];
  bool has_dot11v_dms() const;
  void clear_dot11v_dms();
  static const int kDot11VDmsFieldNumber = 279296311;
  const ::ywrapper::BoolValue& dot11v_dms() const;
  ::ywrapper::BoolValue* release_dot11v_dms();
  ::ywrapper::BoolValue* mutable_dot11v_dms();
  void set_allocated_dot11v_dms(::ywrapper::BoolValue* dot11v_dms);

  // .ywrapper.BoolValue dot11v_bssidle = 434441385 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/dot11v/config/dot11v-bssidle"];
  bool has_dot11v_bssidle() const;
  void clear_dot11v_bssidle();
  static const int kDot11VBssidleFieldNumber = 434441385;
  const ::ywrapper::BoolValue& dot11v_bssidle() const;
  ::ywrapper::BoolValue* release_dot11v_bssidle();
  ::ywrapper::BoolValue* mutable_dot11v_bssidle();
  void set_allocated_dot11v_bssidle(::ywrapper::BoolValue* dot11v_bssidle);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Dot11V.Config)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ywrapper::BoolValue* dot11v_bsstransition_;
  ::ywrapper::UintValue* dot11v_bssidle_timeout_;
  ::ywrapper::BoolValue* dot11v_dms_;
  ::ywrapper::BoolValue* dot11v_bssidle_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::InitDefaultsAccessPoints_AccessPoint_Ssids_Ssid_Dot11V_ConfigImpl();
};
// -------------------------------------------------------------------

class AccessPoints_AccessPoint_Ssids_Ssid_Dot11V_State : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Dot11V.State) */ {
 public:
  AccessPoints_AccessPoint_Ssids_Ssid_Dot11V_State();
  virtual ~AccessPoints_AccessPoint_Ssids_Ssid_Dot11V_State();

  AccessPoints_AccessPoint_Ssids_Ssid_Dot11V_State(const AccessPoints_AccessPoint_Ssids_Ssid_Dot11V_State& from);

  inline AccessPoints_AccessPoint_Ssids_Ssid_Dot11V_State& operator=(const AccessPoints_AccessPoint_Ssids_Ssid_Dot11V_State& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AccessPoints_AccessPoint_Ssids_Ssid_Dot11V_State(AccessPoints_AccessPoint_Ssids_Ssid_Dot11V_State&& from) noexcept
    : AccessPoints_AccessPoint_Ssids_Ssid_Dot11V_State() {
    *this = ::std::move(from);
  }

  inline AccessPoints_AccessPoint_Ssids_Ssid_Dot11V_State& operator=(AccessPoints_AccessPoint_Ssids_Ssid_Dot11V_State&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AccessPoints_AccessPoint_Ssids_Ssid_Dot11V_State& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AccessPoints_AccessPoint_Ssids_Ssid_Dot11V_State* internal_default_instance() {
    return reinterpret_cast<const AccessPoints_AccessPoint_Ssids_Ssid_Dot11V_State*>(
               &_AccessPoints_AccessPoint_Ssids_Ssid_Dot11V_State_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    47;

  void Swap(AccessPoints_AccessPoint_Ssids_Ssid_Dot11V_State* other);
  friend void swap(AccessPoints_AccessPoint_Ssids_Ssid_Dot11V_State& a, AccessPoints_AccessPoint_Ssids_Ssid_Dot11V_State& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AccessPoints_AccessPoint_Ssids_Ssid_Dot11V_State* New() const PROTOBUF_FINAL { return New(NULL); }

  AccessPoints_AccessPoint_Ssids_Ssid_Dot11V_State* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AccessPoints_AccessPoint_Ssids_Ssid_Dot11V_State& from);
  void MergeFrom(const AccessPoints_AccessPoint_Ssids_Ssid_Dot11V_State& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AccessPoints_AccessPoint_Ssids_Ssid_Dot11V_State* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .ywrapper.BoolValue dot11v_bsstransition = 122720233 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/dot11v/state/dot11v-bsstransition"];
  bool has_dot11v_bsstransition() const;
  void clear_dot11v_bsstransition();
  static const int kDot11VBsstransitionFieldNumber = 122720233;
  const ::ywrapper::BoolValue& dot11v_bsstransition() const;
  ::ywrapper::BoolValue* release_dot11v_bsstransition();
  ::ywrapper::BoolValue* mutable_dot11v_bsstransition();
  void set_allocated_dot11v_bsstransition(::ywrapper::BoolValue* dot11v_bsstransition);

  // .ywrapper.BoolValue dot11v_bssidle = 401777646 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/dot11v/state/dot11v-bssidle"];
  bool has_dot11v_bssidle() const;
  void clear_dot11v_bssidle();
  static const int kDot11VBssidleFieldNumber = 401777646;
  const ::ywrapper::BoolValue& dot11v_bssidle() const;
  ::ywrapper::BoolValue* release_dot11v_bssidle();
  ::ywrapper::BoolValue* mutable_dot11v_bssidle();
  void set_allocated_dot11v_bssidle(::ywrapper::BoolValue* dot11v_bssidle);

  // .ywrapper.UintValue dot11v_bssidle_timeout = 457719704 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/dot11v/state/dot11v-bssidle-timeout"];
  bool has_dot11v_bssidle_timeout() const;
  void clear_dot11v_bssidle_timeout();
  static const int kDot11VBssidleTimeoutFieldNumber = 457719704;
  const ::ywrapper::UintValue& dot11v_bssidle_timeout() const;
  ::ywrapper::UintValue* release_dot11v_bssidle_timeout();
  ::ywrapper::UintValue* mutable_dot11v_bssidle_timeout();
  void set_allocated_dot11v_bssidle_timeout(::ywrapper::UintValue* dot11v_bssidle_timeout);

  // .ywrapper.BoolValue dot11v_dms = 483158428 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/dot11v/state/dot11v-dms"];
  bool has_dot11v_dms() const;
  void clear_dot11v_dms();
  static const int kDot11VDmsFieldNumber = 483158428;
  const ::ywrapper::BoolValue& dot11v_dms() const;
  ::ywrapper::BoolValue* release_dot11v_dms();
  ::ywrapper::BoolValue* mutable_dot11v_dms();
  void set_allocated_dot11v_dms(::ywrapper::BoolValue* dot11v_dms);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Dot11V.State)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ywrapper::BoolValue* dot11v_bsstransition_;
  ::ywrapper::BoolValue* dot11v_bssidle_;
  ::ywrapper::UintValue* dot11v_bssidle_timeout_;
  ::ywrapper::BoolValue* dot11v_dms_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::InitDefaultsAccessPoints_AccessPoint_Ssids_Ssid_Dot11V_StateImpl();
};
// -------------------------------------------------------------------

class AccessPoints_AccessPoint_Ssids_Ssid_Dot11V : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Dot11V) */ {
 public:
  AccessPoints_AccessPoint_Ssids_Ssid_Dot11V();
  virtual ~AccessPoints_AccessPoint_Ssids_Ssid_Dot11V();

  AccessPoints_AccessPoint_Ssids_Ssid_Dot11V(const AccessPoints_AccessPoint_Ssids_Ssid_Dot11V& from);

  inline AccessPoints_AccessPoint_Ssids_Ssid_Dot11V& operator=(const AccessPoints_AccessPoint_Ssids_Ssid_Dot11V& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AccessPoints_AccessPoint_Ssids_Ssid_Dot11V(AccessPoints_AccessPoint_Ssids_Ssid_Dot11V&& from) noexcept
    : AccessPoints_AccessPoint_Ssids_Ssid_Dot11V() {
    *this = ::std::move(from);
  }

  inline AccessPoints_AccessPoint_Ssids_Ssid_Dot11V& operator=(AccessPoints_AccessPoint_Ssids_Ssid_Dot11V&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AccessPoints_AccessPoint_Ssids_Ssid_Dot11V& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AccessPoints_AccessPoint_Ssids_Ssid_Dot11V* internal_default_instance() {
    return reinterpret_cast<const AccessPoints_AccessPoint_Ssids_Ssid_Dot11V*>(
               &_AccessPoints_AccessPoint_Ssids_Ssid_Dot11V_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    48;

  void Swap(AccessPoints_AccessPoint_Ssids_Ssid_Dot11V* other);
  friend void swap(AccessPoints_AccessPoint_Ssids_Ssid_Dot11V& a, AccessPoints_AccessPoint_Ssids_Ssid_Dot11V& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AccessPoints_AccessPoint_Ssids_Ssid_Dot11V* New() const PROTOBUF_FINAL { return New(NULL); }

  AccessPoints_AccessPoint_Ssids_Ssid_Dot11V* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AccessPoints_AccessPoint_Ssids_Ssid_Dot11V& from);
  void MergeFrom(const AccessPoints_AccessPoint_Ssids_Ssid_Dot11V& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AccessPoints_AccessPoint_Ssids_Ssid_Dot11V* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef AccessPoints_AccessPoint_Ssids_Ssid_Dot11V_Config Config;
  typedef AccessPoints_AccessPoint_Ssids_Ssid_Dot11V_State State;

  // accessors -------------------------------------------------------

  // .openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Dot11V.Config config = 394369536 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/dot11v/config"];
  bool has_config() const;
  void clear_config();
  static const int kConfigFieldNumber = 394369536;
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Dot11V_Config& config() const;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Dot11V_Config* release_config();
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Dot11V_Config* mutable_config();
  void set_allocated_config(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Dot11V_Config* config);

  // .openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Dot11V.State state = 456876793 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/dot11v/state"];
  bool has_state() const;
  void clear_state();
  static const int kStateFieldNumber = 456876793;
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Dot11V_State& state() const;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Dot11V_State* release_state();
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Dot11V_State* mutable_state();
  void set_allocated_state(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Dot11V_State* state);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Dot11V)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Dot11V_Config* config_;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Dot11V_State* state_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::InitDefaultsAccessPoints_AccessPoint_Ssids_Ssid_Dot11VImpl();
};
// -------------------------------------------------------------------

class AccessPoints_AccessPoint_Ssids_Ssid_Dot1XTimers_Config : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Dot1XTimers.Config) */ {
 public:
  AccessPoints_AccessPoint_Ssids_Ssid_Dot1XTimers_Config();
  virtual ~AccessPoints_AccessPoint_Ssids_Ssid_Dot1XTimers_Config();

  AccessPoints_AccessPoint_Ssids_Ssid_Dot1XTimers_Config(const AccessPoints_AccessPoint_Ssids_Ssid_Dot1XTimers_Config& from);

  inline AccessPoints_AccessPoint_Ssids_Ssid_Dot1XTimers_Config& operator=(const AccessPoints_AccessPoint_Ssids_Ssid_Dot1XTimers_Config& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AccessPoints_AccessPoint_Ssids_Ssid_Dot1XTimers_Config(AccessPoints_AccessPoint_Ssids_Ssid_Dot1XTimers_Config&& from) noexcept
    : AccessPoints_AccessPoint_Ssids_Ssid_Dot1XTimers_Config() {
    *this = ::std::move(from);
  }

  inline AccessPoints_AccessPoint_Ssids_Ssid_Dot1XTimers_Config& operator=(AccessPoints_AccessPoint_Ssids_Ssid_Dot1XTimers_Config&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AccessPoints_AccessPoint_Ssids_Ssid_Dot1XTimers_Config& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AccessPoints_AccessPoint_Ssids_Ssid_Dot1XTimers_Config* internal_default_instance() {
    return reinterpret_cast<const AccessPoints_AccessPoint_Ssids_Ssid_Dot1XTimers_Config*>(
               &_AccessPoints_AccessPoint_Ssids_Ssid_Dot1XTimers_Config_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    49;

  void Swap(AccessPoints_AccessPoint_Ssids_Ssid_Dot1XTimers_Config* other);
  friend void swap(AccessPoints_AccessPoint_Ssids_Ssid_Dot1XTimers_Config& a, AccessPoints_AccessPoint_Ssids_Ssid_Dot1XTimers_Config& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AccessPoints_AccessPoint_Ssids_Ssid_Dot1XTimers_Config* New() const PROTOBUF_FINAL { return New(NULL); }

  AccessPoints_AccessPoint_Ssids_Ssid_Dot1XTimers_Config* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AccessPoints_AccessPoint_Ssids_Ssid_Dot1XTimers_Config& from);
  void MergeFrom(const AccessPoints_AccessPoint_Ssids_Ssid_Dot1XTimers_Config& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AccessPoints_AccessPoint_Ssids_Ssid_Dot1XTimers_Config* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .ywrapper.UintValue max_auth_failures = 83251860 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/dot1x-timers/config/max-auth-failures"];
  bool has_max_auth_failures() const;
  void clear_max_auth_failures();
  static const int kMaxAuthFailuresFieldNumber = 83251860;
  const ::ywrapper::UintValue& max_auth_failures() const;
  ::ywrapper::UintValue* release_max_auth_failures();
  ::ywrapper::UintValue* mutable_max_auth_failures();
  void set_allocated_max_auth_failures(::ywrapper::UintValue* max_auth_failures);

  // .ywrapper.UintValue blacklist_time = 191265768 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/dot1x-timers/config/blacklist-time"];
  bool has_blacklist_time() const;
  void clear_blacklist_time();
  static const int kBlacklistTimeFieldNumber = 191265768;
  const ::ywrapper::UintValue& blacklist_time() const;
  ::ywrapper::UintValue* release_blacklist_time();
  ::ywrapper::UintValue* mutable_blacklist_time();
  void set_allocated_blacklist_time(::ywrapper::UintValue* blacklist_time);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Dot1XTimers.Config)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ywrapper::UintValue* max_auth_failures_;
  ::ywrapper::UintValue* blacklist_time_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::InitDefaultsAccessPoints_AccessPoint_Ssids_Ssid_Dot1XTimers_ConfigImpl();
};
// -------------------------------------------------------------------

class AccessPoints_AccessPoint_Ssids_Ssid_Dot1XTimers_State : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Dot1XTimers.State) */ {
 public:
  AccessPoints_AccessPoint_Ssids_Ssid_Dot1XTimers_State();
  virtual ~AccessPoints_AccessPoint_Ssids_Ssid_Dot1XTimers_State();

  AccessPoints_AccessPoint_Ssids_Ssid_Dot1XTimers_State(const AccessPoints_AccessPoint_Ssids_Ssid_Dot1XTimers_State& from);

  inline AccessPoints_AccessPoint_Ssids_Ssid_Dot1XTimers_State& operator=(const AccessPoints_AccessPoint_Ssids_Ssid_Dot1XTimers_State& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AccessPoints_AccessPoint_Ssids_Ssid_Dot1XTimers_State(AccessPoints_AccessPoint_Ssids_Ssid_Dot1XTimers_State&& from) noexcept
    : AccessPoints_AccessPoint_Ssids_Ssid_Dot1XTimers_State() {
    *this = ::std::move(from);
  }

  inline AccessPoints_AccessPoint_Ssids_Ssid_Dot1XTimers_State& operator=(AccessPoints_AccessPoint_Ssids_Ssid_Dot1XTimers_State&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AccessPoints_AccessPoint_Ssids_Ssid_Dot1XTimers_State& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AccessPoints_AccessPoint_Ssids_Ssid_Dot1XTimers_State* internal_default_instance() {
    return reinterpret_cast<const AccessPoints_AccessPoint_Ssids_Ssid_Dot1XTimers_State*>(
               &_AccessPoints_AccessPoint_Ssids_Ssid_Dot1XTimers_State_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    50;

  void Swap(AccessPoints_AccessPoint_Ssids_Ssid_Dot1XTimers_State* other);
  friend void swap(AccessPoints_AccessPoint_Ssids_Ssid_Dot1XTimers_State& a, AccessPoints_AccessPoint_Ssids_Ssid_Dot1XTimers_State& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AccessPoints_AccessPoint_Ssids_Ssid_Dot1XTimers_State* New() const PROTOBUF_FINAL { return New(NULL); }

  AccessPoints_AccessPoint_Ssids_Ssid_Dot1XTimers_State* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AccessPoints_AccessPoint_Ssids_Ssid_Dot1XTimers_State& from);
  void MergeFrom(const AccessPoints_AccessPoint_Ssids_Ssid_Dot1XTimers_State& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AccessPoints_AccessPoint_Ssids_Ssid_Dot1XTimers_State* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .ywrapper.UintValue blacklist_time = 125053003 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/dot1x-timers/state/blacklist-time"];
  bool has_blacklist_time() const;
  void clear_blacklist_time();
  static const int kBlacklistTimeFieldNumber = 125053003;
  const ::ywrapper::UintValue& blacklist_time() const;
  ::ywrapper::UintValue* release_blacklist_time();
  ::ywrapper::UintValue* mutable_blacklist_time();
  void set_allocated_blacklist_time(::ywrapper::UintValue* blacklist_time);

  // .ywrapper.UintValue max_auth_failures = 359065421 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/dot1x-timers/state/max-auth-failures"];
  bool has_max_auth_failures() const;
  void clear_max_auth_failures();
  static const int kMaxAuthFailuresFieldNumber = 359065421;
  const ::ywrapper::UintValue& max_auth_failures() const;
  ::ywrapper::UintValue* release_max_auth_failures();
  ::ywrapper::UintValue* mutable_max_auth_failures();
  void set_allocated_max_auth_failures(::ywrapper::UintValue* max_auth_failures);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Dot1XTimers.State)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ywrapper::UintValue* blacklist_time_;
  ::ywrapper::UintValue* max_auth_failures_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::InitDefaultsAccessPoints_AccessPoint_Ssids_Ssid_Dot1XTimers_StateImpl();
};
// -------------------------------------------------------------------

class AccessPoints_AccessPoint_Ssids_Ssid_Dot1XTimers : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Dot1XTimers) */ {
 public:
  AccessPoints_AccessPoint_Ssids_Ssid_Dot1XTimers();
  virtual ~AccessPoints_AccessPoint_Ssids_Ssid_Dot1XTimers();

  AccessPoints_AccessPoint_Ssids_Ssid_Dot1XTimers(const AccessPoints_AccessPoint_Ssids_Ssid_Dot1XTimers& from);

  inline AccessPoints_AccessPoint_Ssids_Ssid_Dot1XTimers& operator=(const AccessPoints_AccessPoint_Ssids_Ssid_Dot1XTimers& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AccessPoints_AccessPoint_Ssids_Ssid_Dot1XTimers(AccessPoints_AccessPoint_Ssids_Ssid_Dot1XTimers&& from) noexcept
    : AccessPoints_AccessPoint_Ssids_Ssid_Dot1XTimers() {
    *this = ::std::move(from);
  }

  inline AccessPoints_AccessPoint_Ssids_Ssid_Dot1XTimers& operator=(AccessPoints_AccessPoint_Ssids_Ssid_Dot1XTimers&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AccessPoints_AccessPoint_Ssids_Ssid_Dot1XTimers& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AccessPoints_AccessPoint_Ssids_Ssid_Dot1XTimers* internal_default_instance() {
    return reinterpret_cast<const AccessPoints_AccessPoint_Ssids_Ssid_Dot1XTimers*>(
               &_AccessPoints_AccessPoint_Ssids_Ssid_Dot1XTimers_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    51;

  void Swap(AccessPoints_AccessPoint_Ssids_Ssid_Dot1XTimers* other);
  friend void swap(AccessPoints_AccessPoint_Ssids_Ssid_Dot1XTimers& a, AccessPoints_AccessPoint_Ssids_Ssid_Dot1XTimers& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AccessPoints_AccessPoint_Ssids_Ssid_Dot1XTimers* New() const PROTOBUF_FINAL { return New(NULL); }

  AccessPoints_AccessPoint_Ssids_Ssid_Dot1XTimers* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AccessPoints_AccessPoint_Ssids_Ssid_Dot1XTimers& from);
  void MergeFrom(const AccessPoints_AccessPoint_Ssids_Ssid_Dot1XTimers& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AccessPoints_AccessPoint_Ssids_Ssid_Dot1XTimers* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef AccessPoints_AccessPoint_Ssids_Ssid_Dot1XTimers_Config Config;
  typedef AccessPoints_AccessPoint_Ssids_Ssid_Dot1XTimers_State State;

  // accessors -------------------------------------------------------

  // .openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Dot1XTimers.Config config = 41791642 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/dot1x-timers/config"];
  bool has_config() const;
  void clear_config();
  static const int kConfigFieldNumber = 41791642;
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Dot1XTimers_Config& config() const;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Dot1XTimers_Config* release_config();
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Dot1XTimers_Config* mutable_config();
  void set_allocated_config(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Dot1XTimers_Config* config);

  // .openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Dot1XTimers.State state = 264748855 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/dot1x-timers/state"];
  bool has_state() const;
  void clear_state();
  static const int kStateFieldNumber = 264748855;
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Dot1XTimers_State& state() const;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Dot1XTimers_State* release_state();
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Dot1XTimers_State* mutable_state();
  void set_allocated_state(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Dot1XTimers_State* state);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Dot1XTimers)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Dot1XTimers_Config* config_;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Dot1XTimers_State* state_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::InitDefaultsAccessPoints_AccessPoint_Ssids_Ssid_Dot1XTimersImpl();
};
// -------------------------------------------------------------------

class AccessPoints_AccessPoint_Ssids_Ssid_State : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.State) */ {
 public:
  AccessPoints_AccessPoint_Ssids_Ssid_State();
  virtual ~AccessPoints_AccessPoint_Ssids_Ssid_State();

  AccessPoints_AccessPoint_Ssids_Ssid_State(const AccessPoints_AccessPoint_Ssids_Ssid_State& from);

  inline AccessPoints_AccessPoint_Ssids_Ssid_State& operator=(const AccessPoints_AccessPoint_Ssids_Ssid_State& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AccessPoints_AccessPoint_Ssids_Ssid_State(AccessPoints_AccessPoint_Ssids_Ssid_State&& from) noexcept
    : AccessPoints_AccessPoint_Ssids_Ssid_State() {
    *this = ::std::move(from);
  }

  inline AccessPoints_AccessPoint_Ssids_Ssid_State& operator=(AccessPoints_AccessPoint_Ssids_Ssid_State&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AccessPoints_AccessPoint_Ssids_Ssid_State& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AccessPoints_AccessPoint_Ssids_Ssid_State* internal_default_instance() {
    return reinterpret_cast<const AccessPoints_AccessPoint_Ssids_Ssid_State*>(
               &_AccessPoints_AccessPoint_Ssids_Ssid_State_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    52;

  void Swap(AccessPoints_AccessPoint_Ssids_Ssid_State* other);
  friend void swap(AccessPoints_AccessPoint_Ssids_Ssid_State& a, AccessPoints_AccessPoint_Ssids_Ssid_State& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AccessPoints_AccessPoint_Ssids_Ssid_State* New() const PROTOBUF_FINAL { return New(NULL); }

  AccessPoints_AccessPoint_Ssids_Ssid_State* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AccessPoints_AccessPoint_Ssids_Ssid_State& from);
  void MergeFrom(const AccessPoints_AccessPoint_Ssids_Ssid_State& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AccessPoints_AccessPoint_Ssids_Ssid_State* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef AccessPoints_AccessPoint_Ssids_Ssid_State_Opmode Opmode;
  static const Opmode OPMODE_OPEN =
    AccessPoints_AccessPoint_Ssids_Ssid_State_Opmode_OPMODE_OPEN;
  static const Opmode OPMODE_WPA2_PERSONAL =
    AccessPoints_AccessPoint_Ssids_Ssid_State_Opmode_OPMODE_WPA2_PERSONAL;
  static const Opmode OPMODE_WPA2_ENTERPRISE =
    AccessPoints_AccessPoint_Ssids_Ssid_State_Opmode_OPMODE_WPA2_ENTERPRISE;
  static inline bool Opmode_IsValid(int value) {
    return AccessPoints_AccessPoint_Ssids_Ssid_State_Opmode_IsValid(value);
  }
  static const Opmode Opmode_MIN =
    AccessPoints_AccessPoint_Ssids_Ssid_State_Opmode_Opmode_MIN;
  static const Opmode Opmode_MAX =
    AccessPoints_AccessPoint_Ssids_Ssid_State_Opmode_Opmode_MAX;
  static const int Opmode_ARRAYSIZE =
    AccessPoints_AccessPoint_Ssids_Ssid_State_Opmode_Opmode_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Opmode_descriptor() {
    return AccessPoints_AccessPoint_Ssids_Ssid_State_Opmode_descriptor();
  }
  static inline const ::std::string& Opmode_Name(Opmode value) {
    return AccessPoints_AccessPoint_Ssids_Ssid_State_Opmode_Name(value);
  }
  static inline bool Opmode_Parse(const ::std::string& name,
      Opmode* value) {
    return AccessPoints_AccessPoint_Ssids_Ssid_State_Opmode_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .openconfig.enums.OpenconfigWifiTypesDATARATE supported_data_rates = 228371723 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/state/supported-data-rates"];
  int supported_data_rates_size() const;
  void clear_supported_data_rates();
  static const int kSupportedDataRatesFieldNumber = 228371723;
  ::openconfig::enums::OpenconfigWifiTypesDATARATE supported_data_rates(int index) const;
  void set_supported_data_rates(int index, ::openconfig::enums::OpenconfigWifiTypesDATARATE value);
  void add_supported_data_rates(::openconfig::enums::OpenconfigWifiTypesDATARATE value);
  const ::google::protobuf::RepeatedField<int>& supported_data_rates() const;
  ::google::protobuf::RepeatedField<int>* mutable_supported_data_rates();

  // repeated .openconfig.enums.OpenconfigWifiTypesDATARATE basic_data_rates = 429901571 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/state/basic-data-rates"];
  int basic_data_rates_size() const;
  void clear_basic_data_rates();
  static const int kBasicDataRatesFieldNumber = 429901571;
  ::openconfig::enums::OpenconfigWifiTypesDATARATE basic_data_rates(int index) const;
  void set_basic_data_rates(int index, ::openconfig::enums::OpenconfigWifiTypesDATARATE value);
  void add_basic_data_rates(::openconfig::enums::OpenconfigWifiTypesDATARATE value);
  const ::google::protobuf::RepeatedField<int>& basic_data_rates() const;
  ::google::protobuf::RepeatedField<int>* mutable_basic_data_rates();

  // .ywrapper.UintValue rx_bss_dot11_channel_utilization = 55829402 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/state/rx-bss-dot11-channel-utilization"];
  bool has_rx_bss_dot11_channel_utilization() const;
  void clear_rx_bss_dot11_channel_utilization();
  static const int kRxBssDot11ChannelUtilizationFieldNumber = 55829402;
  const ::ywrapper::UintValue& rx_bss_dot11_channel_utilization() const;
  ::ywrapper::UintValue* release_rx_bss_dot11_channel_utilization();
  ::ywrapper::UintValue* mutable_rx_bss_dot11_channel_utilization();
  void set_allocated_rx_bss_dot11_channel_utilization(::ywrapper::UintValue* rx_bss_dot11_channel_utilization);

  // .ywrapper.BoolValue csa = 59256861 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/state/csa"];
  bool has_csa() const;
  void clear_csa();
  static const int kCsaFieldNumber = 59256861;
  const ::ywrapper::BoolValue& csa() const;
  ::ywrapper::BoolValue* release_csa();
  ::ywrapper::BoolValue* mutable_csa();
  void set_allocated_csa(::ywrapper::BoolValue* csa);

  // .ywrapper.UintValue vlan_id = 86712261 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/state/vlan-id"];
  bool has_vlan_id() const;
  void clear_vlan_id();
  static const int kVlanIdFieldNumber = 86712261;
  const ::ywrapper::UintValue& vlan_id() const;
  ::ywrapper::UintValue* release_vlan_id();
  ::ywrapper::UintValue* mutable_vlan_id();
  void set_allocated_vlan_id(::ywrapper::UintValue* vlan_id);

  // .ywrapper.BoolValue multicast_filter = 119570051 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/state/multicast-filter"];
  bool has_multicast_filter() const;
  void clear_multicast_filter();
  static const int kMulticastFilterFieldNumber = 119570051;
  const ::ywrapper::BoolValue& multicast_filter() const;
  ::ywrapper::BoolValue* release_multicast_filter();
  ::ywrapper::BoolValue* mutable_multicast_filter();
  void set_allocated_multicast_filter(::ywrapper::BoolValue* multicast_filter);

  // .ywrapper.BoolValue broadcast_filter = 133669362 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/state/broadcast-filter"];
  bool has_broadcast_filter() const;
  void clear_broadcast_filter();
  static const int kBroadcastFilterFieldNumber = 133669362;
  const ::ywrapper::BoolValue& broadcast_filter() const;
  ::ywrapper::BoolValue* release_broadcast_filter();
  ::ywrapper::BoolValue* mutable_broadcast_filter();
  void set_allocated_broadcast_filter(::ywrapper::BoolValue* broadcast_filter);

  // .ywrapper.BoolValue ipv6_ndp_filter = 176007639 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/state/ipv6-ndp-filter"];
  bool has_ipv6_ndp_filter() const;
  void clear_ipv6_ndp_filter();
  static const int kIpv6NdpFilterFieldNumber = 176007639;
  const ::ywrapper::BoolValue& ipv6_ndp_filter() const;
  ::ywrapper::BoolValue* release_ipv6_ndp_filter();
  ::ywrapper::BoolValue* mutable_ipv6_ndp_filter();
  void set_allocated_ipv6_ndp_filter(::ywrapper::BoolValue* ipv6_ndp_filter);

  // .ywrapper.UintValue tx_bss_dot11_channel_utilization = 183037380 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/state/tx-bss-dot11-channel-utilization"];
  bool has_tx_bss_dot11_channel_utilization() const;
  void clear_tx_bss_dot11_channel_utilization();
  static const int kTxBssDot11ChannelUtilizationFieldNumber = 183037380;
  const ::ywrapper::UintValue& tx_bss_dot11_channel_utilization() const;
  ::ywrapper::UintValue* release_tx_bss_dot11_channel_utilization();
  ::ywrapper::UintValue* mutable_tx_bss_dot11_channel_utilization();
  void set_allocated_tx_bss_dot11_channel_utilization(::ywrapper::UintValue* tx_bss_dot11_channel_utilization);

  // .ywrapper.BoolValue enabled = 225551097 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/state/enabled"];
  bool has_enabled() const;
  void clear_enabled();
  static const int kEnabledFieldNumber = 225551097;
  const ::ywrapper::BoolValue& enabled() const;
  ::ywrapper::BoolValue* release_enabled();
  ::ywrapper::BoolValue* mutable_enabled();
  void set_allocated_enabled(::ywrapper::BoolValue* enabled);

  // .ywrapper.BoolValue dhcp_required = 236914407 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/state/dhcp-required"];
  bool has_dhcp_required() const;
  void clear_dhcp_required();
  static const int kDhcpRequiredFieldNumber = 236914407;
  const ::ywrapper::BoolValue& dhcp_required() const;
  ::ywrapper::BoolValue* release_dhcp_required();
  ::ywrapper::BoolValue* mutable_dhcp_required();
  void set_allocated_dhcp_required(::ywrapper::BoolValue* dhcp_required);

  // .ywrapper.BoolValue dva = 243369577 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/state/dva"];
  bool has_dva() const;
  void clear_dva();
  static const int kDvaFieldNumber = 243369577;
  const ::ywrapper::BoolValue& dva() const;
  ::ywrapper::BoolValue* release_dva();
  ::ywrapper::BoolValue* mutable_dva();
  void set_allocated_dva(::ywrapper::BoolValue* dva);

  // .ywrapper.UintValue ipv6_ndp_filter_timer = 262242867 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/state/ipv6-ndp-filter-timer"];
  bool has_ipv6_ndp_filter_timer() const;
  void clear_ipv6_ndp_filter_timer();
  static const int kIpv6NdpFilterTimerFieldNumber = 262242867;
  const ::ywrapper::UintValue& ipv6_ndp_filter_timer() const;
  ::ywrapper::UintValue* release_ipv6_ndp_filter_timer();
  ::ywrapper::UintValue* mutable_ipv6_ndp_filter_timer();
  void set_allocated_ipv6_ndp_filter_timer(::ywrapper::UintValue* ipv6_ndp_filter_timer);

  // .ywrapper.UintValue ptk_timeout = 297425039 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/state/ptk-timeout"];
  bool has_ptk_timeout() const;
  void clear_ptk_timeout();
  static const int kPtkTimeoutFieldNumber = 297425039;
  const ::ywrapper::UintValue& ptk_timeout() const;
  ::ywrapper::UintValue* release_ptk_timeout();
  ::ywrapper::UintValue* mutable_ptk_timeout();
  void set_allocated_ptk_timeout(::ywrapper::UintValue* ptk_timeout);

  // .ywrapper.BoolValue dot11k = 319747484 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/state/dot11k"];
  bool has_dot11k() const;
  void clear_dot11k();
  static const int kDot11KFieldNumber = 319747484;
  const ::ywrapper::BoolValue& dot11k() const;
  ::ywrapper::BoolValue* release_dot11k();
  ::ywrapper::BoolValue* mutable_dot11k();
  void set_allocated_dot11k(::ywrapper::BoolValue* dot11k);

  // .ywrapper.BoolValue okc = 325817691 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/state/okc"];
  bool has_okc() const;
  void clear_okc();
  static const int kOkcFieldNumber = 325817691;
  const ::ywrapper::BoolValue& okc() const;
  ::ywrapper::BoolValue* release_okc();
  ::ywrapper::BoolValue* mutable_okc();
  void set_allocated_okc(::ywrapper::BoolValue* okc);

  // .ywrapper.BoolValue hidden = 331176626 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/state/hidden"];
  bool has_hidden() const;
  void clear_hidden();
  static const int kHiddenFieldNumber = 331176626;
  const ::ywrapper::BoolValue& hidden() const;
  ::ywrapper::BoolValue* release_hidden();
  ::ywrapper::BoolValue* mutable_hidden();
  void set_allocated_hidden(::ywrapper::BoolValue* hidden);

  // .ywrapper.StringValue bssid = 389927797 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/state/bssid"];
  bool has_bssid() const;
  void clear_bssid();
  static const int kBssidFieldNumber = 389927797;
  const ::ywrapper::StringValue& bssid() const;
  ::ywrapper::StringValue* release_bssid();
  ::ywrapper::StringValue* mutable_bssid();
  void set_allocated_bssid(::ywrapper::StringValue* bssid);

  // .ywrapper.StringValue wpa2_psk = 400666171 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/state/wpa2-psk"];
  bool has_wpa2_psk() const;
  void clear_wpa2_psk();
  static const int kWpa2PskFieldNumber = 400666171;
  const ::ywrapper::StringValue& wpa2_psk() const;
  ::ywrapper::StringValue* release_wpa2_psk();
  ::ywrapper::StringValue* mutable_wpa2_psk();
  void set_allocated_wpa2_psk(::ywrapper::StringValue* wpa2_psk);

  // .ywrapper.StringValue mobility_domain = 409101826 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/state/mobility-domain"];
  bool has_mobility_domain() const;
  void clear_mobility_domain();
  static const int kMobilityDomainFieldNumber = 409101826;
  const ::ywrapper::StringValue& mobility_domain() const;
  ::ywrapper::StringValue* release_mobility_domain();
  ::ywrapper::StringValue* mutable_mobility_domain();
  void set_allocated_mobility_domain(::ywrapper::StringValue* mobility_domain);

  // .ywrapper.BoolValue advertise_apname = 412181604 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/state/advertise-apname"];
  bool has_advertise_apname() const;
  void clear_advertise_apname();
  static const int kAdvertiseApnameFieldNumber = 412181604;
  const ::ywrapper::BoolValue& advertise_apname() const;
  ::ywrapper::BoolValue* release_advertise_apname();
  ::ywrapper::BoolValue* mutable_advertise_apname();
  void set_allocated_advertise_apname(::ywrapper::BoolValue* advertise_apname);

  // .ywrapper.StringValue server_group = 419194997 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/state/server-group"];
  bool has_server_group() const;
  void clear_server_group();
  static const int kServerGroupFieldNumber = 419194997;
  const ::ywrapper::StringValue& server_group() const;
  ::ywrapper::StringValue* release_server_group();
  ::ywrapper::StringValue* mutable_server_group();
  void set_allocated_server_group(::ywrapper::StringValue* server_group);

  // .ywrapper.UintValue bss_channel_utilization = 470396063 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/state/bss-channel-utilization"];
  bool has_bss_channel_utilization() const;
  void clear_bss_channel_utilization();
  static const int kBssChannelUtilizationFieldNumber = 470396063;
  const ::ywrapper::UintValue& bss_channel_utilization() const;
  ::ywrapper::UintValue* release_bss_channel_utilization();
  ::ywrapper::UintValue* mutable_bss_channel_utilization();
  void set_allocated_bss_channel_utilization(::ywrapper::UintValue* bss_channel_utilization);

  // .ywrapper.StringValue name = 479156751 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/state/name"];
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 479156751;
  const ::ywrapper::StringValue& name() const;
  ::ywrapper::StringValue* release_name();
  ::ywrapper::StringValue* mutable_name();
  void set_allocated_name(::ywrapper::StringValue* name);

  // .ywrapper.UintValue gtk_timeout = 495434912 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/state/gtk-timeout"];
  bool has_gtk_timeout() const;
  void clear_gtk_timeout();
  static const int kGtkTimeoutFieldNumber = 495434912;
  const ::ywrapper::UintValue& gtk_timeout() const;
  ::ywrapper::UintValue* release_gtk_timeout();
  ::ywrapper::UintValue* mutable_gtk_timeout();
  void set_allocated_gtk_timeout(::ywrapper::UintValue* gtk_timeout);

  // .ywrapper.BoolValue qbss_load = 495740174 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/state/qbss-load"];
  bool has_qbss_load() const;
  void clear_qbss_load();
  static const int kQbssLoadFieldNumber = 495740174;
  const ::ywrapper::BoolValue& qbss_load() const;
  ::ywrapper::BoolValue* release_qbss_load();
  ::ywrapper::BoolValue* mutable_qbss_load();
  void set_allocated_qbss_load(::ywrapper::BoolValue* qbss_load);

  // .ywrapper.BoolValue station_isolation = 526443173 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/state/station-isolation"];
  bool has_station_isolation() const;
  void clear_station_isolation();
  static const int kStationIsolationFieldNumber = 526443173;
  const ::ywrapper::BoolValue& station_isolation() const;
  ::ywrapper::BoolValue* release_station_isolation();
  ::ywrapper::BoolValue* mutable_station_isolation();
  void set_allocated_station_isolation(::ywrapper::BoolValue* station_isolation);

  // .openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.State.Opmode opmode = 84890626 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/state/opmode"];
  void clear_opmode();
  static const int kOpmodeFieldNumber = 84890626;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_State_Opmode opmode() const;
  void set_opmode(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_State_Opmode value);

  // .openconfig.enums.OpenconfigWifiTypesOPERATINGFREQUENCY operating_frequency = 198036886 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/state/operating-frequency"];
  void clear_operating_frequency();
  static const int kOperatingFrequencyFieldNumber = 198036886;
  ::openconfig::enums::OpenconfigWifiTypesOPERATINGFREQUENCY operating_frequency() const;
  void set_operating_frequency(::openconfig::enums::OpenconfigWifiTypesOPERATINGFREQUENCY value);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.State)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField<int> supported_data_rates_;
  mutable int _supported_data_rates_cached_byte_size_;
  ::google::protobuf::RepeatedField<int> basic_data_rates_;
  mutable int _basic_data_rates_cached_byte_size_;
  ::ywrapper::UintValue* rx_bss_dot11_channel_utilization_;
  ::ywrapper::BoolValue* csa_;
  ::ywrapper::UintValue* vlan_id_;
  ::ywrapper::BoolValue* multicast_filter_;
  ::ywrapper::BoolValue* broadcast_filter_;
  ::ywrapper::BoolValue* ipv6_ndp_filter_;
  ::ywrapper::UintValue* tx_bss_dot11_channel_utilization_;
  ::ywrapper::BoolValue* enabled_;
  ::ywrapper::BoolValue* dhcp_required_;
  ::ywrapper::BoolValue* dva_;
  ::ywrapper::UintValue* ipv6_ndp_filter_timer_;
  ::ywrapper::UintValue* ptk_timeout_;
  ::ywrapper::BoolValue* dot11k_;
  ::ywrapper::BoolValue* okc_;
  ::ywrapper::BoolValue* hidden_;
  ::ywrapper::StringValue* bssid_;
  ::ywrapper::StringValue* wpa2_psk_;
  ::ywrapper::StringValue* mobility_domain_;
  ::ywrapper::BoolValue* advertise_apname_;
  ::ywrapper::StringValue* server_group_;
  ::ywrapper::UintValue* bss_channel_utilization_;
  ::ywrapper::StringValue* name_;
  ::ywrapper::UintValue* gtk_timeout_;
  ::ywrapper::BoolValue* qbss_load_;
  ::ywrapper::BoolValue* station_isolation_;
  int opmode_;
  int operating_frequency_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::InitDefaultsAccessPoints_AccessPoint_Ssids_Ssid_StateImpl();
};
// -------------------------------------------------------------------

class AccessPoints_AccessPoint_Ssids_Ssid_Wmm_Config : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Wmm.Config) */ {
 public:
  AccessPoints_AccessPoint_Ssids_Ssid_Wmm_Config();
  virtual ~AccessPoints_AccessPoint_Ssids_Ssid_Wmm_Config();

  AccessPoints_AccessPoint_Ssids_Ssid_Wmm_Config(const AccessPoints_AccessPoint_Ssids_Ssid_Wmm_Config& from);

  inline AccessPoints_AccessPoint_Ssids_Ssid_Wmm_Config& operator=(const AccessPoints_AccessPoint_Ssids_Ssid_Wmm_Config& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AccessPoints_AccessPoint_Ssids_Ssid_Wmm_Config(AccessPoints_AccessPoint_Ssids_Ssid_Wmm_Config&& from) noexcept
    : AccessPoints_AccessPoint_Ssids_Ssid_Wmm_Config() {
    *this = ::std::move(from);
  }

  inline AccessPoints_AccessPoint_Ssids_Ssid_Wmm_Config& operator=(AccessPoints_AccessPoint_Ssids_Ssid_Wmm_Config&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AccessPoints_AccessPoint_Ssids_Ssid_Wmm_Config& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AccessPoints_AccessPoint_Ssids_Ssid_Wmm_Config* internal_default_instance() {
    return reinterpret_cast<const AccessPoints_AccessPoint_Ssids_Ssid_Wmm_Config*>(
               &_AccessPoints_AccessPoint_Ssids_Ssid_Wmm_Config_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    53;

  void Swap(AccessPoints_AccessPoint_Ssids_Ssid_Wmm_Config* other);
  friend void swap(AccessPoints_AccessPoint_Ssids_Ssid_Wmm_Config& a, AccessPoints_AccessPoint_Ssids_Ssid_Wmm_Config& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AccessPoints_AccessPoint_Ssids_Ssid_Wmm_Config* New() const PROTOBUF_FINAL { return New(NULL); }

  AccessPoints_AccessPoint_Ssids_Ssid_Wmm_Config* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AccessPoints_AccessPoint_Ssids_Ssid_Wmm_Config& from);
  void MergeFrom(const AccessPoints_AccessPoint_Ssids_Ssid_Wmm_Config& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AccessPoints_AccessPoint_Ssids_Ssid_Wmm_Config* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .ywrapper.UintValue wmm_bk_remark = 117664315 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/wmm/config/wmm-bk-remark"];
  int wmm_bk_remark_size() const;
  void clear_wmm_bk_remark();
  static const int kWmmBkRemarkFieldNumber = 117664315;
  const ::ywrapper::UintValue& wmm_bk_remark(int index) const;
  ::ywrapper::UintValue* mutable_wmm_bk_remark(int index);
  ::ywrapper::UintValue* add_wmm_bk_remark();
  ::google::protobuf::RepeatedPtrField< ::ywrapper::UintValue >*
      mutable_wmm_bk_remark();
  const ::google::protobuf::RepeatedPtrField< ::ywrapper::UintValue >&
      wmm_bk_remark() const;

  // repeated .ywrapper.UintValue wmm_be_remark = 236406069 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/wmm/config/wmm-be-remark"];
  int wmm_be_remark_size() const;
  void clear_wmm_be_remark();
  static const int kWmmBeRemarkFieldNumber = 236406069;
  const ::ywrapper::UintValue& wmm_be_remark(int index) const;
  ::ywrapper::UintValue* mutable_wmm_be_remark(int index);
  ::ywrapper::UintValue* add_wmm_be_remark();
  ::google::protobuf::RepeatedPtrField< ::ywrapper::UintValue >*
      mutable_wmm_be_remark();
  const ::google::protobuf::RepeatedPtrField< ::ywrapper::UintValue >&
      wmm_be_remark() const;

  // repeated .ywrapper.UintValue wmm_vi_remark = 287728309 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/wmm/config/wmm-vi-remark"];
  int wmm_vi_remark_size() const;
  void clear_wmm_vi_remark();
  static const int kWmmViRemarkFieldNumber = 287728309;
  const ::ywrapper::UintValue& wmm_vi_remark(int index) const;
  ::ywrapper::UintValue* mutable_wmm_vi_remark(int index);
  ::ywrapper::UintValue* add_wmm_vi_remark();
  ::google::protobuf::RepeatedPtrField< ::ywrapper::UintValue >*
      mutable_wmm_vi_remark();
  const ::google::protobuf::RepeatedPtrField< ::ywrapper::UintValue >&
      wmm_vi_remark() const;

  // repeated .ywrapper.UintValue wmm_vo_remark = 306763731 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/wmm/config/wmm-vo-remark"];
  int wmm_vo_remark_size() const;
  void clear_wmm_vo_remark();
  static const int kWmmVoRemarkFieldNumber = 306763731;
  const ::ywrapper::UintValue& wmm_vo_remark(int index) const;
  ::ywrapper::UintValue* mutable_wmm_vo_remark(int index);
  ::ywrapper::UintValue* add_wmm_vo_remark();
  ::google::protobuf::RepeatedPtrField< ::ywrapper::UintValue >*
      mutable_wmm_vo_remark();
  const ::google::protobuf::RepeatedPtrField< ::ywrapper::UintValue >&
      wmm_vo_remark() const;

  // .ywrapper.BoolValue trust_dscp = 382380892 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/wmm/config/trust-dscp"];
  bool has_trust_dscp() const;
  void clear_trust_dscp();
  static const int kTrustDscpFieldNumber = 382380892;
  const ::ywrapper::BoolValue& trust_dscp() const;
  ::ywrapper::BoolValue* release_trust_dscp();
  ::ywrapper::BoolValue* mutable_trust_dscp();
  void set_allocated_trust_dscp(::ywrapper::BoolValue* trust_dscp);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Wmm.Config)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::ywrapper::UintValue > wmm_bk_remark_;
  ::google::protobuf::RepeatedPtrField< ::ywrapper::UintValue > wmm_be_remark_;
  ::google::protobuf::RepeatedPtrField< ::ywrapper::UintValue > wmm_vi_remark_;
  ::google::protobuf::RepeatedPtrField< ::ywrapper::UintValue > wmm_vo_remark_;
  ::ywrapper::BoolValue* trust_dscp_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::InitDefaultsAccessPoints_AccessPoint_Ssids_Ssid_Wmm_ConfigImpl();
};
// -------------------------------------------------------------------

class AccessPoints_AccessPoint_Ssids_Ssid_Wmm_State : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Wmm.State) */ {
 public:
  AccessPoints_AccessPoint_Ssids_Ssid_Wmm_State();
  virtual ~AccessPoints_AccessPoint_Ssids_Ssid_Wmm_State();

  AccessPoints_AccessPoint_Ssids_Ssid_Wmm_State(const AccessPoints_AccessPoint_Ssids_Ssid_Wmm_State& from);

  inline AccessPoints_AccessPoint_Ssids_Ssid_Wmm_State& operator=(const AccessPoints_AccessPoint_Ssids_Ssid_Wmm_State& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AccessPoints_AccessPoint_Ssids_Ssid_Wmm_State(AccessPoints_AccessPoint_Ssids_Ssid_Wmm_State&& from) noexcept
    : AccessPoints_AccessPoint_Ssids_Ssid_Wmm_State() {
    *this = ::std::move(from);
  }

  inline AccessPoints_AccessPoint_Ssids_Ssid_Wmm_State& operator=(AccessPoints_AccessPoint_Ssids_Ssid_Wmm_State&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AccessPoints_AccessPoint_Ssids_Ssid_Wmm_State& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AccessPoints_AccessPoint_Ssids_Ssid_Wmm_State* internal_default_instance() {
    return reinterpret_cast<const AccessPoints_AccessPoint_Ssids_Ssid_Wmm_State*>(
               &_AccessPoints_AccessPoint_Ssids_Ssid_Wmm_State_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    54;

  void Swap(AccessPoints_AccessPoint_Ssids_Ssid_Wmm_State* other);
  friend void swap(AccessPoints_AccessPoint_Ssids_Ssid_Wmm_State& a, AccessPoints_AccessPoint_Ssids_Ssid_Wmm_State& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AccessPoints_AccessPoint_Ssids_Ssid_Wmm_State* New() const PROTOBUF_FINAL { return New(NULL); }

  AccessPoints_AccessPoint_Ssids_Ssid_Wmm_State* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AccessPoints_AccessPoint_Ssids_Ssid_Wmm_State& from);
  void MergeFrom(const AccessPoints_AccessPoint_Ssids_Ssid_Wmm_State& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AccessPoints_AccessPoint_Ssids_Ssid_Wmm_State* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .ywrapper.UintValue wmm_bk_remark = 54639554 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/wmm/state/wmm-bk-remark"];
  int wmm_bk_remark_size() const;
  void clear_wmm_bk_remark();
  static const int kWmmBkRemarkFieldNumber = 54639554;
  const ::ywrapper::UintValue& wmm_bk_remark(int index) const;
  ::ywrapper::UintValue* mutable_wmm_bk_remark(int index);
  ::ywrapper::UintValue* add_wmm_bk_remark();
  ::google::protobuf::RepeatedPtrField< ::ywrapper::UintValue >*
      mutable_wmm_bk_remark();
  const ::google::protobuf::RepeatedPtrField< ::ywrapper::UintValue >&
      wmm_bk_remark() const;

  // repeated .ywrapper.UintValue wmm_vi_remark = 239314016 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/wmm/state/wmm-vi-remark"];
  int wmm_vi_remark_size() const;
  void clear_wmm_vi_remark();
  static const int kWmmViRemarkFieldNumber = 239314016;
  const ::ywrapper::UintValue& wmm_vi_remark(int index) const;
  ::ywrapper::UintValue* mutable_wmm_vi_remark(int index);
  ::ywrapper::UintValue* add_wmm_vi_remark();
  ::google::protobuf::RepeatedPtrField< ::ywrapper::UintValue >*
      mutable_wmm_vi_remark();
  const ::google::protobuf::RepeatedPtrField< ::ywrapper::UintValue >&
      wmm_vi_remark() const;

  // repeated .ywrapper.UintValue wmm_be_remark = 330589176 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/wmm/state/wmm-be-remark"];
  int wmm_be_remark_size() const;
  void clear_wmm_be_remark();
  static const int kWmmBeRemarkFieldNumber = 330589176;
  const ::ywrapper::UintValue& wmm_be_remark(int index) const;
  ::ywrapper::UintValue* mutable_wmm_be_remark(int index);
  ::ywrapper::UintValue* add_wmm_be_remark();
  ::google::protobuf::RepeatedPtrField< ::ywrapper::UintValue >*
      mutable_wmm_be_remark();
  const ::google::protobuf::RepeatedPtrField< ::ywrapper::UintValue >&
      wmm_be_remark() const;

  // repeated .ywrapper.UintValue wmm_vo_remark = 442297762 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/wmm/state/wmm-vo-remark"];
  int wmm_vo_remark_size() const;
  void clear_wmm_vo_remark();
  static const int kWmmVoRemarkFieldNumber = 442297762;
  const ::ywrapper::UintValue& wmm_vo_remark(int index) const;
  ::ywrapper::UintValue* mutable_wmm_vo_remark(int index);
  ::ywrapper::UintValue* add_wmm_vo_remark();
  ::google::protobuf::RepeatedPtrField< ::ywrapper::UintValue >*
      mutable_wmm_vo_remark();
  const ::google::protobuf::RepeatedPtrField< ::ywrapper::UintValue >&
      wmm_vo_remark() const;

  // .ywrapper.BoolValue trust_dscp = 80790179 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/wmm/state/trust-dscp"];
  bool has_trust_dscp() const;
  void clear_trust_dscp();
  static const int kTrustDscpFieldNumber = 80790179;
  const ::ywrapper::BoolValue& trust_dscp() const;
  ::ywrapper::BoolValue* release_trust_dscp();
  ::ywrapper::BoolValue* mutable_trust_dscp();
  void set_allocated_trust_dscp(::ywrapper::BoolValue* trust_dscp);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Wmm.State)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::ywrapper::UintValue > wmm_bk_remark_;
  ::google::protobuf::RepeatedPtrField< ::ywrapper::UintValue > wmm_vi_remark_;
  ::google::protobuf::RepeatedPtrField< ::ywrapper::UintValue > wmm_be_remark_;
  ::google::protobuf::RepeatedPtrField< ::ywrapper::UintValue > wmm_vo_remark_;
  ::ywrapper::BoolValue* trust_dscp_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::InitDefaultsAccessPoints_AccessPoint_Ssids_Ssid_Wmm_StateImpl();
};
// -------------------------------------------------------------------

class AccessPoints_AccessPoint_Ssids_Ssid_Wmm : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Wmm) */ {
 public:
  AccessPoints_AccessPoint_Ssids_Ssid_Wmm();
  virtual ~AccessPoints_AccessPoint_Ssids_Ssid_Wmm();

  AccessPoints_AccessPoint_Ssids_Ssid_Wmm(const AccessPoints_AccessPoint_Ssids_Ssid_Wmm& from);

  inline AccessPoints_AccessPoint_Ssids_Ssid_Wmm& operator=(const AccessPoints_AccessPoint_Ssids_Ssid_Wmm& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AccessPoints_AccessPoint_Ssids_Ssid_Wmm(AccessPoints_AccessPoint_Ssids_Ssid_Wmm&& from) noexcept
    : AccessPoints_AccessPoint_Ssids_Ssid_Wmm() {
    *this = ::std::move(from);
  }

  inline AccessPoints_AccessPoint_Ssids_Ssid_Wmm& operator=(AccessPoints_AccessPoint_Ssids_Ssid_Wmm&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AccessPoints_AccessPoint_Ssids_Ssid_Wmm& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AccessPoints_AccessPoint_Ssids_Ssid_Wmm* internal_default_instance() {
    return reinterpret_cast<const AccessPoints_AccessPoint_Ssids_Ssid_Wmm*>(
               &_AccessPoints_AccessPoint_Ssids_Ssid_Wmm_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    55;

  void Swap(AccessPoints_AccessPoint_Ssids_Ssid_Wmm* other);
  friend void swap(AccessPoints_AccessPoint_Ssids_Ssid_Wmm& a, AccessPoints_AccessPoint_Ssids_Ssid_Wmm& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AccessPoints_AccessPoint_Ssids_Ssid_Wmm* New() const PROTOBUF_FINAL { return New(NULL); }

  AccessPoints_AccessPoint_Ssids_Ssid_Wmm* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AccessPoints_AccessPoint_Ssids_Ssid_Wmm& from);
  void MergeFrom(const AccessPoints_AccessPoint_Ssids_Ssid_Wmm& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AccessPoints_AccessPoint_Ssids_Ssid_Wmm* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef AccessPoints_AccessPoint_Ssids_Ssid_Wmm_Config Config;
  typedef AccessPoints_AccessPoint_Ssids_Ssid_Wmm_State State;

  // accessors -------------------------------------------------------

  // .openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Wmm.Config config = 124087578 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/wmm/config"];
  bool has_config() const;
  void clear_config();
  static const int kConfigFieldNumber = 124087578;
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Wmm_Config& config() const;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Wmm_Config* release_config();
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Wmm_Config* mutable_config();
  void set_allocated_config(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Wmm_Config* config);

  // .openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Wmm.State state = 338223287 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/wmm/state"];
  bool has_state() const;
  void clear_state();
  static const int kStateFieldNumber = 338223287;
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Wmm_State& state() const;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Wmm_State* release_state();
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Wmm_State* mutable_state();
  void set_allocated_state(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Wmm_State* state);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Wmm)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Wmm_Config* config_;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Wmm_State* state_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::InitDefaultsAccessPoints_AccessPoint_Ssids_Ssid_WmmImpl();
};
// -------------------------------------------------------------------

class AccessPoints_AccessPoint_Ssids_Ssid : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid) */ {
 public:
  AccessPoints_AccessPoint_Ssids_Ssid();
  virtual ~AccessPoints_AccessPoint_Ssids_Ssid();

  AccessPoints_AccessPoint_Ssids_Ssid(const AccessPoints_AccessPoint_Ssids_Ssid& from);

  inline AccessPoints_AccessPoint_Ssids_Ssid& operator=(const AccessPoints_AccessPoint_Ssids_Ssid& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AccessPoints_AccessPoint_Ssids_Ssid(AccessPoints_AccessPoint_Ssids_Ssid&& from) noexcept
    : AccessPoints_AccessPoint_Ssids_Ssid() {
    *this = ::std::move(from);
  }

  inline AccessPoints_AccessPoint_Ssids_Ssid& operator=(AccessPoints_AccessPoint_Ssids_Ssid&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AccessPoints_AccessPoint_Ssids_Ssid& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AccessPoints_AccessPoint_Ssids_Ssid* internal_default_instance() {
    return reinterpret_cast<const AccessPoints_AccessPoint_Ssids_Ssid*>(
               &_AccessPoints_AccessPoint_Ssids_Ssid_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    56;

  void Swap(AccessPoints_AccessPoint_Ssids_Ssid* other);
  friend void swap(AccessPoints_AccessPoint_Ssids_Ssid& a, AccessPoints_AccessPoint_Ssids_Ssid& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AccessPoints_AccessPoint_Ssids_Ssid* New() const PROTOBUF_FINAL { return New(NULL); }

  AccessPoints_AccessPoint_Ssids_Ssid* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AccessPoints_AccessPoint_Ssids_Ssid& from);
  void MergeFrom(const AccessPoints_AccessPoint_Ssids_Ssid& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AccessPoints_AccessPoint_Ssids_Ssid* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef AccessPoints_AccessPoint_Ssids_Ssid_BandSteering BandSteering;
  typedef AccessPoints_AccessPoint_Ssids_Ssid_Clients Clients;
  typedef AccessPoints_AccessPoint_Ssids_Ssid_Config Config;
  typedef AccessPoints_AccessPoint_Ssids_Ssid_Dot11R Dot11R;
  typedef AccessPoints_AccessPoint_Ssids_Ssid_Dot11V Dot11V;
  typedef AccessPoints_AccessPoint_Ssids_Ssid_Dot1XTimers Dot1XTimers;
  typedef AccessPoints_AccessPoint_Ssids_Ssid_State State;
  typedef AccessPoints_AccessPoint_Ssids_Ssid_Wmm Wmm;

  // accessors -------------------------------------------------------

  // .openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Clients clients = 9423148 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/clients"];
  bool has_clients() const;
  void clear_clients();
  static const int kClientsFieldNumber = 9423148;
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Clients& clients() const;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Clients* release_clients();
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Clients* mutable_clients();
  void set_allocated_clients(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Clients* clients);

  // .openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Config config = 66897482 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/config"];
  bool has_config() const;
  void clear_config();
  static const int kConfigFieldNumber = 66897482;
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Config& config() const;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Config* release_config();
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Config* mutable_config();
  void set_allocated_config(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Config* config);

  // .openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Wmm wmm = 148999029 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/wmm"];
  bool has_wmm() const;
  void clear_wmm();
  static const int kWmmFieldNumber = 148999029;
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Wmm& wmm() const;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Wmm* release_wmm();
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Wmm* mutable_wmm();
  void set_allocated_wmm(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Wmm* wmm);

  // .openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.BandSteering band_steering = 206115007 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/band-steering"];
  bool has_band_steering() const;
  void clear_band_steering();
  static const int kBandSteeringFieldNumber = 206115007;
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_BandSteering& band_steering() const;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_BandSteering* release_band_steering();
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_BandSteering* mutable_band_steering();
  void set_allocated_band_steering(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_BandSteering* band_steering);

  // .openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Dot11R dot11r = 235232059 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/dot11r"];
  bool has_dot11r() const;
  void clear_dot11r();
  static const int kDot11RFieldNumber = 235232059;
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Dot11R& dot11r() const;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Dot11R* release_dot11r();
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Dot11R* mutable_dot11r();
  void set_allocated_dot11r(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Dot11R* dot11r);

  // .openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Dot11V dot11v = 235232063 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/dot11v"];
  bool has_dot11v() const;
  void clear_dot11v();
  static const int kDot11VFieldNumber = 235232063;
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Dot11V& dot11v() const;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Dot11V* release_dot11v();
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Dot11V* mutable_dot11v();
  void set_allocated_dot11v(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Dot11V* dot11v);

  // .openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.State state = 314036711 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/state"];
  bool has_state() const;
  void clear_state();
  static const int kStateFieldNumber = 314036711;
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_State& state() const;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_State* release_state();
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_State* mutable_state();
  void set_allocated_state(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_State* state);

  // .openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Dot1XTimers dot1x_timers = 474480117 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/dot1x-timers"];
  bool has_dot1x_timers() const;
  void clear_dot1x_timers();
  static const int kDot1XTimersFieldNumber = 474480117;
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Dot1XTimers& dot1x_timers() const;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Dot1XTimers* release_dot1x_timers();
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Dot1XTimers* mutable_dot1x_timers();
  void set_allocated_dot1x_timers(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Dot1XTimers* dot1x_timers);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Clients* clients_;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Config* config_;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Wmm* wmm_;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_BandSteering* band_steering_;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Dot11R* dot11r_;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Dot11V* dot11v_;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_State* state_;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Dot1XTimers* dot1x_timers_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::InitDefaultsAccessPoints_AccessPoint_Ssids_SsidImpl();
};
// -------------------------------------------------------------------

class AccessPoints_AccessPoint_Ssids_SsidKey : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.SsidKey) */ {
 public:
  AccessPoints_AccessPoint_Ssids_SsidKey();
  virtual ~AccessPoints_AccessPoint_Ssids_SsidKey();

  AccessPoints_AccessPoint_Ssids_SsidKey(const AccessPoints_AccessPoint_Ssids_SsidKey& from);

  inline AccessPoints_AccessPoint_Ssids_SsidKey& operator=(const AccessPoints_AccessPoint_Ssids_SsidKey& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AccessPoints_AccessPoint_Ssids_SsidKey(AccessPoints_AccessPoint_Ssids_SsidKey&& from) noexcept
    : AccessPoints_AccessPoint_Ssids_SsidKey() {
    *this = ::std::move(from);
  }

  inline AccessPoints_AccessPoint_Ssids_SsidKey& operator=(AccessPoints_AccessPoint_Ssids_SsidKey&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AccessPoints_AccessPoint_Ssids_SsidKey& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AccessPoints_AccessPoint_Ssids_SsidKey* internal_default_instance() {
    return reinterpret_cast<const AccessPoints_AccessPoint_Ssids_SsidKey*>(
               &_AccessPoints_AccessPoint_Ssids_SsidKey_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    57;

  void Swap(AccessPoints_AccessPoint_Ssids_SsidKey* other);
  friend void swap(AccessPoints_AccessPoint_Ssids_SsidKey& a, AccessPoints_AccessPoint_Ssids_SsidKey& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AccessPoints_AccessPoint_Ssids_SsidKey* New() const PROTOBUF_FINAL { return New(NULL); }

  AccessPoints_AccessPoint_Ssids_SsidKey* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AccessPoints_AccessPoint_Ssids_SsidKey& from);
  void MergeFrom(const AccessPoints_AccessPoint_Ssids_SsidKey& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AccessPoints_AccessPoint_Ssids_SsidKey* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 1 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/name"];
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // .openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid ssid = 2;
  bool has_ssid() const;
  void clear_ssid();
  static const int kSsidFieldNumber = 2;
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid& ssid() const;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid* release_ssid();
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid* mutable_ssid();
  void set_allocated_ssid(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid* ssid);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.SsidKey)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid* ssid_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::InitDefaultsAccessPoints_AccessPoint_Ssids_SsidKeyImpl();
};
// -------------------------------------------------------------------

class AccessPoints_AccessPoint_Ssids : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids) */ {
 public:
  AccessPoints_AccessPoint_Ssids();
  virtual ~AccessPoints_AccessPoint_Ssids();

  AccessPoints_AccessPoint_Ssids(const AccessPoints_AccessPoint_Ssids& from);

  inline AccessPoints_AccessPoint_Ssids& operator=(const AccessPoints_AccessPoint_Ssids& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AccessPoints_AccessPoint_Ssids(AccessPoints_AccessPoint_Ssids&& from) noexcept
    : AccessPoints_AccessPoint_Ssids() {
    *this = ::std::move(from);
  }

  inline AccessPoints_AccessPoint_Ssids& operator=(AccessPoints_AccessPoint_Ssids&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AccessPoints_AccessPoint_Ssids& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AccessPoints_AccessPoint_Ssids* internal_default_instance() {
    return reinterpret_cast<const AccessPoints_AccessPoint_Ssids*>(
               &_AccessPoints_AccessPoint_Ssids_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    58;

  void Swap(AccessPoints_AccessPoint_Ssids* other);
  friend void swap(AccessPoints_AccessPoint_Ssids& a, AccessPoints_AccessPoint_Ssids& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AccessPoints_AccessPoint_Ssids* New() const PROTOBUF_FINAL { return New(NULL); }

  AccessPoints_AccessPoint_Ssids* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AccessPoints_AccessPoint_Ssids& from);
  void MergeFrom(const AccessPoints_AccessPoint_Ssids& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AccessPoints_AccessPoint_Ssids* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef AccessPoints_AccessPoint_Ssids_Ssid Ssid;
  typedef AccessPoints_AccessPoint_Ssids_SsidKey SsidKey;

  // accessors -------------------------------------------------------

  // repeated .openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.SsidKey ssid = 25773317 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid"];
  int ssid_size() const;
  void clear_ssid();
  static const int kSsidFieldNumber = 25773317;
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_SsidKey& ssid(int index) const;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_SsidKey* mutable_ssid(int index);
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_SsidKey* add_ssid();
  ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_SsidKey >*
      mutable_ssid();
  const ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_SsidKey >&
      ssid() const;

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_SsidKey > ssid_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::InitDefaultsAccessPoints_AccessPoint_SsidsImpl();
};
// -------------------------------------------------------------------

class AccessPoints_AccessPoint_System_Aaa_Accounting_Config_AccountingMethodUnion : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Accounting.Config.AccountingMethodUnion) */ {
 public:
  AccessPoints_AccessPoint_System_Aaa_Accounting_Config_AccountingMethodUnion();
  virtual ~AccessPoints_AccessPoint_System_Aaa_Accounting_Config_AccountingMethodUnion();

  AccessPoints_AccessPoint_System_Aaa_Accounting_Config_AccountingMethodUnion(const AccessPoints_AccessPoint_System_Aaa_Accounting_Config_AccountingMethodUnion& from);

  inline AccessPoints_AccessPoint_System_Aaa_Accounting_Config_AccountingMethodUnion& operator=(const AccessPoints_AccessPoint_System_Aaa_Accounting_Config_AccountingMethodUnion& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AccessPoints_AccessPoint_System_Aaa_Accounting_Config_AccountingMethodUnion(AccessPoints_AccessPoint_System_Aaa_Accounting_Config_AccountingMethodUnion&& from) noexcept
    : AccessPoints_AccessPoint_System_Aaa_Accounting_Config_AccountingMethodUnion() {
    *this = ::std::move(from);
  }

  inline AccessPoints_AccessPoint_System_Aaa_Accounting_Config_AccountingMethodUnion& operator=(AccessPoints_AccessPoint_System_Aaa_Accounting_Config_AccountingMethodUnion&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AccessPoints_AccessPoint_System_Aaa_Accounting_Config_AccountingMethodUnion& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AccessPoints_AccessPoint_System_Aaa_Accounting_Config_AccountingMethodUnion* internal_default_instance() {
    return reinterpret_cast<const AccessPoints_AccessPoint_System_Aaa_Accounting_Config_AccountingMethodUnion*>(
               &_AccessPoints_AccessPoint_System_Aaa_Accounting_Config_AccountingMethodUnion_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    59;

  void Swap(AccessPoints_AccessPoint_System_Aaa_Accounting_Config_AccountingMethodUnion* other);
  friend void swap(AccessPoints_AccessPoint_System_Aaa_Accounting_Config_AccountingMethodUnion& a, AccessPoints_AccessPoint_System_Aaa_Accounting_Config_AccountingMethodUnion& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AccessPoints_AccessPoint_System_Aaa_Accounting_Config_AccountingMethodUnion* New() const PROTOBUF_FINAL { return New(NULL); }

  AccessPoints_AccessPoint_System_Aaa_Accounting_Config_AccountingMethodUnion* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AccessPoints_AccessPoint_System_Aaa_Accounting_Config_AccountingMethodUnion& from);
  void MergeFrom(const AccessPoints_AccessPoint_System_Aaa_Accounting_Config_AccountingMethodUnion& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AccessPoints_AccessPoint_System_Aaa_Accounting_Config_AccountingMethodUnion* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string accounting_method_string = 29221163;
  void clear_accounting_method_string();
  static const int kAccountingMethodStringFieldNumber = 29221163;
  const ::std::string& accounting_method_string() const;
  void set_accounting_method_string(const ::std::string& value);
  #if LANG_CXX11
  void set_accounting_method_string(::std::string&& value);
  #endif
  void set_accounting_method_string(const char* value);
  void set_accounting_method_string(const char* value, size_t size);
  ::std::string* mutable_accounting_method_string();
  ::std::string* release_accounting_method_string();
  void set_allocated_accounting_method_string(::std::string* accounting_method_string);

  // .openconfig.enums.OpenconfigAaaTypesAAAMETHODTYPE accounting_method_openconfigaaatypesaaamethodtype = 420046428;
  void clear_accounting_method_openconfigaaatypesaaamethodtype();
  static const int kAccountingMethodOpenconfigaaatypesaaamethodtypeFieldNumber = 420046428;
  ::openconfig::enums::OpenconfigAaaTypesAAAMETHODTYPE accounting_method_openconfigaaatypesaaamethodtype() const;
  void set_accounting_method_openconfigaaatypesaaamethodtype(::openconfig::enums::OpenconfigAaaTypesAAAMETHODTYPE value);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Accounting.Config.AccountingMethodUnion)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr accounting_method_string_;
  int accounting_method_openconfigaaatypesaaamethodtype_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::InitDefaultsAccessPoints_AccessPoint_System_Aaa_Accounting_Config_AccountingMethodUnionImpl();
};
// -------------------------------------------------------------------

class AccessPoints_AccessPoint_System_Aaa_Accounting_Config : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Accounting.Config) */ {
 public:
  AccessPoints_AccessPoint_System_Aaa_Accounting_Config();
  virtual ~AccessPoints_AccessPoint_System_Aaa_Accounting_Config();

  AccessPoints_AccessPoint_System_Aaa_Accounting_Config(const AccessPoints_AccessPoint_System_Aaa_Accounting_Config& from);

  inline AccessPoints_AccessPoint_System_Aaa_Accounting_Config& operator=(const AccessPoints_AccessPoint_System_Aaa_Accounting_Config& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AccessPoints_AccessPoint_System_Aaa_Accounting_Config(AccessPoints_AccessPoint_System_Aaa_Accounting_Config&& from) noexcept
    : AccessPoints_AccessPoint_System_Aaa_Accounting_Config() {
    *this = ::std::move(from);
  }

  inline AccessPoints_AccessPoint_System_Aaa_Accounting_Config& operator=(AccessPoints_AccessPoint_System_Aaa_Accounting_Config&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AccessPoints_AccessPoint_System_Aaa_Accounting_Config& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AccessPoints_AccessPoint_System_Aaa_Accounting_Config* internal_default_instance() {
    return reinterpret_cast<const AccessPoints_AccessPoint_System_Aaa_Accounting_Config*>(
               &_AccessPoints_AccessPoint_System_Aaa_Accounting_Config_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    60;

  void Swap(AccessPoints_AccessPoint_System_Aaa_Accounting_Config* other);
  friend void swap(AccessPoints_AccessPoint_System_Aaa_Accounting_Config& a, AccessPoints_AccessPoint_System_Aaa_Accounting_Config& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AccessPoints_AccessPoint_System_Aaa_Accounting_Config* New() const PROTOBUF_FINAL { return New(NULL); }

  AccessPoints_AccessPoint_System_Aaa_Accounting_Config* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AccessPoints_AccessPoint_System_Aaa_Accounting_Config& from);
  void MergeFrom(const AccessPoints_AccessPoint_System_Aaa_Accounting_Config& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AccessPoints_AccessPoint_System_Aaa_Accounting_Config* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef AccessPoints_AccessPoint_System_Aaa_Accounting_Config_AccountingMethodUnion AccountingMethodUnion;

  // accessors -------------------------------------------------------

  // repeated .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Accounting.Config.AccountingMethodUnion accounting_method = 89955965 [(.yext.schemapath) = "/access-points/access-point/system/aaa/accounting/config/accounting-method"];
  int accounting_method_size() const;
  void clear_accounting_method();
  static const int kAccountingMethodFieldNumber = 89955965;
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Accounting_Config_AccountingMethodUnion& accounting_method(int index) const;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Accounting_Config_AccountingMethodUnion* mutable_accounting_method(int index);
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Accounting_Config_AccountingMethodUnion* add_accounting_method();
  ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Accounting_Config_AccountingMethodUnion >*
      mutable_accounting_method();
  const ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Accounting_Config_AccountingMethodUnion >&
      accounting_method() const;

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Accounting.Config)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Accounting_Config_AccountingMethodUnion > accounting_method_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::InitDefaultsAccessPoints_AccessPoint_System_Aaa_Accounting_ConfigImpl();
};
// -------------------------------------------------------------------

class AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event_Config : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Accounting.Events.Event.Config) */ {
 public:
  AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event_Config();
  virtual ~AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event_Config();

  AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event_Config(const AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event_Config& from);

  inline AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event_Config& operator=(const AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event_Config& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event_Config(AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event_Config&& from) noexcept
    : AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event_Config() {
    *this = ::std::move(from);
  }

  inline AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event_Config& operator=(AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event_Config&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event_Config& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event_Config* internal_default_instance() {
    return reinterpret_cast<const AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event_Config*>(
               &_AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event_Config_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    61;

  void Swap(AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event_Config* other);
  friend void swap(AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event_Config& a, AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event_Config& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event_Config* New() const PROTOBUF_FINAL { return New(NULL); }

  AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event_Config* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event_Config& from);
  void MergeFrom(const AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event_Config& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event_Config* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event_Config_Record Record;
  static const Record RECORD_UNSET =
    AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event_Config_Record_RECORD_UNSET;
  static const Record RECORD_START_STOP =
    AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event_Config_Record_RECORD_START_STOP;
  static const Record RECORD_STOP =
    AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event_Config_Record_RECORD_STOP;
  static inline bool Record_IsValid(int value) {
    return AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event_Config_Record_IsValid(value);
  }
  static const Record Record_MIN =
    AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event_Config_Record_Record_MIN;
  static const Record Record_MAX =
    AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event_Config_Record_Record_MAX;
  static const int Record_ARRAYSIZE =
    AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event_Config_Record_Record_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Record_descriptor() {
    return AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event_Config_Record_descriptor();
  }
  static inline const ::std::string& Record_Name(Record value) {
    return AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event_Config_Record_Name(value);
  }
  static inline bool Record_Parse(const ::std::string& name,
      Record* value) {
    return AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event_Config_Record_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Accounting.Events.Event.Config.Record record = 33835424 [(.yext.schemapath) = "/access-points/access-point/system/aaa/accounting/events/event/config/record"];
  void clear_record();
  static const int kRecordFieldNumber = 33835424;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event_Config_Record record() const;
  void set_record(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event_Config_Record value);

  // .openconfig.enums.OpenconfigAaaTypesAAAACCOUNTINGEVENTTYPE event_type = 170629062 [(.yext.schemapath) = "/access-points/access-point/system/aaa/accounting/events/event/config/event-type"];
  void clear_event_type();
  static const int kEventTypeFieldNumber = 170629062;
  ::openconfig::enums::OpenconfigAaaTypesAAAACCOUNTINGEVENTTYPE event_type() const;
  void set_event_type(::openconfig::enums::OpenconfigAaaTypesAAAACCOUNTINGEVENTTYPE value);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Accounting.Events.Event.Config)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int record_;
  int event_type_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::InitDefaultsAccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event_ConfigImpl();
};
// -------------------------------------------------------------------

class AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event_State : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Accounting.Events.Event.State) */ {
 public:
  AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event_State();
  virtual ~AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event_State();

  AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event_State(const AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event_State& from);

  inline AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event_State& operator=(const AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event_State& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event_State(AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event_State&& from) noexcept
    : AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event_State() {
    *this = ::std::move(from);
  }

  inline AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event_State& operator=(AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event_State&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event_State& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event_State* internal_default_instance() {
    return reinterpret_cast<const AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event_State*>(
               &_AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event_State_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    62;

  void Swap(AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event_State* other);
  friend void swap(AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event_State& a, AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event_State& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event_State* New() const PROTOBUF_FINAL { return New(NULL); }

  AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event_State* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event_State& from);
  void MergeFrom(const AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event_State& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event_State* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event_State_Record Record;
  static const Record RECORD_UNSET =
    AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event_State_Record_RECORD_UNSET;
  static const Record RECORD_START_STOP =
    AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event_State_Record_RECORD_START_STOP;
  static const Record RECORD_STOP =
    AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event_State_Record_RECORD_STOP;
  static inline bool Record_IsValid(int value) {
    return AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event_State_Record_IsValid(value);
  }
  static const Record Record_MIN =
    AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event_State_Record_Record_MIN;
  static const Record Record_MAX =
    AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event_State_Record_Record_MAX;
  static const int Record_ARRAYSIZE =
    AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event_State_Record_Record_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Record_descriptor() {
    return AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event_State_Record_descriptor();
  }
  static inline const ::std::string& Record_Name(Record value) {
    return AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event_State_Record_Name(value);
  }
  static inline bool Record_Parse(const ::std::string& name,
      Record* value) {
    return AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event_State_Record_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .openconfig.enums.OpenconfigAaaTypesAAAACCOUNTINGEVENTTYPE event_type = 31161949 [(.yext.schemapath) = "/access-points/access-point/system/aaa/accounting/events/event/state/event-type"];
  void clear_event_type();
  static const int kEventTypeFieldNumber = 31161949;
  ::openconfig::enums::OpenconfigAaaTypesAAAACCOUNTINGEVENTTYPE event_type() const;
  void set_event_type(::openconfig::enums::OpenconfigAaaTypesAAAACCOUNTINGEVENTTYPE value);

  // .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Accounting.Events.Event.State.Record record = 297836839 [(.yext.schemapath) = "/access-points/access-point/system/aaa/accounting/events/event/state/record"];
  void clear_record();
  static const int kRecordFieldNumber = 297836839;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event_State_Record record() const;
  void set_record(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event_State_Record value);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Accounting.Events.Event.State)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int event_type_;
  int record_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::InitDefaultsAccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event_StateImpl();
};
// -------------------------------------------------------------------

class AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Accounting.Events.Event) */ {
 public:
  AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event();
  virtual ~AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event();

  AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event(const AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event& from);

  inline AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event& operator=(const AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event(AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event&& from) noexcept
    : AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event() {
    *this = ::std::move(from);
  }

  inline AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event& operator=(AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event* internal_default_instance() {
    return reinterpret_cast<const AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event*>(
               &_AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    63;

  void Swap(AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event* other);
  friend void swap(AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event& a, AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event* New() const PROTOBUF_FINAL { return New(NULL); }

  AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event& from);
  void MergeFrom(const AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event_Config Config;
  typedef AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event_State State;

  // accessors -------------------------------------------------------

  // .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Accounting.Events.Event.Config config = 200110748 [(.yext.schemapath) = "/access-points/access-point/system/aaa/accounting/events/event/config"];
  bool has_config() const;
  void clear_config();
  static const int kConfigFieldNumber = 200110748;
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event_Config& config() const;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event_Config* release_config();
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event_Config* mutable_config();
  void set_allocated_config(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event_Config* config);

  // .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Accounting.Events.Event.State state = 366286613 [(.yext.schemapath) = "/access-points/access-point/system/aaa/accounting/events/event/state"];
  bool has_state() const;
  void clear_state();
  static const int kStateFieldNumber = 366286613;
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event_State& state() const;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event_State* release_state();
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event_State* mutable_state();
  void set_allocated_state(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event_State* state);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Accounting.Events.Event)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event_Config* config_;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event_State* state_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::InitDefaultsAccessPoints_AccessPoint_System_Aaa_Accounting_Events_EventImpl();
};
// -------------------------------------------------------------------

class AccessPoints_AccessPoint_System_Aaa_Accounting_Events_EventKey : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Accounting.Events.EventKey) */ {
 public:
  AccessPoints_AccessPoint_System_Aaa_Accounting_Events_EventKey();
  virtual ~AccessPoints_AccessPoint_System_Aaa_Accounting_Events_EventKey();

  AccessPoints_AccessPoint_System_Aaa_Accounting_Events_EventKey(const AccessPoints_AccessPoint_System_Aaa_Accounting_Events_EventKey& from);

  inline AccessPoints_AccessPoint_System_Aaa_Accounting_Events_EventKey& operator=(const AccessPoints_AccessPoint_System_Aaa_Accounting_Events_EventKey& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AccessPoints_AccessPoint_System_Aaa_Accounting_Events_EventKey(AccessPoints_AccessPoint_System_Aaa_Accounting_Events_EventKey&& from) noexcept
    : AccessPoints_AccessPoint_System_Aaa_Accounting_Events_EventKey() {
    *this = ::std::move(from);
  }

  inline AccessPoints_AccessPoint_System_Aaa_Accounting_Events_EventKey& operator=(AccessPoints_AccessPoint_System_Aaa_Accounting_Events_EventKey&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AccessPoints_AccessPoint_System_Aaa_Accounting_Events_EventKey& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AccessPoints_AccessPoint_System_Aaa_Accounting_Events_EventKey* internal_default_instance() {
    return reinterpret_cast<const AccessPoints_AccessPoint_System_Aaa_Accounting_Events_EventKey*>(
               &_AccessPoints_AccessPoint_System_Aaa_Accounting_Events_EventKey_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    64;

  void Swap(AccessPoints_AccessPoint_System_Aaa_Accounting_Events_EventKey* other);
  friend void swap(AccessPoints_AccessPoint_System_Aaa_Accounting_Events_EventKey& a, AccessPoints_AccessPoint_System_Aaa_Accounting_Events_EventKey& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AccessPoints_AccessPoint_System_Aaa_Accounting_Events_EventKey* New() const PROTOBUF_FINAL { return New(NULL); }

  AccessPoints_AccessPoint_System_Aaa_Accounting_Events_EventKey* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AccessPoints_AccessPoint_System_Aaa_Accounting_Events_EventKey& from);
  void MergeFrom(const AccessPoints_AccessPoint_System_Aaa_Accounting_Events_EventKey& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AccessPoints_AccessPoint_System_Aaa_Accounting_Events_EventKey* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Accounting.Events.Event event = 2;
  bool has_event() const;
  void clear_event();
  static const int kEventFieldNumber = 2;
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event& event() const;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event* release_event();
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event* mutable_event();
  void set_allocated_event(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event* event);

  // .openconfig.enums.OpenconfigAaaTypesAAAACCOUNTINGEVENTTYPE event_type = 1 [(.yext.schemapath) = "/access-points/access-point/system/aaa/accounting/events/event/event-type"];
  void clear_event_type();
  static const int kEventTypeFieldNumber = 1;
  ::openconfig::enums::OpenconfigAaaTypesAAAACCOUNTINGEVENTTYPE event_type() const;
  void set_event_type(::openconfig::enums::OpenconfigAaaTypesAAAACCOUNTINGEVENTTYPE value);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Accounting.Events.EventKey)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event* event_;
  int event_type_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::InitDefaultsAccessPoints_AccessPoint_System_Aaa_Accounting_Events_EventKeyImpl();
};
// -------------------------------------------------------------------

class AccessPoints_AccessPoint_System_Aaa_Accounting_Events : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Accounting.Events) */ {
 public:
  AccessPoints_AccessPoint_System_Aaa_Accounting_Events();
  virtual ~AccessPoints_AccessPoint_System_Aaa_Accounting_Events();

  AccessPoints_AccessPoint_System_Aaa_Accounting_Events(const AccessPoints_AccessPoint_System_Aaa_Accounting_Events& from);

  inline AccessPoints_AccessPoint_System_Aaa_Accounting_Events& operator=(const AccessPoints_AccessPoint_System_Aaa_Accounting_Events& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AccessPoints_AccessPoint_System_Aaa_Accounting_Events(AccessPoints_AccessPoint_System_Aaa_Accounting_Events&& from) noexcept
    : AccessPoints_AccessPoint_System_Aaa_Accounting_Events() {
    *this = ::std::move(from);
  }

  inline AccessPoints_AccessPoint_System_Aaa_Accounting_Events& operator=(AccessPoints_AccessPoint_System_Aaa_Accounting_Events&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AccessPoints_AccessPoint_System_Aaa_Accounting_Events& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AccessPoints_AccessPoint_System_Aaa_Accounting_Events* internal_default_instance() {
    return reinterpret_cast<const AccessPoints_AccessPoint_System_Aaa_Accounting_Events*>(
               &_AccessPoints_AccessPoint_System_Aaa_Accounting_Events_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    65;

  void Swap(AccessPoints_AccessPoint_System_Aaa_Accounting_Events* other);
  friend void swap(AccessPoints_AccessPoint_System_Aaa_Accounting_Events& a, AccessPoints_AccessPoint_System_Aaa_Accounting_Events& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AccessPoints_AccessPoint_System_Aaa_Accounting_Events* New() const PROTOBUF_FINAL { return New(NULL); }

  AccessPoints_AccessPoint_System_Aaa_Accounting_Events* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AccessPoints_AccessPoint_System_Aaa_Accounting_Events& from);
  void MergeFrom(const AccessPoints_AccessPoint_System_Aaa_Accounting_Events& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AccessPoints_AccessPoint_System_Aaa_Accounting_Events* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event Event;
  typedef AccessPoints_AccessPoint_System_Aaa_Accounting_Events_EventKey EventKey;

  // accessors -------------------------------------------------------

  // repeated .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Accounting.Events.EventKey event = 443644363 [(.yext.schemapath) = "/access-points/access-point/system/aaa/accounting/events/event"];
  int event_size() const;
  void clear_event();
  static const int kEventFieldNumber = 443644363;
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Accounting_Events_EventKey& event(int index) const;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Accounting_Events_EventKey* mutable_event(int index);
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Accounting_Events_EventKey* add_event();
  ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Accounting_Events_EventKey >*
      mutable_event();
  const ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Accounting_Events_EventKey >&
      event() const;

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Accounting.Events)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Accounting_Events_EventKey > event_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::InitDefaultsAccessPoints_AccessPoint_System_Aaa_Accounting_EventsImpl();
};
// -------------------------------------------------------------------

class AccessPoints_AccessPoint_System_Aaa_Accounting_State_AccountingMethodUnion : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Accounting.State.AccountingMethodUnion) */ {
 public:
  AccessPoints_AccessPoint_System_Aaa_Accounting_State_AccountingMethodUnion();
  virtual ~AccessPoints_AccessPoint_System_Aaa_Accounting_State_AccountingMethodUnion();

  AccessPoints_AccessPoint_System_Aaa_Accounting_State_AccountingMethodUnion(const AccessPoints_AccessPoint_System_Aaa_Accounting_State_AccountingMethodUnion& from);

  inline AccessPoints_AccessPoint_System_Aaa_Accounting_State_AccountingMethodUnion& operator=(const AccessPoints_AccessPoint_System_Aaa_Accounting_State_AccountingMethodUnion& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AccessPoints_AccessPoint_System_Aaa_Accounting_State_AccountingMethodUnion(AccessPoints_AccessPoint_System_Aaa_Accounting_State_AccountingMethodUnion&& from) noexcept
    : AccessPoints_AccessPoint_System_Aaa_Accounting_State_AccountingMethodUnion() {
    *this = ::std::move(from);
  }

  inline AccessPoints_AccessPoint_System_Aaa_Accounting_State_AccountingMethodUnion& operator=(AccessPoints_AccessPoint_System_Aaa_Accounting_State_AccountingMethodUnion&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AccessPoints_AccessPoint_System_Aaa_Accounting_State_AccountingMethodUnion& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AccessPoints_AccessPoint_System_Aaa_Accounting_State_AccountingMethodUnion* internal_default_instance() {
    return reinterpret_cast<const AccessPoints_AccessPoint_System_Aaa_Accounting_State_AccountingMethodUnion*>(
               &_AccessPoints_AccessPoint_System_Aaa_Accounting_State_AccountingMethodUnion_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    66;

  void Swap(AccessPoints_AccessPoint_System_Aaa_Accounting_State_AccountingMethodUnion* other);
  friend void swap(AccessPoints_AccessPoint_System_Aaa_Accounting_State_AccountingMethodUnion& a, AccessPoints_AccessPoint_System_Aaa_Accounting_State_AccountingMethodUnion& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AccessPoints_AccessPoint_System_Aaa_Accounting_State_AccountingMethodUnion* New() const PROTOBUF_FINAL { return New(NULL); }

  AccessPoints_AccessPoint_System_Aaa_Accounting_State_AccountingMethodUnion* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AccessPoints_AccessPoint_System_Aaa_Accounting_State_AccountingMethodUnion& from);
  void MergeFrom(const AccessPoints_AccessPoint_System_Aaa_Accounting_State_AccountingMethodUnion& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AccessPoints_AccessPoint_System_Aaa_Accounting_State_AccountingMethodUnion* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string accounting_method_string = 295262802;
  void clear_accounting_method_string();
  static const int kAccountingMethodStringFieldNumber = 295262802;
  const ::std::string& accounting_method_string() const;
  void set_accounting_method_string(const ::std::string& value);
  #if LANG_CXX11
  void set_accounting_method_string(::std::string&& value);
  #endif
  void set_accounting_method_string(const char* value);
  void set_accounting_method_string(const char* value, size_t size);
  ::std::string* mutable_accounting_method_string();
  ::std::string* release_accounting_method_string();
  void set_allocated_accounting_method_string(::std::string* accounting_method_string);

  // .openconfig.enums.OpenconfigAaaTypesAAAMETHODTYPE accounting_method_openconfigaaatypesaaamethodtype = 173595271;
  void clear_accounting_method_openconfigaaatypesaaamethodtype();
  static const int kAccountingMethodOpenconfigaaatypesaaamethodtypeFieldNumber = 173595271;
  ::openconfig::enums::OpenconfigAaaTypesAAAMETHODTYPE accounting_method_openconfigaaatypesaaamethodtype() const;
  void set_accounting_method_openconfigaaatypesaaamethodtype(::openconfig::enums::OpenconfigAaaTypesAAAMETHODTYPE value);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Accounting.State.AccountingMethodUnion)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr accounting_method_string_;
  int accounting_method_openconfigaaatypesaaamethodtype_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::InitDefaultsAccessPoints_AccessPoint_System_Aaa_Accounting_State_AccountingMethodUnionImpl();
};
// -------------------------------------------------------------------

class AccessPoints_AccessPoint_System_Aaa_Accounting_State : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Accounting.State) */ {
 public:
  AccessPoints_AccessPoint_System_Aaa_Accounting_State();
  virtual ~AccessPoints_AccessPoint_System_Aaa_Accounting_State();

  AccessPoints_AccessPoint_System_Aaa_Accounting_State(const AccessPoints_AccessPoint_System_Aaa_Accounting_State& from);

  inline AccessPoints_AccessPoint_System_Aaa_Accounting_State& operator=(const AccessPoints_AccessPoint_System_Aaa_Accounting_State& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AccessPoints_AccessPoint_System_Aaa_Accounting_State(AccessPoints_AccessPoint_System_Aaa_Accounting_State&& from) noexcept
    : AccessPoints_AccessPoint_System_Aaa_Accounting_State() {
    *this = ::std::move(from);
  }

  inline AccessPoints_AccessPoint_System_Aaa_Accounting_State& operator=(AccessPoints_AccessPoint_System_Aaa_Accounting_State&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AccessPoints_AccessPoint_System_Aaa_Accounting_State& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AccessPoints_AccessPoint_System_Aaa_Accounting_State* internal_default_instance() {
    return reinterpret_cast<const AccessPoints_AccessPoint_System_Aaa_Accounting_State*>(
               &_AccessPoints_AccessPoint_System_Aaa_Accounting_State_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    67;

  void Swap(AccessPoints_AccessPoint_System_Aaa_Accounting_State* other);
  friend void swap(AccessPoints_AccessPoint_System_Aaa_Accounting_State& a, AccessPoints_AccessPoint_System_Aaa_Accounting_State& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AccessPoints_AccessPoint_System_Aaa_Accounting_State* New() const PROTOBUF_FINAL { return New(NULL); }

  AccessPoints_AccessPoint_System_Aaa_Accounting_State* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AccessPoints_AccessPoint_System_Aaa_Accounting_State& from);
  void MergeFrom(const AccessPoints_AccessPoint_System_Aaa_Accounting_State& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AccessPoints_AccessPoint_System_Aaa_Accounting_State* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef AccessPoints_AccessPoint_System_Aaa_Accounting_State_AccountingMethodUnion AccountingMethodUnion;

  // accessors -------------------------------------------------------

  // repeated .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Accounting.State.AccountingMethodUnion accounting_method = 251482186 [(.yext.schemapath) = "/access-points/access-point/system/aaa/accounting/state/accounting-method"];
  int accounting_method_size() const;
  void clear_accounting_method();
  static const int kAccountingMethodFieldNumber = 251482186;
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Accounting_State_AccountingMethodUnion& accounting_method(int index) const;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Accounting_State_AccountingMethodUnion* mutable_accounting_method(int index);
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Accounting_State_AccountingMethodUnion* add_accounting_method();
  ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Accounting_State_AccountingMethodUnion >*
      mutable_accounting_method();
  const ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Accounting_State_AccountingMethodUnion >&
      accounting_method() const;

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Accounting.State)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Accounting_State_AccountingMethodUnion > accounting_method_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::InitDefaultsAccessPoints_AccessPoint_System_Aaa_Accounting_StateImpl();
};
// -------------------------------------------------------------------

class AccessPoints_AccessPoint_System_Aaa_Accounting : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Accounting) */ {
 public:
  AccessPoints_AccessPoint_System_Aaa_Accounting();
  virtual ~AccessPoints_AccessPoint_System_Aaa_Accounting();

  AccessPoints_AccessPoint_System_Aaa_Accounting(const AccessPoints_AccessPoint_System_Aaa_Accounting& from);

  inline AccessPoints_AccessPoint_System_Aaa_Accounting& operator=(const AccessPoints_AccessPoint_System_Aaa_Accounting& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AccessPoints_AccessPoint_System_Aaa_Accounting(AccessPoints_AccessPoint_System_Aaa_Accounting&& from) noexcept
    : AccessPoints_AccessPoint_System_Aaa_Accounting() {
    *this = ::std::move(from);
  }

  inline AccessPoints_AccessPoint_System_Aaa_Accounting& operator=(AccessPoints_AccessPoint_System_Aaa_Accounting&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AccessPoints_AccessPoint_System_Aaa_Accounting& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AccessPoints_AccessPoint_System_Aaa_Accounting* internal_default_instance() {
    return reinterpret_cast<const AccessPoints_AccessPoint_System_Aaa_Accounting*>(
               &_AccessPoints_AccessPoint_System_Aaa_Accounting_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    68;

  void Swap(AccessPoints_AccessPoint_System_Aaa_Accounting* other);
  friend void swap(AccessPoints_AccessPoint_System_Aaa_Accounting& a, AccessPoints_AccessPoint_System_Aaa_Accounting& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AccessPoints_AccessPoint_System_Aaa_Accounting* New() const PROTOBUF_FINAL { return New(NULL); }

  AccessPoints_AccessPoint_System_Aaa_Accounting* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AccessPoints_AccessPoint_System_Aaa_Accounting& from);
  void MergeFrom(const AccessPoints_AccessPoint_System_Aaa_Accounting& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AccessPoints_AccessPoint_System_Aaa_Accounting* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef AccessPoints_AccessPoint_System_Aaa_Accounting_Config Config;
  typedef AccessPoints_AccessPoint_System_Aaa_Accounting_Events Events;
  typedef AccessPoints_AccessPoint_System_Aaa_Accounting_State State;

  // accessors -------------------------------------------------------

  // .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Accounting.Events events = 93725866 [(.yext.schemapath) = "/access-points/access-point/system/aaa/accounting/events"];
  bool has_events() const;
  void clear_events();
  static const int kEventsFieldNumber = 93725866;
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Accounting_Events& events() const;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Accounting_Events* release_events();
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Accounting_Events* mutable_events();
  void set_allocated_events(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Accounting_Events* events);

  // .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Accounting.Config config = 132887907 [(.yext.schemapath) = "/access-points/access-point/system/aaa/accounting/config"];
  bool has_config() const;
  void clear_config();
  static const int kConfigFieldNumber = 132887907;
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Accounting_Config& config() const;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Accounting_Config* release_config();
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Accounting_Config* mutable_config();
  void set_allocated_config(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Accounting_Config* config);

  // .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Accounting.State state = 166257476 [(.yext.schemapath) = "/access-points/access-point/system/aaa/accounting/state"];
  bool has_state() const;
  void clear_state();
  static const int kStateFieldNumber = 166257476;
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Accounting_State& state() const;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Accounting_State* release_state();
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Accounting_State* mutable_state();
  void set_allocated_state(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Accounting_State* state);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Accounting)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Accounting_Events* events_;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Accounting_Config* config_;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Accounting_State* state_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::InitDefaultsAccessPoints_AccessPoint_System_Aaa_AccountingImpl();
};
// -------------------------------------------------------------------

class AccessPoints_AccessPoint_System_Aaa_Authentication_AdminUser_Config : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authentication.AdminUser.Config) */ {
 public:
  AccessPoints_AccessPoint_System_Aaa_Authentication_AdminUser_Config();
  virtual ~AccessPoints_AccessPoint_System_Aaa_Authentication_AdminUser_Config();

  AccessPoints_AccessPoint_System_Aaa_Authentication_AdminUser_Config(const AccessPoints_AccessPoint_System_Aaa_Authentication_AdminUser_Config& from);

  inline AccessPoints_AccessPoint_System_Aaa_Authentication_AdminUser_Config& operator=(const AccessPoints_AccessPoint_System_Aaa_Authentication_AdminUser_Config& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AccessPoints_AccessPoint_System_Aaa_Authentication_AdminUser_Config(AccessPoints_AccessPoint_System_Aaa_Authentication_AdminUser_Config&& from) noexcept
    : AccessPoints_AccessPoint_System_Aaa_Authentication_AdminUser_Config() {
    *this = ::std::move(from);
  }

  inline AccessPoints_AccessPoint_System_Aaa_Authentication_AdminUser_Config& operator=(AccessPoints_AccessPoint_System_Aaa_Authentication_AdminUser_Config&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AccessPoints_AccessPoint_System_Aaa_Authentication_AdminUser_Config& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AccessPoints_AccessPoint_System_Aaa_Authentication_AdminUser_Config* internal_default_instance() {
    return reinterpret_cast<const AccessPoints_AccessPoint_System_Aaa_Authentication_AdminUser_Config*>(
               &_AccessPoints_AccessPoint_System_Aaa_Authentication_AdminUser_Config_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    69;

  void Swap(AccessPoints_AccessPoint_System_Aaa_Authentication_AdminUser_Config* other);
  friend void swap(AccessPoints_AccessPoint_System_Aaa_Authentication_AdminUser_Config& a, AccessPoints_AccessPoint_System_Aaa_Authentication_AdminUser_Config& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AccessPoints_AccessPoint_System_Aaa_Authentication_AdminUser_Config* New() const PROTOBUF_FINAL { return New(NULL); }

  AccessPoints_AccessPoint_System_Aaa_Authentication_AdminUser_Config* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AccessPoints_AccessPoint_System_Aaa_Authentication_AdminUser_Config& from);
  void MergeFrom(const AccessPoints_AccessPoint_System_Aaa_Authentication_AdminUser_Config& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AccessPoints_AccessPoint_System_Aaa_Authentication_AdminUser_Config* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .ywrapper.StringValue admin_password_hashed = 77802616 [(.yext.schemapath) = "/access-points/access-point/system/aaa/authentication/admin-user/config/admin-password-hashed"];
  bool has_admin_password_hashed() const;
  void clear_admin_password_hashed();
  static const int kAdminPasswordHashedFieldNumber = 77802616;
  const ::ywrapper::StringValue& admin_password_hashed() const;
  ::ywrapper::StringValue* release_admin_password_hashed();
  ::ywrapper::StringValue* mutable_admin_password_hashed();
  void set_allocated_admin_password_hashed(::ywrapper::StringValue* admin_password_hashed);

  // .ywrapper.StringValue admin_password = 518884846 [(.yext.schemapath) = "/access-points/access-point/system/aaa/authentication/admin-user/config/admin-password"];
  bool has_admin_password() const;
  void clear_admin_password();
  static const int kAdminPasswordFieldNumber = 518884846;
  const ::ywrapper::StringValue& admin_password() const;
  ::ywrapper::StringValue* release_admin_password();
  ::ywrapper::StringValue* mutable_admin_password();
  void set_allocated_admin_password(::ywrapper::StringValue* admin_password);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authentication.AdminUser.Config)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ywrapper::StringValue* admin_password_hashed_;
  ::ywrapper::StringValue* admin_password_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::InitDefaultsAccessPoints_AccessPoint_System_Aaa_Authentication_AdminUser_ConfigImpl();
};
// -------------------------------------------------------------------

class AccessPoints_AccessPoint_System_Aaa_Authentication_AdminUser_State : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authentication.AdminUser.State) */ {
 public:
  AccessPoints_AccessPoint_System_Aaa_Authentication_AdminUser_State();
  virtual ~AccessPoints_AccessPoint_System_Aaa_Authentication_AdminUser_State();

  AccessPoints_AccessPoint_System_Aaa_Authentication_AdminUser_State(const AccessPoints_AccessPoint_System_Aaa_Authentication_AdminUser_State& from);

  inline AccessPoints_AccessPoint_System_Aaa_Authentication_AdminUser_State& operator=(const AccessPoints_AccessPoint_System_Aaa_Authentication_AdminUser_State& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AccessPoints_AccessPoint_System_Aaa_Authentication_AdminUser_State(AccessPoints_AccessPoint_System_Aaa_Authentication_AdminUser_State&& from) noexcept
    : AccessPoints_AccessPoint_System_Aaa_Authentication_AdminUser_State() {
    *this = ::std::move(from);
  }

  inline AccessPoints_AccessPoint_System_Aaa_Authentication_AdminUser_State& operator=(AccessPoints_AccessPoint_System_Aaa_Authentication_AdminUser_State&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AccessPoints_AccessPoint_System_Aaa_Authentication_AdminUser_State& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AccessPoints_AccessPoint_System_Aaa_Authentication_AdminUser_State* internal_default_instance() {
    return reinterpret_cast<const AccessPoints_AccessPoint_System_Aaa_Authentication_AdminUser_State*>(
               &_AccessPoints_AccessPoint_System_Aaa_Authentication_AdminUser_State_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    70;

  void Swap(AccessPoints_AccessPoint_System_Aaa_Authentication_AdminUser_State* other);
  friend void swap(AccessPoints_AccessPoint_System_Aaa_Authentication_AdminUser_State& a, AccessPoints_AccessPoint_System_Aaa_Authentication_AdminUser_State& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AccessPoints_AccessPoint_System_Aaa_Authentication_AdminUser_State* New() const PROTOBUF_FINAL { return New(NULL); }

  AccessPoints_AccessPoint_System_Aaa_Authentication_AdminUser_State* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AccessPoints_AccessPoint_System_Aaa_Authentication_AdminUser_State& from);
  void MergeFrom(const AccessPoints_AccessPoint_System_Aaa_Authentication_AdminUser_State& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AccessPoints_AccessPoint_System_Aaa_Authentication_AdminUser_State* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .ywrapper.StringValue admin_username = 160058898 [(.yext.schemapath) = "/access-points/access-point/system/aaa/authentication/admin-user/state/admin-username"];
  bool has_admin_username() const;
  void clear_admin_username();
  static const int kAdminUsernameFieldNumber = 160058898;
  const ::ywrapper::StringValue& admin_username() const;
  ::ywrapper::StringValue* release_admin_username();
  ::ywrapper::StringValue* mutable_admin_username();
  void set_allocated_admin_username(::ywrapper::StringValue* admin_username);

  // .ywrapper.StringValue admin_password_hashed = 329646473 [(.yext.schemapath) = "/access-points/access-point/system/aaa/authentication/admin-user/state/admin-password-hashed"];
  bool has_admin_password_hashed() const;
  void clear_admin_password_hashed();
  static const int kAdminPasswordHashedFieldNumber = 329646473;
  const ::ywrapper::StringValue& admin_password_hashed() const;
  ::ywrapper::StringValue* release_admin_password_hashed();
  ::ywrapper::StringValue* mutable_admin_password_hashed();
  void set_allocated_admin_password_hashed(::ywrapper::StringValue* admin_password_hashed);

  // .ywrapper.StringValue admin_password = 509711845 [(.yext.schemapath) = "/access-points/access-point/system/aaa/authentication/admin-user/state/admin-password"];
  bool has_admin_password() const;
  void clear_admin_password();
  static const int kAdminPasswordFieldNumber = 509711845;
  const ::ywrapper::StringValue& admin_password() const;
  ::ywrapper::StringValue* release_admin_password();
  ::ywrapper::StringValue* mutable_admin_password();
  void set_allocated_admin_password(::ywrapper::StringValue* admin_password);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authentication.AdminUser.State)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ywrapper::StringValue* admin_username_;
  ::ywrapper::StringValue* admin_password_hashed_;
  ::ywrapper::StringValue* admin_password_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::InitDefaultsAccessPoints_AccessPoint_System_Aaa_Authentication_AdminUser_StateImpl();
};
// -------------------------------------------------------------------

class AccessPoints_AccessPoint_System_Aaa_Authentication_AdminUser : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authentication.AdminUser) */ {
 public:
  AccessPoints_AccessPoint_System_Aaa_Authentication_AdminUser();
  virtual ~AccessPoints_AccessPoint_System_Aaa_Authentication_AdminUser();

  AccessPoints_AccessPoint_System_Aaa_Authentication_AdminUser(const AccessPoints_AccessPoint_System_Aaa_Authentication_AdminUser& from);

  inline AccessPoints_AccessPoint_System_Aaa_Authentication_AdminUser& operator=(const AccessPoints_AccessPoint_System_Aaa_Authentication_AdminUser& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AccessPoints_AccessPoint_System_Aaa_Authentication_AdminUser(AccessPoints_AccessPoint_System_Aaa_Authentication_AdminUser&& from) noexcept
    : AccessPoints_AccessPoint_System_Aaa_Authentication_AdminUser() {
    *this = ::std::move(from);
  }

  inline AccessPoints_AccessPoint_System_Aaa_Authentication_AdminUser& operator=(AccessPoints_AccessPoint_System_Aaa_Authentication_AdminUser&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AccessPoints_AccessPoint_System_Aaa_Authentication_AdminUser& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AccessPoints_AccessPoint_System_Aaa_Authentication_AdminUser* internal_default_instance() {
    return reinterpret_cast<const AccessPoints_AccessPoint_System_Aaa_Authentication_AdminUser*>(
               &_AccessPoints_AccessPoint_System_Aaa_Authentication_AdminUser_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    71;

  void Swap(AccessPoints_AccessPoint_System_Aaa_Authentication_AdminUser* other);
  friend void swap(AccessPoints_AccessPoint_System_Aaa_Authentication_AdminUser& a, AccessPoints_AccessPoint_System_Aaa_Authentication_AdminUser& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AccessPoints_AccessPoint_System_Aaa_Authentication_AdminUser* New() const PROTOBUF_FINAL { return New(NULL); }

  AccessPoints_AccessPoint_System_Aaa_Authentication_AdminUser* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AccessPoints_AccessPoint_System_Aaa_Authentication_AdminUser& from);
  void MergeFrom(const AccessPoints_AccessPoint_System_Aaa_Authentication_AdminUser& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AccessPoints_AccessPoint_System_Aaa_Authentication_AdminUser* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef AccessPoints_AccessPoint_System_Aaa_Authentication_AdminUser_Config Config;
  typedef AccessPoints_AccessPoint_System_Aaa_Authentication_AdminUser_State State;

  // accessors -------------------------------------------------------

  // .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authentication.AdminUser.Config config = 25796552 [(.yext.schemapath) = "/access-points/access-point/system/aaa/authentication/admin-user/config"];
  bool has_config() const;
  void clear_config();
  static const int kConfigFieldNumber = 25796552;
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authentication_AdminUser_Config& config() const;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authentication_AdminUser_Config* release_config();
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authentication_AdminUser_Config* mutable_config();
  void set_allocated_config(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authentication_AdminUser_Config* config);

  // .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authentication.AdminUser.State state = 534560865 [(.yext.schemapath) = "/access-points/access-point/system/aaa/authentication/admin-user/state"];
  bool has_state() const;
  void clear_state();
  static const int kStateFieldNumber = 534560865;
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authentication_AdminUser_State& state() const;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authentication_AdminUser_State* release_state();
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authentication_AdminUser_State* mutable_state();
  void set_allocated_state(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authentication_AdminUser_State* state);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authentication.AdminUser)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authentication_AdminUser_Config* config_;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authentication_AdminUser_State* state_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::InitDefaultsAccessPoints_AccessPoint_System_Aaa_Authentication_AdminUserImpl();
};
// -------------------------------------------------------------------

class AccessPoints_AccessPoint_System_Aaa_Authentication_Config_AuthenticationMethodUnion : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authentication.Config.AuthenticationMethodUnion) */ {
 public:
  AccessPoints_AccessPoint_System_Aaa_Authentication_Config_AuthenticationMethodUnion();
  virtual ~AccessPoints_AccessPoint_System_Aaa_Authentication_Config_AuthenticationMethodUnion();

  AccessPoints_AccessPoint_System_Aaa_Authentication_Config_AuthenticationMethodUnion(const AccessPoints_AccessPoint_System_Aaa_Authentication_Config_AuthenticationMethodUnion& from);

  inline AccessPoints_AccessPoint_System_Aaa_Authentication_Config_AuthenticationMethodUnion& operator=(const AccessPoints_AccessPoint_System_Aaa_Authentication_Config_AuthenticationMethodUnion& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AccessPoints_AccessPoint_System_Aaa_Authentication_Config_AuthenticationMethodUnion(AccessPoints_AccessPoint_System_Aaa_Authentication_Config_AuthenticationMethodUnion&& from) noexcept
    : AccessPoints_AccessPoint_System_Aaa_Authentication_Config_AuthenticationMethodUnion() {
    *this = ::std::move(from);
  }

  inline AccessPoints_AccessPoint_System_Aaa_Authentication_Config_AuthenticationMethodUnion& operator=(AccessPoints_AccessPoint_System_Aaa_Authentication_Config_AuthenticationMethodUnion&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AccessPoints_AccessPoint_System_Aaa_Authentication_Config_AuthenticationMethodUnion& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AccessPoints_AccessPoint_System_Aaa_Authentication_Config_AuthenticationMethodUnion* internal_default_instance() {
    return reinterpret_cast<const AccessPoints_AccessPoint_System_Aaa_Authentication_Config_AuthenticationMethodUnion*>(
               &_AccessPoints_AccessPoint_System_Aaa_Authentication_Config_AuthenticationMethodUnion_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    72;

  void Swap(AccessPoints_AccessPoint_System_Aaa_Authentication_Config_AuthenticationMethodUnion* other);
  friend void swap(AccessPoints_AccessPoint_System_Aaa_Authentication_Config_AuthenticationMethodUnion& a, AccessPoints_AccessPoint_System_Aaa_Authentication_Config_AuthenticationMethodUnion& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AccessPoints_AccessPoint_System_Aaa_Authentication_Config_AuthenticationMethodUnion* New() const PROTOBUF_FINAL { return New(NULL); }

  AccessPoints_AccessPoint_System_Aaa_Authentication_Config_AuthenticationMethodUnion* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AccessPoints_AccessPoint_System_Aaa_Authentication_Config_AuthenticationMethodUnion& from);
  void MergeFrom(const AccessPoints_AccessPoint_System_Aaa_Authentication_Config_AuthenticationMethodUnion& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AccessPoints_AccessPoint_System_Aaa_Authentication_Config_AuthenticationMethodUnion* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string authentication_method_string = 139696963;
  void clear_authentication_method_string();
  static const int kAuthenticationMethodStringFieldNumber = 139696963;
  const ::std::string& authentication_method_string() const;
  void set_authentication_method_string(const ::std::string& value);
  #if LANG_CXX11
  void set_authentication_method_string(::std::string&& value);
  #endif
  void set_authentication_method_string(const char* value);
  void set_authentication_method_string(const char* value, size_t size);
  ::std::string* mutable_authentication_method_string();
  ::std::string* release_authentication_method_string();
  void set_allocated_authentication_method_string(::std::string* authentication_method_string);

  // .openconfig.enums.OpenconfigAaaTypesAAAMETHODTYPE authentication_method_openconfigaaatypesaaamethodtype = 260528356;
  void clear_authentication_method_openconfigaaatypesaaamethodtype();
  static const int kAuthenticationMethodOpenconfigaaatypesaaamethodtypeFieldNumber = 260528356;
  ::openconfig::enums::OpenconfigAaaTypesAAAMETHODTYPE authentication_method_openconfigaaatypesaaamethodtype() const;
  void set_authentication_method_openconfigaaatypesaaamethodtype(::openconfig::enums::OpenconfigAaaTypesAAAMETHODTYPE value);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authentication.Config.AuthenticationMethodUnion)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr authentication_method_string_;
  int authentication_method_openconfigaaatypesaaamethodtype_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::InitDefaultsAccessPoints_AccessPoint_System_Aaa_Authentication_Config_AuthenticationMethodUnionImpl();
};
// -------------------------------------------------------------------

class AccessPoints_AccessPoint_System_Aaa_Authentication_Config : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authentication.Config) */ {
 public:
  AccessPoints_AccessPoint_System_Aaa_Authentication_Config();
  virtual ~AccessPoints_AccessPoint_System_Aaa_Authentication_Config();

  AccessPoints_AccessPoint_System_Aaa_Authentication_Config(const AccessPoints_AccessPoint_System_Aaa_Authentication_Config& from);

  inline AccessPoints_AccessPoint_System_Aaa_Authentication_Config& operator=(const AccessPoints_AccessPoint_System_Aaa_Authentication_Config& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AccessPoints_AccessPoint_System_Aaa_Authentication_Config(AccessPoints_AccessPoint_System_Aaa_Authentication_Config&& from) noexcept
    : AccessPoints_AccessPoint_System_Aaa_Authentication_Config() {
    *this = ::std::move(from);
  }

  inline AccessPoints_AccessPoint_System_Aaa_Authentication_Config& operator=(AccessPoints_AccessPoint_System_Aaa_Authentication_Config&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AccessPoints_AccessPoint_System_Aaa_Authentication_Config& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AccessPoints_AccessPoint_System_Aaa_Authentication_Config* internal_default_instance() {
    return reinterpret_cast<const AccessPoints_AccessPoint_System_Aaa_Authentication_Config*>(
               &_AccessPoints_AccessPoint_System_Aaa_Authentication_Config_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    73;

  void Swap(AccessPoints_AccessPoint_System_Aaa_Authentication_Config* other);
  friend void swap(AccessPoints_AccessPoint_System_Aaa_Authentication_Config& a, AccessPoints_AccessPoint_System_Aaa_Authentication_Config& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AccessPoints_AccessPoint_System_Aaa_Authentication_Config* New() const PROTOBUF_FINAL { return New(NULL); }

  AccessPoints_AccessPoint_System_Aaa_Authentication_Config* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AccessPoints_AccessPoint_System_Aaa_Authentication_Config& from);
  void MergeFrom(const AccessPoints_AccessPoint_System_Aaa_Authentication_Config& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AccessPoints_AccessPoint_System_Aaa_Authentication_Config* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef AccessPoints_AccessPoint_System_Aaa_Authentication_Config_AuthenticationMethodUnion AuthenticationMethodUnion;

  // accessors -------------------------------------------------------

  // repeated .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authentication.Config.AuthenticationMethodUnion authentication_method = 475262069 [(.yext.schemapath) = "/access-points/access-point/system/aaa/authentication/config/authentication-method"];
  int authentication_method_size() const;
  void clear_authentication_method();
  static const int kAuthenticationMethodFieldNumber = 475262069;
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authentication_Config_AuthenticationMethodUnion& authentication_method(int index) const;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authentication_Config_AuthenticationMethodUnion* mutable_authentication_method(int index);
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authentication_Config_AuthenticationMethodUnion* add_authentication_method();
  ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authentication_Config_AuthenticationMethodUnion >*
      mutable_authentication_method();
  const ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authentication_Config_AuthenticationMethodUnion >&
      authentication_method() const;

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authentication.Config)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authentication_Config_AuthenticationMethodUnion > authentication_method_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::InitDefaultsAccessPoints_AccessPoint_System_Aaa_Authentication_ConfigImpl();
};
// -------------------------------------------------------------------

class AccessPoints_AccessPoint_System_Aaa_Authentication_State_AuthenticationMethodUnion : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authentication.State.AuthenticationMethodUnion) */ {
 public:
  AccessPoints_AccessPoint_System_Aaa_Authentication_State_AuthenticationMethodUnion();
  virtual ~AccessPoints_AccessPoint_System_Aaa_Authentication_State_AuthenticationMethodUnion();

  AccessPoints_AccessPoint_System_Aaa_Authentication_State_AuthenticationMethodUnion(const AccessPoints_AccessPoint_System_Aaa_Authentication_State_AuthenticationMethodUnion& from);

  inline AccessPoints_AccessPoint_System_Aaa_Authentication_State_AuthenticationMethodUnion& operator=(const AccessPoints_AccessPoint_System_Aaa_Authentication_State_AuthenticationMethodUnion& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AccessPoints_AccessPoint_System_Aaa_Authentication_State_AuthenticationMethodUnion(AccessPoints_AccessPoint_System_Aaa_Authentication_State_AuthenticationMethodUnion&& from) noexcept
    : AccessPoints_AccessPoint_System_Aaa_Authentication_State_AuthenticationMethodUnion() {
    *this = ::std::move(from);
  }

  inline AccessPoints_AccessPoint_System_Aaa_Authentication_State_AuthenticationMethodUnion& operator=(AccessPoints_AccessPoint_System_Aaa_Authentication_State_AuthenticationMethodUnion&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AccessPoints_AccessPoint_System_Aaa_Authentication_State_AuthenticationMethodUnion& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AccessPoints_AccessPoint_System_Aaa_Authentication_State_AuthenticationMethodUnion* internal_default_instance() {
    return reinterpret_cast<const AccessPoints_AccessPoint_System_Aaa_Authentication_State_AuthenticationMethodUnion*>(
               &_AccessPoints_AccessPoint_System_Aaa_Authentication_State_AuthenticationMethodUnion_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    74;

  void Swap(AccessPoints_AccessPoint_System_Aaa_Authentication_State_AuthenticationMethodUnion* other);
  friend void swap(AccessPoints_AccessPoint_System_Aaa_Authentication_State_AuthenticationMethodUnion& a, AccessPoints_AccessPoint_System_Aaa_Authentication_State_AuthenticationMethodUnion& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AccessPoints_AccessPoint_System_Aaa_Authentication_State_AuthenticationMethodUnion* New() const PROTOBUF_FINAL { return New(NULL); }

  AccessPoints_AccessPoint_System_Aaa_Authentication_State_AuthenticationMethodUnion* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AccessPoints_AccessPoint_System_Aaa_Authentication_State_AuthenticationMethodUnion& from);
  void MergeFrom(const AccessPoints_AccessPoint_System_Aaa_Authentication_State_AuthenticationMethodUnion& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AccessPoints_AccessPoint_System_Aaa_Authentication_State_AuthenticationMethodUnion* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string authentication_method_string = 106428420;
  void clear_authentication_method_string();
  static const int kAuthenticationMethodStringFieldNumber = 106428420;
  const ::std::string& authentication_method_string() const;
  void set_authentication_method_string(const ::std::string& value);
  #if LANG_CXX11
  void set_authentication_method_string(::std::string&& value);
  #endif
  void set_authentication_method_string(const char* value);
  void set_authentication_method_string(const char* value, size_t size);
  ::std::string* mutable_authentication_method_string();
  ::std::string* release_authentication_method_string();
  void set_allocated_authentication_method_string(::std::string* authentication_method_string);

  // .openconfig.enums.OpenconfigAaaTypesAAAMETHODTYPE authentication_method_openconfigaaatypesaaamethodtype = 409512449;
  void clear_authentication_method_openconfigaaatypesaaamethodtype();
  static const int kAuthenticationMethodOpenconfigaaatypesaaamethodtypeFieldNumber = 409512449;
  ::openconfig::enums::OpenconfigAaaTypesAAAMETHODTYPE authentication_method_openconfigaaatypesaaamethodtype() const;
  void set_authentication_method_openconfigaaatypesaaamethodtype(::openconfig::enums::OpenconfigAaaTypesAAAMETHODTYPE value);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authentication.State.AuthenticationMethodUnion)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr authentication_method_string_;
  int authentication_method_openconfigaaatypesaaamethodtype_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::InitDefaultsAccessPoints_AccessPoint_System_Aaa_Authentication_State_AuthenticationMethodUnionImpl();
};
// -------------------------------------------------------------------

class AccessPoints_AccessPoint_System_Aaa_Authentication_State : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authentication.State) */ {
 public:
  AccessPoints_AccessPoint_System_Aaa_Authentication_State();
  virtual ~AccessPoints_AccessPoint_System_Aaa_Authentication_State();

  AccessPoints_AccessPoint_System_Aaa_Authentication_State(const AccessPoints_AccessPoint_System_Aaa_Authentication_State& from);

  inline AccessPoints_AccessPoint_System_Aaa_Authentication_State& operator=(const AccessPoints_AccessPoint_System_Aaa_Authentication_State& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AccessPoints_AccessPoint_System_Aaa_Authentication_State(AccessPoints_AccessPoint_System_Aaa_Authentication_State&& from) noexcept
    : AccessPoints_AccessPoint_System_Aaa_Authentication_State() {
    *this = ::std::move(from);
  }

  inline AccessPoints_AccessPoint_System_Aaa_Authentication_State& operator=(AccessPoints_AccessPoint_System_Aaa_Authentication_State&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AccessPoints_AccessPoint_System_Aaa_Authentication_State& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AccessPoints_AccessPoint_System_Aaa_Authentication_State* internal_default_instance() {
    return reinterpret_cast<const AccessPoints_AccessPoint_System_Aaa_Authentication_State*>(
               &_AccessPoints_AccessPoint_System_Aaa_Authentication_State_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    75;

  void Swap(AccessPoints_AccessPoint_System_Aaa_Authentication_State* other);
  friend void swap(AccessPoints_AccessPoint_System_Aaa_Authentication_State& a, AccessPoints_AccessPoint_System_Aaa_Authentication_State& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AccessPoints_AccessPoint_System_Aaa_Authentication_State* New() const PROTOBUF_FINAL { return New(NULL); }

  AccessPoints_AccessPoint_System_Aaa_Authentication_State* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AccessPoints_AccessPoint_System_Aaa_Authentication_State& from);
  void MergeFrom(const AccessPoints_AccessPoint_System_Aaa_Authentication_State& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AccessPoints_AccessPoint_System_Aaa_Authentication_State* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef AccessPoints_AccessPoint_System_Aaa_Authentication_State_AuthenticationMethodUnion AuthenticationMethodUnion;

  // accessors -------------------------------------------------------

  // repeated .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authentication.State.AuthenticationMethodUnion authentication_method = 155400636 [(.yext.schemapath) = "/access-points/access-point/system/aaa/authentication/state/authentication-method"];
  int authentication_method_size() const;
  void clear_authentication_method();
  static const int kAuthenticationMethodFieldNumber = 155400636;
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authentication_State_AuthenticationMethodUnion& authentication_method(int index) const;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authentication_State_AuthenticationMethodUnion* mutable_authentication_method(int index);
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authentication_State_AuthenticationMethodUnion* add_authentication_method();
  ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authentication_State_AuthenticationMethodUnion >*
      mutable_authentication_method();
  const ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authentication_State_AuthenticationMethodUnion >&
      authentication_method() const;

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authentication.State)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authentication_State_AuthenticationMethodUnion > authentication_method_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::InitDefaultsAccessPoints_AccessPoint_System_Aaa_Authentication_StateImpl();
};
// -------------------------------------------------------------------

class AccessPoints_AccessPoint_System_Aaa_Authentication_Users_User_Config : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authentication.Users.User.Config) */ {
 public:
  AccessPoints_AccessPoint_System_Aaa_Authentication_Users_User_Config();
  virtual ~AccessPoints_AccessPoint_System_Aaa_Authentication_Users_User_Config();

  AccessPoints_AccessPoint_System_Aaa_Authentication_Users_User_Config(const AccessPoints_AccessPoint_System_Aaa_Authentication_Users_User_Config& from);

  inline AccessPoints_AccessPoint_System_Aaa_Authentication_Users_User_Config& operator=(const AccessPoints_AccessPoint_System_Aaa_Authentication_Users_User_Config& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AccessPoints_AccessPoint_System_Aaa_Authentication_Users_User_Config(AccessPoints_AccessPoint_System_Aaa_Authentication_Users_User_Config&& from) noexcept
    : AccessPoints_AccessPoint_System_Aaa_Authentication_Users_User_Config() {
    *this = ::std::move(from);
  }

  inline AccessPoints_AccessPoint_System_Aaa_Authentication_Users_User_Config& operator=(AccessPoints_AccessPoint_System_Aaa_Authentication_Users_User_Config&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AccessPoints_AccessPoint_System_Aaa_Authentication_Users_User_Config& default_instance();

  enum RoleCase {
    kRoleOpenconfigaaatypessystemdefinedroles = 226065840,
    kRoleString = 78412198,
    ROLE_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AccessPoints_AccessPoint_System_Aaa_Authentication_Users_User_Config* internal_default_instance() {
    return reinterpret_cast<const AccessPoints_AccessPoint_System_Aaa_Authentication_Users_User_Config*>(
               &_AccessPoints_AccessPoint_System_Aaa_Authentication_Users_User_Config_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    76;

  void Swap(AccessPoints_AccessPoint_System_Aaa_Authentication_Users_User_Config* other);
  friend void swap(AccessPoints_AccessPoint_System_Aaa_Authentication_Users_User_Config& a, AccessPoints_AccessPoint_System_Aaa_Authentication_Users_User_Config& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AccessPoints_AccessPoint_System_Aaa_Authentication_Users_User_Config* New() const PROTOBUF_FINAL { return New(NULL); }

  AccessPoints_AccessPoint_System_Aaa_Authentication_Users_User_Config* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AccessPoints_AccessPoint_System_Aaa_Authentication_Users_User_Config& from);
  void MergeFrom(const AccessPoints_AccessPoint_System_Aaa_Authentication_Users_User_Config& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AccessPoints_AccessPoint_System_Aaa_Authentication_Users_User_Config* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .ywrapper.StringValue password = 216967253 [(.yext.schemapath) = "/access-points/access-point/system/aaa/authentication/users/user/config/password"];
  bool has_password() const;
  void clear_password();
  static const int kPasswordFieldNumber = 216967253;
  const ::ywrapper::StringValue& password() const;
  ::ywrapper::StringValue* release_password();
  ::ywrapper::StringValue* mutable_password();
  void set_allocated_password(::ywrapper::StringValue* password);

  // .ywrapper.StringValue username = 421473794 [(.yext.schemapath) = "/access-points/access-point/system/aaa/authentication/users/user/config/username"];
  bool has_username() const;
  void clear_username();
  static const int kUsernameFieldNumber = 421473794;
  const ::ywrapper::StringValue& username() const;
  ::ywrapper::StringValue* release_username();
  ::ywrapper::StringValue* mutable_username();
  void set_allocated_username(::ywrapper::StringValue* username);

  // .ywrapper.StringValue password_hashed = 514123577 [(.yext.schemapath) = "/access-points/access-point/system/aaa/authentication/users/user/config/password-hashed"];
  bool has_password_hashed() const;
  void clear_password_hashed();
  static const int kPasswordHashedFieldNumber = 514123577;
  const ::ywrapper::StringValue& password_hashed() const;
  ::ywrapper::StringValue* release_password_hashed();
  ::ywrapper::StringValue* mutable_password_hashed();
  void set_allocated_password_hashed(::ywrapper::StringValue* password_hashed);

  // .ywrapper.StringValue ssh_key = 527474434 [(.yext.schemapath) = "/access-points/access-point/system/aaa/authentication/users/user/config/ssh-key"];
  bool has_ssh_key() const;
  void clear_ssh_key();
  static const int kSshKeyFieldNumber = 527474434;
  const ::ywrapper::StringValue& ssh_key() const;
  ::ywrapper::StringValue* release_ssh_key();
  ::ywrapper::StringValue* mutable_ssh_key();
  void set_allocated_ssh_key(::ywrapper::StringValue* ssh_key);

  // .openconfig.enums.OpenconfigAaaTypesSYSTEMDEFINEDROLES role_openconfigaaatypessystemdefinedroles = 226065840;
  private:
  bool has_role_openconfigaaatypessystemdefinedroles() const;
  public:
  void clear_role_openconfigaaatypessystemdefinedroles();
  static const int kRoleOpenconfigaaatypessystemdefinedrolesFieldNumber = 226065840;
  ::openconfig::enums::OpenconfigAaaTypesSYSTEMDEFINEDROLES role_openconfigaaatypessystemdefinedroles() const;
  void set_role_openconfigaaatypessystemdefinedroles(::openconfig::enums::OpenconfigAaaTypesSYSTEMDEFINEDROLES value);

  // string role_string = 78412198;
  private:
  bool has_role_string() const;
  public:
  void clear_role_string();
  static const int kRoleStringFieldNumber = 78412198;
  const ::std::string& role_string() const;
  void set_role_string(const ::std::string& value);
  #if LANG_CXX11
  void set_role_string(::std::string&& value);
  #endif
  void set_role_string(const char* value);
  void set_role_string(const char* value, size_t size);
  ::std::string* mutable_role_string();
  ::std::string* release_role_string();
  void set_allocated_role_string(::std::string* role_string);

  RoleCase role_case() const;
  // @@protoc_insertion_point(class_scope:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authentication.Users.User.Config)
 private:
  void set_has_role_openconfigaaatypessystemdefinedroles();
  void set_has_role_string();

  inline bool has_role() const;
  void clear_role();
  inline void clear_has_role();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ywrapper::StringValue* password_;
  ::ywrapper::StringValue* username_;
  ::ywrapper::StringValue* password_hashed_;
  ::ywrapper::StringValue* ssh_key_;
  union RoleUnion {
    RoleUnion() {}
    int role_openconfigaaatypessystemdefinedroles_;
    ::google::protobuf::internal::ArenaStringPtr role_string_;
  } role_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::InitDefaultsAccessPoints_AccessPoint_System_Aaa_Authentication_Users_User_ConfigImpl();
};
// -------------------------------------------------------------------

class AccessPoints_AccessPoint_System_Aaa_Authentication_Users_User_State : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authentication.Users.User.State) */ {
 public:
  AccessPoints_AccessPoint_System_Aaa_Authentication_Users_User_State();
  virtual ~AccessPoints_AccessPoint_System_Aaa_Authentication_Users_User_State();

  AccessPoints_AccessPoint_System_Aaa_Authentication_Users_User_State(const AccessPoints_AccessPoint_System_Aaa_Authentication_Users_User_State& from);

  inline AccessPoints_AccessPoint_System_Aaa_Authentication_Users_User_State& operator=(const AccessPoints_AccessPoint_System_Aaa_Authentication_Users_User_State& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AccessPoints_AccessPoint_System_Aaa_Authentication_Users_User_State(AccessPoints_AccessPoint_System_Aaa_Authentication_Users_User_State&& from) noexcept
    : AccessPoints_AccessPoint_System_Aaa_Authentication_Users_User_State() {
    *this = ::std::move(from);
  }

  inline AccessPoints_AccessPoint_System_Aaa_Authentication_Users_User_State& operator=(AccessPoints_AccessPoint_System_Aaa_Authentication_Users_User_State&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AccessPoints_AccessPoint_System_Aaa_Authentication_Users_User_State& default_instance();

  enum RoleCase {
    kRoleOpenconfigaaatypessystemdefinedroles = 513153959,
    kRoleString = 142700581,
    ROLE_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AccessPoints_AccessPoint_System_Aaa_Authentication_Users_User_State* internal_default_instance() {
    return reinterpret_cast<const AccessPoints_AccessPoint_System_Aaa_Authentication_Users_User_State*>(
               &_AccessPoints_AccessPoint_System_Aaa_Authentication_Users_User_State_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    77;

  void Swap(AccessPoints_AccessPoint_System_Aaa_Authentication_Users_User_State* other);
  friend void swap(AccessPoints_AccessPoint_System_Aaa_Authentication_Users_User_State& a, AccessPoints_AccessPoint_System_Aaa_Authentication_Users_User_State& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AccessPoints_AccessPoint_System_Aaa_Authentication_Users_User_State* New() const PROTOBUF_FINAL { return New(NULL); }

  AccessPoints_AccessPoint_System_Aaa_Authentication_Users_User_State* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AccessPoints_AccessPoint_System_Aaa_Authentication_Users_User_State& from);
  void MergeFrom(const AccessPoints_AccessPoint_System_Aaa_Authentication_Users_User_State& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AccessPoints_AccessPoint_System_Aaa_Authentication_Users_User_State* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .ywrapper.StringValue password = 152993100 [(.yext.schemapath) = "/access-points/access-point/system/aaa/authentication/users/user/state/password"];
  bool has_password() const;
  void clear_password();
  static const int kPasswordFieldNumber = 152993100;
  const ::ywrapper::StringValue& password() const;
  ::ywrapper::StringValue* release_password();
  ::ywrapper::StringValue* mutable_password();
  void set_allocated_password(::ywrapper::StringValue* password);

  // .ywrapper.StringValue ssh_key = 300451941 [(.yext.schemapath) = "/access-points/access-point/system/aaa/authentication/users/user/state/ssh-key"];
  bool has_ssh_key() const;
  void clear_ssh_key();
  static const int kSshKeyFieldNumber = 300451941;
  const ::ywrapper::StringValue& ssh_key() const;
  ::ywrapper::StringValue* release_ssh_key();
  ::ywrapper::StringValue* mutable_ssh_key();
  void set_allocated_ssh_key(::ywrapper::StringValue* ssh_key);

  // .ywrapper.StringValue password_hashed = 309387054 [(.yext.schemapath) = "/access-points/access-point/system/aaa/authentication/users/user/state/password-hashed"];
  bool has_password_hashed() const;
  void clear_password_hashed();
  static const int kPasswordHashedFieldNumber = 309387054;
  const ::ywrapper::StringValue& password_hashed() const;
  ::ywrapper::StringValue* release_password_hashed();
  ::ywrapper::StringValue* mutable_password_hashed();
  void set_allocated_password_hashed(::ywrapper::StringValue* password_hashed);

  // .ywrapper.StringValue username = 463826631 [(.yext.schemapath) = "/access-points/access-point/system/aaa/authentication/users/user/state/username"];
  bool has_username() const;
  void clear_username();
  static const int kUsernameFieldNumber = 463826631;
  const ::ywrapper::StringValue& username() const;
  ::ywrapper::StringValue* release_username();
  ::ywrapper::StringValue* mutable_username();
  void set_allocated_username(::ywrapper::StringValue* username);

  // .openconfig.enums.OpenconfigAaaTypesSYSTEMDEFINEDROLES role_openconfigaaatypessystemdefinedroles = 513153959;
  private:
  bool has_role_openconfigaaatypessystemdefinedroles() const;
  public:
  void clear_role_openconfigaaatypessystemdefinedroles();
  static const int kRoleOpenconfigaaatypessystemdefinedrolesFieldNumber = 513153959;
  ::openconfig::enums::OpenconfigAaaTypesSYSTEMDEFINEDROLES role_openconfigaaatypessystemdefinedroles() const;
  void set_role_openconfigaaatypessystemdefinedroles(::openconfig::enums::OpenconfigAaaTypesSYSTEMDEFINEDROLES value);

  // string role_string = 142700581;
  private:
  bool has_role_string() const;
  public:
  void clear_role_string();
  static const int kRoleStringFieldNumber = 142700581;
  const ::std::string& role_string() const;
  void set_role_string(const ::std::string& value);
  #if LANG_CXX11
  void set_role_string(::std::string&& value);
  #endif
  void set_role_string(const char* value);
  void set_role_string(const char* value, size_t size);
  ::std::string* mutable_role_string();
  ::std::string* release_role_string();
  void set_allocated_role_string(::std::string* role_string);

  RoleCase role_case() const;
  // @@protoc_insertion_point(class_scope:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authentication.Users.User.State)
 private:
  void set_has_role_openconfigaaatypessystemdefinedroles();
  void set_has_role_string();

  inline bool has_role() const;
  void clear_role();
  inline void clear_has_role();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ywrapper::StringValue* password_;
  ::ywrapper::StringValue* ssh_key_;
  ::ywrapper::StringValue* password_hashed_;
  ::ywrapper::StringValue* username_;
  union RoleUnion {
    RoleUnion() {}
    int role_openconfigaaatypessystemdefinedroles_;
    ::google::protobuf::internal::ArenaStringPtr role_string_;
  } role_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::InitDefaultsAccessPoints_AccessPoint_System_Aaa_Authentication_Users_User_StateImpl();
};
// -------------------------------------------------------------------

class AccessPoints_AccessPoint_System_Aaa_Authentication_Users_User : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authentication.Users.User) */ {
 public:
  AccessPoints_AccessPoint_System_Aaa_Authentication_Users_User();
  virtual ~AccessPoints_AccessPoint_System_Aaa_Authentication_Users_User();

  AccessPoints_AccessPoint_System_Aaa_Authentication_Users_User(const AccessPoints_AccessPoint_System_Aaa_Authentication_Users_User& from);

  inline AccessPoints_AccessPoint_System_Aaa_Authentication_Users_User& operator=(const AccessPoints_AccessPoint_System_Aaa_Authentication_Users_User& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AccessPoints_AccessPoint_System_Aaa_Authentication_Users_User(AccessPoints_AccessPoint_System_Aaa_Authentication_Users_User&& from) noexcept
    : AccessPoints_AccessPoint_System_Aaa_Authentication_Users_User() {
    *this = ::std::move(from);
  }

  inline AccessPoints_AccessPoint_System_Aaa_Authentication_Users_User& operator=(AccessPoints_AccessPoint_System_Aaa_Authentication_Users_User&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AccessPoints_AccessPoint_System_Aaa_Authentication_Users_User& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AccessPoints_AccessPoint_System_Aaa_Authentication_Users_User* internal_default_instance() {
    return reinterpret_cast<const AccessPoints_AccessPoint_System_Aaa_Authentication_Users_User*>(
               &_AccessPoints_AccessPoint_System_Aaa_Authentication_Users_User_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    78;

  void Swap(AccessPoints_AccessPoint_System_Aaa_Authentication_Users_User* other);
  friend void swap(AccessPoints_AccessPoint_System_Aaa_Authentication_Users_User& a, AccessPoints_AccessPoint_System_Aaa_Authentication_Users_User& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AccessPoints_AccessPoint_System_Aaa_Authentication_Users_User* New() const PROTOBUF_FINAL { return New(NULL); }

  AccessPoints_AccessPoint_System_Aaa_Authentication_Users_User* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AccessPoints_AccessPoint_System_Aaa_Authentication_Users_User& from);
  void MergeFrom(const AccessPoints_AccessPoint_System_Aaa_Authentication_Users_User& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AccessPoints_AccessPoint_System_Aaa_Authentication_Users_User* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef AccessPoints_AccessPoint_System_Aaa_Authentication_Users_User_Config Config;
  typedef AccessPoints_AccessPoint_System_Aaa_Authentication_Users_User_State State;

  // accessors -------------------------------------------------------

  // .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authentication.Users.User.Config config = 313497283 [(.yext.schemapath) = "/access-points/access-point/system/aaa/authentication/users/user/config"];
  bool has_config() const;
  void clear_config();
  static const int kConfigFieldNumber = 313497283;
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authentication_Users_User_Config& config() const;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authentication_Users_User_Config* release_config();
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authentication_Users_User_Config* mutable_config();
  void set_allocated_config(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authentication_Users_User_Config* config);

  // .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authentication.Users.User.State state = 376034596 [(.yext.schemapath) = "/access-points/access-point/system/aaa/authentication/users/user/state"];
  bool has_state() const;
  void clear_state();
  static const int kStateFieldNumber = 376034596;
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authentication_Users_User_State& state() const;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authentication_Users_User_State* release_state();
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authentication_Users_User_State* mutable_state();
  void set_allocated_state(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authentication_Users_User_State* state);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authentication.Users.User)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authentication_Users_User_Config* config_;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authentication_Users_User_State* state_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::InitDefaultsAccessPoints_AccessPoint_System_Aaa_Authentication_Users_UserImpl();
};
// -------------------------------------------------------------------

class AccessPoints_AccessPoint_System_Aaa_Authentication_Users_UserKey : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authentication.Users.UserKey) */ {
 public:
  AccessPoints_AccessPoint_System_Aaa_Authentication_Users_UserKey();
  virtual ~AccessPoints_AccessPoint_System_Aaa_Authentication_Users_UserKey();

  AccessPoints_AccessPoint_System_Aaa_Authentication_Users_UserKey(const AccessPoints_AccessPoint_System_Aaa_Authentication_Users_UserKey& from);

  inline AccessPoints_AccessPoint_System_Aaa_Authentication_Users_UserKey& operator=(const AccessPoints_AccessPoint_System_Aaa_Authentication_Users_UserKey& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AccessPoints_AccessPoint_System_Aaa_Authentication_Users_UserKey(AccessPoints_AccessPoint_System_Aaa_Authentication_Users_UserKey&& from) noexcept
    : AccessPoints_AccessPoint_System_Aaa_Authentication_Users_UserKey() {
    *this = ::std::move(from);
  }

  inline AccessPoints_AccessPoint_System_Aaa_Authentication_Users_UserKey& operator=(AccessPoints_AccessPoint_System_Aaa_Authentication_Users_UserKey&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AccessPoints_AccessPoint_System_Aaa_Authentication_Users_UserKey& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AccessPoints_AccessPoint_System_Aaa_Authentication_Users_UserKey* internal_default_instance() {
    return reinterpret_cast<const AccessPoints_AccessPoint_System_Aaa_Authentication_Users_UserKey*>(
               &_AccessPoints_AccessPoint_System_Aaa_Authentication_Users_UserKey_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    79;

  void Swap(AccessPoints_AccessPoint_System_Aaa_Authentication_Users_UserKey* other);
  friend void swap(AccessPoints_AccessPoint_System_Aaa_Authentication_Users_UserKey& a, AccessPoints_AccessPoint_System_Aaa_Authentication_Users_UserKey& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AccessPoints_AccessPoint_System_Aaa_Authentication_Users_UserKey* New() const PROTOBUF_FINAL { return New(NULL); }

  AccessPoints_AccessPoint_System_Aaa_Authentication_Users_UserKey* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AccessPoints_AccessPoint_System_Aaa_Authentication_Users_UserKey& from);
  void MergeFrom(const AccessPoints_AccessPoint_System_Aaa_Authentication_Users_UserKey& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AccessPoints_AccessPoint_System_Aaa_Authentication_Users_UserKey* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string username = 1 [(.yext.schemapath) = "/access-points/access-point/system/aaa/authentication/users/user/username"];
  void clear_username();
  static const int kUsernameFieldNumber = 1;
  const ::std::string& username() const;
  void set_username(const ::std::string& value);
  #if LANG_CXX11
  void set_username(::std::string&& value);
  #endif
  void set_username(const char* value);
  void set_username(const char* value, size_t size);
  ::std::string* mutable_username();
  ::std::string* release_username();
  void set_allocated_username(::std::string* username);

  // .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authentication.Users.User user = 2;
  bool has_user() const;
  void clear_user();
  static const int kUserFieldNumber = 2;
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authentication_Users_User& user() const;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authentication_Users_User* release_user();
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authentication_Users_User* mutable_user();
  void set_allocated_user(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authentication_Users_User* user);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authentication.Users.UserKey)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr username_;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authentication_Users_User* user_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::InitDefaultsAccessPoints_AccessPoint_System_Aaa_Authentication_Users_UserKeyImpl();
};
// -------------------------------------------------------------------

class AccessPoints_AccessPoint_System_Aaa_Authentication_Users : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authentication.Users) */ {
 public:
  AccessPoints_AccessPoint_System_Aaa_Authentication_Users();
  virtual ~AccessPoints_AccessPoint_System_Aaa_Authentication_Users();

  AccessPoints_AccessPoint_System_Aaa_Authentication_Users(const AccessPoints_AccessPoint_System_Aaa_Authentication_Users& from);

  inline AccessPoints_AccessPoint_System_Aaa_Authentication_Users& operator=(const AccessPoints_AccessPoint_System_Aaa_Authentication_Users& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AccessPoints_AccessPoint_System_Aaa_Authentication_Users(AccessPoints_AccessPoint_System_Aaa_Authentication_Users&& from) noexcept
    : AccessPoints_AccessPoint_System_Aaa_Authentication_Users() {
    *this = ::std::move(from);
  }

  inline AccessPoints_AccessPoint_System_Aaa_Authentication_Users& operator=(AccessPoints_AccessPoint_System_Aaa_Authentication_Users&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AccessPoints_AccessPoint_System_Aaa_Authentication_Users& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AccessPoints_AccessPoint_System_Aaa_Authentication_Users* internal_default_instance() {
    return reinterpret_cast<const AccessPoints_AccessPoint_System_Aaa_Authentication_Users*>(
               &_AccessPoints_AccessPoint_System_Aaa_Authentication_Users_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    80;

  void Swap(AccessPoints_AccessPoint_System_Aaa_Authentication_Users* other);
  friend void swap(AccessPoints_AccessPoint_System_Aaa_Authentication_Users& a, AccessPoints_AccessPoint_System_Aaa_Authentication_Users& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AccessPoints_AccessPoint_System_Aaa_Authentication_Users* New() const PROTOBUF_FINAL { return New(NULL); }

  AccessPoints_AccessPoint_System_Aaa_Authentication_Users* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AccessPoints_AccessPoint_System_Aaa_Authentication_Users& from);
  void MergeFrom(const AccessPoints_AccessPoint_System_Aaa_Authentication_Users& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AccessPoints_AccessPoint_System_Aaa_Authentication_Users* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef AccessPoints_AccessPoint_System_Aaa_Authentication_Users_User User;
  typedef AccessPoints_AccessPoint_System_Aaa_Authentication_Users_UserKey UserKey;

  // accessors -------------------------------------------------------

  // repeated .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authentication.Users.UserKey user = 160115618 [(.yext.schemapath) = "/access-points/access-point/system/aaa/authentication/users/user"];
  int user_size() const;
  void clear_user();
  static const int kUserFieldNumber = 160115618;
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authentication_Users_UserKey& user(int index) const;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authentication_Users_UserKey* mutable_user(int index);
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authentication_Users_UserKey* add_user();
  ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authentication_Users_UserKey >*
      mutable_user();
  const ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authentication_Users_UserKey >&
      user() const;

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authentication.Users)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authentication_Users_UserKey > user_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::InitDefaultsAccessPoints_AccessPoint_System_Aaa_Authentication_UsersImpl();
};
// -------------------------------------------------------------------

class AccessPoints_AccessPoint_System_Aaa_Authentication : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authentication) */ {
 public:
  AccessPoints_AccessPoint_System_Aaa_Authentication();
  virtual ~AccessPoints_AccessPoint_System_Aaa_Authentication();

  AccessPoints_AccessPoint_System_Aaa_Authentication(const AccessPoints_AccessPoint_System_Aaa_Authentication& from);

  inline AccessPoints_AccessPoint_System_Aaa_Authentication& operator=(const AccessPoints_AccessPoint_System_Aaa_Authentication& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AccessPoints_AccessPoint_System_Aaa_Authentication(AccessPoints_AccessPoint_System_Aaa_Authentication&& from) noexcept
    : AccessPoints_AccessPoint_System_Aaa_Authentication() {
    *this = ::std::move(from);
  }

  inline AccessPoints_AccessPoint_System_Aaa_Authentication& operator=(AccessPoints_AccessPoint_System_Aaa_Authentication&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AccessPoints_AccessPoint_System_Aaa_Authentication& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AccessPoints_AccessPoint_System_Aaa_Authentication* internal_default_instance() {
    return reinterpret_cast<const AccessPoints_AccessPoint_System_Aaa_Authentication*>(
               &_AccessPoints_AccessPoint_System_Aaa_Authentication_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    81;

  void Swap(AccessPoints_AccessPoint_System_Aaa_Authentication* other);
  friend void swap(AccessPoints_AccessPoint_System_Aaa_Authentication& a, AccessPoints_AccessPoint_System_Aaa_Authentication& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AccessPoints_AccessPoint_System_Aaa_Authentication* New() const PROTOBUF_FINAL { return New(NULL); }

  AccessPoints_AccessPoint_System_Aaa_Authentication* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AccessPoints_AccessPoint_System_Aaa_Authentication& from);
  void MergeFrom(const AccessPoints_AccessPoint_System_Aaa_Authentication& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AccessPoints_AccessPoint_System_Aaa_Authentication* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef AccessPoints_AccessPoint_System_Aaa_Authentication_AdminUser AdminUser;
  typedef AccessPoints_AccessPoint_System_Aaa_Authentication_Config Config;
  typedef AccessPoints_AccessPoint_System_Aaa_Authentication_State State;
  typedef AccessPoints_AccessPoint_System_Aaa_Authentication_Users Users;

  // accessors -------------------------------------------------------

  // .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authentication.Config config = 64840486 [(.yext.schemapath) = "/access-points/access-point/system/aaa/authentication/config"];
  bool has_config() const;
  void clear_config();
  static const int kConfigFieldNumber = 64840486;
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authentication_Config& config() const;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authentication_Config* release_config();
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authentication_Config* mutable_config();
  void set_allocated_config(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authentication_Config* config);

  // .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authentication.State state = 292309651 [(.yext.schemapath) = "/access-points/access-point/system/aaa/authentication/state"];
  bool has_state() const;
  void clear_state();
  static const int kStateFieldNumber = 292309651;
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authentication_State& state() const;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authentication_State* release_state();
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authentication_State* mutable_state();
  void set_allocated_state(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authentication_State* state);

  // .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authentication.AdminUser admin_user = 314899031 [(.yext.schemapath) = "/access-points/access-point/system/aaa/authentication/admin-user"];
  bool has_admin_user() const;
  void clear_admin_user();
  static const int kAdminUserFieldNumber = 314899031;
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authentication_AdminUser& admin_user() const;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authentication_AdminUser* release_admin_user();
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authentication_AdminUser* mutable_admin_user();
  void set_allocated_admin_user(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authentication_AdminUser* admin_user);

  // .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authentication.Users users = 431869828 [(.yext.schemapath) = "/access-points/access-point/system/aaa/authentication/users"];
  bool has_users() const;
  void clear_users();
  static const int kUsersFieldNumber = 431869828;
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authentication_Users& users() const;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authentication_Users* release_users();
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authentication_Users* mutable_users();
  void set_allocated_users(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authentication_Users* users);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authentication)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authentication_Config* config_;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authentication_State* state_;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authentication_AdminUser* admin_user_;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authentication_Users* users_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::InitDefaultsAccessPoints_AccessPoint_System_Aaa_AuthenticationImpl();
};
// -------------------------------------------------------------------

class AccessPoints_AccessPoint_System_Aaa_Authorization_Config_AuthorizationMethodUnion : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authorization.Config.AuthorizationMethodUnion) */ {
 public:
  AccessPoints_AccessPoint_System_Aaa_Authorization_Config_AuthorizationMethodUnion();
  virtual ~AccessPoints_AccessPoint_System_Aaa_Authorization_Config_AuthorizationMethodUnion();

  AccessPoints_AccessPoint_System_Aaa_Authorization_Config_AuthorizationMethodUnion(const AccessPoints_AccessPoint_System_Aaa_Authorization_Config_AuthorizationMethodUnion& from);

  inline AccessPoints_AccessPoint_System_Aaa_Authorization_Config_AuthorizationMethodUnion& operator=(const AccessPoints_AccessPoint_System_Aaa_Authorization_Config_AuthorizationMethodUnion& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AccessPoints_AccessPoint_System_Aaa_Authorization_Config_AuthorizationMethodUnion(AccessPoints_AccessPoint_System_Aaa_Authorization_Config_AuthorizationMethodUnion&& from) noexcept
    : AccessPoints_AccessPoint_System_Aaa_Authorization_Config_AuthorizationMethodUnion() {
    *this = ::std::move(from);
  }

  inline AccessPoints_AccessPoint_System_Aaa_Authorization_Config_AuthorizationMethodUnion& operator=(AccessPoints_AccessPoint_System_Aaa_Authorization_Config_AuthorizationMethodUnion&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AccessPoints_AccessPoint_System_Aaa_Authorization_Config_AuthorizationMethodUnion& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AccessPoints_AccessPoint_System_Aaa_Authorization_Config_AuthorizationMethodUnion* internal_default_instance() {
    return reinterpret_cast<const AccessPoints_AccessPoint_System_Aaa_Authorization_Config_AuthorizationMethodUnion*>(
               &_AccessPoints_AccessPoint_System_Aaa_Authorization_Config_AuthorizationMethodUnion_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    82;

  void Swap(AccessPoints_AccessPoint_System_Aaa_Authorization_Config_AuthorizationMethodUnion* other);
  friend void swap(AccessPoints_AccessPoint_System_Aaa_Authorization_Config_AuthorizationMethodUnion& a, AccessPoints_AccessPoint_System_Aaa_Authorization_Config_AuthorizationMethodUnion& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AccessPoints_AccessPoint_System_Aaa_Authorization_Config_AuthorizationMethodUnion* New() const PROTOBUF_FINAL { return New(NULL); }

  AccessPoints_AccessPoint_System_Aaa_Authorization_Config_AuthorizationMethodUnion* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AccessPoints_AccessPoint_System_Aaa_Authorization_Config_AuthorizationMethodUnion& from);
  void MergeFrom(const AccessPoints_AccessPoint_System_Aaa_Authorization_Config_AuthorizationMethodUnion& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AccessPoints_AccessPoint_System_Aaa_Authorization_Config_AuthorizationMethodUnion* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string authorization_method_string = 126230445;
  void clear_authorization_method_string();
  static const int kAuthorizationMethodStringFieldNumber = 126230445;
  const ::std::string& authorization_method_string() const;
  void set_authorization_method_string(const ::std::string& value);
  #if LANG_CXX11
  void set_authorization_method_string(::std::string&& value);
  #endif
  void set_authorization_method_string(const char* value);
  void set_authorization_method_string(const char* value, size_t size);
  ::std::string* mutable_authorization_method_string();
  ::std::string* release_authorization_method_string();
  void set_allocated_authorization_method_string(::std::string* authorization_method_string);

  // .openconfig.enums.OpenconfigAaaTypesAAAMETHODTYPE authorization_method_openconfigaaatypesaaamethodtype = 146504790;
  void clear_authorization_method_openconfigaaatypesaaamethodtype();
  static const int kAuthorizationMethodOpenconfigaaatypesaaamethodtypeFieldNumber = 146504790;
  ::openconfig::enums::OpenconfigAaaTypesAAAMETHODTYPE authorization_method_openconfigaaatypesaaamethodtype() const;
  void set_authorization_method_openconfigaaatypesaaamethodtype(::openconfig::enums::OpenconfigAaaTypesAAAMETHODTYPE value);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authorization.Config.AuthorizationMethodUnion)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr authorization_method_string_;
  int authorization_method_openconfigaaatypesaaamethodtype_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::InitDefaultsAccessPoints_AccessPoint_System_Aaa_Authorization_Config_AuthorizationMethodUnionImpl();
};
// -------------------------------------------------------------------

class AccessPoints_AccessPoint_System_Aaa_Authorization_Config : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authorization.Config) */ {
 public:
  AccessPoints_AccessPoint_System_Aaa_Authorization_Config();
  virtual ~AccessPoints_AccessPoint_System_Aaa_Authorization_Config();

  AccessPoints_AccessPoint_System_Aaa_Authorization_Config(const AccessPoints_AccessPoint_System_Aaa_Authorization_Config& from);

  inline AccessPoints_AccessPoint_System_Aaa_Authorization_Config& operator=(const AccessPoints_AccessPoint_System_Aaa_Authorization_Config& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AccessPoints_AccessPoint_System_Aaa_Authorization_Config(AccessPoints_AccessPoint_System_Aaa_Authorization_Config&& from) noexcept
    : AccessPoints_AccessPoint_System_Aaa_Authorization_Config() {
    *this = ::std::move(from);
  }

  inline AccessPoints_AccessPoint_System_Aaa_Authorization_Config& operator=(AccessPoints_AccessPoint_System_Aaa_Authorization_Config&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AccessPoints_AccessPoint_System_Aaa_Authorization_Config& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AccessPoints_AccessPoint_System_Aaa_Authorization_Config* internal_default_instance() {
    return reinterpret_cast<const AccessPoints_AccessPoint_System_Aaa_Authorization_Config*>(
               &_AccessPoints_AccessPoint_System_Aaa_Authorization_Config_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    83;

  void Swap(AccessPoints_AccessPoint_System_Aaa_Authorization_Config* other);
  friend void swap(AccessPoints_AccessPoint_System_Aaa_Authorization_Config& a, AccessPoints_AccessPoint_System_Aaa_Authorization_Config& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AccessPoints_AccessPoint_System_Aaa_Authorization_Config* New() const PROTOBUF_FINAL { return New(NULL); }

  AccessPoints_AccessPoint_System_Aaa_Authorization_Config* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AccessPoints_AccessPoint_System_Aaa_Authorization_Config& from);
  void MergeFrom(const AccessPoints_AccessPoint_System_Aaa_Authorization_Config& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AccessPoints_AccessPoint_System_Aaa_Authorization_Config* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef AccessPoints_AccessPoint_System_Aaa_Authorization_Config_AuthorizationMethodUnion AuthorizationMethodUnion;

  // accessors -------------------------------------------------------

  // repeated .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authorization.Config.AuthorizationMethodUnion authorization_method = 398580847 [(.yext.schemapath) = "/access-points/access-point/system/aaa/authorization/config/authorization-method"];
  int authorization_method_size() const;
  void clear_authorization_method();
  static const int kAuthorizationMethodFieldNumber = 398580847;
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authorization_Config_AuthorizationMethodUnion& authorization_method(int index) const;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authorization_Config_AuthorizationMethodUnion* mutable_authorization_method(int index);
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authorization_Config_AuthorizationMethodUnion* add_authorization_method();
  ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authorization_Config_AuthorizationMethodUnion >*
      mutable_authorization_method();
  const ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authorization_Config_AuthorizationMethodUnion >&
      authorization_method() const;

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authorization.Config)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authorization_Config_AuthorizationMethodUnion > authorization_method_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::InitDefaultsAccessPoints_AccessPoint_System_Aaa_Authorization_ConfigImpl();
};
// -------------------------------------------------------------------

class AccessPoints_AccessPoint_System_Aaa_Authorization_Events_Event_Config : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authorization.Events.Event.Config) */ {
 public:
  AccessPoints_AccessPoint_System_Aaa_Authorization_Events_Event_Config();
  virtual ~AccessPoints_AccessPoint_System_Aaa_Authorization_Events_Event_Config();

  AccessPoints_AccessPoint_System_Aaa_Authorization_Events_Event_Config(const AccessPoints_AccessPoint_System_Aaa_Authorization_Events_Event_Config& from);

  inline AccessPoints_AccessPoint_System_Aaa_Authorization_Events_Event_Config& operator=(const AccessPoints_AccessPoint_System_Aaa_Authorization_Events_Event_Config& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AccessPoints_AccessPoint_System_Aaa_Authorization_Events_Event_Config(AccessPoints_AccessPoint_System_Aaa_Authorization_Events_Event_Config&& from) noexcept
    : AccessPoints_AccessPoint_System_Aaa_Authorization_Events_Event_Config() {
    *this = ::std::move(from);
  }

  inline AccessPoints_AccessPoint_System_Aaa_Authorization_Events_Event_Config& operator=(AccessPoints_AccessPoint_System_Aaa_Authorization_Events_Event_Config&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AccessPoints_AccessPoint_System_Aaa_Authorization_Events_Event_Config& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AccessPoints_AccessPoint_System_Aaa_Authorization_Events_Event_Config* internal_default_instance() {
    return reinterpret_cast<const AccessPoints_AccessPoint_System_Aaa_Authorization_Events_Event_Config*>(
               &_AccessPoints_AccessPoint_System_Aaa_Authorization_Events_Event_Config_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    84;

  void Swap(AccessPoints_AccessPoint_System_Aaa_Authorization_Events_Event_Config* other);
  friend void swap(AccessPoints_AccessPoint_System_Aaa_Authorization_Events_Event_Config& a, AccessPoints_AccessPoint_System_Aaa_Authorization_Events_Event_Config& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AccessPoints_AccessPoint_System_Aaa_Authorization_Events_Event_Config* New() const PROTOBUF_FINAL { return New(NULL); }

  AccessPoints_AccessPoint_System_Aaa_Authorization_Events_Event_Config* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AccessPoints_AccessPoint_System_Aaa_Authorization_Events_Event_Config& from);
  void MergeFrom(const AccessPoints_AccessPoint_System_Aaa_Authorization_Events_Event_Config& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AccessPoints_AccessPoint_System_Aaa_Authorization_Events_Event_Config* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .openconfig.enums.OpenconfigAaaTypesAAAAUTHORIZATIONEVENTTYPE event_type = 100418984 [(.yext.schemapath) = "/access-points/access-point/system/aaa/authorization/events/event/config/event-type"];
  void clear_event_type();
  static const int kEventTypeFieldNumber = 100418984;
  ::openconfig::enums::OpenconfigAaaTypesAAAAUTHORIZATIONEVENTTYPE event_type() const;
  void set_event_type(::openconfig::enums::OpenconfigAaaTypesAAAAUTHORIZATIONEVENTTYPE value);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authorization.Events.Event.Config)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int event_type_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::InitDefaultsAccessPoints_AccessPoint_System_Aaa_Authorization_Events_Event_ConfigImpl();
};
// -------------------------------------------------------------------

class AccessPoints_AccessPoint_System_Aaa_Authorization_Events_Event_State : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authorization.Events.Event.State) */ {
 public:
  AccessPoints_AccessPoint_System_Aaa_Authorization_Events_Event_State();
  virtual ~AccessPoints_AccessPoint_System_Aaa_Authorization_Events_Event_State();

  AccessPoints_AccessPoint_System_Aaa_Authorization_Events_Event_State(const AccessPoints_AccessPoint_System_Aaa_Authorization_Events_Event_State& from);

  inline AccessPoints_AccessPoint_System_Aaa_Authorization_Events_Event_State& operator=(const AccessPoints_AccessPoint_System_Aaa_Authorization_Events_Event_State& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AccessPoints_AccessPoint_System_Aaa_Authorization_Events_Event_State(AccessPoints_AccessPoint_System_Aaa_Authorization_Events_Event_State&& from) noexcept
    : AccessPoints_AccessPoint_System_Aaa_Authorization_Events_Event_State() {
    *this = ::std::move(from);
  }

  inline AccessPoints_AccessPoint_System_Aaa_Authorization_Events_Event_State& operator=(AccessPoints_AccessPoint_System_Aaa_Authorization_Events_Event_State&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AccessPoints_AccessPoint_System_Aaa_Authorization_Events_Event_State& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AccessPoints_AccessPoint_System_Aaa_Authorization_Events_Event_State* internal_default_instance() {
    return reinterpret_cast<const AccessPoints_AccessPoint_System_Aaa_Authorization_Events_Event_State*>(
               &_AccessPoints_AccessPoint_System_Aaa_Authorization_Events_Event_State_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    85;

  void Swap(AccessPoints_AccessPoint_System_Aaa_Authorization_Events_Event_State* other);
  friend void swap(AccessPoints_AccessPoint_System_Aaa_Authorization_Events_Event_State& a, AccessPoints_AccessPoint_System_Aaa_Authorization_Events_Event_State& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AccessPoints_AccessPoint_System_Aaa_Authorization_Events_Event_State* New() const PROTOBUF_FINAL { return New(NULL); }

  AccessPoints_AccessPoint_System_Aaa_Authorization_Events_Event_State* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AccessPoints_AccessPoint_System_Aaa_Authorization_Events_Event_State& from);
  void MergeFrom(const AccessPoints_AccessPoint_System_Aaa_Authorization_Events_Event_State& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AccessPoints_AccessPoint_System_Aaa_Authorization_Events_Event_State* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .openconfig.enums.OpenconfigAaaTypesAAAAUTHORIZATIONEVENTTYPE event_type = 533070691 [(.yext.schemapath) = "/access-points/access-point/system/aaa/authorization/events/event/state/event-type"];
  void clear_event_type();
  static const int kEventTypeFieldNumber = 533070691;
  ::openconfig::enums::OpenconfigAaaTypesAAAAUTHORIZATIONEVENTTYPE event_type() const;
  void set_event_type(::openconfig::enums::OpenconfigAaaTypesAAAAUTHORIZATIONEVENTTYPE value);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authorization.Events.Event.State)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int event_type_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::InitDefaultsAccessPoints_AccessPoint_System_Aaa_Authorization_Events_Event_StateImpl();
};
// -------------------------------------------------------------------

class AccessPoints_AccessPoint_System_Aaa_Authorization_Events_Event : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authorization.Events.Event) */ {
 public:
  AccessPoints_AccessPoint_System_Aaa_Authorization_Events_Event();
  virtual ~AccessPoints_AccessPoint_System_Aaa_Authorization_Events_Event();

  AccessPoints_AccessPoint_System_Aaa_Authorization_Events_Event(const AccessPoints_AccessPoint_System_Aaa_Authorization_Events_Event& from);

  inline AccessPoints_AccessPoint_System_Aaa_Authorization_Events_Event& operator=(const AccessPoints_AccessPoint_System_Aaa_Authorization_Events_Event& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AccessPoints_AccessPoint_System_Aaa_Authorization_Events_Event(AccessPoints_AccessPoint_System_Aaa_Authorization_Events_Event&& from) noexcept
    : AccessPoints_AccessPoint_System_Aaa_Authorization_Events_Event() {
    *this = ::std::move(from);
  }

  inline AccessPoints_AccessPoint_System_Aaa_Authorization_Events_Event& operator=(AccessPoints_AccessPoint_System_Aaa_Authorization_Events_Event&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AccessPoints_AccessPoint_System_Aaa_Authorization_Events_Event& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AccessPoints_AccessPoint_System_Aaa_Authorization_Events_Event* internal_default_instance() {
    return reinterpret_cast<const AccessPoints_AccessPoint_System_Aaa_Authorization_Events_Event*>(
               &_AccessPoints_AccessPoint_System_Aaa_Authorization_Events_Event_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    86;

  void Swap(AccessPoints_AccessPoint_System_Aaa_Authorization_Events_Event* other);
  friend void swap(AccessPoints_AccessPoint_System_Aaa_Authorization_Events_Event& a, AccessPoints_AccessPoint_System_Aaa_Authorization_Events_Event& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AccessPoints_AccessPoint_System_Aaa_Authorization_Events_Event* New() const PROTOBUF_FINAL { return New(NULL); }

  AccessPoints_AccessPoint_System_Aaa_Authorization_Events_Event* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AccessPoints_AccessPoint_System_Aaa_Authorization_Events_Event& from);
  void MergeFrom(const AccessPoints_AccessPoint_System_Aaa_Authorization_Events_Event& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AccessPoints_AccessPoint_System_Aaa_Authorization_Events_Event* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef AccessPoints_AccessPoint_System_Aaa_Authorization_Events_Event_Config Config;
  typedef AccessPoints_AccessPoint_System_Aaa_Authorization_Events_Event_State State;

  // accessors -------------------------------------------------------

  // .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authorization.Events.Event.Config config = 149762094 [(.yext.schemapath) = "/access-points/access-point/system/aaa/authorization/events/event/config"];
  bool has_config() const;
  void clear_config();
  static const int kConfigFieldNumber = 149762094;
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authorization_Events_Event_Config& config() const;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authorization_Events_Event_Config* release_config();
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authorization_Events_Event_Config* mutable_config();
  void set_allocated_config(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authorization_Events_Event_Config* config);

  // .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authorization.Events.Event.State state = 451291739 [(.yext.schemapath) = "/access-points/access-point/system/aaa/authorization/events/event/state"];
  bool has_state() const;
  void clear_state();
  static const int kStateFieldNumber = 451291739;
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authorization_Events_Event_State& state() const;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authorization_Events_Event_State* release_state();
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authorization_Events_Event_State* mutable_state();
  void set_allocated_state(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authorization_Events_Event_State* state);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authorization.Events.Event)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authorization_Events_Event_Config* config_;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authorization_Events_Event_State* state_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::InitDefaultsAccessPoints_AccessPoint_System_Aaa_Authorization_Events_EventImpl();
};
// -------------------------------------------------------------------

class AccessPoints_AccessPoint_System_Aaa_Authorization_Events_EventKey : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authorization.Events.EventKey) */ {
 public:
  AccessPoints_AccessPoint_System_Aaa_Authorization_Events_EventKey();
  virtual ~AccessPoints_AccessPoint_System_Aaa_Authorization_Events_EventKey();

  AccessPoints_AccessPoint_System_Aaa_Authorization_Events_EventKey(const AccessPoints_AccessPoint_System_Aaa_Authorization_Events_EventKey& from);

  inline AccessPoints_AccessPoint_System_Aaa_Authorization_Events_EventKey& operator=(const AccessPoints_AccessPoint_System_Aaa_Authorization_Events_EventKey& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AccessPoints_AccessPoint_System_Aaa_Authorization_Events_EventKey(AccessPoints_AccessPoint_System_Aaa_Authorization_Events_EventKey&& from) noexcept
    : AccessPoints_AccessPoint_System_Aaa_Authorization_Events_EventKey() {
    *this = ::std::move(from);
  }

  inline AccessPoints_AccessPoint_System_Aaa_Authorization_Events_EventKey& operator=(AccessPoints_AccessPoint_System_Aaa_Authorization_Events_EventKey&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AccessPoints_AccessPoint_System_Aaa_Authorization_Events_EventKey& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AccessPoints_AccessPoint_System_Aaa_Authorization_Events_EventKey* internal_default_instance() {
    return reinterpret_cast<const AccessPoints_AccessPoint_System_Aaa_Authorization_Events_EventKey*>(
               &_AccessPoints_AccessPoint_System_Aaa_Authorization_Events_EventKey_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    87;

  void Swap(AccessPoints_AccessPoint_System_Aaa_Authorization_Events_EventKey* other);
  friend void swap(AccessPoints_AccessPoint_System_Aaa_Authorization_Events_EventKey& a, AccessPoints_AccessPoint_System_Aaa_Authorization_Events_EventKey& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AccessPoints_AccessPoint_System_Aaa_Authorization_Events_EventKey* New() const PROTOBUF_FINAL { return New(NULL); }

  AccessPoints_AccessPoint_System_Aaa_Authorization_Events_EventKey* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AccessPoints_AccessPoint_System_Aaa_Authorization_Events_EventKey& from);
  void MergeFrom(const AccessPoints_AccessPoint_System_Aaa_Authorization_Events_EventKey& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AccessPoints_AccessPoint_System_Aaa_Authorization_Events_EventKey* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authorization.Events.Event event = 2;
  bool has_event() const;
  void clear_event();
  static const int kEventFieldNumber = 2;
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authorization_Events_Event& event() const;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authorization_Events_Event* release_event();
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authorization_Events_Event* mutable_event();
  void set_allocated_event(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authorization_Events_Event* event);

  // .openconfig.enums.OpenconfigAaaTypesAAAAUTHORIZATIONEVENTTYPE event_type = 1 [(.yext.schemapath) = "/access-points/access-point/system/aaa/authorization/events/event/event-type"];
  void clear_event_type();
  static const int kEventTypeFieldNumber = 1;
  ::openconfig::enums::OpenconfigAaaTypesAAAAUTHORIZATIONEVENTTYPE event_type() const;
  void set_event_type(::openconfig::enums::OpenconfigAaaTypesAAAAUTHORIZATIONEVENTTYPE value);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authorization.Events.EventKey)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authorization_Events_Event* event_;
  int event_type_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::InitDefaultsAccessPoints_AccessPoint_System_Aaa_Authorization_Events_EventKeyImpl();
};
// -------------------------------------------------------------------

class AccessPoints_AccessPoint_System_Aaa_Authorization_Events : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authorization.Events) */ {
 public:
  AccessPoints_AccessPoint_System_Aaa_Authorization_Events();
  virtual ~AccessPoints_AccessPoint_System_Aaa_Authorization_Events();

  AccessPoints_AccessPoint_System_Aaa_Authorization_Events(const AccessPoints_AccessPoint_System_Aaa_Authorization_Events& from);

  inline AccessPoints_AccessPoint_System_Aaa_Authorization_Events& operator=(const AccessPoints_AccessPoint_System_Aaa_Authorization_Events& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AccessPoints_AccessPoint_System_Aaa_Authorization_Events(AccessPoints_AccessPoint_System_Aaa_Authorization_Events&& from) noexcept
    : AccessPoints_AccessPoint_System_Aaa_Authorization_Events() {
    *this = ::std::move(from);
  }

  inline AccessPoints_AccessPoint_System_Aaa_Authorization_Events& operator=(AccessPoints_AccessPoint_System_Aaa_Authorization_Events&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AccessPoints_AccessPoint_System_Aaa_Authorization_Events& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AccessPoints_AccessPoint_System_Aaa_Authorization_Events* internal_default_instance() {
    return reinterpret_cast<const AccessPoints_AccessPoint_System_Aaa_Authorization_Events*>(
               &_AccessPoints_AccessPoint_System_Aaa_Authorization_Events_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    88;

  void Swap(AccessPoints_AccessPoint_System_Aaa_Authorization_Events* other);
  friend void swap(AccessPoints_AccessPoint_System_Aaa_Authorization_Events& a, AccessPoints_AccessPoint_System_Aaa_Authorization_Events& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AccessPoints_AccessPoint_System_Aaa_Authorization_Events* New() const PROTOBUF_FINAL { return New(NULL); }

  AccessPoints_AccessPoint_System_Aaa_Authorization_Events* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AccessPoints_AccessPoint_System_Aaa_Authorization_Events& from);
  void MergeFrom(const AccessPoints_AccessPoint_System_Aaa_Authorization_Events& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AccessPoints_AccessPoint_System_Aaa_Authorization_Events* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef AccessPoints_AccessPoint_System_Aaa_Authorization_Events_Event Event;
  typedef AccessPoints_AccessPoint_System_Aaa_Authorization_Events_EventKey EventKey;

  // accessors -------------------------------------------------------

  // repeated .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authorization.Events.EventKey event = 156638937 [(.yext.schemapath) = "/access-points/access-point/system/aaa/authorization/events/event"];
  int event_size() const;
  void clear_event();
  static const int kEventFieldNumber = 156638937;
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authorization_Events_EventKey& event(int index) const;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authorization_Events_EventKey* mutable_event(int index);
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authorization_Events_EventKey* add_event();
  ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authorization_Events_EventKey >*
      mutable_event();
  const ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authorization_Events_EventKey >&
      event() const;

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authorization.Events)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authorization_Events_EventKey > event_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::InitDefaultsAccessPoints_AccessPoint_System_Aaa_Authorization_EventsImpl();
};
// -------------------------------------------------------------------

class AccessPoints_AccessPoint_System_Aaa_Authorization_State_AuthorizationMethodUnion : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authorization.State.AuthorizationMethodUnion) */ {
 public:
  AccessPoints_AccessPoint_System_Aaa_Authorization_State_AuthorizationMethodUnion();
  virtual ~AccessPoints_AccessPoint_System_Aaa_Authorization_State_AuthorizationMethodUnion();

  AccessPoints_AccessPoint_System_Aaa_Authorization_State_AuthorizationMethodUnion(const AccessPoints_AccessPoint_System_Aaa_Authorization_State_AuthorizationMethodUnion& from);

  inline AccessPoints_AccessPoint_System_Aaa_Authorization_State_AuthorizationMethodUnion& operator=(const AccessPoints_AccessPoint_System_Aaa_Authorization_State_AuthorizationMethodUnion& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AccessPoints_AccessPoint_System_Aaa_Authorization_State_AuthorizationMethodUnion(AccessPoints_AccessPoint_System_Aaa_Authorization_State_AuthorizationMethodUnion&& from) noexcept
    : AccessPoints_AccessPoint_System_Aaa_Authorization_State_AuthorizationMethodUnion() {
    *this = ::std::move(from);
  }

  inline AccessPoints_AccessPoint_System_Aaa_Authorization_State_AuthorizationMethodUnion& operator=(AccessPoints_AccessPoint_System_Aaa_Authorization_State_AuthorizationMethodUnion&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AccessPoints_AccessPoint_System_Aaa_Authorization_State_AuthorizationMethodUnion& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AccessPoints_AccessPoint_System_Aaa_Authorization_State_AuthorizationMethodUnion* internal_default_instance() {
    return reinterpret_cast<const AccessPoints_AccessPoint_System_Aaa_Authorization_State_AuthorizationMethodUnion*>(
               &_AccessPoints_AccessPoint_System_Aaa_Authorization_State_AuthorizationMethodUnion_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    89;

  void Swap(AccessPoints_AccessPoint_System_Aaa_Authorization_State_AuthorizationMethodUnion* other);
  friend void swap(AccessPoints_AccessPoint_System_Aaa_Authorization_State_AuthorizationMethodUnion& a, AccessPoints_AccessPoint_System_Aaa_Authorization_State_AuthorizationMethodUnion& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AccessPoints_AccessPoint_System_Aaa_Authorization_State_AuthorizationMethodUnion* New() const PROTOBUF_FINAL { return New(NULL); }

  AccessPoints_AccessPoint_System_Aaa_Authorization_State_AuthorizationMethodUnion* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AccessPoints_AccessPoint_System_Aaa_Authorization_State_AuthorizationMethodUnion& from);
  void MergeFrom(const AccessPoints_AccessPoint_System_Aaa_Authorization_State_AuthorizationMethodUnion& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AccessPoints_AccessPoint_System_Aaa_Authorization_State_AuthorizationMethodUnion* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string authorization_method_string = 119170598;
  void clear_authorization_method_string();
  static const int kAuthorizationMethodStringFieldNumber = 119170598;
  const ::std::string& authorization_method_string() const;
  void set_authorization_method_string(const ::std::string& value);
  #if LANG_CXX11
  void set_authorization_method_string(::std::string&& value);
  #endif
  void set_authorization_method_string(const char* value);
  void set_authorization_method_string(const char* value, size_t size);
  ::std::string* mutable_authorization_method_string();
  ::std::string* release_authorization_method_string();
  void set_allocated_authorization_method_string(::std::string* authorization_method_string);

  // .openconfig.enums.OpenconfigAaaTypesAAAMETHODTYPE authorization_method_openconfigaaatypesaaamethodtype = 168314187;
  void clear_authorization_method_openconfigaaatypesaaamethodtype();
  static const int kAuthorizationMethodOpenconfigaaatypesaaamethodtypeFieldNumber = 168314187;
  ::openconfig::enums::OpenconfigAaaTypesAAAMETHODTYPE authorization_method_openconfigaaatypesaaamethodtype() const;
  void set_authorization_method_openconfigaaatypesaaamethodtype(::openconfig::enums::OpenconfigAaaTypesAAAMETHODTYPE value);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authorization.State.AuthorizationMethodUnion)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr authorization_method_string_;
  int authorization_method_openconfigaaatypesaaamethodtype_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::InitDefaultsAccessPoints_AccessPoint_System_Aaa_Authorization_State_AuthorizationMethodUnionImpl();
};
// -------------------------------------------------------------------

class AccessPoints_AccessPoint_System_Aaa_Authorization_State : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authorization.State) */ {
 public:
  AccessPoints_AccessPoint_System_Aaa_Authorization_State();
  virtual ~AccessPoints_AccessPoint_System_Aaa_Authorization_State();

  AccessPoints_AccessPoint_System_Aaa_Authorization_State(const AccessPoints_AccessPoint_System_Aaa_Authorization_State& from);

  inline AccessPoints_AccessPoint_System_Aaa_Authorization_State& operator=(const AccessPoints_AccessPoint_System_Aaa_Authorization_State& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AccessPoints_AccessPoint_System_Aaa_Authorization_State(AccessPoints_AccessPoint_System_Aaa_Authorization_State&& from) noexcept
    : AccessPoints_AccessPoint_System_Aaa_Authorization_State() {
    *this = ::std::move(from);
  }

  inline AccessPoints_AccessPoint_System_Aaa_Authorization_State& operator=(AccessPoints_AccessPoint_System_Aaa_Authorization_State&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AccessPoints_AccessPoint_System_Aaa_Authorization_State& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AccessPoints_AccessPoint_System_Aaa_Authorization_State* internal_default_instance() {
    return reinterpret_cast<const AccessPoints_AccessPoint_System_Aaa_Authorization_State*>(
               &_AccessPoints_AccessPoint_System_Aaa_Authorization_State_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    90;

  void Swap(AccessPoints_AccessPoint_System_Aaa_Authorization_State* other);
  friend void swap(AccessPoints_AccessPoint_System_Aaa_Authorization_State& a, AccessPoints_AccessPoint_System_Aaa_Authorization_State& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AccessPoints_AccessPoint_System_Aaa_Authorization_State* New() const PROTOBUF_FINAL { return New(NULL); }

  AccessPoints_AccessPoint_System_Aaa_Authorization_State* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AccessPoints_AccessPoint_System_Aaa_Authorization_State& from);
  void MergeFrom(const AccessPoints_AccessPoint_System_Aaa_Authorization_State& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AccessPoints_AccessPoint_System_Aaa_Authorization_State* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef AccessPoints_AccessPoint_System_Aaa_Authorization_State_AuthorizationMethodUnion AuthorizationMethodUnion;

  // accessors -------------------------------------------------------

  // repeated .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authorization.State.AuthorizationMethodUnion authorization_method = 490535254 [(.yext.schemapath) = "/access-points/access-point/system/aaa/authorization/state/authorization-method"];
  int authorization_method_size() const;
  void clear_authorization_method();
  static const int kAuthorizationMethodFieldNumber = 490535254;
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authorization_State_AuthorizationMethodUnion& authorization_method(int index) const;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authorization_State_AuthorizationMethodUnion* mutable_authorization_method(int index);
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authorization_State_AuthorizationMethodUnion* add_authorization_method();
  ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authorization_State_AuthorizationMethodUnion >*
      mutable_authorization_method();
  const ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authorization_State_AuthorizationMethodUnion >&
      authorization_method() const;

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authorization.State)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authorization_State_AuthorizationMethodUnion > authorization_method_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::InitDefaultsAccessPoints_AccessPoint_System_Aaa_Authorization_StateImpl();
};
// -------------------------------------------------------------------

class AccessPoints_AccessPoint_System_Aaa_Authorization : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authorization) */ {
 public:
  AccessPoints_AccessPoint_System_Aaa_Authorization();
  virtual ~AccessPoints_AccessPoint_System_Aaa_Authorization();

  AccessPoints_AccessPoint_System_Aaa_Authorization(const AccessPoints_AccessPoint_System_Aaa_Authorization& from);

  inline AccessPoints_AccessPoint_System_Aaa_Authorization& operator=(const AccessPoints_AccessPoint_System_Aaa_Authorization& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AccessPoints_AccessPoint_System_Aaa_Authorization(AccessPoints_AccessPoint_System_Aaa_Authorization&& from) noexcept
    : AccessPoints_AccessPoint_System_Aaa_Authorization() {
    *this = ::std::move(from);
  }

  inline AccessPoints_AccessPoint_System_Aaa_Authorization& operator=(AccessPoints_AccessPoint_System_Aaa_Authorization&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AccessPoints_AccessPoint_System_Aaa_Authorization& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AccessPoints_AccessPoint_System_Aaa_Authorization* internal_default_instance() {
    return reinterpret_cast<const AccessPoints_AccessPoint_System_Aaa_Authorization*>(
               &_AccessPoints_AccessPoint_System_Aaa_Authorization_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    91;

  void Swap(AccessPoints_AccessPoint_System_Aaa_Authorization* other);
  friend void swap(AccessPoints_AccessPoint_System_Aaa_Authorization& a, AccessPoints_AccessPoint_System_Aaa_Authorization& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AccessPoints_AccessPoint_System_Aaa_Authorization* New() const PROTOBUF_FINAL { return New(NULL); }

  AccessPoints_AccessPoint_System_Aaa_Authorization* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AccessPoints_AccessPoint_System_Aaa_Authorization& from);
  void MergeFrom(const AccessPoints_AccessPoint_System_Aaa_Authorization& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AccessPoints_AccessPoint_System_Aaa_Authorization* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef AccessPoints_AccessPoint_System_Aaa_Authorization_Config Config;
  typedef AccessPoints_AccessPoint_System_Aaa_Authorization_Events Events;
  typedef AccessPoints_AccessPoint_System_Aaa_Authorization_State State;

  // accessors -------------------------------------------------------

  // .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authorization.Config config = 24305581 [(.yext.schemapath) = "/access-points/access-point/system/aaa/authorization/config"];
  bool has_config() const;
  void clear_config();
  static const int kConfigFieldNumber = 24305581;
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authorization_Config& config() const;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authorization_Config* release_config();
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authorization_Config* mutable_config();
  void set_allocated_config(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authorization_Config* config);

  // .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authorization.State state = 50349922 [(.yext.schemapath) = "/access-points/access-point/system/aaa/authorization/state"];
  bool has_state() const;
  void clear_state();
  static const int kStateFieldNumber = 50349922;
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authorization_State& state() const;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authorization_State* release_state();
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authorization_State* mutable_state();
  void set_allocated_state(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authorization_State* state);

  // .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authorization.Events events = 138538492 [(.yext.schemapath) = "/access-points/access-point/system/aaa/authorization/events"];
  bool has_events() const;
  void clear_events();
  static const int kEventsFieldNumber = 138538492;
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authorization_Events& events() const;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authorization_Events* release_events();
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authorization_Events* mutable_events();
  void set_allocated_events(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authorization_Events* events);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authorization)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authorization_Config* config_;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authorization_State* state_;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authorization_Events* events_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::InitDefaultsAccessPoints_AccessPoint_System_Aaa_AuthorizationImpl();
};
// -------------------------------------------------------------------

class AccessPoints_AccessPoint_System_Aaa_Config : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Config) */ {
 public:
  AccessPoints_AccessPoint_System_Aaa_Config();
  virtual ~AccessPoints_AccessPoint_System_Aaa_Config();

  AccessPoints_AccessPoint_System_Aaa_Config(const AccessPoints_AccessPoint_System_Aaa_Config& from);

  inline AccessPoints_AccessPoint_System_Aaa_Config& operator=(const AccessPoints_AccessPoint_System_Aaa_Config& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AccessPoints_AccessPoint_System_Aaa_Config(AccessPoints_AccessPoint_System_Aaa_Config&& from) noexcept
    : AccessPoints_AccessPoint_System_Aaa_Config() {
    *this = ::std::move(from);
  }

  inline AccessPoints_AccessPoint_System_Aaa_Config& operator=(AccessPoints_AccessPoint_System_Aaa_Config&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AccessPoints_AccessPoint_System_Aaa_Config& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AccessPoints_AccessPoint_System_Aaa_Config* internal_default_instance() {
    return reinterpret_cast<const AccessPoints_AccessPoint_System_Aaa_Config*>(
               &_AccessPoints_AccessPoint_System_Aaa_Config_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    92;

  void Swap(AccessPoints_AccessPoint_System_Aaa_Config* other);
  friend void swap(AccessPoints_AccessPoint_System_Aaa_Config& a, AccessPoints_AccessPoint_System_Aaa_Config& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AccessPoints_AccessPoint_System_Aaa_Config* New() const PROTOBUF_FINAL { return New(NULL); }

  AccessPoints_AccessPoint_System_Aaa_Config* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AccessPoints_AccessPoint_System_Aaa_Config& from);
  void MergeFrom(const AccessPoints_AccessPoint_System_Aaa_Config& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AccessPoints_AccessPoint_System_Aaa_Config* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Config)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::InitDefaultsAccessPoints_AccessPoint_System_Aaa_ConfigImpl();
};
// -------------------------------------------------------------------

class AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Config : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Config) */ {
 public:
  AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Config();
  virtual ~AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Config();

  AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Config(const AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Config& from);

  inline AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Config& operator=(const AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Config& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Config(AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Config&& from) noexcept
    : AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Config() {
    *this = ::std::move(from);
  }

  inline AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Config& operator=(AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Config&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Config& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Config* internal_default_instance() {
    return reinterpret_cast<const AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Config*>(
               &_AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Config_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    93;

  void Swap(AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Config* other);
  friend void swap(AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Config& a, AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Config& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Config* New() const PROTOBUF_FINAL { return New(NULL); }

  AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Config* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Config& from);
  void MergeFrom(const AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Config& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Config* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .ywrapper.StringValue name = 296555646 [(.yext.schemapath) = "/access-points/access-point/system/aaa/server-groups/server-group/config/name"];
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 296555646;
  const ::ywrapper::StringValue& name() const;
  ::ywrapper::StringValue* release_name();
  ::ywrapper::StringValue* mutable_name();
  void set_allocated_name(::ywrapper::StringValue* name);

  // .openconfig.enums.OpenconfigAaaTypesAAASERVERTYPE type = 103335891 [(.yext.schemapath) = "/access-points/access-point/system/aaa/server-groups/server-group/config/type"];
  void clear_type();
  static const int kTypeFieldNumber = 103335891;
  ::openconfig::enums::OpenconfigAaaTypesAAASERVERTYPE type() const;
  void set_type(::openconfig::enums::OpenconfigAaaTypesAAASERVERTYPE value);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Config)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ywrapper::StringValue* name_;
  int type_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::InitDefaultsAccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_ConfigImpl();
};
// -------------------------------------------------------------------

class AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Config : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Config) */ {
 public:
  AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Config();
  virtual ~AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Config();

  AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Config(const AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Config& from);

  inline AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Config& operator=(const AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Config& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Config(AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Config&& from) noexcept
    : AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Config() {
    *this = ::std::move(from);
  }

  inline AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Config& operator=(AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Config&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Config& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Config* internal_default_instance() {
    return reinterpret_cast<const AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Config*>(
               &_AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Config_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    94;

  void Swap(AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Config* other);
  friend void swap(AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Config& a, AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Config& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Config* New() const PROTOBUF_FINAL { return New(NULL); }

  AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Config* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Config& from);
  void MergeFrom(const AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Config& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Config* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .ywrapper.StringValue address = 188242844 [(.yext.schemapath) = "/access-points/access-point/system/aaa/server-groups/server-group/servers/server/config/address"];
  bool has_address() const;
  void clear_address();
  static const int kAddressFieldNumber = 188242844;
  const ::ywrapper::StringValue& address() const;
  ::ywrapper::StringValue* release_address();
  ::ywrapper::StringValue* mutable_address();
  void set_allocated_address(::ywrapper::StringValue* address);

  // .ywrapper.StringValue name = 344432501 [(.yext.schemapath) = "/access-points/access-point/system/aaa/server-groups/server-group/servers/server/config/name"];
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 344432501;
  const ::ywrapper::StringValue& name() const;
  ::ywrapper::StringValue* release_name();
  ::ywrapper::StringValue* mutable_name();
  void set_allocated_name(::ywrapper::StringValue* name);

  // .ywrapper.UintValue timeout = 507780629 [(.yext.schemapath) = "/access-points/access-point/system/aaa/server-groups/server-group/servers/server/config/timeout"];
  bool has_timeout() const;
  void clear_timeout();
  static const int kTimeoutFieldNumber = 507780629;
  const ::ywrapper::UintValue& timeout() const;
  ::ywrapper::UintValue* release_timeout();
  ::ywrapper::UintValue* mutable_timeout();
  void set_allocated_timeout(::ywrapper::UintValue* timeout);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Config)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ywrapper::StringValue* address_;
  ::ywrapper::StringValue* name_;
  ::ywrapper::UintValue* timeout_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::InitDefaultsAccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_ConfigImpl();
};
// -------------------------------------------------------------------

class AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_Config : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Radius.Config) */ {
 public:
  AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_Config();
  virtual ~AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_Config();

  AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_Config(const AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_Config& from);

  inline AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_Config& operator=(const AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_Config& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_Config(AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_Config&& from) noexcept
    : AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_Config() {
    *this = ::std::move(from);
  }

  inline AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_Config& operator=(AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_Config&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_Config& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_Config* internal_default_instance() {
    return reinterpret_cast<const AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_Config*>(
               &_AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_Config_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    95;

  void Swap(AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_Config* other);
  friend void swap(AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_Config& a, AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_Config& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_Config* New() const PROTOBUF_FINAL { return New(NULL); }

  AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_Config* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_Config& from);
  void MergeFrom(const AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_Config& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_Config* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .ywrapper.UintValue auth_port = 16438073 [(.yext.schemapath) = "/access-points/access-point/system/aaa/server-groups/server-group/servers/server/radius/config/auth-port"];
  bool has_auth_port() const;
  void clear_auth_port();
  static const int kAuthPortFieldNumber = 16438073;
  const ::ywrapper::UintValue& auth_port() const;
  ::ywrapper::UintValue* release_auth_port();
  ::ywrapper::UintValue* mutable_auth_port();
  void set_allocated_auth_port(::ywrapper::UintValue* auth_port);

  // .ywrapper.UintValue retransmit_attempts = 73522529 [(.yext.schemapath) = "/access-points/access-point/system/aaa/server-groups/server-group/servers/server/radius/config/retransmit-attempts"];
  bool has_retransmit_attempts() const;
  void clear_retransmit_attempts();
  static const int kRetransmitAttemptsFieldNumber = 73522529;
  const ::ywrapper::UintValue& retransmit_attempts() const;
  ::ywrapper::UintValue* release_retransmit_attempts();
  ::ywrapper::UintValue* mutable_retransmit_attempts();
  void set_allocated_retransmit_attempts(::ywrapper::UintValue* retransmit_attempts);

  // .ywrapper.UintValue acct_port = 115672160 [(.yext.schemapath) = "/access-points/access-point/system/aaa/server-groups/server-group/servers/server/radius/config/acct-port"];
  bool has_acct_port() const;
  void clear_acct_port();
  static const int kAcctPortFieldNumber = 115672160;
  const ::ywrapper::UintValue& acct_port() const;
  ::ywrapper::UintValue* release_acct_port();
  ::ywrapper::UintValue* mutable_acct_port();
  void set_allocated_acct_port(::ywrapper::UintValue* acct_port);

  // .ywrapper.StringValue secret_key = 287001387 [(.yext.schemapath) = "/access-points/access-point/system/aaa/server-groups/server-group/servers/server/radius/config/secret-key"];
  bool has_secret_key() const;
  void clear_secret_key();
  static const int kSecretKeyFieldNumber = 287001387;
  const ::ywrapper::StringValue& secret_key() const;
  ::ywrapper::StringValue* release_secret_key();
  ::ywrapper::StringValue* mutable_secret_key();
  void set_allocated_secret_key(::ywrapper::StringValue* secret_key);

  // .ywrapper.StringValue source_address = 531710485 [(.yext.schemapath) = "/access-points/access-point/system/aaa/server-groups/server-group/servers/server/radius/config/source-address"];
  bool has_source_address() const;
  void clear_source_address();
  static const int kSourceAddressFieldNumber = 531710485;
  const ::ywrapper::StringValue& source_address() const;
  ::ywrapper::StringValue* release_source_address();
  ::ywrapper::StringValue* mutable_source_address();
  void set_allocated_source_address(::ywrapper::StringValue* source_address);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Radius.Config)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ywrapper::UintValue* auth_port_;
  ::ywrapper::UintValue* retransmit_attempts_;
  ::ywrapper::UintValue* acct_port_;
  ::ywrapper::StringValue* secret_key_;
  ::ywrapper::StringValue* source_address_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::InitDefaultsAccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_ConfigImpl();
};
// -------------------------------------------------------------------

class AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State_Counters : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Radius.State.Counters) */ {
 public:
  AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State_Counters();
  virtual ~AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State_Counters();

  AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State_Counters(const AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State_Counters& from);

  inline AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State_Counters& operator=(const AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State_Counters& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State_Counters(AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State_Counters&& from) noexcept
    : AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State_Counters() {
    *this = ::std::move(from);
  }

  inline AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State_Counters& operator=(AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State_Counters&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State_Counters& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State_Counters* internal_default_instance() {
    return reinterpret_cast<const AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State_Counters*>(
               &_AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State_Counters_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    96;

  void Swap(AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State_Counters* other);
  friend void swap(AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State_Counters& a, AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State_Counters& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State_Counters* New() const PROTOBUF_FINAL { return New(NULL); }

  AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State_Counters* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State_Counters& from);
  void MergeFrom(const AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State_Counters& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State_Counters* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .ywrapper.UintValue access_accepts = 49842154 [(.yext.schemapath) = "/access-points/access-point/system/aaa/server-groups/server-group/servers/server/radius/state/counters/access-accepts"];
  bool has_access_accepts() const;
  void clear_access_accepts();
  static const int kAccessAcceptsFieldNumber = 49842154;
  const ::ywrapper::UintValue& access_accepts() const;
  ::ywrapper::UintValue* release_access_accepts();
  ::ywrapper::UintValue* mutable_access_accepts();
  void set_allocated_access_accepts(::ywrapper::UintValue* access_accepts);

  // .ywrapper.UintValue timeout_access_requests = 160672391 [(.yext.schemapath) = "/access-points/access-point/system/aaa/server-groups/server-group/servers/server/radius/state/counters/timeout-access-requests"];
  bool has_timeout_access_requests() const;
  void clear_timeout_access_requests();
  static const int kTimeoutAccessRequestsFieldNumber = 160672391;
  const ::ywrapper::UintValue& timeout_access_requests() const;
  ::ywrapper::UintValue* release_timeout_access_requests();
  ::ywrapper::UintValue* mutable_timeout_access_requests();
  void set_allocated_timeout_access_requests(::ywrapper::UintValue* timeout_access_requests);

  // .ywrapper.UintValue retried_access_requests = 208605655 [(.yext.schemapath) = "/access-points/access-point/system/aaa/server-groups/server-group/servers/server/radius/state/counters/retried-access-requests"];
  bool has_retried_access_requests() const;
  void clear_retried_access_requests();
  static const int kRetriedAccessRequestsFieldNumber = 208605655;
  const ::ywrapper::UintValue& retried_access_requests() const;
  ::ywrapper::UintValue* release_retried_access_requests();
  ::ywrapper::UintValue* mutable_retried_access_requests();
  void set_allocated_retried_access_requests(::ywrapper::UintValue* retried_access_requests);

  // .ywrapper.UintValue access_rejects = 316878341 [(.yext.schemapath) = "/access-points/access-point/system/aaa/server-groups/server-group/servers/server/radius/state/counters/access-rejects"];
  bool has_access_rejects() const;
  void clear_access_rejects();
  static const int kAccessRejectsFieldNumber = 316878341;
  const ::ywrapper::UintValue& access_rejects() const;
  ::ywrapper::UintValue* release_access_rejects();
  ::ywrapper::UintValue* mutable_access_rejects();
  void set_allocated_access_rejects(::ywrapper::UintValue* access_rejects);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Radius.State.Counters)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ywrapper::UintValue* access_accepts_;
  ::ywrapper::UintValue* timeout_access_requests_;
  ::ywrapper::UintValue* retried_access_requests_;
  ::ywrapper::UintValue* access_rejects_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::InitDefaultsAccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State_CountersImpl();
};
// -------------------------------------------------------------------

class AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Radius.State) */ {
 public:
  AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State();
  virtual ~AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State();

  AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State(const AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State& from);

  inline AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State& operator=(const AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State(AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State&& from) noexcept
    : AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State() {
    *this = ::std::move(from);
  }

  inline AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State& operator=(AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State* internal_default_instance() {
    return reinterpret_cast<const AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State*>(
               &_AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    97;

  void Swap(AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State* other);
  friend void swap(AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State& a, AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State* New() const PROTOBUF_FINAL { return New(NULL); }

  AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State& from);
  void MergeFrom(const AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State_Counters Counters;

  // accessors -------------------------------------------------------

  // .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Radius.State.Counters counters = 45048429 [(.yext.schemapath) = "/access-points/access-point/system/aaa/server-groups/server-group/servers/server/radius/state/counters"];
  bool has_counters() const;
  void clear_counters();
  static const int kCountersFieldNumber = 45048429;
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State_Counters& counters() const;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State_Counters* release_counters();
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State_Counters* mutable_counters();
  void set_allocated_counters(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State_Counters* counters);

  // .ywrapper.UintValue acct_port = 66298825 [(.yext.schemapath) = "/access-points/access-point/system/aaa/server-groups/server-group/servers/server/radius/state/acct-port"];
  bool has_acct_port() const;
  void clear_acct_port();
  static const int kAcctPortFieldNumber = 66298825;
  const ::ywrapper::UintValue& acct_port() const;
  ::ywrapper::UintValue* release_acct_port();
  ::ywrapper::UintValue* mutable_acct_port();
  void set_allocated_acct_port(::ywrapper::UintValue* acct_port);

  // .ywrapper.UintValue auth_port = 111419964 [(.yext.schemapath) = "/access-points/access-point/system/aaa/server-groups/server-group/servers/server/radius/state/auth-port"];
  bool has_auth_port() const;
  void clear_auth_port();
  static const int kAuthPortFieldNumber = 111419964;
  const ::ywrapper::UintValue& auth_port() const;
  ::ywrapper::UintValue* release_auth_port();
  ::ywrapper::UintValue* mutable_auth_port();
  void set_allocated_auth_port(::ywrapper::UintValue* auth_port);

  // .ywrapper.StringValue secret_key = 196524168 [(.yext.schemapath) = "/access-points/access-point/system/aaa/server-groups/server-group/servers/server/radius/state/secret-key"];
  bool has_secret_key() const;
  void clear_secret_key();
  static const int kSecretKeyFieldNumber = 196524168;
  const ::ywrapper::StringValue& secret_key() const;
  ::ywrapper::StringValue* release_secret_key();
  ::ywrapper::StringValue* mutable_secret_key();
  void set_allocated_secret_key(::ywrapper::StringValue* secret_key);

  // .ywrapper.UintValue retransmit_attempts = 487947612 [(.yext.schemapath) = "/access-points/access-point/system/aaa/server-groups/server-group/servers/server/radius/state/retransmit-attempts"];
  bool has_retransmit_attempts() const;
  void clear_retransmit_attempts();
  static const int kRetransmitAttemptsFieldNumber = 487947612;
  const ::ywrapper::UintValue& retransmit_attempts() const;
  ::ywrapper::UintValue* release_retransmit_attempts();
  ::ywrapper::UintValue* mutable_retransmit_attempts();
  void set_allocated_retransmit_attempts(::ywrapper::UintValue* retransmit_attempts);

  // .ywrapper.StringValue source_address = 488251670 [(.yext.schemapath) = "/access-points/access-point/system/aaa/server-groups/server-group/servers/server/radius/state/source-address"];
  bool has_source_address() const;
  void clear_source_address();
  static const int kSourceAddressFieldNumber = 488251670;
  const ::ywrapper::StringValue& source_address() const;
  ::ywrapper::StringValue* release_source_address();
  ::ywrapper::StringValue* mutable_source_address();
  void set_allocated_source_address(::ywrapper::StringValue* source_address);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Radius.State)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State_Counters* counters_;
  ::ywrapper::UintValue* acct_port_;
  ::ywrapper::UintValue* auth_port_;
  ::ywrapper::StringValue* secret_key_;
  ::ywrapper::UintValue* retransmit_attempts_;
  ::ywrapper::StringValue* source_address_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::InitDefaultsAccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_StateImpl();
};
// -------------------------------------------------------------------

class AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Radius) */ {
 public:
  AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius();
  virtual ~AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius();

  AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius(const AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius& from);

  inline AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius& operator=(const AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius(AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius&& from) noexcept
    : AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius() {
    *this = ::std::move(from);
  }

  inline AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius& operator=(AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius* internal_default_instance() {
    return reinterpret_cast<const AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius*>(
               &_AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    98;

  void Swap(AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius* other);
  friend void swap(AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius& a, AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius* New() const PROTOBUF_FINAL { return New(NULL); }

  AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius& from);
  void MergeFrom(const AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_Config Config;
  typedef AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State State;

  // accessors -------------------------------------------------------

  // .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Radius.State state = 388169495 [(.yext.schemapath) = "/access-points/access-point/system/aaa/server-groups/server-group/servers/server/radius/state"];
  bool has_state() const;
  void clear_state();
  static const int kStateFieldNumber = 388169495;
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State& state() const;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State* release_state();
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State* mutable_state();
  void set_allocated_state(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State* state);

  // .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Radius.Config config = 388185850 [(.yext.schemapath) = "/access-points/access-point/system/aaa/server-groups/server-group/servers/server/radius/config"];
  bool has_config() const;
  void clear_config();
  static const int kConfigFieldNumber = 388185850;
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_Config& config() const;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_Config* release_config();
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_Config* mutable_config();
  void set_allocated_config(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_Config* config);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Radius)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State* state_;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_Config* config_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::InitDefaultsAccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_RadiusImpl();
};
// -------------------------------------------------------------------

class AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_State : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Servers.Server.State) */ {
 public:
  AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_State();
  virtual ~AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_State();

  AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_State(const AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_State& from);

  inline AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_State& operator=(const AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_State& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_State(AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_State&& from) noexcept
    : AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_State() {
    *this = ::std::move(from);
  }

  inline AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_State& operator=(AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_State&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_State& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_State* internal_default_instance() {
    return reinterpret_cast<const AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_State*>(
               &_AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_State_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    99;

  void Swap(AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_State* other);
  friend void swap(AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_State& a, AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_State& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_State* New() const PROTOBUF_FINAL { return New(NULL); }

  AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_State* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_State& from);
  void MergeFrom(const AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_State& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_State* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .ywrapper.UintValue connection_failures = 25825311 [(.yext.schemapath) = "/access-points/access-point/system/aaa/server-groups/server-group/servers/server/state/connection-failures"];
  bool has_connection_failures() const;
  void clear_connection_failures();
  static const int kConnectionFailuresFieldNumber = 25825311;
  const ::ywrapper::UintValue& connection_failures() const;
  ::ywrapper::UintValue* release_connection_failures();
  ::ywrapper::UintValue* mutable_connection_failures();
  void set_allocated_connection_failures(::ywrapper::UintValue* connection_failures);

  // .ywrapper.StringValue address = 49562407 [(.yext.schemapath) = "/access-points/access-point/system/aaa/server-groups/server-group/servers/server/state/address"];
  bool has_address() const;
  void clear_address();
  static const int kAddressFieldNumber = 49562407;
  const ::ywrapper::StringValue& address() const;
  ::ywrapper::StringValue* release_address();
  ::ywrapper::StringValue* mutable_address();
  void set_allocated_address(::ywrapper::StringValue* address);

  // .ywrapper.UintValue messages_received = 65026887 [(.yext.schemapath) = "/access-points/access-point/system/aaa/server-groups/server-group/servers/server/state/messages-received"];
  bool has_messages_received() const;
  void clear_messages_received();
  static const int kMessagesReceivedFieldNumber = 65026887;
  const ::ywrapper::UintValue& messages_received() const;
  ::ywrapper::UintValue* release_messages_received();
  ::ywrapper::UintValue* mutable_messages_received();
  void set_allocated_messages_received(::ywrapper::UintValue* messages_received);

  // .ywrapper.UintValue connection_aborts = 101939779 [(.yext.schemapath) = "/access-points/access-point/system/aaa/server-groups/server-group/servers/server/state/connection-aborts"];
  bool has_connection_aborts() const;
  void clear_connection_aborts();
  static const int kConnectionAbortsFieldNumber = 101939779;
  const ::ywrapper::UintValue& connection_aborts() const;
  ::ywrapper::UintValue* release_connection_aborts();
  ::ywrapper::UintValue* mutable_connection_aborts();
  void set_allocated_connection_aborts(::ywrapper::UintValue* connection_aborts);

  // .ywrapper.UintValue messages_sent = 216615924 [(.yext.schemapath) = "/access-points/access-point/system/aaa/server-groups/server-group/servers/server/state/messages-sent"];
  bool has_messages_sent() const;
  void clear_messages_sent();
  static const int kMessagesSentFieldNumber = 216615924;
  const ::ywrapper::UintValue& messages_sent() const;
  ::ywrapper::UintValue* release_messages_sent();
  ::ywrapper::UintValue* mutable_messages_sent();
  void set_allocated_messages_sent(::ywrapper::UintValue* messages_sent);

  // .ywrapper.UintValue connection_closes = 217614545 [(.yext.schemapath) = "/access-points/access-point/system/aaa/server-groups/server-group/servers/server/state/connection-closes"];
  bool has_connection_closes() const;
  void clear_connection_closes();
  static const int kConnectionClosesFieldNumber = 217614545;
  const ::ywrapper::UintValue& connection_closes() const;
  ::ywrapper::UintValue* release_connection_closes();
  ::ywrapper::UintValue* mutable_connection_closes();
  void set_allocated_connection_closes(::ywrapper::UintValue* connection_closes);

  // .ywrapper.UintValue timeout = 242975150 [(.yext.schemapath) = "/access-points/access-point/system/aaa/server-groups/server-group/servers/server/state/timeout"];
  bool has_timeout() const;
  void clear_timeout();
  static const int kTimeoutFieldNumber = 242975150;
  const ::ywrapper::UintValue& timeout() const;
  ::ywrapper::UintValue* release_timeout();
  ::ywrapper::UintValue* mutable_timeout();
  void set_allocated_timeout(::ywrapper::UintValue* timeout);

  // .ywrapper.UintValue errors_received = 301845204 [(.yext.schemapath) = "/access-points/access-point/system/aaa/server-groups/server-group/servers/server/state/errors-received"];
  bool has_errors_received() const;
  void clear_errors_received();
  static const int kErrorsReceivedFieldNumber = 301845204;
  const ::ywrapper::UintValue& errors_received() const;
  ::ywrapper::UintValue* release_errors_received();
  ::ywrapper::UintValue* mutable_errors_received();
  void set_allocated_errors_received(::ywrapper::UintValue* errors_received);

  // .ywrapper.UintValue connection_opens = 304511893 [(.yext.schemapath) = "/access-points/access-point/system/aaa/server-groups/server-group/servers/server/state/connection-opens"];
  bool has_connection_opens() const;
  void clear_connection_opens();
  static const int kConnectionOpensFieldNumber = 304511893;
  const ::ywrapper::UintValue& connection_opens() const;
  ::ywrapper::UintValue* release_connection_opens();
  ::ywrapper::UintValue* mutable_connection_opens();
  void set_allocated_connection_opens(::ywrapper::UintValue* connection_opens);

  // .ywrapper.StringValue name = 340916252 [(.yext.schemapath) = "/access-points/access-point/system/aaa/server-groups/server-group/servers/server/state/name"];
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 340916252;
  const ::ywrapper::StringValue& name() const;
  ::ywrapper::StringValue* release_name();
  ::ywrapper::StringValue* mutable_name();
  void set_allocated_name(::ywrapper::StringValue* name);

  // .ywrapper.UintValue connection_timeouts = 383937474 [(.yext.schemapath) = "/access-points/access-point/system/aaa/server-groups/server-group/servers/server/state/connection-timeouts"];
  bool has_connection_timeouts() const;
  void clear_connection_timeouts();
  static const int kConnectionTimeoutsFieldNumber = 383937474;
  const ::ywrapper::UintValue& connection_timeouts() const;
  ::ywrapper::UintValue* release_connection_timeouts();
  ::ywrapper::UintValue* mutable_connection_timeouts();
  void set_allocated_connection_timeouts(::ywrapper::UintValue* connection_timeouts);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Servers.Server.State)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ywrapper::UintValue* connection_failures_;
  ::ywrapper::StringValue* address_;
  ::ywrapper::UintValue* messages_received_;
  ::ywrapper::UintValue* connection_aborts_;
  ::ywrapper::UintValue* messages_sent_;
  ::ywrapper::UintValue* connection_closes_;
  ::ywrapper::UintValue* timeout_;
  ::ywrapper::UintValue* errors_received_;
  ::ywrapper::UintValue* connection_opens_;
  ::ywrapper::StringValue* name_;
  ::ywrapper::UintValue* connection_timeouts_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::InitDefaultsAccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_StateImpl();
};
// -------------------------------------------------------------------

class AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_Config : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Tacacs.Config) */ {
 public:
  AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_Config();
  virtual ~AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_Config();

  AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_Config(const AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_Config& from);

  inline AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_Config& operator=(const AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_Config& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_Config(AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_Config&& from) noexcept
    : AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_Config() {
    *this = ::std::move(from);
  }

  inline AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_Config& operator=(AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_Config&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_Config& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_Config* internal_default_instance() {
    return reinterpret_cast<const AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_Config*>(
               &_AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_Config_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    100;

  void Swap(AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_Config* other);
  friend void swap(AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_Config& a, AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_Config& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_Config* New() const PROTOBUF_FINAL { return New(NULL); }

  AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_Config* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_Config& from);
  void MergeFrom(const AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_Config& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_Config* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .ywrapper.StringValue secret_key = 96506218 [(.yext.schemapath) = "/access-points/access-point/system/aaa/server-groups/server-group/servers/server/tacacs/config/secret-key"];
  bool has_secret_key() const;
  void clear_secret_key();
  static const int kSecretKeyFieldNumber = 96506218;
  const ::ywrapper::StringValue& secret_key() const;
  ::ywrapper::StringValue* release_secret_key();
  ::ywrapper::StringValue* mutable_secret_key();
  void set_allocated_secret_key(::ywrapper::StringValue* secret_key);

  // .ywrapper.UintValue port = 481578045 [(.yext.schemapath) = "/access-points/access-point/system/aaa/server-groups/server-group/servers/server/tacacs/config/port"];
  bool has_port() const;
  void clear_port();
  static const int kPortFieldNumber = 481578045;
  const ::ywrapper::UintValue& port() const;
  ::ywrapper::UintValue* release_port();
  ::ywrapper::UintValue* mutable_port();
  void set_allocated_port(::ywrapper::UintValue* port);

  // .ywrapper.StringValue source_address = 532576068 [(.yext.schemapath) = "/access-points/access-point/system/aaa/server-groups/server-group/servers/server/tacacs/config/source-address"];
  bool has_source_address() const;
  void clear_source_address();
  static const int kSourceAddressFieldNumber = 532576068;
  const ::ywrapper::StringValue& source_address() const;
  ::ywrapper::StringValue* release_source_address();
  ::ywrapper::StringValue* mutable_source_address();
  void set_allocated_source_address(::ywrapper::StringValue* source_address);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Tacacs.Config)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ywrapper::StringValue* secret_key_;
  ::ywrapper::UintValue* port_;
  ::ywrapper::StringValue* source_address_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::InitDefaultsAccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_ConfigImpl();
};
// -------------------------------------------------------------------

class AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_State : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Tacacs.State) */ {
 public:
  AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_State();
  virtual ~AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_State();

  AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_State(const AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_State& from);

  inline AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_State& operator=(const AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_State& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_State(AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_State&& from) noexcept
    : AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_State() {
    *this = ::std::move(from);
  }

  inline AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_State& operator=(AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_State&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_State& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_State* internal_default_instance() {
    return reinterpret_cast<const AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_State*>(
               &_AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_State_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    101;

  void Swap(AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_State* other);
  friend void swap(AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_State& a, AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_State& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_State* New() const PROTOBUF_FINAL { return New(NULL); }

  AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_State* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_State& from);
  void MergeFrom(const AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_State& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_State* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .ywrapper.UintValue port = 202052552 [(.yext.schemapath) = "/access-points/access-point/system/aaa/server-groups/server-group/servers/server/tacacs/state/port"];
  bool has_port() const;
  void clear_port();
  static const int kPortFieldNumber = 202052552;
  const ::ywrapper::UintValue& port() const;
  ::ywrapper::UintValue* release_port();
  ::ywrapper::UintValue* mutable_port();
  void set_allocated_port(::ywrapper::UintValue* port);

  // .ywrapper.StringValue source_address = 265865697 [(.yext.schemapath) = "/access-points/access-point/system/aaa/server-groups/server-group/servers/server/tacacs/state/source-address"];
  bool has_source_address() const;
  void clear_source_address();
  static const int kSourceAddressFieldNumber = 265865697;
  const ::ywrapper::StringValue& source_address() const;
  ::ywrapper::StringValue* release_source_address();
  ::ywrapper::StringValue* mutable_source_address();
  void set_allocated_source_address(::ywrapper::StringValue* source_address);

  // .ywrapper.StringValue secret_key = 495537223 [(.yext.schemapath) = "/access-points/access-point/system/aaa/server-groups/server-group/servers/server/tacacs/state/secret-key"];
  bool has_secret_key() const;
  void clear_secret_key();
  static const int kSecretKeyFieldNumber = 495537223;
  const ::ywrapper::StringValue& secret_key() const;
  ::ywrapper::StringValue* release_secret_key();
  ::ywrapper::StringValue* mutable_secret_key();
  void set_allocated_secret_key(::ywrapper::StringValue* secret_key);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Tacacs.State)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ywrapper::UintValue* port_;
  ::ywrapper::StringValue* source_address_;
  ::ywrapper::StringValue* secret_key_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::InitDefaultsAccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_StateImpl();
};
// -------------------------------------------------------------------

class AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Tacacs) */ {
 public:
  AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs();
  virtual ~AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs();

  AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs(const AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs& from);

  inline AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs& operator=(const AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs(AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs&& from) noexcept
    : AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs() {
    *this = ::std::move(from);
  }

  inline AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs& operator=(AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs* internal_default_instance() {
    return reinterpret_cast<const AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs*>(
               &_AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    102;

  void Swap(AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs* other);
  friend void swap(AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs& a, AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs* New() const PROTOBUF_FINAL { return New(NULL); }

  AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs& from);
  void MergeFrom(const AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_Config Config;
  typedef AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_State State;

  // accessors -------------------------------------------------------

  // .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Tacacs.Config config = 8144329 [(.yext.schemapath) = "/access-points/access-point/system/aaa/server-groups/server-group/servers/server/tacacs/config"];
  bool has_config() const;
  void clear_config();
  static const int kConfigFieldNumber = 8144329;
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_Config& config() const;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_Config* release_config();
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_Config* mutable_config();
  void set_allocated_config(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_Config* config);

  // .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Tacacs.State state = 400839454 [(.yext.schemapath) = "/access-points/access-point/system/aaa/server-groups/server-group/servers/server/tacacs/state"];
  bool has_state() const;
  void clear_state();
  static const int kStateFieldNumber = 400839454;
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_State& state() const;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_State* release_state();
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_State* mutable_state();
  void set_allocated_state(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_State* state);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Tacacs)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_Config* config_;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_State* state_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::InitDefaultsAccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_TacacsImpl();
};
// -------------------------------------------------------------------

class AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Servers.Server) */ {
 public:
  AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server();
  virtual ~AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server();

  AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server(const AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server& from);

  inline AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server& operator=(const AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server(AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server&& from) noexcept
    : AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server() {
    *this = ::std::move(from);
  }

  inline AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server& operator=(AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server* internal_default_instance() {
    return reinterpret_cast<const AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server*>(
               &_AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    103;

  void Swap(AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server* other);
  friend void swap(AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server& a, AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server* New() const PROTOBUF_FINAL { return New(NULL); }

  AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server& from);
  void MergeFrom(const AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Config Config;
  typedef AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius Radius;
  typedef AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_State State;
  typedef AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs Tacacs;

  // accessors -------------------------------------------------------

  // .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Servers.Server.State state = 250100150 [(.yext.schemapath) = "/access-points/access-point/system/aaa/server-groups/server-group/servers/server/state"];
  bool has_state() const;
  void clear_state();
  static const int kStateFieldNumber = 250100150;
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_State& state() const;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_State* release_state();
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_State* mutable_state();
  void set_allocated_state(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_State* state);

  // .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Radius radius = 330901077 [(.yext.schemapath) = "/access-points/access-point/system/aaa/server-groups/server-group/servers/server/radius"];
  bool has_radius() const;
  void clear_radius();
  static const int kRadiusFieldNumber = 330901077;
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius& radius() const;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius* release_radius();
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius* mutable_radius();
  void set_allocated_radius(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius* radius);

  // .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Tacacs tacacs = 335333156 [(.yext.schemapath) = "/access-points/access-point/system/aaa/server-groups/server-group/servers/server/tacacs"];
  bool has_tacacs() const;
  void clear_tacacs();
  static const int kTacacsFieldNumber = 335333156;
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs& tacacs() const;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs* release_tacacs();
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs* mutable_tacacs();
  void set_allocated_tacacs(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs* tacacs);

  // .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Config config = 407053633 [(.yext.schemapath) = "/access-points/access-point/system/aaa/server-groups/server-group/servers/server/config"];
  bool has_config() const;
  void clear_config();
  static const int kConfigFieldNumber = 407053633;
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Config& config() const;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Config* release_config();
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Config* mutable_config();
  void set_allocated_config(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Config* config);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Servers.Server)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_State* state_;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius* radius_;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs* tacacs_;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Config* config_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::InitDefaultsAccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_ServerImpl();
};
// -------------------------------------------------------------------

class AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_ServerKey : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Servers.ServerKey) */ {
 public:
  AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_ServerKey();
  virtual ~AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_ServerKey();

  AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_ServerKey(const AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_ServerKey& from);

  inline AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_ServerKey& operator=(const AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_ServerKey& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_ServerKey(AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_ServerKey&& from) noexcept
    : AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_ServerKey() {
    *this = ::std::move(from);
  }

  inline AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_ServerKey& operator=(AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_ServerKey&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_ServerKey& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_ServerKey* internal_default_instance() {
    return reinterpret_cast<const AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_ServerKey*>(
               &_AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_ServerKey_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    104;

  void Swap(AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_ServerKey* other);
  friend void swap(AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_ServerKey& a, AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_ServerKey& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_ServerKey* New() const PROTOBUF_FINAL { return New(NULL); }

  AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_ServerKey* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_ServerKey& from);
  void MergeFrom(const AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_ServerKey& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_ServerKey* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string address = 1 [(.yext.schemapath) = "/access-points/access-point/system/aaa/server-groups/server-group/servers/server/address"];
  void clear_address();
  static const int kAddressFieldNumber = 1;
  const ::std::string& address() const;
  void set_address(const ::std::string& value);
  #if LANG_CXX11
  void set_address(::std::string&& value);
  #endif
  void set_address(const char* value);
  void set_address(const char* value, size_t size);
  ::std::string* mutable_address();
  ::std::string* release_address();
  void set_allocated_address(::std::string* address);

  // .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Servers.Server server = 2;
  bool has_server() const;
  void clear_server();
  static const int kServerFieldNumber = 2;
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server& server() const;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server* release_server();
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server* mutable_server();
  void set_allocated_server(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server* server);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Servers.ServerKey)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr address_;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server* server_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::InitDefaultsAccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_ServerKeyImpl();
};
// -------------------------------------------------------------------

class AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Servers) */ {
 public:
  AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers();
  virtual ~AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers();

  AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers(const AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers& from);

  inline AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers& operator=(const AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers(AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers&& from) noexcept
    : AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers() {
    *this = ::std::move(from);
  }

  inline AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers& operator=(AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers* internal_default_instance() {
    return reinterpret_cast<const AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers*>(
               &_AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    105;

  void Swap(AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers* other);
  friend void swap(AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers& a, AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers* New() const PROTOBUF_FINAL { return New(NULL); }

  AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers& from);
  void MergeFrom(const AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server Server;
  typedef AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_ServerKey ServerKey;

  // accessors -------------------------------------------------------

  // repeated .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Servers.ServerKey server = 285625548 [(.yext.schemapath) = "/access-points/access-point/system/aaa/server-groups/server-group/servers/server"];
  int server_size() const;
  void clear_server();
  static const int kServerFieldNumber = 285625548;
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_ServerKey& server(int index) const;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_ServerKey* mutable_server(int index);
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_ServerKey* add_server();
  ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_ServerKey >*
      mutable_server();
  const ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_ServerKey >&
      server() const;

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Servers)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_ServerKey > server_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::InitDefaultsAccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_ServersImpl();
};
// -------------------------------------------------------------------

class AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_State : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.State) */ {
 public:
  AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_State();
  virtual ~AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_State();

  AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_State(const AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_State& from);

  inline AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_State& operator=(const AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_State& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_State(AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_State&& from) noexcept
    : AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_State() {
    *this = ::std::move(from);
  }

  inline AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_State& operator=(AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_State&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_State& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_State* internal_default_instance() {
    return reinterpret_cast<const AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_State*>(
               &_AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_State_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    106;

  void Swap(AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_State* other);
  friend void swap(AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_State& a, AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_State& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_State* New() const PROTOBUF_FINAL { return New(NULL); }

  AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_State* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_State& from);
  void MergeFrom(const AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_State& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_State* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .ywrapper.StringValue name = 383233521 [(.yext.schemapath) = "/access-points/access-point/system/aaa/server-groups/server-group/state/name"];
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 383233521;
  const ::ywrapper::StringValue& name() const;
  ::ywrapper::StringValue* release_name();
  ::ywrapper::StringValue* mutable_name();
  void set_allocated_name(::ywrapper::StringValue* name);

  // .openconfig.enums.OpenconfigAaaTypesAAASERVERTYPE type = 53007000 [(.yext.schemapath) = "/access-points/access-point/system/aaa/server-groups/server-group/state/type"];
  void clear_type();
  static const int kTypeFieldNumber = 53007000;
  ::openconfig::enums::OpenconfigAaaTypesAAASERVERTYPE type() const;
  void set_type(::openconfig::enums::OpenconfigAaaTypesAAASERVERTYPE value);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.State)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ywrapper::StringValue* name_;
  int type_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::InitDefaultsAccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_StateImpl();
};
// -------------------------------------------------------------------

class AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup) */ {
 public:
  AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup();
  virtual ~AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup();

  AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup(const AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup& from);

  inline AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup& operator=(const AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup(AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup&& from) noexcept
    : AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup() {
    *this = ::std::move(from);
  }

  inline AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup& operator=(AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup* internal_default_instance() {
    return reinterpret_cast<const AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup*>(
               &_AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    107;

  void Swap(AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup* other);
  friend void swap(AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup& a, AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup* New() const PROTOBUF_FINAL { return New(NULL); }

  AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup& from);
  void MergeFrom(const AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Config Config;
  typedef AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers Servers;
  typedef AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_State State;

  // accessors -------------------------------------------------------

  // .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.State state = 31775125 [(.yext.schemapath) = "/access-points/access-point/system/aaa/server-groups/server-group/state"];
  bool has_state() const;
  void clear_state();
  static const int kStateFieldNumber = 31775125;
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_State& state() const;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_State* release_state();
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_State* mutable_state();
  void set_allocated_state(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_State* state);

  // .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Servers servers = 38152126 [(.yext.schemapath) = "/access-points/access-point/system/aaa/server-groups/server-group/servers"];
  bool has_servers() const;
  void clear_servers();
  static const int kServersFieldNumber = 38152126;
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers& servers() const;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers* release_servers();
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers* mutable_servers();
  void set_allocated_servers(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers* servers);

  // .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Config config = 146579996 [(.yext.schemapath) = "/access-points/access-point/system/aaa/server-groups/server-group/config"];
  bool has_config() const;
  void clear_config();
  static const int kConfigFieldNumber = 146579996;
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Config& config() const;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Config* release_config();
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Config* mutable_config();
  void set_allocated_config(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Config* config);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_State* state_;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers* servers_;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Config* config_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::InitDefaultsAccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroupImpl();
};
// -------------------------------------------------------------------

class AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroupKey : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroupKey) */ {
 public:
  AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroupKey();
  virtual ~AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroupKey();

  AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroupKey(const AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroupKey& from);

  inline AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroupKey& operator=(const AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroupKey& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroupKey(AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroupKey&& from) noexcept
    : AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroupKey() {
    *this = ::std::move(from);
  }

  inline AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroupKey& operator=(AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroupKey&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroupKey& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroupKey* internal_default_instance() {
    return reinterpret_cast<const AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroupKey*>(
               &_AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroupKey_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    108;

  void Swap(AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroupKey* other);
  friend void swap(AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroupKey& a, AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroupKey& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroupKey* New() const PROTOBUF_FINAL { return New(NULL); }

  AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroupKey* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroupKey& from);
  void MergeFrom(const AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroupKey& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroupKey* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 1 [(.yext.schemapath) = "/access-points/access-point/system/aaa/server-groups/server-group/name"];
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup server_group = 2;
  bool has_server_group() const;
  void clear_server_group();
  static const int kServerGroupFieldNumber = 2;
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup& server_group() const;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup* release_server_group();
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup* mutable_server_group();
  void set_allocated_server_group(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup* server_group);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroupKey)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup* server_group_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::InitDefaultsAccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroupKeyImpl();
};
// -------------------------------------------------------------------

class AccessPoints_AccessPoint_System_Aaa_ServerGroups : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups) */ {
 public:
  AccessPoints_AccessPoint_System_Aaa_ServerGroups();
  virtual ~AccessPoints_AccessPoint_System_Aaa_ServerGroups();

  AccessPoints_AccessPoint_System_Aaa_ServerGroups(const AccessPoints_AccessPoint_System_Aaa_ServerGroups& from);

  inline AccessPoints_AccessPoint_System_Aaa_ServerGroups& operator=(const AccessPoints_AccessPoint_System_Aaa_ServerGroups& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AccessPoints_AccessPoint_System_Aaa_ServerGroups(AccessPoints_AccessPoint_System_Aaa_ServerGroups&& from) noexcept
    : AccessPoints_AccessPoint_System_Aaa_ServerGroups() {
    *this = ::std::move(from);
  }

  inline AccessPoints_AccessPoint_System_Aaa_ServerGroups& operator=(AccessPoints_AccessPoint_System_Aaa_ServerGroups&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AccessPoints_AccessPoint_System_Aaa_ServerGroups& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AccessPoints_AccessPoint_System_Aaa_ServerGroups* internal_default_instance() {
    return reinterpret_cast<const AccessPoints_AccessPoint_System_Aaa_ServerGroups*>(
               &_AccessPoints_AccessPoint_System_Aaa_ServerGroups_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    109;

  void Swap(AccessPoints_AccessPoint_System_Aaa_ServerGroups* other);
  friend void swap(AccessPoints_AccessPoint_System_Aaa_ServerGroups& a, AccessPoints_AccessPoint_System_Aaa_ServerGroups& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AccessPoints_AccessPoint_System_Aaa_ServerGroups* New() const PROTOBUF_FINAL { return New(NULL); }

  AccessPoints_AccessPoint_System_Aaa_ServerGroups* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AccessPoints_AccessPoint_System_Aaa_ServerGroups& from);
  void MergeFrom(const AccessPoints_AccessPoint_System_Aaa_ServerGroups& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AccessPoints_AccessPoint_System_Aaa_ServerGroups* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup ServerGroup;
  typedef AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroupKey ServerGroupKey;

  // accessors -------------------------------------------------------

  // repeated .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroupKey server_group = 154202187 [(.yext.schemapath) = "/access-points/access-point/system/aaa/server-groups/server-group"];
  int server_group_size() const;
  void clear_server_group();
  static const int kServerGroupFieldNumber = 154202187;
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroupKey& server_group(int index) const;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroupKey* mutable_server_group(int index);
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroupKey* add_server_group();
  ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroupKey >*
      mutable_server_group();
  const ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroupKey >&
      server_group() const;

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroupKey > server_group_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::InitDefaultsAccessPoints_AccessPoint_System_Aaa_ServerGroupsImpl();
};
// -------------------------------------------------------------------

class AccessPoints_AccessPoint_System_Aaa_State : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.State) */ {
 public:
  AccessPoints_AccessPoint_System_Aaa_State();
  virtual ~AccessPoints_AccessPoint_System_Aaa_State();

  AccessPoints_AccessPoint_System_Aaa_State(const AccessPoints_AccessPoint_System_Aaa_State& from);

  inline AccessPoints_AccessPoint_System_Aaa_State& operator=(const AccessPoints_AccessPoint_System_Aaa_State& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AccessPoints_AccessPoint_System_Aaa_State(AccessPoints_AccessPoint_System_Aaa_State&& from) noexcept
    : AccessPoints_AccessPoint_System_Aaa_State() {
    *this = ::std::move(from);
  }

  inline AccessPoints_AccessPoint_System_Aaa_State& operator=(AccessPoints_AccessPoint_System_Aaa_State&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AccessPoints_AccessPoint_System_Aaa_State& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AccessPoints_AccessPoint_System_Aaa_State* internal_default_instance() {
    return reinterpret_cast<const AccessPoints_AccessPoint_System_Aaa_State*>(
               &_AccessPoints_AccessPoint_System_Aaa_State_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    110;

  void Swap(AccessPoints_AccessPoint_System_Aaa_State* other);
  friend void swap(AccessPoints_AccessPoint_System_Aaa_State& a, AccessPoints_AccessPoint_System_Aaa_State& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AccessPoints_AccessPoint_System_Aaa_State* New() const PROTOBUF_FINAL { return New(NULL); }

  AccessPoints_AccessPoint_System_Aaa_State* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AccessPoints_AccessPoint_System_Aaa_State& from);
  void MergeFrom(const AccessPoints_AccessPoint_System_Aaa_State& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AccessPoints_AccessPoint_System_Aaa_State* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.State)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::InitDefaultsAccessPoints_AccessPoint_System_Aaa_StateImpl();
};
// -------------------------------------------------------------------

class AccessPoints_AccessPoint_System_Aaa : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa) */ {
 public:
  AccessPoints_AccessPoint_System_Aaa();
  virtual ~AccessPoints_AccessPoint_System_Aaa();

  AccessPoints_AccessPoint_System_Aaa(const AccessPoints_AccessPoint_System_Aaa& from);

  inline AccessPoints_AccessPoint_System_Aaa& operator=(const AccessPoints_AccessPoint_System_Aaa& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AccessPoints_AccessPoint_System_Aaa(AccessPoints_AccessPoint_System_Aaa&& from) noexcept
    : AccessPoints_AccessPoint_System_Aaa() {
    *this = ::std::move(from);
  }

  inline AccessPoints_AccessPoint_System_Aaa& operator=(AccessPoints_AccessPoint_System_Aaa&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AccessPoints_AccessPoint_System_Aaa& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AccessPoints_AccessPoint_System_Aaa* internal_default_instance() {
    return reinterpret_cast<const AccessPoints_AccessPoint_System_Aaa*>(
               &_AccessPoints_AccessPoint_System_Aaa_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    111;

  void Swap(AccessPoints_AccessPoint_System_Aaa* other);
  friend void swap(AccessPoints_AccessPoint_System_Aaa& a, AccessPoints_AccessPoint_System_Aaa& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AccessPoints_AccessPoint_System_Aaa* New() const PROTOBUF_FINAL { return New(NULL); }

  AccessPoints_AccessPoint_System_Aaa* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AccessPoints_AccessPoint_System_Aaa& from);
  void MergeFrom(const AccessPoints_AccessPoint_System_Aaa& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AccessPoints_AccessPoint_System_Aaa* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef AccessPoints_AccessPoint_System_Aaa_Accounting Accounting;
  typedef AccessPoints_AccessPoint_System_Aaa_Authentication Authentication;
  typedef AccessPoints_AccessPoint_System_Aaa_Authorization Authorization;
  typedef AccessPoints_AccessPoint_System_Aaa_Config Config;
  typedef AccessPoints_AccessPoint_System_Aaa_ServerGroups ServerGroups;
  typedef AccessPoints_AccessPoint_System_Aaa_State State;

  // accessors -------------------------------------------------------

  // .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Config config = 93673007 [(.yext.schemapath) = "/access-points/access-point/system/aaa/config"];
  bool has_config() const;
  void clear_config();
  static const int kConfigFieldNumber = 93673007;
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Config& config() const;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Config* release_config();
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Config* mutable_config();
  void set_allocated_config(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Config* config);

  // .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authentication authentication = 207938209 [(.yext.schemapath) = "/access-points/access-point/system/aaa/authentication"];
  bool has_authentication() const;
  void clear_authentication();
  static const int kAuthenticationFieldNumber = 207938209;
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authentication& authentication() const;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authentication* release_authentication();
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authentication* mutable_authentication();
  void set_allocated_authentication(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authentication* authentication);

  // .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authorization authorization = 324795208 [(.yext.schemapath) = "/access-points/access-point/system/aaa/authorization"];
  bool has_authorization() const;
  void clear_authorization();
  static const int kAuthorizationFieldNumber = 324795208;
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authorization& authorization() const;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authorization* release_authorization();
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authorization* mutable_authorization();
  void set_allocated_authorization(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authorization* authorization);

  // .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.State state = 393642400 [(.yext.schemapath) = "/access-points/access-point/system/aaa/state"];
  bool has_state() const;
  void clear_state();
  static const int kStateFieldNumber = 393642400;
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_State& state() const;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_State* release_state();
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_State* mutable_state();
  void set_allocated_state(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_State* state);

  // .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Accounting accounting = 395184962 [(.yext.schemapath) = "/access-points/access-point/system/aaa/accounting"];
  bool has_accounting() const;
  void clear_accounting();
  static const int kAccountingFieldNumber = 395184962;
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Accounting& accounting() const;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Accounting* release_accounting();
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Accounting* mutable_accounting();
  void set_allocated_accounting(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Accounting* accounting);

  // .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups server_groups = 493042737 [(.yext.schemapath) = "/access-points/access-point/system/aaa/server-groups"];
  bool has_server_groups() const;
  void clear_server_groups();
  static const int kServerGroupsFieldNumber = 493042737;
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_ServerGroups& server_groups() const;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_ServerGroups* release_server_groups();
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_ServerGroups* mutable_server_groups();
  void set_allocated_server_groups(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_ServerGroups* server_groups);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Config* config_;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authentication* authentication_;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authorization* authorization_;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_State* state_;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Accounting* accounting_;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_ServerGroups* server_groups_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::InitDefaultsAccessPoints_AccessPoint_System_AaaImpl();
};
// -------------------------------------------------------------------

class AccessPoints_AccessPoint_System_Alarms_Alarm_Config : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Alarms.Alarm.Config) */ {
 public:
  AccessPoints_AccessPoint_System_Alarms_Alarm_Config();
  virtual ~AccessPoints_AccessPoint_System_Alarms_Alarm_Config();

  AccessPoints_AccessPoint_System_Alarms_Alarm_Config(const AccessPoints_AccessPoint_System_Alarms_Alarm_Config& from);

  inline AccessPoints_AccessPoint_System_Alarms_Alarm_Config& operator=(const AccessPoints_AccessPoint_System_Alarms_Alarm_Config& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AccessPoints_AccessPoint_System_Alarms_Alarm_Config(AccessPoints_AccessPoint_System_Alarms_Alarm_Config&& from) noexcept
    : AccessPoints_AccessPoint_System_Alarms_Alarm_Config() {
    *this = ::std::move(from);
  }

  inline AccessPoints_AccessPoint_System_Alarms_Alarm_Config& operator=(AccessPoints_AccessPoint_System_Alarms_Alarm_Config&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AccessPoints_AccessPoint_System_Alarms_Alarm_Config& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AccessPoints_AccessPoint_System_Alarms_Alarm_Config* internal_default_instance() {
    return reinterpret_cast<const AccessPoints_AccessPoint_System_Alarms_Alarm_Config*>(
               &_AccessPoints_AccessPoint_System_Alarms_Alarm_Config_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    112;

  void Swap(AccessPoints_AccessPoint_System_Alarms_Alarm_Config* other);
  friend void swap(AccessPoints_AccessPoint_System_Alarms_Alarm_Config& a, AccessPoints_AccessPoint_System_Alarms_Alarm_Config& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AccessPoints_AccessPoint_System_Alarms_Alarm_Config* New() const PROTOBUF_FINAL { return New(NULL); }

  AccessPoints_AccessPoint_System_Alarms_Alarm_Config* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AccessPoints_AccessPoint_System_Alarms_Alarm_Config& from);
  void MergeFrom(const AccessPoints_AccessPoint_System_Alarms_Alarm_Config& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AccessPoints_AccessPoint_System_Alarms_Alarm_Config* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Alarms.Alarm.Config)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::InitDefaultsAccessPoints_AccessPoint_System_Alarms_Alarm_ConfigImpl();
};
// -------------------------------------------------------------------

class AccessPoints_AccessPoint_System_Alarms_Alarm_State : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Alarms.Alarm.State) */ {
 public:
  AccessPoints_AccessPoint_System_Alarms_Alarm_State();
  virtual ~AccessPoints_AccessPoint_System_Alarms_Alarm_State();

  AccessPoints_AccessPoint_System_Alarms_Alarm_State(const AccessPoints_AccessPoint_System_Alarms_Alarm_State& from);

  inline AccessPoints_AccessPoint_System_Alarms_Alarm_State& operator=(const AccessPoints_AccessPoint_System_Alarms_Alarm_State& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AccessPoints_AccessPoint_System_Alarms_Alarm_State(AccessPoints_AccessPoint_System_Alarms_Alarm_State&& from) noexcept
    : AccessPoints_AccessPoint_System_Alarms_Alarm_State() {
    *this = ::std::move(from);
  }

  inline AccessPoints_AccessPoint_System_Alarms_Alarm_State& operator=(AccessPoints_AccessPoint_System_Alarms_Alarm_State&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AccessPoints_AccessPoint_System_Alarms_Alarm_State& default_instance();

  enum TypeIdCase {
    kTypeIdOpenconfigalarmtypesopenconfigalarmtypeid = 237876297,
    kTypeIdString = 77451230,
    TYPE_ID_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AccessPoints_AccessPoint_System_Alarms_Alarm_State* internal_default_instance() {
    return reinterpret_cast<const AccessPoints_AccessPoint_System_Alarms_Alarm_State*>(
               &_AccessPoints_AccessPoint_System_Alarms_Alarm_State_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    113;

  void Swap(AccessPoints_AccessPoint_System_Alarms_Alarm_State* other);
  friend void swap(AccessPoints_AccessPoint_System_Alarms_Alarm_State& a, AccessPoints_AccessPoint_System_Alarms_Alarm_State& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AccessPoints_AccessPoint_System_Alarms_Alarm_State* New() const PROTOBUF_FINAL { return New(NULL); }

  AccessPoints_AccessPoint_System_Alarms_Alarm_State* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AccessPoints_AccessPoint_System_Alarms_Alarm_State& from);
  void MergeFrom(const AccessPoints_AccessPoint_System_Alarms_Alarm_State& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AccessPoints_AccessPoint_System_Alarms_Alarm_State* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .ywrapper.StringValue text = 53216517 [(.yext.schemapath) = "/access-points/access-point/system/alarms/alarm/state/text"];
  bool has_text() const;
  void clear_text();
  static const int kTextFieldNumber = 53216517;
  const ::ywrapper::StringValue& text() const;
  ::ywrapper::StringValue* release_text();
  ::ywrapper::StringValue* mutable_text();
  void set_allocated_text(::ywrapper::StringValue* text);

  // .ywrapper.StringValue id = 119272615 [(.yext.schemapath) = "/access-points/access-point/system/alarms/alarm/state/id"];
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 119272615;
  const ::ywrapper::StringValue& id() const;
  ::ywrapper::StringValue* release_id();
  ::ywrapper::StringValue* mutable_id();
  void set_allocated_id(::ywrapper::StringValue* id);

  // .ywrapper.StringValue resource = 301853076 [(.yext.schemapath) = "/access-points/access-point/system/alarms/alarm/state/resource"];
  bool has_resource() const;
  void clear_resource();
  static const int kResourceFieldNumber = 301853076;
  const ::ywrapper::StringValue& resource() const;
  ::ywrapper::StringValue* release_resource();
  ::ywrapper::StringValue* mutable_resource();
  void set_allocated_resource(::ywrapper::StringValue* resource);

  // .ywrapper.UintValue time_created = 419949028 [(.yext.schemapath) = "/access-points/access-point/system/alarms/alarm/state/time-created"];
  bool has_time_created() const;
  void clear_time_created();
  static const int kTimeCreatedFieldNumber = 419949028;
  const ::ywrapper::UintValue& time_created() const;
  ::ywrapper::UintValue* release_time_created();
  ::ywrapper::UintValue* mutable_time_created();
  void set_allocated_time_created(::ywrapper::UintValue* time_created);

  // .openconfig.enums.OpenconfigAlarmTypesOPENCONFIGALARMSEVERITY severity = 118081445 [(.yext.schemapath) = "/access-points/access-point/system/alarms/alarm/state/severity"];
  void clear_severity();
  static const int kSeverityFieldNumber = 118081445;
  ::openconfig::enums::OpenconfigAlarmTypesOPENCONFIGALARMSEVERITY severity() const;
  void set_severity(::openconfig::enums::OpenconfigAlarmTypesOPENCONFIGALARMSEVERITY value);

  // .openconfig.enums.OpenconfigAlarmTypesOPENCONFIGALARMTYPEID type_id_openconfigalarmtypesopenconfigalarmtypeid = 237876297;
  private:
  bool has_type_id_openconfigalarmtypesopenconfigalarmtypeid() const;
  public:
  void clear_type_id_openconfigalarmtypesopenconfigalarmtypeid();
  static const int kTypeIdOpenconfigalarmtypesopenconfigalarmtypeidFieldNumber = 237876297;
  ::openconfig::enums::OpenconfigAlarmTypesOPENCONFIGALARMTYPEID type_id_openconfigalarmtypesopenconfigalarmtypeid() const;
  void set_type_id_openconfigalarmtypesopenconfigalarmtypeid(::openconfig::enums::OpenconfigAlarmTypesOPENCONFIGALARMTYPEID value);

  // string type_id_string = 77451230;
  private:
  bool has_type_id_string() const;
  public:
  void clear_type_id_string();
  static const int kTypeIdStringFieldNumber = 77451230;
  const ::std::string& type_id_string() const;
  void set_type_id_string(const ::std::string& value);
  #if LANG_CXX11
  void set_type_id_string(::std::string&& value);
  #endif
  void set_type_id_string(const char* value);
  void set_type_id_string(const char* value, size_t size);
  ::std::string* mutable_type_id_string();
  ::std::string* release_type_id_string();
  void set_allocated_type_id_string(::std::string* type_id_string);

  TypeIdCase type_id_case() const;
  // @@protoc_insertion_point(class_scope:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Alarms.Alarm.State)
 private:
  void set_has_type_id_openconfigalarmtypesopenconfigalarmtypeid();
  void set_has_type_id_string();

  inline bool has_type_id() const;
  void clear_type_id();
  inline void clear_has_type_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ywrapper::StringValue* text_;
  ::ywrapper::StringValue* id_;
  ::ywrapper::StringValue* resource_;
  ::ywrapper::UintValue* time_created_;
  int severity_;
  union TypeIdUnion {
    TypeIdUnion() {}
    int type_id_openconfigalarmtypesopenconfigalarmtypeid_;
    ::google::protobuf::internal::ArenaStringPtr type_id_string_;
  } type_id_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::InitDefaultsAccessPoints_AccessPoint_System_Alarms_Alarm_StateImpl();
};
// -------------------------------------------------------------------

class AccessPoints_AccessPoint_System_Alarms_Alarm : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Alarms.Alarm) */ {
 public:
  AccessPoints_AccessPoint_System_Alarms_Alarm();
  virtual ~AccessPoints_AccessPoint_System_Alarms_Alarm();

  AccessPoints_AccessPoint_System_Alarms_Alarm(const AccessPoints_AccessPoint_System_Alarms_Alarm& from);

  inline AccessPoints_AccessPoint_System_Alarms_Alarm& operator=(const AccessPoints_AccessPoint_System_Alarms_Alarm& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AccessPoints_AccessPoint_System_Alarms_Alarm(AccessPoints_AccessPoint_System_Alarms_Alarm&& from) noexcept
    : AccessPoints_AccessPoint_System_Alarms_Alarm() {
    *this = ::std::move(from);
  }

  inline AccessPoints_AccessPoint_System_Alarms_Alarm& operator=(AccessPoints_AccessPoint_System_Alarms_Alarm&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AccessPoints_AccessPoint_System_Alarms_Alarm& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AccessPoints_AccessPoint_System_Alarms_Alarm* internal_default_instance() {
    return reinterpret_cast<const AccessPoints_AccessPoint_System_Alarms_Alarm*>(
               &_AccessPoints_AccessPoint_System_Alarms_Alarm_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    114;

  void Swap(AccessPoints_AccessPoint_System_Alarms_Alarm* other);
  friend void swap(AccessPoints_AccessPoint_System_Alarms_Alarm& a, AccessPoints_AccessPoint_System_Alarms_Alarm& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AccessPoints_AccessPoint_System_Alarms_Alarm* New() const PROTOBUF_FINAL { return New(NULL); }

  AccessPoints_AccessPoint_System_Alarms_Alarm* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AccessPoints_AccessPoint_System_Alarms_Alarm& from);
  void MergeFrom(const AccessPoints_AccessPoint_System_Alarms_Alarm& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AccessPoints_AccessPoint_System_Alarms_Alarm* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef AccessPoints_AccessPoint_System_Alarms_Alarm_Config Config;
  typedef AccessPoints_AccessPoint_System_Alarms_Alarm_State State;

  // accessors -------------------------------------------------------

  // .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Alarms.Alarm.State state = 208778173 [(.yext.schemapath) = "/access-points/access-point/system/alarms/alarm/state"];
  bool has_state() const;
  void clear_state();
  static const int kStateFieldNumber = 208778173;
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Alarms_Alarm_State& state() const;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Alarms_Alarm_State* release_state();
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Alarms_Alarm_State* mutable_state();
  void set_allocated_state(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Alarms_Alarm_State* state);

  // .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Alarms.Alarm.Config config = 333970724 [(.yext.schemapath) = "/access-points/access-point/system/alarms/alarm/config"];
  bool has_config() const;
  void clear_config();
  static const int kConfigFieldNumber = 333970724;
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Alarms_Alarm_Config& config() const;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Alarms_Alarm_Config* release_config();
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Alarms_Alarm_Config* mutable_config();
  void set_allocated_config(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Alarms_Alarm_Config* config);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Alarms.Alarm)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Alarms_Alarm_State* state_;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Alarms_Alarm_Config* config_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::InitDefaultsAccessPoints_AccessPoint_System_Alarms_AlarmImpl();
};
// -------------------------------------------------------------------

class AccessPoints_AccessPoint_System_Alarms_AlarmKey : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Alarms.AlarmKey) */ {
 public:
  AccessPoints_AccessPoint_System_Alarms_AlarmKey();
  virtual ~AccessPoints_AccessPoint_System_Alarms_AlarmKey();

  AccessPoints_AccessPoint_System_Alarms_AlarmKey(const AccessPoints_AccessPoint_System_Alarms_AlarmKey& from);

  inline AccessPoints_AccessPoint_System_Alarms_AlarmKey& operator=(const AccessPoints_AccessPoint_System_Alarms_AlarmKey& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AccessPoints_AccessPoint_System_Alarms_AlarmKey(AccessPoints_AccessPoint_System_Alarms_AlarmKey&& from) noexcept
    : AccessPoints_AccessPoint_System_Alarms_AlarmKey() {
    *this = ::std::move(from);
  }

  inline AccessPoints_AccessPoint_System_Alarms_AlarmKey& operator=(AccessPoints_AccessPoint_System_Alarms_AlarmKey&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AccessPoints_AccessPoint_System_Alarms_AlarmKey& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AccessPoints_AccessPoint_System_Alarms_AlarmKey* internal_default_instance() {
    return reinterpret_cast<const AccessPoints_AccessPoint_System_Alarms_AlarmKey*>(
               &_AccessPoints_AccessPoint_System_Alarms_AlarmKey_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    115;

  void Swap(AccessPoints_AccessPoint_System_Alarms_AlarmKey* other);
  friend void swap(AccessPoints_AccessPoint_System_Alarms_AlarmKey& a, AccessPoints_AccessPoint_System_Alarms_AlarmKey& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AccessPoints_AccessPoint_System_Alarms_AlarmKey* New() const PROTOBUF_FINAL { return New(NULL); }

  AccessPoints_AccessPoint_System_Alarms_AlarmKey* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AccessPoints_AccessPoint_System_Alarms_AlarmKey& from);
  void MergeFrom(const AccessPoints_AccessPoint_System_Alarms_AlarmKey& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AccessPoints_AccessPoint_System_Alarms_AlarmKey* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string id = 1 [(.yext.schemapath) = "/access-points/access-point/system/alarms/alarm/id"];
  void clear_id();
  static const int kIdFieldNumber = 1;
  const ::std::string& id() const;
  void set_id(const ::std::string& value);
  #if LANG_CXX11
  void set_id(::std::string&& value);
  #endif
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  ::std::string* mutable_id();
  ::std::string* release_id();
  void set_allocated_id(::std::string* id);

  // .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Alarms.Alarm alarm = 2;
  bool has_alarm() const;
  void clear_alarm();
  static const int kAlarmFieldNumber = 2;
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Alarms_Alarm& alarm() const;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Alarms_Alarm* release_alarm();
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Alarms_Alarm* mutable_alarm();
  void set_allocated_alarm(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Alarms_Alarm* alarm);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Alarms.AlarmKey)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr id_;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Alarms_Alarm* alarm_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::InitDefaultsAccessPoints_AccessPoint_System_Alarms_AlarmKeyImpl();
};
// -------------------------------------------------------------------

class AccessPoints_AccessPoint_System_Alarms : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Alarms) */ {
 public:
  AccessPoints_AccessPoint_System_Alarms();
  virtual ~AccessPoints_AccessPoint_System_Alarms();

  AccessPoints_AccessPoint_System_Alarms(const AccessPoints_AccessPoint_System_Alarms& from);

  inline AccessPoints_AccessPoint_System_Alarms& operator=(const AccessPoints_AccessPoint_System_Alarms& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AccessPoints_AccessPoint_System_Alarms(AccessPoints_AccessPoint_System_Alarms&& from) noexcept
    : AccessPoints_AccessPoint_System_Alarms() {
    *this = ::std::move(from);
  }

  inline AccessPoints_AccessPoint_System_Alarms& operator=(AccessPoints_AccessPoint_System_Alarms&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AccessPoints_AccessPoint_System_Alarms& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AccessPoints_AccessPoint_System_Alarms* internal_default_instance() {
    return reinterpret_cast<const AccessPoints_AccessPoint_System_Alarms*>(
               &_AccessPoints_AccessPoint_System_Alarms_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    116;

  void Swap(AccessPoints_AccessPoint_System_Alarms* other);
  friend void swap(AccessPoints_AccessPoint_System_Alarms& a, AccessPoints_AccessPoint_System_Alarms& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AccessPoints_AccessPoint_System_Alarms* New() const PROTOBUF_FINAL { return New(NULL); }

  AccessPoints_AccessPoint_System_Alarms* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AccessPoints_AccessPoint_System_Alarms& from);
  void MergeFrom(const AccessPoints_AccessPoint_System_Alarms& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AccessPoints_AccessPoint_System_Alarms* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef AccessPoints_AccessPoint_System_Alarms_Alarm Alarm;
  typedef AccessPoints_AccessPoint_System_Alarms_AlarmKey AlarmKey;

  // accessors -------------------------------------------------------

  // repeated .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Alarms.AlarmKey alarm = 426633251 [(.yext.schemapath) = "/access-points/access-point/system/alarms/alarm"];
  int alarm_size() const;
  void clear_alarm();
  static const int kAlarmFieldNumber = 426633251;
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Alarms_AlarmKey& alarm(int index) const;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Alarms_AlarmKey* mutable_alarm(int index);
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Alarms_AlarmKey* add_alarm();
  ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Alarms_AlarmKey >*
      mutable_alarm();
  const ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Alarms_AlarmKey >&
      alarm() const;

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Alarms)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Alarms_AlarmKey > alarm_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::InitDefaultsAccessPoints_AccessPoint_System_AlarmsImpl();
};
// -------------------------------------------------------------------

class AccessPoints_AccessPoint_System_Clock_Config : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Clock.Config) */ {
 public:
  AccessPoints_AccessPoint_System_Clock_Config();
  virtual ~AccessPoints_AccessPoint_System_Clock_Config();

  AccessPoints_AccessPoint_System_Clock_Config(const AccessPoints_AccessPoint_System_Clock_Config& from);

  inline AccessPoints_AccessPoint_System_Clock_Config& operator=(const AccessPoints_AccessPoint_System_Clock_Config& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AccessPoints_AccessPoint_System_Clock_Config(AccessPoints_AccessPoint_System_Clock_Config&& from) noexcept
    : AccessPoints_AccessPoint_System_Clock_Config() {
    *this = ::std::move(from);
  }

  inline AccessPoints_AccessPoint_System_Clock_Config& operator=(AccessPoints_AccessPoint_System_Clock_Config&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AccessPoints_AccessPoint_System_Clock_Config& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AccessPoints_AccessPoint_System_Clock_Config* internal_default_instance() {
    return reinterpret_cast<const AccessPoints_AccessPoint_System_Clock_Config*>(
               &_AccessPoints_AccessPoint_System_Clock_Config_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    117;

  void Swap(AccessPoints_AccessPoint_System_Clock_Config* other);
  friend void swap(AccessPoints_AccessPoint_System_Clock_Config& a, AccessPoints_AccessPoint_System_Clock_Config& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AccessPoints_AccessPoint_System_Clock_Config* New() const PROTOBUF_FINAL { return New(NULL); }

  AccessPoints_AccessPoint_System_Clock_Config* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AccessPoints_AccessPoint_System_Clock_Config& from);
  void MergeFrom(const AccessPoints_AccessPoint_System_Clock_Config& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AccessPoints_AccessPoint_System_Clock_Config* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .ywrapper.StringValue timezone_name = 494706602 [(.yext.schemapath) = "/access-points/access-point/system/clock/config/timezone-name"];
  bool has_timezone_name() const;
  void clear_timezone_name();
  static const int kTimezoneNameFieldNumber = 494706602;
  const ::ywrapper::StringValue& timezone_name() const;
  ::ywrapper::StringValue* release_timezone_name();
  ::ywrapper::StringValue* mutable_timezone_name();
  void set_allocated_timezone_name(::ywrapper::StringValue* timezone_name);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Clock.Config)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ywrapper::StringValue* timezone_name_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::InitDefaultsAccessPoints_AccessPoint_System_Clock_ConfigImpl();
};
// -------------------------------------------------------------------

class AccessPoints_AccessPoint_System_Clock_State : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Clock.State) */ {
 public:
  AccessPoints_AccessPoint_System_Clock_State();
  virtual ~AccessPoints_AccessPoint_System_Clock_State();

  AccessPoints_AccessPoint_System_Clock_State(const AccessPoints_AccessPoint_System_Clock_State& from);

  inline AccessPoints_AccessPoint_System_Clock_State& operator=(const AccessPoints_AccessPoint_System_Clock_State& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AccessPoints_AccessPoint_System_Clock_State(AccessPoints_AccessPoint_System_Clock_State&& from) noexcept
    : AccessPoints_AccessPoint_System_Clock_State() {
    *this = ::std::move(from);
  }

  inline AccessPoints_AccessPoint_System_Clock_State& operator=(AccessPoints_AccessPoint_System_Clock_State&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AccessPoints_AccessPoint_System_Clock_State& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AccessPoints_AccessPoint_System_Clock_State* internal_default_instance() {
    return reinterpret_cast<const AccessPoints_AccessPoint_System_Clock_State*>(
               &_AccessPoints_AccessPoint_System_Clock_State_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    118;

  void Swap(AccessPoints_AccessPoint_System_Clock_State* other);
  friend void swap(AccessPoints_AccessPoint_System_Clock_State& a, AccessPoints_AccessPoint_System_Clock_State& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AccessPoints_AccessPoint_System_Clock_State* New() const PROTOBUF_FINAL { return New(NULL); }

  AccessPoints_AccessPoint_System_Clock_State* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AccessPoints_AccessPoint_System_Clock_State& from);
  void MergeFrom(const AccessPoints_AccessPoint_System_Clock_State& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AccessPoints_AccessPoint_System_Clock_State* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .ywrapper.StringValue timezone_name = 331890991 [(.yext.schemapath) = "/access-points/access-point/system/clock/state/timezone-name"];
  bool has_timezone_name() const;
  void clear_timezone_name();
  static const int kTimezoneNameFieldNumber = 331890991;
  const ::ywrapper::StringValue& timezone_name() const;
  ::ywrapper::StringValue* release_timezone_name();
  ::ywrapper::StringValue* mutable_timezone_name();
  void set_allocated_timezone_name(::ywrapper::StringValue* timezone_name);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Clock.State)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ywrapper::StringValue* timezone_name_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::InitDefaultsAccessPoints_AccessPoint_System_Clock_StateImpl();
};
// -------------------------------------------------------------------

class AccessPoints_AccessPoint_System_Clock : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Clock) */ {
 public:
  AccessPoints_AccessPoint_System_Clock();
  virtual ~AccessPoints_AccessPoint_System_Clock();

  AccessPoints_AccessPoint_System_Clock(const AccessPoints_AccessPoint_System_Clock& from);

  inline AccessPoints_AccessPoint_System_Clock& operator=(const AccessPoints_AccessPoint_System_Clock& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AccessPoints_AccessPoint_System_Clock(AccessPoints_AccessPoint_System_Clock&& from) noexcept
    : AccessPoints_AccessPoint_System_Clock() {
    *this = ::std::move(from);
  }

  inline AccessPoints_AccessPoint_System_Clock& operator=(AccessPoints_AccessPoint_System_Clock&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AccessPoints_AccessPoint_System_Clock& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AccessPoints_AccessPoint_System_Clock* internal_default_instance() {
    return reinterpret_cast<const AccessPoints_AccessPoint_System_Clock*>(
               &_AccessPoints_AccessPoint_System_Clock_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    119;

  void Swap(AccessPoints_AccessPoint_System_Clock* other);
  friend void swap(AccessPoints_AccessPoint_System_Clock& a, AccessPoints_AccessPoint_System_Clock& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AccessPoints_AccessPoint_System_Clock* New() const PROTOBUF_FINAL { return New(NULL); }

  AccessPoints_AccessPoint_System_Clock* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AccessPoints_AccessPoint_System_Clock& from);
  void MergeFrom(const AccessPoints_AccessPoint_System_Clock& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AccessPoints_AccessPoint_System_Clock* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef AccessPoints_AccessPoint_System_Clock_Config Config;
  typedef AccessPoints_AccessPoint_System_Clock_State State;

  // accessors -------------------------------------------------------

  // .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Clock.State state = 102347281 [(.yext.schemapath) = "/access-points/access-point/system/clock/state"];
  bool has_state() const;
  void clear_state();
  static const int kStateFieldNumber = 102347281;
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Clock_State& state() const;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Clock_State* release_state();
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Clock_State* mutable_state();
  void set_allocated_state(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Clock_State* state);

  // .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Clock.Config config = 291331576 [(.yext.schemapath) = "/access-points/access-point/system/clock/config"];
  bool has_config() const;
  void clear_config();
  static const int kConfigFieldNumber = 291331576;
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Clock_Config& config() const;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Clock_Config* release_config();
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Clock_Config* mutable_config();
  void set_allocated_config(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Clock_Config* config);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Clock)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Clock_State* state_;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Clock_Config* config_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::InitDefaultsAccessPoints_AccessPoint_System_ClockImpl();
};
// -------------------------------------------------------------------

class AccessPoints_AccessPoint_System_Config : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Config) */ {
 public:
  AccessPoints_AccessPoint_System_Config();
  virtual ~AccessPoints_AccessPoint_System_Config();

  AccessPoints_AccessPoint_System_Config(const AccessPoints_AccessPoint_System_Config& from);

  inline AccessPoints_AccessPoint_System_Config& operator=(const AccessPoints_AccessPoint_System_Config& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AccessPoints_AccessPoint_System_Config(AccessPoints_AccessPoint_System_Config&& from) noexcept
    : AccessPoints_AccessPoint_System_Config() {
    *this = ::std::move(from);
  }

  inline AccessPoints_AccessPoint_System_Config& operator=(AccessPoints_AccessPoint_System_Config&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AccessPoints_AccessPoint_System_Config& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AccessPoints_AccessPoint_System_Config* internal_default_instance() {
    return reinterpret_cast<const AccessPoints_AccessPoint_System_Config*>(
               &_AccessPoints_AccessPoint_System_Config_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    120;

  void Swap(AccessPoints_AccessPoint_System_Config* other);
  friend void swap(AccessPoints_AccessPoint_System_Config& a, AccessPoints_AccessPoint_System_Config& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AccessPoints_AccessPoint_System_Config* New() const PROTOBUF_FINAL { return New(NULL); }

  AccessPoints_AccessPoint_System_Config* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AccessPoints_AccessPoint_System_Config& from);
  void MergeFrom(const AccessPoints_AccessPoint_System_Config& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AccessPoints_AccessPoint_System_Config* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .ywrapper.StringValue login_banner = 277642138 [(.yext.schemapath) = "/access-points/access-point/system/config/login-banner"];
  bool has_login_banner() const;
  void clear_login_banner();
  static const int kLoginBannerFieldNumber = 277642138;
  const ::ywrapper::StringValue& login_banner() const;
  ::ywrapper::StringValue* release_login_banner();
  ::ywrapper::StringValue* mutable_login_banner();
  void set_allocated_login_banner(::ywrapper::StringValue* login_banner);

  // .ywrapper.StringValue domain_name = 341586104 [(.yext.schemapath) = "/access-points/access-point/system/config/domain-name"];
  bool has_domain_name() const;
  void clear_domain_name();
  static const int kDomainNameFieldNumber = 341586104;
  const ::ywrapper::StringValue& domain_name() const;
  ::ywrapper::StringValue* release_domain_name();
  ::ywrapper::StringValue* mutable_domain_name();
  void set_allocated_domain_name(::ywrapper::StringValue* domain_name);

  // .ywrapper.StringValue hostname = 381963539 [(.yext.schemapath) = "/access-points/access-point/system/config/hostname"];
  bool has_hostname() const;
  void clear_hostname();
  static const int kHostnameFieldNumber = 381963539;
  const ::ywrapper::StringValue& hostname() const;
  ::ywrapper::StringValue* release_hostname();
  ::ywrapper::StringValue* mutable_hostname();
  void set_allocated_hostname(::ywrapper::StringValue* hostname);

  // .ywrapper.StringValue motd_banner = 468517355 [(.yext.schemapath) = "/access-points/access-point/system/config/motd-banner"];
  bool has_motd_banner() const;
  void clear_motd_banner();
  static const int kMotdBannerFieldNumber = 468517355;
  const ::ywrapper::StringValue& motd_banner() const;
  ::ywrapper::StringValue* release_motd_banner();
  ::ywrapper::StringValue* mutable_motd_banner();
  void set_allocated_motd_banner(::ywrapper::StringValue* motd_banner);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Config)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ywrapper::StringValue* login_banner_;
  ::ywrapper::StringValue* domain_name_;
  ::ywrapper::StringValue* hostname_;
  ::ywrapper::StringValue* motd_banner_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::InitDefaultsAccessPoints_AccessPoint_System_ConfigImpl();
};
// -------------------------------------------------------------------

class AccessPoints_AccessPoint_System_Cpus_Cpu_State_HardwareInterrupt : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.State.HardwareInterrupt) */ {
 public:
  AccessPoints_AccessPoint_System_Cpus_Cpu_State_HardwareInterrupt();
  virtual ~AccessPoints_AccessPoint_System_Cpus_Cpu_State_HardwareInterrupt();

  AccessPoints_AccessPoint_System_Cpus_Cpu_State_HardwareInterrupt(const AccessPoints_AccessPoint_System_Cpus_Cpu_State_HardwareInterrupt& from);

  inline AccessPoints_AccessPoint_System_Cpus_Cpu_State_HardwareInterrupt& operator=(const AccessPoints_AccessPoint_System_Cpus_Cpu_State_HardwareInterrupt& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AccessPoints_AccessPoint_System_Cpus_Cpu_State_HardwareInterrupt(AccessPoints_AccessPoint_System_Cpus_Cpu_State_HardwareInterrupt&& from) noexcept
    : AccessPoints_AccessPoint_System_Cpus_Cpu_State_HardwareInterrupt() {
    *this = ::std::move(from);
  }

  inline AccessPoints_AccessPoint_System_Cpus_Cpu_State_HardwareInterrupt& operator=(AccessPoints_AccessPoint_System_Cpus_Cpu_State_HardwareInterrupt&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AccessPoints_AccessPoint_System_Cpus_Cpu_State_HardwareInterrupt& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AccessPoints_AccessPoint_System_Cpus_Cpu_State_HardwareInterrupt* internal_default_instance() {
    return reinterpret_cast<const AccessPoints_AccessPoint_System_Cpus_Cpu_State_HardwareInterrupt*>(
               &_AccessPoints_AccessPoint_System_Cpus_Cpu_State_HardwareInterrupt_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    121;

  void Swap(AccessPoints_AccessPoint_System_Cpus_Cpu_State_HardwareInterrupt* other);
  friend void swap(AccessPoints_AccessPoint_System_Cpus_Cpu_State_HardwareInterrupt& a, AccessPoints_AccessPoint_System_Cpus_Cpu_State_HardwareInterrupt& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AccessPoints_AccessPoint_System_Cpus_Cpu_State_HardwareInterrupt* New() const PROTOBUF_FINAL { return New(NULL); }

  AccessPoints_AccessPoint_System_Cpus_Cpu_State_HardwareInterrupt* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AccessPoints_AccessPoint_System_Cpus_Cpu_State_HardwareInterrupt& from);
  void MergeFrom(const AccessPoints_AccessPoint_System_Cpus_Cpu_State_HardwareInterrupt& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AccessPoints_AccessPoint_System_Cpus_Cpu_State_HardwareInterrupt* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .ywrapper.UintValue instant = 80030710 [(.yext.schemapath) = "/access-points/access-point/system/cpus/cpu/state/hardware-interrupt/instant"];
  bool has_instant() const;
  void clear_instant();
  static const int kInstantFieldNumber = 80030710;
  const ::ywrapper::UintValue& instant() const;
  ::ywrapper::UintValue* release_instant();
  ::ywrapper::UintValue* mutable_instant();
  void set_allocated_instant(::ywrapper::UintValue* instant);

  // .ywrapper.UintValue avg = 97156345 [(.yext.schemapath) = "/access-points/access-point/system/cpus/cpu/state/hardware-interrupt/avg"];
  bool has_avg() const;
  void clear_avg();
  static const int kAvgFieldNumber = 97156345;
  const ::ywrapper::UintValue& avg() const;
  ::ywrapper::UintValue* release_avg();
  ::ywrapper::UintValue* mutable_avg();
  void set_allocated_avg(::ywrapper::UintValue* avg);

  // .ywrapper.UintValue min = 148167741 [(.yext.schemapath) = "/access-points/access-point/system/cpus/cpu/state/hardware-interrupt/min"];
  bool has_min() const;
  void clear_min();
  static const int kMinFieldNumber = 148167741;
  const ::ywrapper::UintValue& min() const;
  ::ywrapper::UintValue* release_min();
  ::ywrapper::UintValue* mutable_min();
  void set_allocated_min(::ywrapper::UintValue* min);

  // .ywrapper.UintValue interval = 209457208 [(.yext.schemapath) = "/access-points/access-point/system/cpus/cpu/state/hardware-interrupt/interval"];
  bool has_interval() const;
  void clear_interval();
  static const int kIntervalFieldNumber = 209457208;
  const ::ywrapper::UintValue& interval() const;
  ::ywrapper::UintValue* release_interval();
  ::ywrapper::UintValue* mutable_interval();
  void set_allocated_interval(::ywrapper::UintValue* interval);

  // .ywrapper.UintValue max = 282388627 [(.yext.schemapath) = "/access-points/access-point/system/cpus/cpu/state/hardware-interrupt/max"];
  bool has_max() const;
  void clear_max();
  static const int kMaxFieldNumber = 282388627;
  const ::ywrapper::UintValue& max() const;
  ::ywrapper::UintValue* release_max();
  ::ywrapper::UintValue* mutable_max();
  void set_allocated_max(::ywrapper::UintValue* max);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.State.HardwareInterrupt)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ywrapper::UintValue* instant_;
  ::ywrapper::UintValue* avg_;
  ::ywrapper::UintValue* min_;
  ::ywrapper::UintValue* interval_;
  ::ywrapper::UintValue* max_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::InitDefaultsAccessPoints_AccessPoint_System_Cpus_Cpu_State_HardwareInterruptImpl();
};
// -------------------------------------------------------------------

class AccessPoints_AccessPoint_System_Cpus_Cpu_State_Idle : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.State.Idle) */ {
 public:
  AccessPoints_AccessPoint_System_Cpus_Cpu_State_Idle();
  virtual ~AccessPoints_AccessPoint_System_Cpus_Cpu_State_Idle();

  AccessPoints_AccessPoint_System_Cpus_Cpu_State_Idle(const AccessPoints_AccessPoint_System_Cpus_Cpu_State_Idle& from);

  inline AccessPoints_AccessPoint_System_Cpus_Cpu_State_Idle& operator=(const AccessPoints_AccessPoint_System_Cpus_Cpu_State_Idle& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AccessPoints_AccessPoint_System_Cpus_Cpu_State_Idle(AccessPoints_AccessPoint_System_Cpus_Cpu_State_Idle&& from) noexcept
    : AccessPoints_AccessPoint_System_Cpus_Cpu_State_Idle() {
    *this = ::std::move(from);
  }

  inline AccessPoints_AccessPoint_System_Cpus_Cpu_State_Idle& operator=(AccessPoints_AccessPoint_System_Cpus_Cpu_State_Idle&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AccessPoints_AccessPoint_System_Cpus_Cpu_State_Idle& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AccessPoints_AccessPoint_System_Cpus_Cpu_State_Idle* internal_default_instance() {
    return reinterpret_cast<const AccessPoints_AccessPoint_System_Cpus_Cpu_State_Idle*>(
               &_AccessPoints_AccessPoint_System_Cpus_Cpu_State_Idle_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    122;

  void Swap(AccessPoints_AccessPoint_System_Cpus_Cpu_State_Idle* other);
  friend void swap(AccessPoints_AccessPoint_System_Cpus_Cpu_State_Idle& a, AccessPoints_AccessPoint_System_Cpus_Cpu_State_Idle& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AccessPoints_AccessPoint_System_Cpus_Cpu_State_Idle* New() const PROTOBUF_FINAL { return New(NULL); }

  AccessPoints_AccessPoint_System_Cpus_Cpu_State_Idle* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AccessPoints_AccessPoint_System_Cpus_Cpu_State_Idle& from);
  void MergeFrom(const AccessPoints_AccessPoint_System_Cpus_Cpu_State_Idle& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AccessPoints_AccessPoint_System_Cpus_Cpu_State_Idle* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .ywrapper.UintValue max = 49698651 [(.yext.schemapath) = "/access-points/access-point/system/cpus/cpu/state/idle/max"];
  bool has_max() const;
  void clear_max();
  static const int kMaxFieldNumber = 49698651;
  const ::ywrapper::UintValue& max() const;
  ::ywrapper::UintValue* release_max();
  ::ywrapper::UintValue* mutable_max();
  void set_allocated_max(::ywrapper::UintValue* max);

  // .ywrapper.UintValue min = 183919573 [(.yext.schemapath) = "/access-points/access-point/system/cpus/cpu/state/idle/min"];
  bool has_min() const;
  void clear_min();
  static const int kMinFieldNumber = 183919573;
  const ::ywrapper::UintValue& min() const;
  ::ywrapper::UintValue* release_min();
  ::ywrapper::UintValue* mutable_min();
  void set_allocated_min(::ywrapper::UintValue* min);

  // .ywrapper.UintValue interval = 250660256 [(.yext.schemapath) = "/access-points/access-point/system/cpus/cpu/state/idle/interval"];
  bool has_interval() const;
  void clear_interval();
  static const int kIntervalFieldNumber = 250660256;
  const ::ywrapper::UintValue& interval() const;
  ::ywrapper::UintValue* release_interval();
  ::ywrapper::UintValue* mutable_interval();
  void set_allocated_interval(::ywrapper::UintValue* interval);

  // .ywrapper.UintValue instant = 361046606 [(.yext.schemapath) = "/access-points/access-point/system/cpus/cpu/state/idle/instant"];
  bool has_instant() const;
  void clear_instant();
  static const int kInstantFieldNumber = 361046606;
  const ::ywrapper::UintValue& instant() const;
  ::ywrapper::UintValue* release_instant();
  ::ywrapper::UintValue* mutable_instant();
  void set_allocated_instant(::ywrapper::UintValue* instant);

  // .ywrapper.UintValue avg = 403987073 [(.yext.schemapath) = "/access-points/access-point/system/cpus/cpu/state/idle/avg"];
  bool has_avg() const;
  void clear_avg();
  static const int kAvgFieldNumber = 403987073;
  const ::ywrapper::UintValue& avg() const;
  ::ywrapper::UintValue* release_avg();
  ::ywrapper::UintValue* mutable_avg();
  void set_allocated_avg(::ywrapper::UintValue* avg);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.State.Idle)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ywrapper::UintValue* max_;
  ::ywrapper::UintValue* min_;
  ::ywrapper::UintValue* interval_;
  ::ywrapper::UintValue* instant_;
  ::ywrapper::UintValue* avg_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::InitDefaultsAccessPoints_AccessPoint_System_Cpus_Cpu_State_IdleImpl();
};
// -------------------------------------------------------------------

class AccessPoints_AccessPoint_System_Cpus_Cpu_State_Kernel : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.State.Kernel) */ {
 public:
  AccessPoints_AccessPoint_System_Cpus_Cpu_State_Kernel();
  virtual ~AccessPoints_AccessPoint_System_Cpus_Cpu_State_Kernel();

  AccessPoints_AccessPoint_System_Cpus_Cpu_State_Kernel(const AccessPoints_AccessPoint_System_Cpus_Cpu_State_Kernel& from);

  inline AccessPoints_AccessPoint_System_Cpus_Cpu_State_Kernel& operator=(const AccessPoints_AccessPoint_System_Cpus_Cpu_State_Kernel& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AccessPoints_AccessPoint_System_Cpus_Cpu_State_Kernel(AccessPoints_AccessPoint_System_Cpus_Cpu_State_Kernel&& from) noexcept
    : AccessPoints_AccessPoint_System_Cpus_Cpu_State_Kernel() {
    *this = ::std::move(from);
  }

  inline AccessPoints_AccessPoint_System_Cpus_Cpu_State_Kernel& operator=(AccessPoints_AccessPoint_System_Cpus_Cpu_State_Kernel&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AccessPoints_AccessPoint_System_Cpus_Cpu_State_Kernel& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AccessPoints_AccessPoint_System_Cpus_Cpu_State_Kernel* internal_default_instance() {
    return reinterpret_cast<const AccessPoints_AccessPoint_System_Cpus_Cpu_State_Kernel*>(
               &_AccessPoints_AccessPoint_System_Cpus_Cpu_State_Kernel_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    123;

  void Swap(AccessPoints_AccessPoint_System_Cpus_Cpu_State_Kernel* other);
  friend void swap(AccessPoints_AccessPoint_System_Cpus_Cpu_State_Kernel& a, AccessPoints_AccessPoint_System_Cpus_Cpu_State_Kernel& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AccessPoints_AccessPoint_System_Cpus_Cpu_State_Kernel* New() const PROTOBUF_FINAL { return New(NULL); }

  AccessPoints_AccessPoint_System_Cpus_Cpu_State_Kernel* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AccessPoints_AccessPoint_System_Cpus_Cpu_State_Kernel& from);
  void MergeFrom(const AccessPoints_AccessPoint_System_Cpus_Cpu_State_Kernel& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AccessPoints_AccessPoint_System_Cpus_Cpu_State_Kernel* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .ywrapper.UintValue interval = 73455187 [(.yext.schemapath) = "/access-points/access-point/system/cpus/cpu/state/kernel/interval"];
  bool has_interval() const;
  void clear_interval();
  static const int kIntervalFieldNumber = 73455187;
  const ::ywrapper::UintValue& interval() const;
  ::ywrapper::UintValue* release_interval();
  ::ywrapper::UintValue* mutable_interval();
  void set_allocated_interval(::ywrapper::UintValue* interval);

  // .ywrapper.UintValue max = 298198954 [(.yext.schemapath) = "/access-points/access-point/system/cpus/cpu/state/kernel/max"];
  bool has_max() const;
  void clear_max();
  static const int kMaxFieldNumber = 298198954;
  const ::ywrapper::UintValue& max() const;
  ::ywrapper::UintValue* release_max();
  ::ywrapper::UintValue* mutable_max();
  void set_allocated_max(::ywrapper::UintValue* max);

  // .ywrapper.UintValue instant = 318309203 [(.yext.schemapath) = "/access-points/access-point/system/cpus/cpu/state/kernel/instant"];
  bool has_instant() const;
  void clear_instant();
  static const int kInstantFieldNumber = 318309203;
  const ::ywrapper::UintValue& instant() const;
  ::ywrapper::UintValue* release_instant();
  ::ywrapper::UintValue* mutable_instant();
  void set_allocated_instant(::ywrapper::UintValue* instant);

  // .ywrapper.UintValue min = 432419844 [(.yext.schemapath) = "/access-points/access-point/system/cpus/cpu/state/kernel/min"];
  bool has_min() const;
  void clear_min();
  static const int kMinFieldNumber = 432419844;
  const ::ywrapper::UintValue& min() const;
  ::ywrapper::UintValue* release_min();
  ::ywrapper::UintValue* mutable_min();
  void set_allocated_min(::ywrapper::UintValue* min);

  // .ywrapper.UintValue avg = 480781416 [(.yext.schemapath) = "/access-points/access-point/system/cpus/cpu/state/kernel/avg"];
  bool has_avg() const;
  void clear_avg();
  static const int kAvgFieldNumber = 480781416;
  const ::ywrapper::UintValue& avg() const;
  ::ywrapper::UintValue* release_avg();
  ::ywrapper::UintValue* mutable_avg();
  void set_allocated_avg(::ywrapper::UintValue* avg);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.State.Kernel)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ywrapper::UintValue* interval_;
  ::ywrapper::UintValue* max_;
  ::ywrapper::UintValue* instant_;
  ::ywrapper::UintValue* min_;
  ::ywrapper::UintValue* avg_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::InitDefaultsAccessPoints_AccessPoint_System_Cpus_Cpu_State_KernelImpl();
};
// -------------------------------------------------------------------

class AccessPoints_AccessPoint_System_Cpus_Cpu_State_Nice : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.State.Nice) */ {
 public:
  AccessPoints_AccessPoint_System_Cpus_Cpu_State_Nice();
  virtual ~AccessPoints_AccessPoint_System_Cpus_Cpu_State_Nice();

  AccessPoints_AccessPoint_System_Cpus_Cpu_State_Nice(const AccessPoints_AccessPoint_System_Cpus_Cpu_State_Nice& from);

  inline AccessPoints_AccessPoint_System_Cpus_Cpu_State_Nice& operator=(const AccessPoints_AccessPoint_System_Cpus_Cpu_State_Nice& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AccessPoints_AccessPoint_System_Cpus_Cpu_State_Nice(AccessPoints_AccessPoint_System_Cpus_Cpu_State_Nice&& from) noexcept
    : AccessPoints_AccessPoint_System_Cpus_Cpu_State_Nice() {
    *this = ::std::move(from);
  }

  inline AccessPoints_AccessPoint_System_Cpus_Cpu_State_Nice& operator=(AccessPoints_AccessPoint_System_Cpus_Cpu_State_Nice&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AccessPoints_AccessPoint_System_Cpus_Cpu_State_Nice& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AccessPoints_AccessPoint_System_Cpus_Cpu_State_Nice* internal_default_instance() {
    return reinterpret_cast<const AccessPoints_AccessPoint_System_Cpus_Cpu_State_Nice*>(
               &_AccessPoints_AccessPoint_System_Cpus_Cpu_State_Nice_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    124;

  void Swap(AccessPoints_AccessPoint_System_Cpus_Cpu_State_Nice* other);
  friend void swap(AccessPoints_AccessPoint_System_Cpus_Cpu_State_Nice& a, AccessPoints_AccessPoint_System_Cpus_Cpu_State_Nice& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AccessPoints_AccessPoint_System_Cpus_Cpu_State_Nice* New() const PROTOBUF_FINAL { return New(NULL); }

  AccessPoints_AccessPoint_System_Cpus_Cpu_State_Nice* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AccessPoints_AccessPoint_System_Cpus_Cpu_State_Nice& from);
  void MergeFrom(const AccessPoints_AccessPoint_System_Cpus_Cpu_State_Nice& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AccessPoints_AccessPoint_System_Cpus_Cpu_State_Nice* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .ywrapper.UintValue instant = 208940195 [(.yext.schemapath) = "/access-points/access-point/system/cpus/cpu/state/nice/instant"];
  bool has_instant() const;
  void clear_instant();
  static const int kInstantFieldNumber = 208940195;
  const ::ywrapper::UintValue& instant() const;
  ::ywrapper::UintValue* release_instant();
  ::ywrapper::UintValue* mutable_instant();
  void set_allocated_instant(::ywrapper::UintValue* instant);

  // .ywrapper.UintValue max = 218809786 [(.yext.schemapath) = "/access-points/access-point/system/cpus/cpu/state/nice/max"];
  bool has_max() const;
  void clear_max();
  static const int kMaxFieldNumber = 218809786;
  const ::ywrapper::UintValue& max() const;
  ::ywrapper::UintValue* release_max();
  ::ywrapper::UintValue* mutable_max();
  void set_allocated_max(::ywrapper::UintValue* max);

  // .ywrapper.UintValue interval = 334564995 [(.yext.schemapath) = "/access-points/access-point/system/cpus/cpu/state/nice/interval"];
  bool has_interval() const;
  void clear_interval();
  static const int kIntervalFieldNumber = 334564995;
  const ::ywrapper::UintValue& interval() const;
  ::ywrapper::UintValue* release_interval();
  ::ywrapper::UintValue* mutable_interval();
  void set_allocated_interval(::ywrapper::UintValue* interval);

  // .ywrapper.UintValue min = 353030708 [(.yext.schemapath) = "/access-points/access-point/system/cpus/cpu/state/nice/min"];
  bool has_min() const;
  void clear_min();
  static const int kMinFieldNumber = 353030708;
  const ::ywrapper::UintValue& min() const;
  ::ywrapper::UintValue* release_min();
  ::ywrapper::UintValue* mutable_min();
  void set_allocated_min(::ywrapper::UintValue* min);

  // .ywrapper.UintValue avg = 401379320 [(.yext.schemapath) = "/access-points/access-point/system/cpus/cpu/state/nice/avg"];
  bool has_avg() const;
  void clear_avg();
  static const int kAvgFieldNumber = 401379320;
  const ::ywrapper::UintValue& avg() const;
  ::ywrapper::UintValue* release_avg();
  ::ywrapper::UintValue* mutable_avg();
  void set_allocated_avg(::ywrapper::UintValue* avg);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.State.Nice)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ywrapper::UintValue* instant_;
  ::ywrapper::UintValue* max_;
  ::ywrapper::UintValue* interval_;
  ::ywrapper::UintValue* min_;
  ::ywrapper::UintValue* avg_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::InitDefaultsAccessPoints_AccessPoint_System_Cpus_Cpu_State_NiceImpl();
};
// -------------------------------------------------------------------

class AccessPoints_AccessPoint_System_Cpus_Cpu_State_SoftwareInterrupt : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.State.SoftwareInterrupt) */ {
 public:
  AccessPoints_AccessPoint_System_Cpus_Cpu_State_SoftwareInterrupt();
  virtual ~AccessPoints_AccessPoint_System_Cpus_Cpu_State_SoftwareInterrupt();

  AccessPoints_AccessPoint_System_Cpus_Cpu_State_SoftwareInterrupt(const AccessPoints_AccessPoint_System_Cpus_Cpu_State_SoftwareInterrupt& from);

  inline AccessPoints_AccessPoint_System_Cpus_Cpu_State_SoftwareInterrupt& operator=(const AccessPoints_AccessPoint_System_Cpus_Cpu_State_SoftwareInterrupt& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AccessPoints_AccessPoint_System_Cpus_Cpu_State_SoftwareInterrupt(AccessPoints_AccessPoint_System_Cpus_Cpu_State_SoftwareInterrupt&& from) noexcept
    : AccessPoints_AccessPoint_System_Cpus_Cpu_State_SoftwareInterrupt() {
    *this = ::std::move(from);
  }

  inline AccessPoints_AccessPoint_System_Cpus_Cpu_State_SoftwareInterrupt& operator=(AccessPoints_AccessPoint_System_Cpus_Cpu_State_SoftwareInterrupt&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AccessPoints_AccessPoint_System_Cpus_Cpu_State_SoftwareInterrupt& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AccessPoints_AccessPoint_System_Cpus_Cpu_State_SoftwareInterrupt* internal_default_instance() {
    return reinterpret_cast<const AccessPoints_AccessPoint_System_Cpus_Cpu_State_SoftwareInterrupt*>(
               &_AccessPoints_AccessPoint_System_Cpus_Cpu_State_SoftwareInterrupt_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    125;

  void Swap(AccessPoints_AccessPoint_System_Cpus_Cpu_State_SoftwareInterrupt* other);
  friend void swap(AccessPoints_AccessPoint_System_Cpus_Cpu_State_SoftwareInterrupt& a, AccessPoints_AccessPoint_System_Cpus_Cpu_State_SoftwareInterrupt& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AccessPoints_AccessPoint_System_Cpus_Cpu_State_SoftwareInterrupt* New() const PROTOBUF_FINAL { return New(NULL); }

  AccessPoints_AccessPoint_System_Cpus_Cpu_State_SoftwareInterrupt* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AccessPoints_AccessPoint_System_Cpus_Cpu_State_SoftwareInterrupt& from);
  void MergeFrom(const AccessPoints_AccessPoint_System_Cpus_Cpu_State_SoftwareInterrupt& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AccessPoints_AccessPoint_System_Cpus_Cpu_State_SoftwareInterrupt* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .ywrapper.UintValue min = 50337482 [(.yext.schemapath) = "/access-points/access-point/system/cpus/cpu/state/software-interrupt/min"];
  bool has_min() const;
  void clear_min();
  static const int kMinFieldNumber = 50337482;
  const ::ywrapper::UintValue& min() const;
  ::ywrapper::UintValue* release_min();
  ::ywrapper::UintValue* mutable_min();
  void set_allocated_min(::ywrapper::UintValue* min);

  // .ywrapper.UintValue avg = 168369250 [(.yext.schemapath) = "/access-points/access-point/system/cpus/cpu/state/software-interrupt/avg"];
  bool has_avg() const;
  void clear_avg();
  static const int kAvgFieldNumber = 168369250;
  const ::ywrapper::UintValue& avg() const;
  ::ywrapper::UintValue* release_avg();
  ::ywrapper::UintValue* mutable_avg();
  void set_allocated_avg(::ywrapper::UintValue* avg);

  // .ywrapper.UintValue instant = 207373649 [(.yext.schemapath) = "/access-points/access-point/system/cpus/cpu/state/software-interrupt/instant"];
  bool has_instant() const;
  void clear_instant();
  static const int kInstantFieldNumber = 207373649;
  const ::ywrapper::UintValue& instant() const;
  ::ywrapper::UintValue* release_instant();
  ::ywrapper::UintValue* mutable_instant();
  void set_allocated_instant(::ywrapper::UintValue* instant);

  // .ywrapper.UintValue interval = 360892741 [(.yext.schemapath) = "/access-points/access-point/system/cpus/cpu/state/software-interrupt/interval"];
  bool has_interval() const;
  void clear_interval();
  static const int kIntervalFieldNumber = 360892741;
  const ::ywrapper::UintValue& interval() const;
  ::ywrapper::UintValue* release_interval();
  ::ywrapper::UintValue* mutable_interval();
  void set_allocated_interval(::ywrapper::UintValue* interval);

  // .ywrapper.UintValue max = 452987508 [(.yext.schemapath) = "/access-points/access-point/system/cpus/cpu/state/software-interrupt/max"];
  bool has_max() const;
  void clear_max();
  static const int kMaxFieldNumber = 452987508;
  const ::ywrapper::UintValue& max() const;
  ::ywrapper::UintValue* release_max();
  ::ywrapper::UintValue* mutable_max();
  void set_allocated_max(::ywrapper::UintValue* max);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.State.SoftwareInterrupt)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ywrapper::UintValue* min_;
  ::ywrapper::UintValue* avg_;
  ::ywrapper::UintValue* instant_;
  ::ywrapper::UintValue* interval_;
  ::ywrapper::UintValue* max_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::InitDefaultsAccessPoints_AccessPoint_System_Cpus_Cpu_State_SoftwareInterruptImpl();
};
// -------------------------------------------------------------------

class AccessPoints_AccessPoint_System_Cpus_Cpu_State_Total : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.State.Total) */ {
 public:
  AccessPoints_AccessPoint_System_Cpus_Cpu_State_Total();
  virtual ~AccessPoints_AccessPoint_System_Cpus_Cpu_State_Total();

  AccessPoints_AccessPoint_System_Cpus_Cpu_State_Total(const AccessPoints_AccessPoint_System_Cpus_Cpu_State_Total& from);

  inline AccessPoints_AccessPoint_System_Cpus_Cpu_State_Total& operator=(const AccessPoints_AccessPoint_System_Cpus_Cpu_State_Total& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AccessPoints_AccessPoint_System_Cpus_Cpu_State_Total(AccessPoints_AccessPoint_System_Cpus_Cpu_State_Total&& from) noexcept
    : AccessPoints_AccessPoint_System_Cpus_Cpu_State_Total() {
    *this = ::std::move(from);
  }

  inline AccessPoints_AccessPoint_System_Cpus_Cpu_State_Total& operator=(AccessPoints_AccessPoint_System_Cpus_Cpu_State_Total&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AccessPoints_AccessPoint_System_Cpus_Cpu_State_Total& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AccessPoints_AccessPoint_System_Cpus_Cpu_State_Total* internal_default_instance() {
    return reinterpret_cast<const AccessPoints_AccessPoint_System_Cpus_Cpu_State_Total*>(
               &_AccessPoints_AccessPoint_System_Cpus_Cpu_State_Total_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    126;

  void Swap(AccessPoints_AccessPoint_System_Cpus_Cpu_State_Total* other);
  friend void swap(AccessPoints_AccessPoint_System_Cpus_Cpu_State_Total& a, AccessPoints_AccessPoint_System_Cpus_Cpu_State_Total& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AccessPoints_AccessPoint_System_Cpus_Cpu_State_Total* New() const PROTOBUF_FINAL { return New(NULL); }

  AccessPoints_AccessPoint_System_Cpus_Cpu_State_Total* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AccessPoints_AccessPoint_System_Cpus_Cpu_State_Total& from);
  void MergeFrom(const AccessPoints_AccessPoint_System_Cpus_Cpu_State_Total& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AccessPoints_AccessPoint_System_Cpus_Cpu_State_Total* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .ywrapper.UintValue min = 35281469 [(.yext.schemapath) = "/access-points/access-point/system/cpus/cpu/state/total/min"];
  bool has_min() const;
  void clear_min();
  static const int kMinFieldNumber = 35281469;
  const ::ywrapper::UintValue& min() const;
  ::ywrapper::UintValue* release_min();
  ::ywrapper::UintValue* mutable_min();
  void set_allocated_min(::ywrapper::UintValue* min);

  // .ywrapper.UintValue interval = 73206328 [(.yext.schemapath) = "/access-points/access-point/system/cpus/cpu/state/total/interval"];
  bool has_interval() const;
  void clear_interval();
  static const int kIntervalFieldNumber = 73206328;
  const ::ywrapper::UintValue& interval() const;
  ::ywrapper::UintValue* release_interval();
  ::ywrapper::UintValue* mutable_interval();
  void set_allocated_interval(::ywrapper::UintValue* interval);

  // .ywrapper.UintValue max = 169502355 [(.yext.schemapath) = "/access-points/access-point/system/cpus/cpu/state/total/max"];
  bool has_max() const;
  void clear_max();
  static const int kMaxFieldNumber = 169502355;
  const ::ywrapper::UintValue& max() const;
  ::ywrapper::UintValue* release_max();
  ::ywrapper::UintValue* mutable_max();
  void set_allocated_max(::ywrapper::UintValue* max);

  // .ywrapper.UintValue instant = 342133238 [(.yext.schemapath) = "/access-points/access-point/system/cpus/cpu/state/total/instant"];
  bool has_instant() const;
  void clear_instant();
  static const int kInstantFieldNumber = 342133238;
  const ::ywrapper::UintValue& instant() const;
  ::ywrapper::UintValue* release_instant();
  ::ywrapper::UintValue* mutable_instant();
  void set_allocated_instant(::ywrapper::UintValue* instant);

  // .ywrapper.UintValue avg = 521140985 [(.yext.schemapath) = "/access-points/access-point/system/cpus/cpu/state/total/avg"];
  bool has_avg() const;
  void clear_avg();
  static const int kAvgFieldNumber = 521140985;
  const ::ywrapper::UintValue& avg() const;
  ::ywrapper::UintValue* release_avg();
  ::ywrapper::UintValue* mutable_avg();
  void set_allocated_avg(::ywrapper::UintValue* avg);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.State.Total)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ywrapper::UintValue* min_;
  ::ywrapper::UintValue* interval_;
  ::ywrapper::UintValue* max_;
  ::ywrapper::UintValue* instant_;
  ::ywrapper::UintValue* avg_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::InitDefaultsAccessPoints_AccessPoint_System_Cpus_Cpu_State_TotalImpl();
};
// -------------------------------------------------------------------

class AccessPoints_AccessPoint_System_Cpus_Cpu_State_User : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.State.User) */ {
 public:
  AccessPoints_AccessPoint_System_Cpus_Cpu_State_User();
  virtual ~AccessPoints_AccessPoint_System_Cpus_Cpu_State_User();

  AccessPoints_AccessPoint_System_Cpus_Cpu_State_User(const AccessPoints_AccessPoint_System_Cpus_Cpu_State_User& from);

  inline AccessPoints_AccessPoint_System_Cpus_Cpu_State_User& operator=(const AccessPoints_AccessPoint_System_Cpus_Cpu_State_User& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AccessPoints_AccessPoint_System_Cpus_Cpu_State_User(AccessPoints_AccessPoint_System_Cpus_Cpu_State_User&& from) noexcept
    : AccessPoints_AccessPoint_System_Cpus_Cpu_State_User() {
    *this = ::std::move(from);
  }

  inline AccessPoints_AccessPoint_System_Cpus_Cpu_State_User& operator=(AccessPoints_AccessPoint_System_Cpus_Cpu_State_User&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AccessPoints_AccessPoint_System_Cpus_Cpu_State_User& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AccessPoints_AccessPoint_System_Cpus_Cpu_State_User* internal_default_instance() {
    return reinterpret_cast<const AccessPoints_AccessPoint_System_Cpus_Cpu_State_User*>(
               &_AccessPoints_AccessPoint_System_Cpus_Cpu_State_User_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    127;

  void Swap(AccessPoints_AccessPoint_System_Cpus_Cpu_State_User* other);
  friend void swap(AccessPoints_AccessPoint_System_Cpus_Cpu_State_User& a, AccessPoints_AccessPoint_System_Cpus_Cpu_State_User& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AccessPoints_AccessPoint_System_Cpus_Cpu_State_User* New() const PROTOBUF_FINAL { return New(NULL); }

  AccessPoints_AccessPoint_System_Cpus_Cpu_State_User* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AccessPoints_AccessPoint_System_Cpus_Cpu_State_User& from);
  void MergeFrom(const AccessPoints_AccessPoint_System_Cpus_Cpu_State_User& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AccessPoints_AccessPoint_System_Cpus_Cpu_State_User* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .ywrapper.UintValue avg = 117185258 [(.yext.schemapath) = "/access-points/access-point/system/cpus/cpu/state/user/avg"];
  bool has_avg() const;
  void clear_avg();
  static const int kAvgFieldNumber = 117185258;
  const ::ywrapper::UintValue& avg() const;
  ::ywrapper::UintValue* release_avg();
  ::ywrapper::UintValue* mutable_avg();
  void set_allocated_avg(::ywrapper::UintValue* avg);

  // .ywrapper.UintValue min = 270142210 [(.yext.schemapath) = "/access-points/access-point/system/cpus/cpu/state/user/min"];
  bool has_min() const;
  void clear_min();
  static const int kMinFieldNumber = 270142210;
  const ::ywrapper::UintValue& min() const;
  ::ywrapper::UintValue* release_min();
  ::ywrapper::UintValue* mutable_min();
  void set_allocated_min(::ywrapper::UintValue* min);

  // .ywrapper.UintValue interval = 325729005 [(.yext.schemapath) = "/access-points/access-point/system/cpus/cpu/state/user/interval"];
  bool has_interval() const;
  void clear_interval();
  static const int kIntervalFieldNumber = 325729005;
  const ::ywrapper::UintValue& interval() const;
  ::ywrapper::UintValue* release_interval();
  ::ywrapper::UintValue* mutable_interval();
  void set_allocated_interval(::ywrapper::UintValue* interval);

  // .ywrapper.UintValue instant = 372414825 [(.yext.schemapath) = "/access-points/access-point/system/cpus/cpu/state/user/instant"];
  bool has_instant() const;
  void clear_instant();
  static const int kInstantFieldNumber = 372414825;
  const ::ywrapper::UintValue& instant() const;
  ::ywrapper::UintValue* release_instant();
  ::ywrapper::UintValue* mutable_instant();
  void set_allocated_instant(::ywrapper::UintValue* instant);

  // .ywrapper.UintValue max = 404363388 [(.yext.schemapath) = "/access-points/access-point/system/cpus/cpu/state/user/max"];
  bool has_max() const;
  void clear_max();
  static const int kMaxFieldNumber = 404363388;
  const ::ywrapper::UintValue& max() const;
  ::ywrapper::UintValue* release_max();
  ::ywrapper::UintValue* mutable_max();
  void set_allocated_max(::ywrapper::UintValue* max);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.State.User)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ywrapper::UintValue* avg_;
  ::ywrapper::UintValue* min_;
  ::ywrapper::UintValue* interval_;
  ::ywrapper::UintValue* instant_;
  ::ywrapper::UintValue* max_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::InitDefaultsAccessPoints_AccessPoint_System_Cpus_Cpu_State_UserImpl();
};
// -------------------------------------------------------------------

class AccessPoints_AccessPoint_System_Cpus_Cpu_State_Wait : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.State.Wait) */ {
 public:
  AccessPoints_AccessPoint_System_Cpus_Cpu_State_Wait();
  virtual ~AccessPoints_AccessPoint_System_Cpus_Cpu_State_Wait();

  AccessPoints_AccessPoint_System_Cpus_Cpu_State_Wait(const AccessPoints_AccessPoint_System_Cpus_Cpu_State_Wait& from);

  inline AccessPoints_AccessPoint_System_Cpus_Cpu_State_Wait& operator=(const AccessPoints_AccessPoint_System_Cpus_Cpu_State_Wait& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AccessPoints_AccessPoint_System_Cpus_Cpu_State_Wait(AccessPoints_AccessPoint_System_Cpus_Cpu_State_Wait&& from) noexcept
    : AccessPoints_AccessPoint_System_Cpus_Cpu_State_Wait() {
    *this = ::std::move(from);
  }

  inline AccessPoints_AccessPoint_System_Cpus_Cpu_State_Wait& operator=(AccessPoints_AccessPoint_System_Cpus_Cpu_State_Wait&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AccessPoints_AccessPoint_System_Cpus_Cpu_State_Wait& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AccessPoints_AccessPoint_System_Cpus_Cpu_State_Wait* internal_default_instance() {
    return reinterpret_cast<const AccessPoints_AccessPoint_System_Cpus_Cpu_State_Wait*>(
               &_AccessPoints_AccessPoint_System_Cpus_Cpu_State_Wait_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    128;

  void Swap(AccessPoints_AccessPoint_System_Cpus_Cpu_State_Wait* other);
  friend void swap(AccessPoints_AccessPoint_System_Cpus_Cpu_State_Wait& a, AccessPoints_AccessPoint_System_Cpus_Cpu_State_Wait& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AccessPoints_AccessPoint_System_Cpus_Cpu_State_Wait* New() const PROTOBUF_FINAL { return New(NULL); }

  AccessPoints_AccessPoint_System_Cpus_Cpu_State_Wait* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AccessPoints_AccessPoint_System_Cpus_Cpu_State_Wait& from);
  void MergeFrom(const AccessPoints_AccessPoint_System_Cpus_Cpu_State_Wait& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AccessPoints_AccessPoint_System_Cpus_Cpu_State_Wait* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .ywrapper.UintValue avg = 15474052 [(.yext.schemapath) = "/access-points/access-point/system/cpus/cpu/state/wait/avg"];
  bool has_avg() const;
  void clear_avg();
  static const int kAvgFieldNumber = 15474052;
  const ::ywrapper::UintValue& avg() const;
  ::ywrapper::UintValue* release_avg();
  ::ywrapper::UintValue* mutable_avg();
  void set_allocated_avg(::ywrapper::UintValue* avg);

  // .ywrapper.UintValue interval = 101618335 [(.yext.schemapath) = "/access-points/access-point/system/cpus/cpu/state/wait/interval"];
  bool has_interval() const;
  void clear_interval();
  static const int kIntervalFieldNumber = 101618335;
  const ::ywrapper::UintValue& interval() const;
  ::ywrapper::UintValue* release_interval();
  ::ywrapper::UintValue* mutable_interval();
  void set_allocated_interval(::ywrapper::UintValue* interval);

  // .ywrapper.UintValue instant = 179643359 [(.yext.schemapath) = "/access-points/access-point/system/cpus/cpu/state/wait/instant"];
  bool has_instant() const;
  void clear_instant();
  static const int kInstantFieldNumber = 179643359;
  const ::ywrapper::UintValue& instant() const;
  ::ywrapper::UintValue* release_instant();
  ::ywrapper::UintValue* mutable_instant();
  void set_allocated_instant(::ywrapper::UintValue* instant);

  // .ywrapper.UintValue max = 231598750 [(.yext.schemapath) = "/access-points/access-point/system/cpus/cpu/state/wait/max"];
  bool has_max() const;
  void clear_max();
  static const int kMaxFieldNumber = 231598750;
  const ::ywrapper::UintValue& max() const;
  ::ywrapper::UintValue* release_max();
  ::ywrapper::UintValue* mutable_max();
  void set_allocated_max(::ywrapper::UintValue* max);

  // .ywrapper.UintValue min = 365819664 [(.yext.schemapath) = "/access-points/access-point/system/cpus/cpu/state/wait/min"];
  bool has_min() const;
  void clear_min();
  static const int kMinFieldNumber = 365819664;
  const ::ywrapper::UintValue& min() const;
  ::ywrapper::UintValue* release_min();
  ::ywrapper::UintValue* mutable_min();
  void set_allocated_min(::ywrapper::UintValue* min);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.State.Wait)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ywrapper::UintValue* avg_;
  ::ywrapper::UintValue* interval_;
  ::ywrapper::UintValue* instant_;
  ::ywrapper::UintValue* max_;
  ::ywrapper::UintValue* min_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::InitDefaultsAccessPoints_AccessPoint_System_Cpus_Cpu_State_WaitImpl();
};
// -------------------------------------------------------------------

class AccessPoints_AccessPoint_System_Cpus_Cpu_State : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.State) */ {
 public:
  AccessPoints_AccessPoint_System_Cpus_Cpu_State();
  virtual ~AccessPoints_AccessPoint_System_Cpus_Cpu_State();

  AccessPoints_AccessPoint_System_Cpus_Cpu_State(const AccessPoints_AccessPoint_System_Cpus_Cpu_State& from);

  inline AccessPoints_AccessPoint_System_Cpus_Cpu_State& operator=(const AccessPoints_AccessPoint_System_Cpus_Cpu_State& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AccessPoints_AccessPoint_System_Cpus_Cpu_State(AccessPoints_AccessPoint_System_Cpus_Cpu_State&& from) noexcept
    : AccessPoints_AccessPoint_System_Cpus_Cpu_State() {
    *this = ::std::move(from);
  }

  inline AccessPoints_AccessPoint_System_Cpus_Cpu_State& operator=(AccessPoints_AccessPoint_System_Cpus_Cpu_State&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AccessPoints_AccessPoint_System_Cpus_Cpu_State& default_instance();

  enum IndexCase {
    kIndexIndex = 4399175,
    kIndexUint64 = 217042799,
    INDEX_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AccessPoints_AccessPoint_System_Cpus_Cpu_State* internal_default_instance() {
    return reinterpret_cast<const AccessPoints_AccessPoint_System_Cpus_Cpu_State*>(
               &_AccessPoints_AccessPoint_System_Cpus_Cpu_State_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    129;

  void Swap(AccessPoints_AccessPoint_System_Cpus_Cpu_State* other);
  friend void swap(AccessPoints_AccessPoint_System_Cpus_Cpu_State& a, AccessPoints_AccessPoint_System_Cpus_Cpu_State& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AccessPoints_AccessPoint_System_Cpus_Cpu_State* New() const PROTOBUF_FINAL { return New(NULL); }

  AccessPoints_AccessPoint_System_Cpus_Cpu_State* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AccessPoints_AccessPoint_System_Cpus_Cpu_State& from);
  void MergeFrom(const AccessPoints_AccessPoint_System_Cpus_Cpu_State& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AccessPoints_AccessPoint_System_Cpus_Cpu_State* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef AccessPoints_AccessPoint_System_Cpus_Cpu_State_HardwareInterrupt HardwareInterrupt;
  typedef AccessPoints_AccessPoint_System_Cpus_Cpu_State_Idle Idle;
  typedef AccessPoints_AccessPoint_System_Cpus_Cpu_State_Kernel Kernel;
  typedef AccessPoints_AccessPoint_System_Cpus_Cpu_State_Nice Nice;
  typedef AccessPoints_AccessPoint_System_Cpus_Cpu_State_SoftwareInterrupt SoftwareInterrupt;
  typedef AccessPoints_AccessPoint_System_Cpus_Cpu_State_Total Total;
  typedef AccessPoints_AccessPoint_System_Cpus_Cpu_State_User User;
  typedef AccessPoints_AccessPoint_System_Cpus_Cpu_State_Wait Wait;

  typedef AccessPoints_AccessPoint_System_Cpus_Cpu_State_Index Index;
  static const Index INDEX_UNSET =
    AccessPoints_AccessPoint_System_Cpus_Cpu_State_Index_INDEX_UNSET;
  static const Index INDEX_ALL =
    AccessPoints_AccessPoint_System_Cpus_Cpu_State_Index_INDEX_ALL;
  static inline bool Index_IsValid(int value) {
    return AccessPoints_AccessPoint_System_Cpus_Cpu_State_Index_IsValid(value);
  }
  static const Index Index_MIN =
    AccessPoints_AccessPoint_System_Cpus_Cpu_State_Index_Index_MIN;
  static const Index Index_MAX =
    AccessPoints_AccessPoint_System_Cpus_Cpu_State_Index_Index_MAX;
  static const int Index_ARRAYSIZE =
    AccessPoints_AccessPoint_System_Cpus_Cpu_State_Index_Index_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Index_descriptor() {
    return AccessPoints_AccessPoint_System_Cpus_Cpu_State_Index_descriptor();
  }
  static inline const ::std::string& Index_Name(Index value) {
    return AccessPoints_AccessPoint_System_Cpus_Cpu_State_Index_Name(value);
  }
  static inline bool Index_Parse(const ::std::string& name,
      Index* value) {
    return AccessPoints_AccessPoint_System_Cpus_Cpu_State_Index_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.State.User user = 8692499 [(.yext.schemapath) = "/access-points/access-point/system/cpus/cpu/state/user"];
  bool has_user() const;
  void clear_user();
  static const int kUserFieldNumber = 8692499;
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Cpus_Cpu_State_User& user() const;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Cpus_Cpu_State_User* release_user();
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Cpus_Cpu_State_User* mutable_user();
  void set_allocated_user(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Cpus_Cpu_State_User* user);

  // .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.State.Wait wait = 16659161 [(.yext.schemapath) = "/access-points/access-point/system/cpus/cpu/state/wait"];
  bool has_wait() const;
  void clear_wait();
  static const int kWaitFieldNumber = 16659161;
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Cpus_Cpu_State_Wait& wait() const;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Cpus_Cpu_State_Wait* release_wait();
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Cpus_Cpu_State_Wait* mutable_wait();
  void set_allocated_wait(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Cpus_Cpu_State_Wait* wait);

  // .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.State.Idle idle = 37519840 [(.yext.schemapath) = "/access-points/access-point/system/cpus/cpu/state/idle"];
  bool has_idle() const;
  void clear_idle();
  static const int kIdleFieldNumber = 37519840;
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Cpus_Cpu_State_Idle& idle() const;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Cpus_Cpu_State_Idle* release_idle();
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Cpus_Cpu_State_Idle* mutable_idle();
  void set_allocated_idle(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Cpus_Cpu_State_Idle* idle);

  // .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.State.HardwareInterrupt hardware_interrupt = 273227848 [(.yext.schemapath) = "/access-points/access-point/system/cpus/cpu/state/hardware-interrupt"];
  bool has_hardware_interrupt() const;
  void clear_hardware_interrupt();
  static const int kHardwareInterruptFieldNumber = 273227848;
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Cpus_Cpu_State_HardwareInterrupt& hardware_interrupt() const;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Cpus_Cpu_State_HardwareInterrupt* release_hardware_interrupt();
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Cpus_Cpu_State_HardwareInterrupt* mutable_hardware_interrupt();
  void set_allocated_hardware_interrupt(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Cpus_Cpu_State_HardwareInterrupt* hardware_interrupt);

  // .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.State.Kernel kernel = 363265477 [(.yext.schemapath) = "/access-points/access-point/system/cpus/cpu/state/kernel"];
  bool has_kernel() const;
  void clear_kernel();
  static const int kKernelFieldNumber = 363265477;
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Cpus_Cpu_State_Kernel& kernel() const;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Cpus_Cpu_State_Kernel* release_kernel();
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Cpus_Cpu_State_Kernel* mutable_kernel();
  void set_allocated_kernel(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Cpus_Cpu_State_Kernel* kernel);

  // .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.State.Total total = 387104328 [(.yext.schemapath) = "/access-points/access-point/system/cpus/cpu/state/total"];
  bool has_total() const;
  void clear_total();
  static const int kTotalFieldNumber = 387104328;
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Cpus_Cpu_State_Total& total() const;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Cpus_Cpu_State_Total* release_total();
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Cpus_Cpu_State_Total* mutable_total();
  void set_allocated_total(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Cpus_Cpu_State_Total* total);

  // .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.State.SoftwareInterrupt software_interrupt = 398277371 [(.yext.schemapath) = "/access-points/access-point/system/cpus/cpu/state/software-interrupt"];
  bool has_software_interrupt() const;
  void clear_software_interrupt();
  static const int kSoftwareInterruptFieldNumber = 398277371;
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Cpus_Cpu_State_SoftwareInterrupt& software_interrupt() const;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Cpus_Cpu_State_SoftwareInterrupt* release_software_interrupt();
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Cpus_Cpu_State_SoftwareInterrupt* mutable_software_interrupt();
  void set_allocated_software_interrupt(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Cpus_Cpu_State_SoftwareInterrupt* software_interrupt);

  // .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.State.Nice nice = 417763829 [(.yext.schemapath) = "/access-points/access-point/system/cpus/cpu/state/nice"];
  bool has_nice() const;
  void clear_nice();
  static const int kNiceFieldNumber = 417763829;
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Cpus_Cpu_State_Nice& nice() const;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Cpus_Cpu_State_Nice* release_nice();
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Cpus_Cpu_State_Nice* mutable_nice();
  void set_allocated_nice(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Cpus_Cpu_State_Nice* nice);

  // .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.State.Index index_index = 4399175;
  private:
  bool has_index_index() const;
  public:
  void clear_index_index();
  static const int kIndexIndexFieldNumber = 4399175;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Cpus_Cpu_State_Index index_index() const;
  void set_index_index(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Cpus_Cpu_State_Index value);

  // uint64 index_uint64 = 217042799;
  private:
  bool has_index_uint64() const;
  public:
  void clear_index_uint64();
  static const int kIndexUint64FieldNumber = 217042799;
  ::google::protobuf::uint64 index_uint64() const;
  void set_index_uint64(::google::protobuf::uint64 value);

  IndexCase index_case() const;
  // @@protoc_insertion_point(class_scope:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.State)
 private:
  void set_has_index_index();
  void set_has_index_uint64();

  inline bool has_index() const;
  void clear_index();
  inline void clear_has_index();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Cpus_Cpu_State_User* user_;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Cpus_Cpu_State_Wait* wait_;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Cpus_Cpu_State_Idle* idle_;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Cpus_Cpu_State_HardwareInterrupt* hardware_interrupt_;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Cpus_Cpu_State_Kernel* kernel_;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Cpus_Cpu_State_Total* total_;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Cpus_Cpu_State_SoftwareInterrupt* software_interrupt_;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Cpus_Cpu_State_Nice* nice_;
  union IndexUnion {
    IndexUnion() {}
    int index_index_;
    ::google::protobuf::uint64 index_uint64_;
  } index_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::InitDefaultsAccessPoints_AccessPoint_System_Cpus_Cpu_StateImpl();
};
// -------------------------------------------------------------------

class AccessPoints_AccessPoint_System_Cpus_Cpu : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu) */ {
 public:
  AccessPoints_AccessPoint_System_Cpus_Cpu();
  virtual ~AccessPoints_AccessPoint_System_Cpus_Cpu();

  AccessPoints_AccessPoint_System_Cpus_Cpu(const AccessPoints_AccessPoint_System_Cpus_Cpu& from);

  inline AccessPoints_AccessPoint_System_Cpus_Cpu& operator=(const AccessPoints_AccessPoint_System_Cpus_Cpu& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AccessPoints_AccessPoint_System_Cpus_Cpu(AccessPoints_AccessPoint_System_Cpus_Cpu&& from) noexcept
    : AccessPoints_AccessPoint_System_Cpus_Cpu() {
    *this = ::std::move(from);
  }

  inline AccessPoints_AccessPoint_System_Cpus_Cpu& operator=(AccessPoints_AccessPoint_System_Cpus_Cpu&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AccessPoints_AccessPoint_System_Cpus_Cpu& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AccessPoints_AccessPoint_System_Cpus_Cpu* internal_default_instance() {
    return reinterpret_cast<const AccessPoints_AccessPoint_System_Cpus_Cpu*>(
               &_AccessPoints_AccessPoint_System_Cpus_Cpu_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    130;

  void Swap(AccessPoints_AccessPoint_System_Cpus_Cpu* other);
  friend void swap(AccessPoints_AccessPoint_System_Cpus_Cpu& a, AccessPoints_AccessPoint_System_Cpus_Cpu& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AccessPoints_AccessPoint_System_Cpus_Cpu* New() const PROTOBUF_FINAL { return New(NULL); }

  AccessPoints_AccessPoint_System_Cpus_Cpu* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AccessPoints_AccessPoint_System_Cpus_Cpu& from);
  void MergeFrom(const AccessPoints_AccessPoint_System_Cpus_Cpu& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AccessPoints_AccessPoint_System_Cpus_Cpu* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef AccessPoints_AccessPoint_System_Cpus_Cpu_State State;

  // accessors -------------------------------------------------------

  // .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.State state = 23253231 [(.yext.schemapath) = "/access-points/access-point/system/cpus/cpu/state"];
  bool has_state() const;
  void clear_state();
  static const int kStateFieldNumber = 23253231;
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Cpus_Cpu_State& state() const;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Cpus_Cpu_State* release_state();
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Cpus_Cpu_State* mutable_state();
  void set_allocated_state(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Cpus_Cpu_State* state);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Cpus_Cpu_State* state_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::InitDefaultsAccessPoints_AccessPoint_System_Cpus_CpuImpl();
};
// -------------------------------------------------------------------

class AccessPoints_AccessPoint_System_Cpus_CpuKey : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.CpuKey) */ {
 public:
  AccessPoints_AccessPoint_System_Cpus_CpuKey();
  virtual ~AccessPoints_AccessPoint_System_Cpus_CpuKey();

  AccessPoints_AccessPoint_System_Cpus_CpuKey(const AccessPoints_AccessPoint_System_Cpus_CpuKey& from);

  inline AccessPoints_AccessPoint_System_Cpus_CpuKey& operator=(const AccessPoints_AccessPoint_System_Cpus_CpuKey& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AccessPoints_AccessPoint_System_Cpus_CpuKey(AccessPoints_AccessPoint_System_Cpus_CpuKey&& from) noexcept
    : AccessPoints_AccessPoint_System_Cpus_CpuKey() {
    *this = ::std::move(from);
  }

  inline AccessPoints_AccessPoint_System_Cpus_CpuKey& operator=(AccessPoints_AccessPoint_System_Cpus_CpuKey&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AccessPoints_AccessPoint_System_Cpus_CpuKey& default_instance();

  enum IndexCase {
    kIndexIndex = 4399175,
    kIndexUint64 = 217042799,
    INDEX_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AccessPoints_AccessPoint_System_Cpus_CpuKey* internal_default_instance() {
    return reinterpret_cast<const AccessPoints_AccessPoint_System_Cpus_CpuKey*>(
               &_AccessPoints_AccessPoint_System_Cpus_CpuKey_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    131;

  void Swap(AccessPoints_AccessPoint_System_Cpus_CpuKey* other);
  friend void swap(AccessPoints_AccessPoint_System_Cpus_CpuKey& a, AccessPoints_AccessPoint_System_Cpus_CpuKey& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AccessPoints_AccessPoint_System_Cpus_CpuKey* New() const PROTOBUF_FINAL { return New(NULL); }

  AccessPoints_AccessPoint_System_Cpus_CpuKey* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AccessPoints_AccessPoint_System_Cpus_CpuKey& from);
  void MergeFrom(const AccessPoints_AccessPoint_System_Cpus_CpuKey& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AccessPoints_AccessPoint_System_Cpus_CpuKey* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef AccessPoints_AccessPoint_System_Cpus_CpuKey_Index Index;
  static const Index INDEX_UNSET =
    AccessPoints_AccessPoint_System_Cpus_CpuKey_Index_INDEX_UNSET;
  static const Index INDEX_ALL =
    AccessPoints_AccessPoint_System_Cpus_CpuKey_Index_INDEX_ALL;
  static inline bool Index_IsValid(int value) {
    return AccessPoints_AccessPoint_System_Cpus_CpuKey_Index_IsValid(value);
  }
  static const Index Index_MIN =
    AccessPoints_AccessPoint_System_Cpus_CpuKey_Index_Index_MIN;
  static const Index Index_MAX =
    AccessPoints_AccessPoint_System_Cpus_CpuKey_Index_Index_MAX;
  static const int Index_ARRAYSIZE =
    AccessPoints_AccessPoint_System_Cpus_CpuKey_Index_Index_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Index_descriptor() {
    return AccessPoints_AccessPoint_System_Cpus_CpuKey_Index_descriptor();
  }
  static inline const ::std::string& Index_Name(Index value) {
    return AccessPoints_AccessPoint_System_Cpus_CpuKey_Index_Name(value);
  }
  static inline bool Index_Parse(const ::std::string& name,
      Index* value) {
    return AccessPoints_AccessPoint_System_Cpus_CpuKey_Index_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu cpu = 2;
  bool has_cpu() const;
  void clear_cpu();
  static const int kCpuFieldNumber = 2;
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Cpus_Cpu& cpu() const;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Cpus_Cpu* release_cpu();
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Cpus_Cpu* mutable_cpu();
  void set_allocated_cpu(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Cpus_Cpu* cpu);

  // .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.CpuKey.Index index_index = 4399175;
  private:
  bool has_index_index() const;
  public:
  void clear_index_index();
  static const int kIndexIndexFieldNumber = 4399175;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Cpus_CpuKey_Index index_index() const;
  void set_index_index(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Cpus_CpuKey_Index value);

  // uint64 index_uint64 = 217042799;
  private:
  bool has_index_uint64() const;
  public:
  void clear_index_uint64();
  static const int kIndexUint64FieldNumber = 217042799;
  ::google::protobuf::uint64 index_uint64() const;
  void set_index_uint64(::google::protobuf::uint64 value);

  IndexCase index_case() const;
  // @@protoc_insertion_point(class_scope:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.CpuKey)
 private:
  void set_has_index_index();
  void set_has_index_uint64();

  inline bool has_index() const;
  void clear_index();
  inline void clear_has_index();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Cpus_Cpu* cpu_;
  union IndexUnion {
    IndexUnion() {}
    int index_index_;
    ::google::protobuf::uint64 index_uint64_;
  } index_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::InitDefaultsAccessPoints_AccessPoint_System_Cpus_CpuKeyImpl();
};
// -------------------------------------------------------------------

class AccessPoints_AccessPoint_System_Cpus : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus) */ {
 public:
  AccessPoints_AccessPoint_System_Cpus();
  virtual ~AccessPoints_AccessPoint_System_Cpus();

  AccessPoints_AccessPoint_System_Cpus(const AccessPoints_AccessPoint_System_Cpus& from);

  inline AccessPoints_AccessPoint_System_Cpus& operator=(const AccessPoints_AccessPoint_System_Cpus& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AccessPoints_AccessPoint_System_Cpus(AccessPoints_AccessPoint_System_Cpus&& from) noexcept
    : AccessPoints_AccessPoint_System_Cpus() {
    *this = ::std::move(from);
  }

  inline AccessPoints_AccessPoint_System_Cpus& operator=(AccessPoints_AccessPoint_System_Cpus&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AccessPoints_AccessPoint_System_Cpus& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AccessPoints_AccessPoint_System_Cpus* internal_default_instance() {
    return reinterpret_cast<const AccessPoints_AccessPoint_System_Cpus*>(
               &_AccessPoints_AccessPoint_System_Cpus_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    132;

  void Swap(AccessPoints_AccessPoint_System_Cpus* other);
  friend void swap(AccessPoints_AccessPoint_System_Cpus& a, AccessPoints_AccessPoint_System_Cpus& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AccessPoints_AccessPoint_System_Cpus* New() const PROTOBUF_FINAL { return New(NULL); }

  AccessPoints_AccessPoint_System_Cpus* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AccessPoints_AccessPoint_System_Cpus& from);
  void MergeFrom(const AccessPoints_AccessPoint_System_Cpus& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AccessPoints_AccessPoint_System_Cpus* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef AccessPoints_AccessPoint_System_Cpus_Cpu Cpu;
  typedef AccessPoints_AccessPoint_System_Cpus_CpuKey CpuKey;

  // accessors -------------------------------------------------------

  // repeated .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.CpuKey cpu = 233570493 [(.yext.schemapath) = "/access-points/access-point/system/cpus/cpu"];
  int cpu_size() const;
  void clear_cpu();
  static const int kCpuFieldNumber = 233570493;
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Cpus_CpuKey& cpu(int index) const;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Cpus_CpuKey* mutable_cpu(int index);
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Cpus_CpuKey* add_cpu();
  ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Cpus_CpuKey >*
      mutable_cpu();
  const ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Cpus_CpuKey >&
      cpu() const;

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Cpus_CpuKey > cpu_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::InitDefaultsAccessPoints_AccessPoint_System_CpusImpl();
};
// -------------------------------------------------------------------

class AccessPoints_AccessPoint_System_Dns_Config : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Dns.Config) */ {
 public:
  AccessPoints_AccessPoint_System_Dns_Config();
  virtual ~AccessPoints_AccessPoint_System_Dns_Config();

  AccessPoints_AccessPoint_System_Dns_Config(const AccessPoints_AccessPoint_System_Dns_Config& from);

  inline AccessPoints_AccessPoint_System_Dns_Config& operator=(const AccessPoints_AccessPoint_System_Dns_Config& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AccessPoints_AccessPoint_System_Dns_Config(AccessPoints_AccessPoint_System_Dns_Config&& from) noexcept
    : AccessPoints_AccessPoint_System_Dns_Config() {
    *this = ::std::move(from);
  }

  inline AccessPoints_AccessPoint_System_Dns_Config& operator=(AccessPoints_AccessPoint_System_Dns_Config&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AccessPoints_AccessPoint_System_Dns_Config& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AccessPoints_AccessPoint_System_Dns_Config* internal_default_instance() {
    return reinterpret_cast<const AccessPoints_AccessPoint_System_Dns_Config*>(
               &_AccessPoints_AccessPoint_System_Dns_Config_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    133;

  void Swap(AccessPoints_AccessPoint_System_Dns_Config* other);
  friend void swap(AccessPoints_AccessPoint_System_Dns_Config& a, AccessPoints_AccessPoint_System_Dns_Config& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AccessPoints_AccessPoint_System_Dns_Config* New() const PROTOBUF_FINAL { return New(NULL); }

  AccessPoints_AccessPoint_System_Dns_Config* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AccessPoints_AccessPoint_System_Dns_Config& from);
  void MergeFrom(const AccessPoints_AccessPoint_System_Dns_Config& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AccessPoints_AccessPoint_System_Dns_Config* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .ywrapper.StringValue search = 458288600 [(.yext.schemapath) = "/access-points/access-point/system/dns/config/search"];
  int search_size() const;
  void clear_search();
  static const int kSearchFieldNumber = 458288600;
  const ::ywrapper::StringValue& search(int index) const;
  ::ywrapper::StringValue* mutable_search(int index);
  ::ywrapper::StringValue* add_search();
  ::google::protobuf::RepeatedPtrField< ::ywrapper::StringValue >*
      mutable_search();
  const ::google::protobuf::RepeatedPtrField< ::ywrapper::StringValue >&
      search() const;

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Dns.Config)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::ywrapper::StringValue > search_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::InitDefaultsAccessPoints_AccessPoint_System_Dns_ConfigImpl();
};
// -------------------------------------------------------------------

class AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntry_Config : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Dns.HostEntries.HostEntry.Config) */ {
 public:
  AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntry_Config();
  virtual ~AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntry_Config();

  AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntry_Config(const AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntry_Config& from);

  inline AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntry_Config& operator=(const AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntry_Config& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntry_Config(AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntry_Config&& from) noexcept
    : AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntry_Config() {
    *this = ::std::move(from);
  }

  inline AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntry_Config& operator=(AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntry_Config&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntry_Config& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntry_Config* internal_default_instance() {
    return reinterpret_cast<const AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntry_Config*>(
               &_AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntry_Config_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    134;

  void Swap(AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntry_Config* other);
  friend void swap(AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntry_Config& a, AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntry_Config& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntry_Config* New() const PROTOBUF_FINAL { return New(NULL); }

  AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntry_Config* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntry_Config& from);
  void MergeFrom(const AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntry_Config& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntry_Config* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .ywrapper.StringValue ipv6_address = 224746148 [(.yext.schemapath) = "/access-points/access-point/system/dns/host-entries/host-entry/config/ipv6-address"];
  int ipv6_address_size() const;
  void clear_ipv6_address();
  static const int kIpv6AddressFieldNumber = 224746148;
  const ::ywrapper::StringValue& ipv6_address(int index) const;
  ::ywrapper::StringValue* mutable_ipv6_address(int index);
  ::ywrapper::StringValue* add_ipv6_address();
  ::google::protobuf::RepeatedPtrField< ::ywrapper::StringValue >*
      mutable_ipv6_address();
  const ::google::protobuf::RepeatedPtrField< ::ywrapper::StringValue >&
      ipv6_address() const;

  // repeated .ywrapper.StringValue ipv4_address = 242013126 [(.yext.schemapath) = "/access-points/access-point/system/dns/host-entries/host-entry/config/ipv4-address"];
  int ipv4_address_size() const;
  void clear_ipv4_address();
  static const int kIpv4AddressFieldNumber = 242013126;
  const ::ywrapper::StringValue& ipv4_address(int index) const;
  ::ywrapper::StringValue* mutable_ipv4_address(int index);
  ::ywrapper::StringValue* add_ipv4_address();
  ::google::protobuf::RepeatedPtrField< ::ywrapper::StringValue >*
      mutable_ipv4_address();
  const ::google::protobuf::RepeatedPtrField< ::ywrapper::StringValue >&
      ipv4_address() const;

  // repeated .ywrapper.StringValue alias = 336343364 [(.yext.schemapath) = "/access-points/access-point/system/dns/host-entries/host-entry/config/alias"];
  int alias_size() const;
  void clear_alias();
  static const int kAliasFieldNumber = 336343364;
  const ::ywrapper::StringValue& alias(int index) const;
  ::ywrapper::StringValue* mutable_alias(int index);
  ::ywrapper::StringValue* add_alias();
  ::google::protobuf::RepeatedPtrField< ::ywrapper::StringValue >*
      mutable_alias();
  const ::google::protobuf::RepeatedPtrField< ::ywrapper::StringValue >&
      alias() const;

  // .ywrapper.StringValue hostname = 126930371 [(.yext.schemapath) = "/access-points/access-point/system/dns/host-entries/host-entry/config/hostname"];
  bool has_hostname() const;
  void clear_hostname();
  static const int kHostnameFieldNumber = 126930371;
  const ::ywrapper::StringValue& hostname() const;
  ::ywrapper::StringValue* release_hostname();
  ::ywrapper::StringValue* mutable_hostname();
  void set_allocated_hostname(::ywrapper::StringValue* hostname);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Dns.HostEntries.HostEntry.Config)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::ywrapper::StringValue > ipv6_address_;
  ::google::protobuf::RepeatedPtrField< ::ywrapper::StringValue > ipv4_address_;
  ::google::protobuf::RepeatedPtrField< ::ywrapper::StringValue > alias_;
  ::ywrapper::StringValue* hostname_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::InitDefaultsAccessPoints_AccessPoint_System_Dns_HostEntries_HostEntry_ConfigImpl();
};
// -------------------------------------------------------------------

class AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntry_State : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Dns.HostEntries.HostEntry.State) */ {
 public:
  AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntry_State();
  virtual ~AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntry_State();

  AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntry_State(const AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntry_State& from);

  inline AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntry_State& operator=(const AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntry_State& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntry_State(AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntry_State&& from) noexcept
    : AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntry_State() {
    *this = ::std::move(from);
  }

  inline AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntry_State& operator=(AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntry_State&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntry_State& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntry_State* internal_default_instance() {
    return reinterpret_cast<const AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntry_State*>(
               &_AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntry_State_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    135;

  void Swap(AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntry_State* other);
  friend void swap(AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntry_State& a, AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntry_State& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntry_State* New() const PROTOBUF_FINAL { return New(NULL); }

  AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntry_State* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntry_State& from);
  void MergeFrom(const AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntry_State& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntry_State* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .ywrapper.StringValue ipv4_address = 40211623 [(.yext.schemapath) = "/access-points/access-point/system/dns/host-entries/host-entry/state/ipv4-address"];
  int ipv4_address_size() const;
  void clear_ipv4_address();
  static const int kIpv4AddressFieldNumber = 40211623;
  const ::ywrapper::StringValue& ipv4_address(int index) const;
  ::ywrapper::StringValue* mutable_ipv4_address(int index);
  ::ywrapper::StringValue* add_ipv4_address();
  ::google::protobuf::RepeatedPtrField< ::ywrapper::StringValue >*
      mutable_ipv4_address();
  const ::google::protobuf::RepeatedPtrField< ::ywrapper::StringValue >&
      ipv4_address() const;

  // repeated .ywrapper.StringValue alias = 163727759 [(.yext.schemapath) = "/access-points/access-point/system/dns/host-entries/host-entry/state/alias"];
  int alias_size() const;
  void clear_alias();
  static const int kAliasFieldNumber = 163727759;
  const ::ywrapper::StringValue& alias(int index) const;
  ::ywrapper::StringValue* mutable_alias(int index);
  ::ywrapper::StringValue* add_alias();
  ::google::protobuf::RepeatedPtrField< ::ywrapper::StringValue >*
      mutable_alias();
  const ::google::protobuf::RepeatedPtrField< ::ywrapper::StringValue >&
      alias() const;

  // repeated .ywrapper.StringValue ipv6_address = 398588917 [(.yext.schemapath) = "/access-points/access-point/system/dns/host-entries/host-entry/state/ipv6-address"];
  int ipv6_address_size() const;
  void clear_ipv6_address();
  static const int kIpv6AddressFieldNumber = 398588917;
  const ::ywrapper::StringValue& ipv6_address(int index) const;
  ::ywrapper::StringValue* mutable_ipv6_address(int index);
  ::ywrapper::StringValue* add_ipv6_address();
  ::google::protobuf::RepeatedPtrField< ::ywrapper::StringValue >*
      mutable_ipv6_address();
  const ::google::protobuf::RepeatedPtrField< ::ywrapper::StringValue >&
      ipv6_address() const;

  // .ywrapper.StringValue hostname = 13351578 [(.yext.schemapath) = "/access-points/access-point/system/dns/host-entries/host-entry/state/hostname"];
  bool has_hostname() const;
  void clear_hostname();
  static const int kHostnameFieldNumber = 13351578;
  const ::ywrapper::StringValue& hostname() const;
  ::ywrapper::StringValue* release_hostname();
  ::ywrapper::StringValue* mutable_hostname();
  void set_allocated_hostname(::ywrapper::StringValue* hostname);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Dns.HostEntries.HostEntry.State)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::ywrapper::StringValue > ipv4_address_;
  ::google::protobuf::RepeatedPtrField< ::ywrapper::StringValue > alias_;
  ::google::protobuf::RepeatedPtrField< ::ywrapper::StringValue > ipv6_address_;
  ::ywrapper::StringValue* hostname_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::InitDefaultsAccessPoints_AccessPoint_System_Dns_HostEntries_HostEntry_StateImpl();
};
// -------------------------------------------------------------------

class AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntry : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Dns.HostEntries.HostEntry) */ {
 public:
  AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntry();
  virtual ~AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntry();

  AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntry(const AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntry& from);

  inline AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntry& operator=(const AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntry& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntry(AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntry&& from) noexcept
    : AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntry() {
    *this = ::std::move(from);
  }

  inline AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntry& operator=(AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntry&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntry& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntry* internal_default_instance() {
    return reinterpret_cast<const AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntry*>(
               &_AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntry_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    136;

  void Swap(AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntry* other);
  friend void swap(AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntry& a, AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntry& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntry* New() const PROTOBUF_FINAL { return New(NULL); }

  AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntry* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntry& from);
  void MergeFrom(const AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntry& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntry* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntry_Config Config;
  typedef AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntry_State State;

  // accessors -------------------------------------------------------

  // .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Dns.HostEntries.HostEntry.Config config = 42898997 [(.yext.schemapath) = "/access-points/access-point/system/dns/host-entries/host-entry/config"];
  bool has_config() const;
  void clear_config();
  static const int kConfigFieldNumber = 42898997;
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntry_Config& config() const;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntry_Config* release_config();
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntry_Config* mutable_config();
  void set_allocated_config(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntry_Config* config);

  // .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Dns.HostEntries.HostEntry.State state = 131102762 [(.yext.schemapath) = "/access-points/access-point/system/dns/host-entries/host-entry/state"];
  bool has_state() const;
  void clear_state();
  static const int kStateFieldNumber = 131102762;
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntry_State& state() const;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntry_State* release_state();
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntry_State* mutable_state();
  void set_allocated_state(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntry_State* state);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Dns.HostEntries.HostEntry)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntry_Config* config_;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntry_State* state_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::InitDefaultsAccessPoints_AccessPoint_System_Dns_HostEntries_HostEntryImpl();
};
// -------------------------------------------------------------------

class AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntryKey : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Dns.HostEntries.HostEntryKey) */ {
 public:
  AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntryKey();
  virtual ~AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntryKey();

  AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntryKey(const AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntryKey& from);

  inline AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntryKey& operator=(const AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntryKey& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntryKey(AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntryKey&& from) noexcept
    : AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntryKey() {
    *this = ::std::move(from);
  }

  inline AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntryKey& operator=(AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntryKey&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntryKey& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntryKey* internal_default_instance() {
    return reinterpret_cast<const AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntryKey*>(
               &_AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntryKey_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    137;

  void Swap(AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntryKey* other);
  friend void swap(AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntryKey& a, AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntryKey& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntryKey* New() const PROTOBUF_FINAL { return New(NULL); }

  AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntryKey* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntryKey& from);
  void MergeFrom(const AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntryKey& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntryKey* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string hostname = 1 [(.yext.schemapath) = "/access-points/access-point/system/dns/host-entries/host-entry/hostname"];
  void clear_hostname();
  static const int kHostnameFieldNumber = 1;
  const ::std::string& hostname() const;
  void set_hostname(const ::std::string& value);
  #if LANG_CXX11
  void set_hostname(::std::string&& value);
  #endif
  void set_hostname(const char* value);
  void set_hostname(const char* value, size_t size);
  ::std::string* mutable_hostname();
  ::std::string* release_hostname();
  void set_allocated_hostname(::std::string* hostname);

  // .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Dns.HostEntries.HostEntry host_entry = 2;
  bool has_host_entry() const;
  void clear_host_entry();
  static const int kHostEntryFieldNumber = 2;
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntry& host_entry() const;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntry* release_host_entry();
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntry* mutable_host_entry();
  void set_allocated_host_entry(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntry* host_entry);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Dns.HostEntries.HostEntryKey)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr hostname_;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntry* host_entry_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::InitDefaultsAccessPoints_AccessPoint_System_Dns_HostEntries_HostEntryKeyImpl();
};
// -------------------------------------------------------------------

class AccessPoints_AccessPoint_System_Dns_HostEntries : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Dns.HostEntries) */ {
 public:
  AccessPoints_AccessPoint_System_Dns_HostEntries();
  virtual ~AccessPoints_AccessPoint_System_Dns_HostEntries();

  AccessPoints_AccessPoint_System_Dns_HostEntries(const AccessPoints_AccessPoint_System_Dns_HostEntries& from);

  inline AccessPoints_AccessPoint_System_Dns_HostEntries& operator=(const AccessPoints_AccessPoint_System_Dns_HostEntries& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AccessPoints_AccessPoint_System_Dns_HostEntries(AccessPoints_AccessPoint_System_Dns_HostEntries&& from) noexcept
    : AccessPoints_AccessPoint_System_Dns_HostEntries() {
    *this = ::std::move(from);
  }

  inline AccessPoints_AccessPoint_System_Dns_HostEntries& operator=(AccessPoints_AccessPoint_System_Dns_HostEntries&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AccessPoints_AccessPoint_System_Dns_HostEntries& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AccessPoints_AccessPoint_System_Dns_HostEntries* internal_default_instance() {
    return reinterpret_cast<const AccessPoints_AccessPoint_System_Dns_HostEntries*>(
               &_AccessPoints_AccessPoint_System_Dns_HostEntries_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    138;

  void Swap(AccessPoints_AccessPoint_System_Dns_HostEntries* other);
  friend void swap(AccessPoints_AccessPoint_System_Dns_HostEntries& a, AccessPoints_AccessPoint_System_Dns_HostEntries& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AccessPoints_AccessPoint_System_Dns_HostEntries* New() const PROTOBUF_FINAL { return New(NULL); }

  AccessPoints_AccessPoint_System_Dns_HostEntries* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AccessPoints_AccessPoint_System_Dns_HostEntries& from);
  void MergeFrom(const AccessPoints_AccessPoint_System_Dns_HostEntries& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AccessPoints_AccessPoint_System_Dns_HostEntries* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntry HostEntry;
  typedef AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntryKey HostEntryKey;

  // accessors -------------------------------------------------------

  // repeated .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Dns.HostEntries.HostEntryKey host_entry = 236493120 [(.yext.schemapath) = "/access-points/access-point/system/dns/host-entries/host-entry"];
  int host_entry_size() const;
  void clear_host_entry();
  static const int kHostEntryFieldNumber = 236493120;
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntryKey& host_entry(int index) const;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntryKey* mutable_host_entry(int index);
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntryKey* add_host_entry();
  ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntryKey >*
      mutable_host_entry();
  const ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntryKey >&
      host_entry() const;

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Dns.HostEntries)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntryKey > host_entry_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::InitDefaultsAccessPoints_AccessPoint_System_Dns_HostEntriesImpl();
};
// -------------------------------------------------------------------

class AccessPoints_AccessPoint_System_Dns_Servers_Server_Config : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Dns.Servers.Server.Config) */ {
 public:
  AccessPoints_AccessPoint_System_Dns_Servers_Server_Config();
  virtual ~AccessPoints_AccessPoint_System_Dns_Servers_Server_Config();

  AccessPoints_AccessPoint_System_Dns_Servers_Server_Config(const AccessPoints_AccessPoint_System_Dns_Servers_Server_Config& from);

  inline AccessPoints_AccessPoint_System_Dns_Servers_Server_Config& operator=(const AccessPoints_AccessPoint_System_Dns_Servers_Server_Config& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AccessPoints_AccessPoint_System_Dns_Servers_Server_Config(AccessPoints_AccessPoint_System_Dns_Servers_Server_Config&& from) noexcept
    : AccessPoints_AccessPoint_System_Dns_Servers_Server_Config() {
    *this = ::std::move(from);
  }

  inline AccessPoints_AccessPoint_System_Dns_Servers_Server_Config& operator=(AccessPoints_AccessPoint_System_Dns_Servers_Server_Config&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AccessPoints_AccessPoint_System_Dns_Servers_Server_Config& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AccessPoints_AccessPoint_System_Dns_Servers_Server_Config* internal_default_instance() {
    return reinterpret_cast<const AccessPoints_AccessPoint_System_Dns_Servers_Server_Config*>(
               &_AccessPoints_AccessPoint_System_Dns_Servers_Server_Config_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    139;

  void Swap(AccessPoints_AccessPoint_System_Dns_Servers_Server_Config* other);
  friend void swap(AccessPoints_AccessPoint_System_Dns_Servers_Server_Config& a, AccessPoints_AccessPoint_System_Dns_Servers_Server_Config& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AccessPoints_AccessPoint_System_Dns_Servers_Server_Config* New() const PROTOBUF_FINAL { return New(NULL); }

  AccessPoints_AccessPoint_System_Dns_Servers_Server_Config* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AccessPoints_AccessPoint_System_Dns_Servers_Server_Config& from);
  void MergeFrom(const AccessPoints_AccessPoint_System_Dns_Servers_Server_Config& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AccessPoints_AccessPoint_System_Dns_Servers_Server_Config* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .ywrapper.UintValue port = 279662040 [(.yext.schemapath) = "/access-points/access-point/system/dns/servers/server/config/port"];
  bool has_port() const;
  void clear_port();
  static const int kPortFieldNumber = 279662040;
  const ::ywrapper::UintValue& port() const;
  ::ywrapper::UintValue* release_port();
  ::ywrapper::UintValue* mutable_port();
  void set_allocated_port(::ywrapper::UintValue* port);

  // .ywrapper.StringValue address = 499568143 [(.yext.schemapath) = "/access-points/access-point/system/dns/servers/server/config/address"];
  bool has_address() const;
  void clear_address();
  static const int kAddressFieldNumber = 499568143;
  const ::ywrapper::StringValue& address() const;
  ::ywrapper::StringValue* release_address();
  ::ywrapper::StringValue* mutable_address();
  void set_allocated_address(::ywrapper::StringValue* address);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Dns.Servers.Server.Config)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ywrapper::UintValue* port_;
  ::ywrapper::StringValue* address_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::InitDefaultsAccessPoints_AccessPoint_System_Dns_Servers_Server_ConfigImpl();
};
// -------------------------------------------------------------------

class AccessPoints_AccessPoint_System_Dns_Servers_Server_State : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Dns.Servers.Server.State) */ {
 public:
  AccessPoints_AccessPoint_System_Dns_Servers_Server_State();
  virtual ~AccessPoints_AccessPoint_System_Dns_Servers_Server_State();

  AccessPoints_AccessPoint_System_Dns_Servers_Server_State(const AccessPoints_AccessPoint_System_Dns_Servers_Server_State& from);

  inline AccessPoints_AccessPoint_System_Dns_Servers_Server_State& operator=(const AccessPoints_AccessPoint_System_Dns_Servers_Server_State& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AccessPoints_AccessPoint_System_Dns_Servers_Server_State(AccessPoints_AccessPoint_System_Dns_Servers_Server_State&& from) noexcept
    : AccessPoints_AccessPoint_System_Dns_Servers_Server_State() {
    *this = ::std::move(from);
  }

  inline AccessPoints_AccessPoint_System_Dns_Servers_Server_State& operator=(AccessPoints_AccessPoint_System_Dns_Servers_Server_State&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AccessPoints_AccessPoint_System_Dns_Servers_Server_State& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AccessPoints_AccessPoint_System_Dns_Servers_Server_State* internal_default_instance() {
    return reinterpret_cast<const AccessPoints_AccessPoint_System_Dns_Servers_Server_State*>(
               &_AccessPoints_AccessPoint_System_Dns_Servers_Server_State_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    140;

  void Swap(AccessPoints_AccessPoint_System_Dns_Servers_Server_State* other);
  friend void swap(AccessPoints_AccessPoint_System_Dns_Servers_Server_State& a, AccessPoints_AccessPoint_System_Dns_Servers_Server_State& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AccessPoints_AccessPoint_System_Dns_Servers_Server_State* New() const PROTOBUF_FINAL { return New(NULL); }

  AccessPoints_AccessPoint_System_Dns_Servers_Server_State* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AccessPoints_AccessPoint_System_Dns_Servers_Server_State& from);
  void MergeFrom(const AccessPoints_AccessPoint_System_Dns_Servers_Server_State& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AccessPoints_AccessPoint_System_Dns_Servers_Server_State* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .ywrapper.StringValue address = 161316790 [(.yext.schemapath) = "/access-points/access-point/system/dns/servers/server/state/address"];
  bool has_address() const;
  void clear_address();
  static const int kAddressFieldNumber = 161316790;
  const ::ywrapper::StringValue& address() const;
  ::ywrapper::StringValue* release_address();
  ::ywrapper::StringValue* mutable_address();
  void set_allocated_address(::ywrapper::StringValue* address);

  // .ywrapper.UintValue port = 387479239 [(.yext.schemapath) = "/access-points/access-point/system/dns/servers/server/state/port"];
  bool has_port() const;
  void clear_port();
  static const int kPortFieldNumber = 387479239;
  const ::ywrapper::UintValue& port() const;
  ::ywrapper::UintValue* release_port();
  ::ywrapper::UintValue* mutable_port();
  void set_allocated_port(::ywrapper::UintValue* port);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Dns.Servers.Server.State)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ywrapper::StringValue* address_;
  ::ywrapper::UintValue* port_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::InitDefaultsAccessPoints_AccessPoint_System_Dns_Servers_Server_StateImpl();
};
// -------------------------------------------------------------------

class AccessPoints_AccessPoint_System_Dns_Servers_Server : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Dns.Servers.Server) */ {
 public:
  AccessPoints_AccessPoint_System_Dns_Servers_Server();
  virtual ~AccessPoints_AccessPoint_System_Dns_Servers_Server();

  AccessPoints_AccessPoint_System_Dns_Servers_Server(const AccessPoints_AccessPoint_System_Dns_Servers_Server& from);

  inline AccessPoints_AccessPoint_System_Dns_Servers_Server& operator=(const AccessPoints_AccessPoint_System_Dns_Servers_Server& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AccessPoints_AccessPoint_System_Dns_Servers_Server(AccessPoints_AccessPoint_System_Dns_Servers_Server&& from) noexcept
    : AccessPoints_AccessPoint_System_Dns_Servers_Server() {
    *this = ::std::move(from);
  }

  inline AccessPoints_AccessPoint_System_Dns_Servers_Server& operator=(AccessPoints_AccessPoint_System_Dns_Servers_Server&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AccessPoints_AccessPoint_System_Dns_Servers_Server& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AccessPoints_AccessPoint_System_Dns_Servers_Server* internal_default_instance() {
    return reinterpret_cast<const AccessPoints_AccessPoint_System_Dns_Servers_Server*>(
               &_AccessPoints_AccessPoint_System_Dns_Servers_Server_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    141;

  void Swap(AccessPoints_AccessPoint_System_Dns_Servers_Server* other);
  friend void swap(AccessPoints_AccessPoint_System_Dns_Servers_Server& a, AccessPoints_AccessPoint_System_Dns_Servers_Server& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AccessPoints_AccessPoint_System_Dns_Servers_Server* New() const PROTOBUF_FINAL { return New(NULL); }

  AccessPoints_AccessPoint_System_Dns_Servers_Server* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AccessPoints_AccessPoint_System_Dns_Servers_Server& from);
  void MergeFrom(const AccessPoints_AccessPoint_System_Dns_Servers_Server& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AccessPoints_AccessPoint_System_Dns_Servers_Server* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef AccessPoints_AccessPoint_System_Dns_Servers_Server_Config Config;
  typedef AccessPoints_AccessPoint_System_Dns_Servers_Server_State State;

  // accessors -------------------------------------------------------

  // .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Dns.Servers.Server.State state = 119960475 [(.yext.schemapath) = "/access-points/access-point/system/dns/servers/server/state"];
  bool has_state() const;
  void clear_state();
  static const int kStateFieldNumber = 119960475;
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Dns_Servers_Server_State& state() const;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Dns_Servers_Server_State* release_state();
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Dns_Servers_Server_State* mutable_state();
  void set_allocated_state(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Dns_Servers_Server_State* state);

  // .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Dns.Servers.Server.Config config = 169600110 [(.yext.schemapath) = "/access-points/access-point/system/dns/servers/server/config"];
  bool has_config() const;
  void clear_config();
  static const int kConfigFieldNumber = 169600110;
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Dns_Servers_Server_Config& config() const;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Dns_Servers_Server_Config* release_config();
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Dns_Servers_Server_Config* mutable_config();
  void set_allocated_config(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Dns_Servers_Server_Config* config);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Dns.Servers.Server)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Dns_Servers_Server_State* state_;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Dns_Servers_Server_Config* config_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::InitDefaultsAccessPoints_AccessPoint_System_Dns_Servers_ServerImpl();
};
// -------------------------------------------------------------------

class AccessPoints_AccessPoint_System_Dns_Servers_ServerKey : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Dns.Servers.ServerKey) */ {
 public:
  AccessPoints_AccessPoint_System_Dns_Servers_ServerKey();
  virtual ~AccessPoints_AccessPoint_System_Dns_Servers_ServerKey();

  AccessPoints_AccessPoint_System_Dns_Servers_ServerKey(const AccessPoints_AccessPoint_System_Dns_Servers_ServerKey& from);

  inline AccessPoints_AccessPoint_System_Dns_Servers_ServerKey& operator=(const AccessPoints_AccessPoint_System_Dns_Servers_ServerKey& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AccessPoints_AccessPoint_System_Dns_Servers_ServerKey(AccessPoints_AccessPoint_System_Dns_Servers_ServerKey&& from) noexcept
    : AccessPoints_AccessPoint_System_Dns_Servers_ServerKey() {
    *this = ::std::move(from);
  }

  inline AccessPoints_AccessPoint_System_Dns_Servers_ServerKey& operator=(AccessPoints_AccessPoint_System_Dns_Servers_ServerKey&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AccessPoints_AccessPoint_System_Dns_Servers_ServerKey& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AccessPoints_AccessPoint_System_Dns_Servers_ServerKey* internal_default_instance() {
    return reinterpret_cast<const AccessPoints_AccessPoint_System_Dns_Servers_ServerKey*>(
               &_AccessPoints_AccessPoint_System_Dns_Servers_ServerKey_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    142;

  void Swap(AccessPoints_AccessPoint_System_Dns_Servers_ServerKey* other);
  friend void swap(AccessPoints_AccessPoint_System_Dns_Servers_ServerKey& a, AccessPoints_AccessPoint_System_Dns_Servers_ServerKey& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AccessPoints_AccessPoint_System_Dns_Servers_ServerKey* New() const PROTOBUF_FINAL { return New(NULL); }

  AccessPoints_AccessPoint_System_Dns_Servers_ServerKey* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AccessPoints_AccessPoint_System_Dns_Servers_ServerKey& from);
  void MergeFrom(const AccessPoints_AccessPoint_System_Dns_Servers_ServerKey& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AccessPoints_AccessPoint_System_Dns_Servers_ServerKey* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string address = 1 [(.yext.schemapath) = "/access-points/access-point/system/dns/servers/server/address"];
  void clear_address();
  static const int kAddressFieldNumber = 1;
  const ::std::string& address() const;
  void set_address(const ::std::string& value);
  #if LANG_CXX11
  void set_address(::std::string&& value);
  #endif
  void set_address(const char* value);
  void set_address(const char* value, size_t size);
  ::std::string* mutable_address();
  ::std::string* release_address();
  void set_allocated_address(::std::string* address);

  // .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Dns.Servers.Server server = 2;
  bool has_server() const;
  void clear_server();
  static const int kServerFieldNumber = 2;
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Dns_Servers_Server& server() const;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Dns_Servers_Server* release_server();
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Dns_Servers_Server* mutable_server();
  void set_allocated_server(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Dns_Servers_Server* server);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Dns.Servers.ServerKey)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr address_;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Dns_Servers_Server* server_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::InitDefaultsAccessPoints_AccessPoint_System_Dns_Servers_ServerKeyImpl();
};
// -------------------------------------------------------------------

class AccessPoints_AccessPoint_System_Dns_Servers : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Dns.Servers) */ {
 public:
  AccessPoints_AccessPoint_System_Dns_Servers();
  virtual ~AccessPoints_AccessPoint_System_Dns_Servers();

  AccessPoints_AccessPoint_System_Dns_Servers(const AccessPoints_AccessPoint_System_Dns_Servers& from);

  inline AccessPoints_AccessPoint_System_Dns_Servers& operator=(const AccessPoints_AccessPoint_System_Dns_Servers& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AccessPoints_AccessPoint_System_Dns_Servers(AccessPoints_AccessPoint_System_Dns_Servers&& from) noexcept
    : AccessPoints_AccessPoint_System_Dns_Servers() {
    *this = ::std::move(from);
  }

  inline AccessPoints_AccessPoint_System_Dns_Servers& operator=(AccessPoints_AccessPoint_System_Dns_Servers&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AccessPoints_AccessPoint_System_Dns_Servers& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AccessPoints_AccessPoint_System_Dns_Servers* internal_default_instance() {
    return reinterpret_cast<const AccessPoints_AccessPoint_System_Dns_Servers*>(
               &_AccessPoints_AccessPoint_System_Dns_Servers_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    143;

  void Swap(AccessPoints_AccessPoint_System_Dns_Servers* other);
  friend void swap(AccessPoints_AccessPoint_System_Dns_Servers& a, AccessPoints_AccessPoint_System_Dns_Servers& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AccessPoints_AccessPoint_System_Dns_Servers* New() const PROTOBUF_FINAL { return New(NULL); }

  AccessPoints_AccessPoint_System_Dns_Servers* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AccessPoints_AccessPoint_System_Dns_Servers& from);
  void MergeFrom(const AccessPoints_AccessPoint_System_Dns_Servers& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AccessPoints_AccessPoint_System_Dns_Servers* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef AccessPoints_AccessPoint_System_Dns_Servers_Server Server;
  typedef AccessPoints_AccessPoint_System_Dns_Servers_ServerKey ServerKey;

  // accessors -------------------------------------------------------

  // repeated .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Dns.Servers.ServerKey server = 533138329 [(.yext.schemapath) = "/access-points/access-point/system/dns/servers/server"];
  int server_size() const;
  void clear_server();
  static const int kServerFieldNumber = 533138329;
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Dns_Servers_ServerKey& server(int index) const;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Dns_Servers_ServerKey* mutable_server(int index);
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Dns_Servers_ServerKey* add_server();
  ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Dns_Servers_ServerKey >*
      mutable_server();
  const ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Dns_Servers_ServerKey >&
      server() const;

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Dns.Servers)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Dns_Servers_ServerKey > server_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::InitDefaultsAccessPoints_AccessPoint_System_Dns_ServersImpl();
};
// -------------------------------------------------------------------

class AccessPoints_AccessPoint_System_Dns_State : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Dns.State) */ {
 public:
  AccessPoints_AccessPoint_System_Dns_State();
  virtual ~AccessPoints_AccessPoint_System_Dns_State();

  AccessPoints_AccessPoint_System_Dns_State(const AccessPoints_AccessPoint_System_Dns_State& from);

  inline AccessPoints_AccessPoint_System_Dns_State& operator=(const AccessPoints_AccessPoint_System_Dns_State& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AccessPoints_AccessPoint_System_Dns_State(AccessPoints_AccessPoint_System_Dns_State&& from) noexcept
    : AccessPoints_AccessPoint_System_Dns_State() {
    *this = ::std::move(from);
  }

  inline AccessPoints_AccessPoint_System_Dns_State& operator=(AccessPoints_AccessPoint_System_Dns_State&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AccessPoints_AccessPoint_System_Dns_State& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AccessPoints_AccessPoint_System_Dns_State* internal_default_instance() {
    return reinterpret_cast<const AccessPoints_AccessPoint_System_Dns_State*>(
               &_AccessPoints_AccessPoint_System_Dns_State_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    144;

  void Swap(AccessPoints_AccessPoint_System_Dns_State* other);
  friend void swap(AccessPoints_AccessPoint_System_Dns_State& a, AccessPoints_AccessPoint_System_Dns_State& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AccessPoints_AccessPoint_System_Dns_State* New() const PROTOBUF_FINAL { return New(NULL); }

  AccessPoints_AccessPoint_System_Dns_State* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AccessPoints_AccessPoint_System_Dns_State& from);
  void MergeFrom(const AccessPoints_AccessPoint_System_Dns_State& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AccessPoints_AccessPoint_System_Dns_State* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .ywrapper.StringValue search = 307774829 [(.yext.schemapath) = "/access-points/access-point/system/dns/state/search"];
  int search_size() const;
  void clear_search();
  static const int kSearchFieldNumber = 307774829;
  const ::ywrapper::StringValue& search(int index) const;
  ::ywrapper::StringValue* mutable_search(int index);
  ::ywrapper::StringValue* add_search();
  ::google::protobuf::RepeatedPtrField< ::ywrapper::StringValue >*
      mutable_search();
  const ::google::protobuf::RepeatedPtrField< ::ywrapper::StringValue >&
      search() const;

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Dns.State)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::ywrapper::StringValue > search_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::InitDefaultsAccessPoints_AccessPoint_System_Dns_StateImpl();
};
// -------------------------------------------------------------------

class AccessPoints_AccessPoint_System_Dns : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Dns) */ {
 public:
  AccessPoints_AccessPoint_System_Dns();
  virtual ~AccessPoints_AccessPoint_System_Dns();

  AccessPoints_AccessPoint_System_Dns(const AccessPoints_AccessPoint_System_Dns& from);

  inline AccessPoints_AccessPoint_System_Dns& operator=(const AccessPoints_AccessPoint_System_Dns& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AccessPoints_AccessPoint_System_Dns(AccessPoints_AccessPoint_System_Dns&& from) noexcept
    : AccessPoints_AccessPoint_System_Dns() {
    *this = ::std::move(from);
  }

  inline AccessPoints_AccessPoint_System_Dns& operator=(AccessPoints_AccessPoint_System_Dns&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AccessPoints_AccessPoint_System_Dns& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AccessPoints_AccessPoint_System_Dns* internal_default_instance() {
    return reinterpret_cast<const AccessPoints_AccessPoint_System_Dns*>(
               &_AccessPoints_AccessPoint_System_Dns_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    145;

  void Swap(AccessPoints_AccessPoint_System_Dns* other);
  friend void swap(AccessPoints_AccessPoint_System_Dns& a, AccessPoints_AccessPoint_System_Dns& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AccessPoints_AccessPoint_System_Dns* New() const PROTOBUF_FINAL { return New(NULL); }

  AccessPoints_AccessPoint_System_Dns* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AccessPoints_AccessPoint_System_Dns& from);
  void MergeFrom(const AccessPoints_AccessPoint_System_Dns& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AccessPoints_AccessPoint_System_Dns* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef AccessPoints_AccessPoint_System_Dns_Config Config;
  typedef AccessPoints_AccessPoint_System_Dns_HostEntries HostEntries;
  typedef AccessPoints_AccessPoint_System_Dns_Servers Servers;
  typedef AccessPoints_AccessPoint_System_Dns_State State;

  // accessors -------------------------------------------------------

  // .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Dns.State state = 27768566 [(.yext.schemapath) = "/access-points/access-point/system/dns/state"];
  bool has_state() const;
  void clear_state();
  static const int kStateFieldNumber = 27768566;
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Dns_State& state() const;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Dns_State* release_state();
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Dns_State* mutable_state();
  void set_allocated_state(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Dns_State* state);

  // .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Dns.HostEntries host_entries = 119095278 [(.yext.schemapath) = "/access-points/access-point/system/dns/host-entries"];
  bool has_host_entries() const;
  void clear_host_entries();
  static const int kHostEntriesFieldNumber = 119095278;
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Dns_HostEntries& host_entries() const;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Dns_HostEntries* release_host_entries();
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Dns_HostEntries* mutable_host_entries();
  void set_allocated_host_entries(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Dns_HostEntries* host_entries);

  // .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Dns.Config config = 352454017 [(.yext.schemapath) = "/access-points/access-point/system/dns/config"];
  bool has_config() const;
  void clear_config();
  static const int kConfigFieldNumber = 352454017;
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Dns_Config& config() const;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Dns_Config* release_config();
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Dns_Config* mutable_config();
  void set_allocated_config(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Dns_Config* config);

  // .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Dns.Servers servers = 411148645 [(.yext.schemapath) = "/access-points/access-point/system/dns/servers"];
  bool has_servers() const;
  void clear_servers();
  static const int kServersFieldNumber = 411148645;
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Dns_Servers& servers() const;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Dns_Servers* release_servers();
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Dns_Servers* mutable_servers();
  void set_allocated_servers(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Dns_Servers* servers);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Dns)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Dns_State* state_;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Dns_HostEntries* host_entries_;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Dns_Config* config_;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Dns_Servers* servers_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::InitDefaultsAccessPoints_AccessPoint_System_DnsImpl();
};
// -------------------------------------------------------------------

class AccessPoints_AccessPoint_System_Logging_Console_Config : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Logging.Console.Config) */ {
 public:
  AccessPoints_AccessPoint_System_Logging_Console_Config();
  virtual ~AccessPoints_AccessPoint_System_Logging_Console_Config();

  AccessPoints_AccessPoint_System_Logging_Console_Config(const AccessPoints_AccessPoint_System_Logging_Console_Config& from);

  inline AccessPoints_AccessPoint_System_Logging_Console_Config& operator=(const AccessPoints_AccessPoint_System_Logging_Console_Config& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AccessPoints_AccessPoint_System_Logging_Console_Config(AccessPoints_AccessPoint_System_Logging_Console_Config&& from) noexcept
    : AccessPoints_AccessPoint_System_Logging_Console_Config() {
    *this = ::std::move(from);
  }

  inline AccessPoints_AccessPoint_System_Logging_Console_Config& operator=(AccessPoints_AccessPoint_System_Logging_Console_Config&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AccessPoints_AccessPoint_System_Logging_Console_Config& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AccessPoints_AccessPoint_System_Logging_Console_Config* internal_default_instance() {
    return reinterpret_cast<const AccessPoints_AccessPoint_System_Logging_Console_Config*>(
               &_AccessPoints_AccessPoint_System_Logging_Console_Config_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    146;

  void Swap(AccessPoints_AccessPoint_System_Logging_Console_Config* other);
  friend void swap(AccessPoints_AccessPoint_System_Logging_Console_Config& a, AccessPoints_AccessPoint_System_Logging_Console_Config& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AccessPoints_AccessPoint_System_Logging_Console_Config* New() const PROTOBUF_FINAL { return New(NULL); }

  AccessPoints_AccessPoint_System_Logging_Console_Config* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AccessPoints_AccessPoint_System_Logging_Console_Config& from);
  void MergeFrom(const AccessPoints_AccessPoint_System_Logging_Console_Config& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AccessPoints_AccessPoint_System_Logging_Console_Config* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Logging.Console.Config)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::InitDefaultsAccessPoints_AccessPoint_System_Logging_Console_ConfigImpl();
};
// -------------------------------------------------------------------

class AccessPoints_AccessPoint_System_Logging_Console_Selectors_Selector_Config : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Logging.Console.Selectors.Selector.Config) */ {
 public:
  AccessPoints_AccessPoint_System_Logging_Console_Selectors_Selector_Config();
  virtual ~AccessPoints_AccessPoint_System_Logging_Console_Selectors_Selector_Config();

  AccessPoints_AccessPoint_System_Logging_Console_Selectors_Selector_Config(const AccessPoints_AccessPoint_System_Logging_Console_Selectors_Selector_Config& from);

  inline AccessPoints_AccessPoint_System_Logging_Console_Selectors_Selector_Config& operator=(const AccessPoints_AccessPoint_System_Logging_Console_Selectors_Selector_Config& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AccessPoints_AccessPoint_System_Logging_Console_Selectors_Selector_Config(AccessPoints_AccessPoint_System_Logging_Console_Selectors_Selector_Config&& from) noexcept
    : AccessPoints_AccessPoint_System_Logging_Console_Selectors_Selector_Config() {
    *this = ::std::move(from);
  }

  inline AccessPoints_AccessPoint_System_Logging_Console_Selectors_Selector_Config& operator=(AccessPoints_AccessPoint_System_Logging_Console_Selectors_Selector_Config&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AccessPoints_AccessPoint_System_Logging_Console_Selectors_Selector_Config& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AccessPoints_AccessPoint_System_Logging_Console_Selectors_Selector_Config* internal_default_instance() {
    return reinterpret_cast<const AccessPoints_AccessPoint_System_Logging_Console_Selectors_Selector_Config*>(
               &_AccessPoints_AccessPoint_System_Logging_Console_Selectors_Selector_Config_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    147;

  void Swap(AccessPoints_AccessPoint_System_Logging_Console_Selectors_Selector_Config* other);
  friend void swap(AccessPoints_AccessPoint_System_Logging_Console_Selectors_Selector_Config& a, AccessPoints_AccessPoint_System_Logging_Console_Selectors_Selector_Config& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AccessPoints_AccessPoint_System_Logging_Console_Selectors_Selector_Config* New() const PROTOBUF_FINAL { return New(NULL); }

  AccessPoints_AccessPoint_System_Logging_Console_Selectors_Selector_Config* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AccessPoints_AccessPoint_System_Logging_Console_Selectors_Selector_Config& from);
  void MergeFrom(const AccessPoints_AccessPoint_System_Logging_Console_Selectors_Selector_Config& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AccessPoints_AccessPoint_System_Logging_Console_Selectors_Selector_Config* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .openconfig.enums.OpenconfigSystemLoggingSyslogSeverity severity = 226450800 [(.yext.schemapath) = "/access-points/access-point/system/logging/console/selectors/selector/config/severity"];
  void clear_severity();
  static const int kSeverityFieldNumber = 226450800;
  ::openconfig::enums::OpenconfigSystemLoggingSyslogSeverity severity() const;
  void set_severity(::openconfig::enums::OpenconfigSystemLoggingSyslogSeverity value);

  // .openconfig.enums.OpenconfigSystemLoggingSYSLOGFACILITY facility = 513455526 [(.yext.schemapath) = "/access-points/access-point/system/logging/console/selectors/selector/config/facility"];
  void clear_facility();
  static const int kFacilityFieldNumber = 513455526;
  ::openconfig::enums::OpenconfigSystemLoggingSYSLOGFACILITY facility() const;
  void set_facility(::openconfig::enums::OpenconfigSystemLoggingSYSLOGFACILITY value);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Logging.Console.Selectors.Selector.Config)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int severity_;
  int facility_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::InitDefaultsAccessPoints_AccessPoint_System_Logging_Console_Selectors_Selector_ConfigImpl();
};
// -------------------------------------------------------------------

class AccessPoints_AccessPoint_System_Logging_Console_Selectors_Selector_State : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Logging.Console.Selectors.Selector.State) */ {
 public:
  AccessPoints_AccessPoint_System_Logging_Console_Selectors_Selector_State();
  virtual ~AccessPoints_AccessPoint_System_Logging_Console_Selectors_Selector_State();

  AccessPoints_AccessPoint_System_Logging_Console_Selectors_Selector_State(const AccessPoints_AccessPoint_System_Logging_Console_Selectors_Selector_State& from);

  inline AccessPoints_AccessPoint_System_Logging_Console_Selectors_Selector_State& operator=(const AccessPoints_AccessPoint_System_Logging_Console_Selectors_Selector_State& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AccessPoints_AccessPoint_System_Logging_Console_Selectors_Selector_State(AccessPoints_AccessPoint_System_Logging_Console_Selectors_Selector_State&& from) noexcept
    : AccessPoints_AccessPoint_System_Logging_Console_Selectors_Selector_State() {
    *this = ::std::move(from);
  }

  inline AccessPoints_AccessPoint_System_Logging_Console_Selectors_Selector_State& operator=(AccessPoints_AccessPoint_System_Logging_Console_Selectors_Selector_State&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AccessPoints_AccessPoint_System_Logging_Console_Selectors_Selector_State& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AccessPoints_AccessPoint_System_Logging_Console_Selectors_Selector_State* internal_default_instance() {
    return reinterpret_cast<const AccessPoints_AccessPoint_System_Logging_Console_Selectors_Selector_State*>(
               &_AccessPoints_AccessPoint_System_Logging_Console_Selectors_Selector_State_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    148;

  void Swap(AccessPoints_AccessPoint_System_Logging_Console_Selectors_Selector_State* other);
  friend void swap(AccessPoints_AccessPoint_System_Logging_Console_Selectors_Selector_State& a, AccessPoints_AccessPoint_System_Logging_Console_Selectors_Selector_State& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AccessPoints_AccessPoint_System_Logging_Console_Selectors_Selector_State* New() const PROTOBUF_FINAL { return New(NULL); }

  AccessPoints_AccessPoint_System_Logging_Console_Selectors_Selector_State* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AccessPoints_AccessPoint_System_Logging_Console_Selectors_Selector_State& from);
  void MergeFrom(const AccessPoints_AccessPoint_System_Logging_Console_Selectors_Selector_State& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AccessPoints_AccessPoint_System_Logging_Console_Selectors_Selector_State* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .openconfig.enums.OpenconfigSystemLoggingSyslogSeverity severity = 37602263 [(.yext.schemapath) = "/access-points/access-point/system/logging/console/selectors/selector/state/severity"];
  void clear_severity();
  static const int kSeverityFieldNumber = 37602263;
  ::openconfig::enums::OpenconfigSystemLoggingSyslogSeverity severity() const;
  void set_severity(::openconfig::enums::OpenconfigSystemLoggingSyslogSeverity value);

  // .openconfig.enums.OpenconfigSystemLoggingSYSLOGFACILITY facility = 72001549 [(.yext.schemapath) = "/access-points/access-point/system/logging/console/selectors/selector/state/facility"];
  void clear_facility();
  static const int kFacilityFieldNumber = 72001549;
  ::openconfig::enums::OpenconfigSystemLoggingSYSLOGFACILITY facility() const;
  void set_facility(::openconfig::enums::OpenconfigSystemLoggingSYSLOGFACILITY value);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Logging.Console.Selectors.Selector.State)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int severity_;
  int facility_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::InitDefaultsAccessPoints_AccessPoint_System_Logging_Console_Selectors_Selector_StateImpl();
};
// -------------------------------------------------------------------

class AccessPoints_AccessPoint_System_Logging_Console_Selectors_Selector : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Logging.Console.Selectors.Selector) */ {
 public:
  AccessPoints_AccessPoint_System_Logging_Console_Selectors_Selector();
  virtual ~AccessPoints_AccessPoint_System_Logging_Console_Selectors_Selector();

  AccessPoints_AccessPoint_System_Logging_Console_Selectors_Selector(const AccessPoints_AccessPoint_System_Logging_Console_Selectors_Selector& from);

  inline AccessPoints_AccessPoint_System_Logging_Console_Selectors_Selector& operator=(const AccessPoints_AccessPoint_System_Logging_Console_Selectors_Selector& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AccessPoints_AccessPoint_System_Logging_Console_Selectors_Selector(AccessPoints_AccessPoint_System_Logging_Console_Selectors_Selector&& from) noexcept
    : AccessPoints_AccessPoint_System_Logging_Console_Selectors_Selector() {
    *this = ::std::move(from);
  }

  inline AccessPoints_AccessPoint_System_Logging_Console_Selectors_Selector& operator=(AccessPoints_AccessPoint_System_Logging_Console_Selectors_Selector&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AccessPoints_AccessPoint_System_Logging_Console_Selectors_Selector& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AccessPoints_AccessPoint_System_Logging_Console_Selectors_Selector* internal_default_instance() {
    return reinterpret_cast<const AccessPoints_AccessPoint_System_Logging_Console_Selectors_Selector*>(
               &_AccessPoints_AccessPoint_System_Logging_Console_Selectors_Selector_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    149;

  void Swap(AccessPoints_AccessPoint_System_Logging_Console_Selectors_Selector* other);
  friend void swap(AccessPoints_AccessPoint_System_Logging_Console_Selectors_Selector& a, AccessPoints_AccessPoint_System_Logging_Console_Selectors_Selector& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AccessPoints_AccessPoint_System_Logging_Console_Selectors_Selector* New() const PROTOBUF_FINAL { return New(NULL); }

  AccessPoints_AccessPoint_System_Logging_Console_Selectors_Selector* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AccessPoints_AccessPoint_System_Logging_Console_Selectors_Selector& from);
  void MergeFrom(const AccessPoints_AccessPoint_System_Logging_Console_Selectors_Selector& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AccessPoints_AccessPoint_System_Logging_Console_Selectors_Selector* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef AccessPoints_AccessPoint_System_Logging_Console_Selectors_Selector_Config Config;
  typedef AccessPoints_AccessPoint_System_Logging_Console_Selectors_Selector_State State;

  // accessors -------------------------------------------------------

  // .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Logging.Console.Selectors.Selector.State state = 133626427 [(.yext.schemapath) = "/access-points/access-point/system/logging/console/selectors/selector/state"];
  bool has_state() const;
  void clear_state();
  static const int kStateFieldNumber = 133626427;
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging_Console_Selectors_Selector_State& state() const;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging_Console_Selectors_Selector_State* release_state();
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging_Console_Selectors_Selector_State* mutable_state();
  void set_allocated_state(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging_Console_Selectors_Selector_State* state);

  // .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Logging.Console.Selectors.Selector.Config config = 308166286 [(.yext.schemapath) = "/access-points/access-point/system/logging/console/selectors/selector/config"];
  bool has_config() const;
  void clear_config();
  static const int kConfigFieldNumber = 308166286;
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging_Console_Selectors_Selector_Config& config() const;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging_Console_Selectors_Selector_Config* release_config();
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging_Console_Selectors_Selector_Config* mutable_config();
  void set_allocated_config(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging_Console_Selectors_Selector_Config* config);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Logging.Console.Selectors.Selector)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging_Console_Selectors_Selector_State* state_;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging_Console_Selectors_Selector_Config* config_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::InitDefaultsAccessPoints_AccessPoint_System_Logging_Console_Selectors_SelectorImpl();
};
// -------------------------------------------------------------------

class AccessPoints_AccessPoint_System_Logging_Console_Selectors_SelectorKey : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Logging.Console.Selectors.SelectorKey) */ {
 public:
  AccessPoints_AccessPoint_System_Logging_Console_Selectors_SelectorKey();
  virtual ~AccessPoints_AccessPoint_System_Logging_Console_Selectors_SelectorKey();

  AccessPoints_AccessPoint_System_Logging_Console_Selectors_SelectorKey(const AccessPoints_AccessPoint_System_Logging_Console_Selectors_SelectorKey& from);

  inline AccessPoints_AccessPoint_System_Logging_Console_Selectors_SelectorKey& operator=(const AccessPoints_AccessPoint_System_Logging_Console_Selectors_SelectorKey& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AccessPoints_AccessPoint_System_Logging_Console_Selectors_SelectorKey(AccessPoints_AccessPoint_System_Logging_Console_Selectors_SelectorKey&& from) noexcept
    : AccessPoints_AccessPoint_System_Logging_Console_Selectors_SelectorKey() {
    *this = ::std::move(from);
  }

  inline AccessPoints_AccessPoint_System_Logging_Console_Selectors_SelectorKey& operator=(AccessPoints_AccessPoint_System_Logging_Console_Selectors_SelectorKey&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AccessPoints_AccessPoint_System_Logging_Console_Selectors_SelectorKey& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AccessPoints_AccessPoint_System_Logging_Console_Selectors_SelectorKey* internal_default_instance() {
    return reinterpret_cast<const AccessPoints_AccessPoint_System_Logging_Console_Selectors_SelectorKey*>(
               &_AccessPoints_AccessPoint_System_Logging_Console_Selectors_SelectorKey_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    150;

  void Swap(AccessPoints_AccessPoint_System_Logging_Console_Selectors_SelectorKey* other);
  friend void swap(AccessPoints_AccessPoint_System_Logging_Console_Selectors_SelectorKey& a, AccessPoints_AccessPoint_System_Logging_Console_Selectors_SelectorKey& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AccessPoints_AccessPoint_System_Logging_Console_Selectors_SelectorKey* New() const PROTOBUF_FINAL { return New(NULL); }

  AccessPoints_AccessPoint_System_Logging_Console_Selectors_SelectorKey* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AccessPoints_AccessPoint_System_Logging_Console_Selectors_SelectorKey& from);
  void MergeFrom(const AccessPoints_AccessPoint_System_Logging_Console_Selectors_SelectorKey& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AccessPoints_AccessPoint_System_Logging_Console_Selectors_SelectorKey* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Logging.Console.Selectors.Selector selector = 3;
  bool has_selector() const;
  void clear_selector();
  static const int kSelectorFieldNumber = 3;
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging_Console_Selectors_Selector& selector() const;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging_Console_Selectors_Selector* release_selector();
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging_Console_Selectors_Selector* mutable_selector();
  void set_allocated_selector(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging_Console_Selectors_Selector* selector);

  // .openconfig.enums.OpenconfigSystemLoggingSYSLOGFACILITY facility = 1 [(.yext.schemapath) = "/access-points/access-point/system/logging/console/selectors/selector/facility"];
  void clear_facility();
  static const int kFacilityFieldNumber = 1;
  ::openconfig::enums::OpenconfigSystemLoggingSYSLOGFACILITY facility() const;
  void set_facility(::openconfig::enums::OpenconfigSystemLoggingSYSLOGFACILITY value);

  // .openconfig.enums.OpenconfigSystemLoggingSyslogSeverity severity = 2 [(.yext.schemapath) = "/access-points/access-point/system/logging/console/selectors/selector/severity"];
  void clear_severity();
  static const int kSeverityFieldNumber = 2;
  ::openconfig::enums::OpenconfigSystemLoggingSyslogSeverity severity() const;
  void set_severity(::openconfig::enums::OpenconfigSystemLoggingSyslogSeverity value);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Logging.Console.Selectors.SelectorKey)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging_Console_Selectors_Selector* selector_;
  int facility_;
  int severity_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::InitDefaultsAccessPoints_AccessPoint_System_Logging_Console_Selectors_SelectorKeyImpl();
};
// -------------------------------------------------------------------

class AccessPoints_AccessPoint_System_Logging_Console_Selectors : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Logging.Console.Selectors) */ {
 public:
  AccessPoints_AccessPoint_System_Logging_Console_Selectors();
  virtual ~AccessPoints_AccessPoint_System_Logging_Console_Selectors();

  AccessPoints_AccessPoint_System_Logging_Console_Selectors(const AccessPoints_AccessPoint_System_Logging_Console_Selectors& from);

  inline AccessPoints_AccessPoint_System_Logging_Console_Selectors& operator=(const AccessPoints_AccessPoint_System_Logging_Console_Selectors& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AccessPoints_AccessPoint_System_Logging_Console_Selectors(AccessPoints_AccessPoint_System_Logging_Console_Selectors&& from) noexcept
    : AccessPoints_AccessPoint_System_Logging_Console_Selectors() {
    *this = ::std::move(from);
  }

  inline AccessPoints_AccessPoint_System_Logging_Console_Selectors& operator=(AccessPoints_AccessPoint_System_Logging_Console_Selectors&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AccessPoints_AccessPoint_System_Logging_Console_Selectors& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AccessPoints_AccessPoint_System_Logging_Console_Selectors* internal_default_instance() {
    return reinterpret_cast<const AccessPoints_AccessPoint_System_Logging_Console_Selectors*>(
               &_AccessPoints_AccessPoint_System_Logging_Console_Selectors_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    151;

  void Swap(AccessPoints_AccessPoint_System_Logging_Console_Selectors* other);
  friend void swap(AccessPoints_AccessPoint_System_Logging_Console_Selectors& a, AccessPoints_AccessPoint_System_Logging_Console_Selectors& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AccessPoints_AccessPoint_System_Logging_Console_Selectors* New() const PROTOBUF_FINAL { return New(NULL); }

  AccessPoints_AccessPoint_System_Logging_Console_Selectors* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AccessPoints_AccessPoint_System_Logging_Console_Selectors& from);
  void MergeFrom(const AccessPoints_AccessPoint_System_Logging_Console_Selectors& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AccessPoints_AccessPoint_System_Logging_Console_Selectors* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef AccessPoints_AccessPoint_System_Logging_Console_Selectors_Selector Selector;
  typedef AccessPoints_AccessPoint_System_Logging_Console_Selectors_SelectorKey SelectorKey;

  // accessors -------------------------------------------------------

  // repeated .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Logging.Console.Selectors.SelectorKey selector = 305157817 [(.yext.schemapath) = "/access-points/access-point/system/logging/console/selectors/selector"];
  int selector_size() const;
  void clear_selector();
  static const int kSelectorFieldNumber = 305157817;
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging_Console_Selectors_SelectorKey& selector(int index) const;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging_Console_Selectors_SelectorKey* mutable_selector(int index);
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging_Console_Selectors_SelectorKey* add_selector();
  ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging_Console_Selectors_SelectorKey >*
      mutable_selector();
  const ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging_Console_Selectors_SelectorKey >&
      selector() const;

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Logging.Console.Selectors)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging_Console_Selectors_SelectorKey > selector_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::InitDefaultsAccessPoints_AccessPoint_System_Logging_Console_SelectorsImpl();
};
// -------------------------------------------------------------------

class AccessPoints_AccessPoint_System_Logging_Console_State : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Logging.Console.State) */ {
 public:
  AccessPoints_AccessPoint_System_Logging_Console_State();
  virtual ~AccessPoints_AccessPoint_System_Logging_Console_State();

  AccessPoints_AccessPoint_System_Logging_Console_State(const AccessPoints_AccessPoint_System_Logging_Console_State& from);

  inline AccessPoints_AccessPoint_System_Logging_Console_State& operator=(const AccessPoints_AccessPoint_System_Logging_Console_State& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AccessPoints_AccessPoint_System_Logging_Console_State(AccessPoints_AccessPoint_System_Logging_Console_State&& from) noexcept
    : AccessPoints_AccessPoint_System_Logging_Console_State() {
    *this = ::std::move(from);
  }

  inline AccessPoints_AccessPoint_System_Logging_Console_State& operator=(AccessPoints_AccessPoint_System_Logging_Console_State&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AccessPoints_AccessPoint_System_Logging_Console_State& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AccessPoints_AccessPoint_System_Logging_Console_State* internal_default_instance() {
    return reinterpret_cast<const AccessPoints_AccessPoint_System_Logging_Console_State*>(
               &_AccessPoints_AccessPoint_System_Logging_Console_State_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    152;

  void Swap(AccessPoints_AccessPoint_System_Logging_Console_State* other);
  friend void swap(AccessPoints_AccessPoint_System_Logging_Console_State& a, AccessPoints_AccessPoint_System_Logging_Console_State& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AccessPoints_AccessPoint_System_Logging_Console_State* New() const PROTOBUF_FINAL { return New(NULL); }

  AccessPoints_AccessPoint_System_Logging_Console_State* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AccessPoints_AccessPoint_System_Logging_Console_State& from);
  void MergeFrom(const AccessPoints_AccessPoint_System_Logging_Console_State& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AccessPoints_AccessPoint_System_Logging_Console_State* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Logging.Console.State)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::InitDefaultsAccessPoints_AccessPoint_System_Logging_Console_StateImpl();
};
// -------------------------------------------------------------------

class AccessPoints_AccessPoint_System_Logging_Console : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Logging.Console) */ {
 public:
  AccessPoints_AccessPoint_System_Logging_Console();
  virtual ~AccessPoints_AccessPoint_System_Logging_Console();

  AccessPoints_AccessPoint_System_Logging_Console(const AccessPoints_AccessPoint_System_Logging_Console& from);

  inline AccessPoints_AccessPoint_System_Logging_Console& operator=(const AccessPoints_AccessPoint_System_Logging_Console& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AccessPoints_AccessPoint_System_Logging_Console(AccessPoints_AccessPoint_System_Logging_Console&& from) noexcept
    : AccessPoints_AccessPoint_System_Logging_Console() {
    *this = ::std::move(from);
  }

  inline AccessPoints_AccessPoint_System_Logging_Console& operator=(AccessPoints_AccessPoint_System_Logging_Console&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AccessPoints_AccessPoint_System_Logging_Console& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AccessPoints_AccessPoint_System_Logging_Console* internal_default_instance() {
    return reinterpret_cast<const AccessPoints_AccessPoint_System_Logging_Console*>(
               &_AccessPoints_AccessPoint_System_Logging_Console_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    153;

  void Swap(AccessPoints_AccessPoint_System_Logging_Console* other);
  friend void swap(AccessPoints_AccessPoint_System_Logging_Console& a, AccessPoints_AccessPoint_System_Logging_Console& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AccessPoints_AccessPoint_System_Logging_Console* New() const PROTOBUF_FINAL { return New(NULL); }

  AccessPoints_AccessPoint_System_Logging_Console* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AccessPoints_AccessPoint_System_Logging_Console& from);
  void MergeFrom(const AccessPoints_AccessPoint_System_Logging_Console& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AccessPoints_AccessPoint_System_Logging_Console* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef AccessPoints_AccessPoint_System_Logging_Console_Config Config;
  typedef AccessPoints_AccessPoint_System_Logging_Console_Selectors Selectors;
  typedef AccessPoints_AccessPoint_System_Logging_Console_State State;

  // accessors -------------------------------------------------------

  // .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Logging.Console.Config config = 202247349 [(.yext.schemapath) = "/access-points/access-point/system/logging/console/config"];
  bool has_config() const;
  void clear_config();
  static const int kConfigFieldNumber = 202247349;
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging_Console_Config& config() const;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging_Console_Config* release_config();
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging_Console_Config* mutable_config();
  void set_allocated_config(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging_Console_Config* config);

  // .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Logging.Console.Selectors selectors = 247149031 [(.yext.schemapath) = "/access-points/access-point/system/logging/console/selectors"];
  bool has_selectors() const;
  void clear_selectors();
  static const int kSelectorsFieldNumber = 247149031;
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging_Console_Selectors& selectors() const;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging_Console_Selectors* release_selectors();
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging_Console_Selectors* mutable_selectors();
  void set_allocated_selectors(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging_Console_Selectors* selectors);

  // .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Logging.Console.State state = 427243434 [(.yext.schemapath) = "/access-points/access-point/system/logging/console/state"];
  bool has_state() const;
  void clear_state();
  static const int kStateFieldNumber = 427243434;
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging_Console_State& state() const;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging_Console_State* release_state();
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging_Console_State* mutable_state();
  void set_allocated_state(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging_Console_State* state);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Logging.Console)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging_Console_Config* config_;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging_Console_Selectors* selectors_;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging_Console_State* state_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::InitDefaultsAccessPoints_AccessPoint_System_Logging_ConsoleImpl();
};
// -------------------------------------------------------------------

class AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Config : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Logging.RemoteServers.RemoteServer.Config) */ {
 public:
  AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Config();
  virtual ~AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Config();

  AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Config(const AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Config& from);

  inline AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Config& operator=(const AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Config& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Config(AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Config&& from) noexcept
    : AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Config() {
    *this = ::std::move(from);
  }

  inline AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Config& operator=(AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Config&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Config& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Config* internal_default_instance() {
    return reinterpret_cast<const AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Config*>(
               &_AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Config_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    154;

  void Swap(AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Config* other);
  friend void swap(AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Config& a, AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Config& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Config* New() const PROTOBUF_FINAL { return New(NULL); }

  AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Config* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Config& from);
  void MergeFrom(const AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Config& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Config* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .ywrapper.UintValue remote_port = 51833171 [(.yext.schemapath) = "/access-points/access-point/system/logging/remote-servers/remote-server/config/remote-port"];
  bool has_remote_port() const;
  void clear_remote_port();
  static const int kRemotePortFieldNumber = 51833171;
  const ::ywrapper::UintValue& remote_port() const;
  ::ywrapper::UintValue* release_remote_port();
  ::ywrapper::UintValue* mutable_remote_port();
  void set_allocated_remote_port(::ywrapper::UintValue* remote_port);

  // .ywrapper.StringValue host = 305442361 [(.yext.schemapath) = "/access-points/access-point/system/logging/remote-servers/remote-server/config/host"];
  bool has_host() const;
  void clear_host();
  static const int kHostFieldNumber = 305442361;
  const ::ywrapper::StringValue& host() const;
  ::ywrapper::StringValue* release_host();
  ::ywrapper::StringValue* mutable_host();
  void set_allocated_host(::ywrapper::StringValue* host);

  // .ywrapper.StringValue source_address = 476272171 [(.yext.schemapath) = "/access-points/access-point/system/logging/remote-servers/remote-server/config/source-address"];
  bool has_source_address() const;
  void clear_source_address();
  static const int kSourceAddressFieldNumber = 476272171;
  const ::ywrapper::StringValue& source_address() const;
  ::ywrapper::StringValue* release_source_address();
  ::ywrapper::StringValue* mutable_source_address();
  void set_allocated_source_address(::ywrapper::StringValue* source_address);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Logging.RemoteServers.RemoteServer.Config)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ywrapper::UintValue* remote_port_;
  ::ywrapper::StringValue* host_;
  ::ywrapper::StringValue* source_address_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::InitDefaultsAccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_ConfigImpl();
};
// -------------------------------------------------------------------

class AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors_Selector_Config : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Logging.RemoteServers.RemoteServer.Selectors.Selector.Config) */ {
 public:
  AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors_Selector_Config();
  virtual ~AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors_Selector_Config();

  AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors_Selector_Config(const AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors_Selector_Config& from);

  inline AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors_Selector_Config& operator=(const AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors_Selector_Config& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors_Selector_Config(AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors_Selector_Config&& from) noexcept
    : AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors_Selector_Config() {
    *this = ::std::move(from);
  }

  inline AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors_Selector_Config& operator=(AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors_Selector_Config&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors_Selector_Config& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors_Selector_Config* internal_default_instance() {
    return reinterpret_cast<const AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors_Selector_Config*>(
               &_AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors_Selector_Config_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    155;

  void Swap(AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors_Selector_Config* other);
  friend void swap(AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors_Selector_Config& a, AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors_Selector_Config& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors_Selector_Config* New() const PROTOBUF_FINAL { return New(NULL); }

  AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors_Selector_Config* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors_Selector_Config& from);
  void MergeFrom(const AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors_Selector_Config& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors_Selector_Config* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .openconfig.enums.OpenconfigSystemLoggingSYSLOGFACILITY facility = 13663423 [(.yext.schemapath) = "/access-points/access-point/system/logging/remote-servers/remote-server/selectors/selector/config/facility"];
  void clear_facility();
  static const int kFacilityFieldNumber = 13663423;
  ::openconfig::enums::OpenconfigSystemLoggingSYSLOGFACILITY facility() const;
  void set_facility(::openconfig::enums::OpenconfigSystemLoggingSYSLOGFACILITY value);

  // .openconfig.enums.OpenconfigSystemLoggingSyslogSeverity severity = 532975005 [(.yext.schemapath) = "/access-points/access-point/system/logging/remote-servers/remote-server/selectors/selector/config/severity"];
  void clear_severity();
  static const int kSeverityFieldNumber = 532975005;
  ::openconfig::enums::OpenconfigSystemLoggingSyslogSeverity severity() const;
  void set_severity(::openconfig::enums::OpenconfigSystemLoggingSyslogSeverity value);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Logging.RemoteServers.RemoteServer.Selectors.Selector.Config)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int facility_;
  int severity_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::InitDefaultsAccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors_Selector_ConfigImpl();
};
// -------------------------------------------------------------------

class AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors_Selector_State : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Logging.RemoteServers.RemoteServer.Selectors.Selector.State) */ {
 public:
  AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors_Selector_State();
  virtual ~AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors_Selector_State();

  AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors_Selector_State(const AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors_Selector_State& from);

  inline AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors_Selector_State& operator=(const AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors_Selector_State& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors_Selector_State(AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors_Selector_State&& from) noexcept
    : AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors_Selector_State() {
    *this = ::std::move(from);
  }

  inline AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors_Selector_State& operator=(AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors_Selector_State&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors_Selector_State& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors_Selector_State* internal_default_instance() {
    return reinterpret_cast<const AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors_Selector_State*>(
               &_AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors_Selector_State_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    156;

  void Swap(AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors_Selector_State* other);
  friend void swap(AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors_Selector_State& a, AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors_Selector_State& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors_Selector_State* New() const PROTOBUF_FINAL { return New(NULL); }

  AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors_Selector_State* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors_Selector_State& from);
  void MergeFrom(const AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors_Selector_State& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors_Selector_State* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .openconfig.enums.OpenconfigSystemLoggingSyslogSeverity severity = 349549580 [(.yext.schemapath) = "/access-points/access-point/system/logging/remote-servers/remote-server/selectors/selector/state/severity"];
  void clear_severity();
  static const int kSeverityFieldNumber = 349549580;
  ::openconfig::enums::OpenconfigSystemLoggingSyslogSeverity severity() const;
  void set_severity(::openconfig::enums::OpenconfigSystemLoggingSyslogSeverity value);

  // .openconfig.enums.OpenconfigSystemLoggingSYSLOGFACILITY facility = 496427258 [(.yext.schemapath) = "/access-points/access-point/system/logging/remote-servers/remote-server/selectors/selector/state/facility"];
  void clear_facility();
  static const int kFacilityFieldNumber = 496427258;
  ::openconfig::enums::OpenconfigSystemLoggingSYSLOGFACILITY facility() const;
  void set_facility(::openconfig::enums::OpenconfigSystemLoggingSYSLOGFACILITY value);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Logging.RemoteServers.RemoteServer.Selectors.Selector.State)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int severity_;
  int facility_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::InitDefaultsAccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors_Selector_StateImpl();
};
// -------------------------------------------------------------------

class AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors_Selector : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Logging.RemoteServers.RemoteServer.Selectors.Selector) */ {
 public:
  AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors_Selector();
  virtual ~AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors_Selector();

  AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors_Selector(const AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors_Selector& from);

  inline AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors_Selector& operator=(const AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors_Selector& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors_Selector(AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors_Selector&& from) noexcept
    : AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors_Selector() {
    *this = ::std::move(from);
  }

  inline AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors_Selector& operator=(AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors_Selector&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors_Selector& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors_Selector* internal_default_instance() {
    return reinterpret_cast<const AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors_Selector*>(
               &_AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors_Selector_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    157;

  void Swap(AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors_Selector* other);
  friend void swap(AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors_Selector& a, AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors_Selector& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors_Selector* New() const PROTOBUF_FINAL { return New(NULL); }

  AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors_Selector* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors_Selector& from);
  void MergeFrom(const AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors_Selector& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors_Selector* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors_Selector_Config Config;
  typedef AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors_Selector_State State;

  // accessors -------------------------------------------------------

  // .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Logging.RemoteServers.RemoteServer.Selectors.Selector.State state = 133116202 [(.yext.schemapath) = "/access-points/access-point/system/logging/remote-servers/remote-server/selectors/selector/state"];
  bool has_state() const;
  void clear_state();
  static const int kStateFieldNumber = 133116202;
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors_Selector_State& state() const;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors_Selector_State* release_state();
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors_Selector_State* mutable_state();
  void set_allocated_state(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors_Selector_State* state);

  // .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Logging.RemoteServers.RemoteServer.Selectors.Selector.Config config = 317444405 [(.yext.schemapath) = "/access-points/access-point/system/logging/remote-servers/remote-server/selectors/selector/config"];
  bool has_config() const;
  void clear_config();
  static const int kConfigFieldNumber = 317444405;
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors_Selector_Config& config() const;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors_Selector_Config* release_config();
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors_Selector_Config* mutable_config();
  void set_allocated_config(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors_Selector_Config* config);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Logging.RemoteServers.RemoteServer.Selectors.Selector)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors_Selector_State* state_;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors_Selector_Config* config_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::InitDefaultsAccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors_SelectorImpl();
};
// -------------------------------------------------------------------

class AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors_SelectorKey : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Logging.RemoteServers.RemoteServer.Selectors.SelectorKey) */ {
 public:
  AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors_SelectorKey();
  virtual ~AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors_SelectorKey();

  AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors_SelectorKey(const AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors_SelectorKey& from);

  inline AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors_SelectorKey& operator=(const AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors_SelectorKey& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors_SelectorKey(AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors_SelectorKey&& from) noexcept
    : AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors_SelectorKey() {
    *this = ::std::move(from);
  }

  inline AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors_SelectorKey& operator=(AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors_SelectorKey&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors_SelectorKey& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors_SelectorKey* internal_default_instance() {
    return reinterpret_cast<const AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors_SelectorKey*>(
               &_AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors_SelectorKey_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    158;

  void Swap(AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors_SelectorKey* other);
  friend void swap(AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors_SelectorKey& a, AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors_SelectorKey& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors_SelectorKey* New() const PROTOBUF_FINAL { return New(NULL); }

  AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors_SelectorKey* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors_SelectorKey& from);
  void MergeFrom(const AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors_SelectorKey& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors_SelectorKey* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Logging.RemoteServers.RemoteServer.Selectors.Selector selector = 3;
  bool has_selector() const;
  void clear_selector();
  static const int kSelectorFieldNumber = 3;
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors_Selector& selector() const;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors_Selector* release_selector();
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors_Selector* mutable_selector();
  void set_allocated_selector(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors_Selector* selector);

  // .openconfig.enums.OpenconfigSystemLoggingSYSLOGFACILITY facility = 1 [(.yext.schemapath) = "/access-points/access-point/system/logging/remote-servers/remote-server/selectors/selector/facility"];
  void clear_facility();
  static const int kFacilityFieldNumber = 1;
  ::openconfig::enums::OpenconfigSystemLoggingSYSLOGFACILITY facility() const;
  void set_facility(::openconfig::enums::OpenconfigSystemLoggingSYSLOGFACILITY value);

  // .openconfig.enums.OpenconfigSystemLoggingSyslogSeverity severity = 2 [(.yext.schemapath) = "/access-points/access-point/system/logging/remote-servers/remote-server/selectors/selector/severity"];
  void clear_severity();
  static const int kSeverityFieldNumber = 2;
  ::openconfig::enums::OpenconfigSystemLoggingSyslogSeverity severity() const;
  void set_severity(::openconfig::enums::OpenconfigSystemLoggingSyslogSeverity value);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Logging.RemoteServers.RemoteServer.Selectors.SelectorKey)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors_Selector* selector_;
  int facility_;
  int severity_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::InitDefaultsAccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors_SelectorKeyImpl();
};
// -------------------------------------------------------------------

class AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Logging.RemoteServers.RemoteServer.Selectors) */ {
 public:
  AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors();
  virtual ~AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors();

  AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors(const AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors& from);

  inline AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors& operator=(const AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors(AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors&& from) noexcept
    : AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors() {
    *this = ::std::move(from);
  }

  inline AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors& operator=(AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors* internal_default_instance() {
    return reinterpret_cast<const AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors*>(
               &_AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    159;

  void Swap(AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors* other);
  friend void swap(AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors& a, AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors* New() const PROTOBUF_FINAL { return New(NULL); }

  AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors& from);
  void MergeFrom(const AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors_Selector Selector;
  typedef AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors_SelectorKey SelectorKey;

  // accessors -------------------------------------------------------

  // repeated .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Logging.RemoteServers.RemoteServer.Selectors.SelectorKey selector = 44390976 [(.yext.schemapath) = "/access-points/access-point/system/logging/remote-servers/remote-server/selectors/selector"];
  int selector_size() const;
  void clear_selector();
  static const int kSelectorFieldNumber = 44390976;
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors_SelectorKey& selector(int index) const;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors_SelectorKey* mutable_selector(int index);
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors_SelectorKey* add_selector();
  ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors_SelectorKey >*
      mutable_selector();
  const ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors_SelectorKey >&
      selector() const;

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Logging.RemoteServers.RemoteServer.Selectors)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors_SelectorKey > selector_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::InitDefaultsAccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_SelectorsImpl();
};
// -------------------------------------------------------------------

class AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_State : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Logging.RemoteServers.RemoteServer.State) */ {
 public:
  AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_State();
  virtual ~AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_State();

  AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_State(const AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_State& from);

  inline AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_State& operator=(const AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_State& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_State(AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_State&& from) noexcept
    : AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_State() {
    *this = ::std::move(from);
  }

  inline AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_State& operator=(AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_State&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_State& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_State* internal_default_instance() {
    return reinterpret_cast<const AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_State*>(
               &_AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_State_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    160;

  void Swap(AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_State* other);
  friend void swap(AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_State& a, AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_State& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_State* New() const PROTOBUF_FINAL { return New(NULL); }

  AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_State* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_State& from);
  void MergeFrom(const AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_State& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_State* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .ywrapper.StringValue host = 185149766 [(.yext.schemapath) = "/access-points/access-point/system/logging/remote-servers/remote-server/state/host"];
  bool has_host() const;
  void clear_host();
  static const int kHostFieldNumber = 185149766;
  const ::ywrapper::StringValue& host() const;
  ::ywrapper::StringValue* release_host();
  ::ywrapper::StringValue* mutable_host();
  void set_allocated_host(::ywrapper::StringValue* host);

  // .ywrapper.StringValue source_address = 248536760 [(.yext.schemapath) = "/access-points/access-point/system/logging/remote-servers/remote-server/state/source-address"];
  bool has_source_address() const;
  void clear_source_address();
  static const int kSourceAddressFieldNumber = 248536760;
  const ::ywrapper::StringValue& source_address() const;
  ::ywrapper::StringValue* release_source_address();
  ::ywrapper::StringValue* mutable_source_address();
  void set_allocated_source_address(::ywrapper::StringValue* source_address);

  // .ywrapper.UintValue remote_port = 449301846 [(.yext.schemapath) = "/access-points/access-point/system/logging/remote-servers/remote-server/state/remote-port"];
  bool has_remote_port() const;
  void clear_remote_port();
  static const int kRemotePortFieldNumber = 449301846;
  const ::ywrapper::UintValue& remote_port() const;
  ::ywrapper::UintValue* release_remote_port();
  ::ywrapper::UintValue* mutable_remote_port();
  void set_allocated_remote_port(::ywrapper::UintValue* remote_port);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Logging.RemoteServers.RemoteServer.State)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ywrapper::StringValue* host_;
  ::ywrapper::StringValue* source_address_;
  ::ywrapper::UintValue* remote_port_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::InitDefaultsAccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_StateImpl();
};
// -------------------------------------------------------------------

class AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Logging.RemoteServers.RemoteServer) */ {
 public:
  AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer();
  virtual ~AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer();

  AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer(const AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer& from);

  inline AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer& operator=(const AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer(AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer&& from) noexcept
    : AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer() {
    *this = ::std::move(from);
  }

  inline AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer& operator=(AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer* internal_default_instance() {
    return reinterpret_cast<const AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer*>(
               &_AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    161;

  void Swap(AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer* other);
  friend void swap(AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer& a, AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer* New() const PROTOBUF_FINAL { return New(NULL); }

  AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer& from);
  void MergeFrom(const AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Config Config;
  typedef AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors Selectors;
  typedef AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_State State;

  // accessors -------------------------------------------------------

  // .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Logging.RemoteServers.RemoteServer.Selectors selectors = 122951308 [(.yext.schemapath) = "/access-points/access-point/system/logging/remote-servers/remote-server/selectors"];
  bool has_selectors() const;
  void clear_selectors();
  static const int kSelectorsFieldNumber = 122951308;
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors& selectors() const;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors* release_selectors();
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors* mutable_selectors();
  void set_allocated_selectors(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors* selectors);

  // .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Logging.RemoteServers.RemoteServer.Config config = 360797500 [(.yext.schemapath) = "/access-points/access-point/system/logging/remote-servers/remote-server/config"];
  bool has_config() const;
  void clear_config();
  static const int kConfigFieldNumber = 360797500;
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Config& config() const;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Config* release_config();
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Config* mutable_config();
  void set_allocated_config(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Config* config);

  // .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Logging.RemoteServers.RemoteServer.State state = 486582325 [(.yext.schemapath) = "/access-points/access-point/system/logging/remote-servers/remote-server/state"];
  bool has_state() const;
  void clear_state();
  static const int kStateFieldNumber = 486582325;
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_State& state() const;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_State* release_state();
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_State* mutable_state();
  void set_allocated_state(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_State* state);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Logging.RemoteServers.RemoteServer)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors* selectors_;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Config* config_;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_State* state_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::InitDefaultsAccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServerImpl();
};
// -------------------------------------------------------------------

class AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServerKey : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Logging.RemoteServers.RemoteServerKey) */ {
 public:
  AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServerKey();
  virtual ~AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServerKey();

  AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServerKey(const AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServerKey& from);

  inline AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServerKey& operator=(const AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServerKey& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServerKey(AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServerKey&& from) noexcept
    : AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServerKey() {
    *this = ::std::move(from);
  }

  inline AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServerKey& operator=(AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServerKey&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServerKey& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServerKey* internal_default_instance() {
    return reinterpret_cast<const AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServerKey*>(
               &_AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServerKey_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    162;

  void Swap(AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServerKey* other);
  friend void swap(AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServerKey& a, AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServerKey& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServerKey* New() const PROTOBUF_FINAL { return New(NULL); }

  AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServerKey* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServerKey& from);
  void MergeFrom(const AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServerKey& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServerKey* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string host = 1 [(.yext.schemapath) = "/access-points/access-point/system/logging/remote-servers/remote-server/host"];
  void clear_host();
  static const int kHostFieldNumber = 1;
  const ::std::string& host() const;
  void set_host(const ::std::string& value);
  #if LANG_CXX11
  void set_host(::std::string&& value);
  #endif
  void set_host(const char* value);
  void set_host(const char* value, size_t size);
  ::std::string* mutable_host();
  ::std::string* release_host();
  void set_allocated_host(::std::string* host);

  // .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Logging.RemoteServers.RemoteServer remote_server = 2;
  bool has_remote_server() const;
  void clear_remote_server();
  static const int kRemoteServerFieldNumber = 2;
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer& remote_server() const;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer* release_remote_server();
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer* mutable_remote_server();
  void set_allocated_remote_server(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer* remote_server);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Logging.RemoteServers.RemoteServerKey)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr host_;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer* remote_server_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::InitDefaultsAccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServerKeyImpl();
};
// -------------------------------------------------------------------

class AccessPoints_AccessPoint_System_Logging_RemoteServers : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Logging.RemoteServers) */ {
 public:
  AccessPoints_AccessPoint_System_Logging_RemoteServers();
  virtual ~AccessPoints_AccessPoint_System_Logging_RemoteServers();

  AccessPoints_AccessPoint_System_Logging_RemoteServers(const AccessPoints_AccessPoint_System_Logging_RemoteServers& from);

  inline AccessPoints_AccessPoint_System_Logging_RemoteServers& operator=(const AccessPoints_AccessPoint_System_Logging_RemoteServers& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AccessPoints_AccessPoint_System_Logging_RemoteServers(AccessPoints_AccessPoint_System_Logging_RemoteServers&& from) noexcept
    : AccessPoints_AccessPoint_System_Logging_RemoteServers() {
    *this = ::std::move(from);
  }

  inline AccessPoints_AccessPoint_System_Logging_RemoteServers& operator=(AccessPoints_AccessPoint_System_Logging_RemoteServers&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AccessPoints_AccessPoint_System_Logging_RemoteServers& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AccessPoints_AccessPoint_System_Logging_RemoteServers* internal_default_instance() {
    return reinterpret_cast<const AccessPoints_AccessPoint_System_Logging_RemoteServers*>(
               &_AccessPoints_AccessPoint_System_Logging_RemoteServers_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    163;

  void Swap(AccessPoints_AccessPoint_System_Logging_RemoteServers* other);
  friend void swap(AccessPoints_AccessPoint_System_Logging_RemoteServers& a, AccessPoints_AccessPoint_System_Logging_RemoteServers& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AccessPoints_AccessPoint_System_Logging_RemoteServers* New() const PROTOBUF_FINAL { return New(NULL); }

  AccessPoints_AccessPoint_System_Logging_RemoteServers* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AccessPoints_AccessPoint_System_Logging_RemoteServers& from);
  void MergeFrom(const AccessPoints_AccessPoint_System_Logging_RemoteServers& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AccessPoints_AccessPoint_System_Logging_RemoteServers* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer RemoteServer;
  typedef AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServerKey RemoteServerKey;

  // accessors -------------------------------------------------------

  // repeated .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Logging.RemoteServers.RemoteServerKey remote_server = 140624747 [(.yext.schemapath) = "/access-points/access-point/system/logging/remote-servers/remote-server"];
  int remote_server_size() const;
  void clear_remote_server();
  static const int kRemoteServerFieldNumber = 140624747;
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServerKey& remote_server(int index) const;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServerKey* mutable_remote_server(int index);
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServerKey* add_remote_server();
  ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServerKey >*
      mutable_remote_server();
  const ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServerKey >&
      remote_server() const;

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Logging.RemoteServers)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServerKey > remote_server_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::InitDefaultsAccessPoints_AccessPoint_System_Logging_RemoteServersImpl();
};
// -------------------------------------------------------------------

class AccessPoints_AccessPoint_System_Logging : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Logging) */ {
 public:
  AccessPoints_AccessPoint_System_Logging();
  virtual ~AccessPoints_AccessPoint_System_Logging();

  AccessPoints_AccessPoint_System_Logging(const AccessPoints_AccessPoint_System_Logging& from);

  inline AccessPoints_AccessPoint_System_Logging& operator=(const AccessPoints_AccessPoint_System_Logging& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AccessPoints_AccessPoint_System_Logging(AccessPoints_AccessPoint_System_Logging&& from) noexcept
    : AccessPoints_AccessPoint_System_Logging() {
    *this = ::std::move(from);
  }

  inline AccessPoints_AccessPoint_System_Logging& operator=(AccessPoints_AccessPoint_System_Logging&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AccessPoints_AccessPoint_System_Logging& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AccessPoints_AccessPoint_System_Logging* internal_default_instance() {
    return reinterpret_cast<const AccessPoints_AccessPoint_System_Logging*>(
               &_AccessPoints_AccessPoint_System_Logging_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    164;

  void Swap(AccessPoints_AccessPoint_System_Logging* other);
  friend void swap(AccessPoints_AccessPoint_System_Logging& a, AccessPoints_AccessPoint_System_Logging& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AccessPoints_AccessPoint_System_Logging* New() const PROTOBUF_FINAL { return New(NULL); }

  AccessPoints_AccessPoint_System_Logging* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AccessPoints_AccessPoint_System_Logging& from);
  void MergeFrom(const AccessPoints_AccessPoint_System_Logging& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AccessPoints_AccessPoint_System_Logging* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef AccessPoints_AccessPoint_System_Logging_Console Console;
  typedef AccessPoints_AccessPoint_System_Logging_RemoteServers RemoteServers;

  // accessors -------------------------------------------------------

  // .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Logging.RemoteServers remote_servers = 179471252 [(.yext.schemapath) = "/access-points/access-point/system/logging/remote-servers"];
  bool has_remote_servers() const;
  void clear_remote_servers();
  static const int kRemoteServersFieldNumber = 179471252;
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging_RemoteServers& remote_servers() const;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging_RemoteServers* release_remote_servers();
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging_RemoteServers* mutable_remote_servers();
  void set_allocated_remote_servers(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging_RemoteServers* remote_servers);

  // .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Logging.Console console = 194524352 [(.yext.schemapath) = "/access-points/access-point/system/logging/console"];
  bool has_console() const;
  void clear_console();
  static const int kConsoleFieldNumber = 194524352;
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging_Console& console() const;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging_Console* release_console();
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging_Console* mutable_console();
  void set_allocated_console(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging_Console* console);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Logging)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging_RemoteServers* remote_servers_;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging_Console* console_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::InitDefaultsAccessPoints_AccessPoint_System_LoggingImpl();
};
// -------------------------------------------------------------------

class AccessPoints_AccessPoint_System_Memory_Config : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Memory.Config) */ {
 public:
  AccessPoints_AccessPoint_System_Memory_Config();
  virtual ~AccessPoints_AccessPoint_System_Memory_Config();

  AccessPoints_AccessPoint_System_Memory_Config(const AccessPoints_AccessPoint_System_Memory_Config& from);

  inline AccessPoints_AccessPoint_System_Memory_Config& operator=(const AccessPoints_AccessPoint_System_Memory_Config& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AccessPoints_AccessPoint_System_Memory_Config(AccessPoints_AccessPoint_System_Memory_Config&& from) noexcept
    : AccessPoints_AccessPoint_System_Memory_Config() {
    *this = ::std::move(from);
  }

  inline AccessPoints_AccessPoint_System_Memory_Config& operator=(AccessPoints_AccessPoint_System_Memory_Config&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AccessPoints_AccessPoint_System_Memory_Config& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AccessPoints_AccessPoint_System_Memory_Config* internal_default_instance() {
    return reinterpret_cast<const AccessPoints_AccessPoint_System_Memory_Config*>(
               &_AccessPoints_AccessPoint_System_Memory_Config_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    165;

  void Swap(AccessPoints_AccessPoint_System_Memory_Config* other);
  friend void swap(AccessPoints_AccessPoint_System_Memory_Config& a, AccessPoints_AccessPoint_System_Memory_Config& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AccessPoints_AccessPoint_System_Memory_Config* New() const PROTOBUF_FINAL { return New(NULL); }

  AccessPoints_AccessPoint_System_Memory_Config* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AccessPoints_AccessPoint_System_Memory_Config& from);
  void MergeFrom(const AccessPoints_AccessPoint_System_Memory_Config& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AccessPoints_AccessPoint_System_Memory_Config* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Memory.Config)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::InitDefaultsAccessPoints_AccessPoint_System_Memory_ConfigImpl();
};
// -------------------------------------------------------------------

class AccessPoints_AccessPoint_System_Memory_State : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Memory.State) */ {
 public:
  AccessPoints_AccessPoint_System_Memory_State();
  virtual ~AccessPoints_AccessPoint_System_Memory_State();

  AccessPoints_AccessPoint_System_Memory_State(const AccessPoints_AccessPoint_System_Memory_State& from);

  inline AccessPoints_AccessPoint_System_Memory_State& operator=(const AccessPoints_AccessPoint_System_Memory_State& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AccessPoints_AccessPoint_System_Memory_State(AccessPoints_AccessPoint_System_Memory_State&& from) noexcept
    : AccessPoints_AccessPoint_System_Memory_State() {
    *this = ::std::move(from);
  }

  inline AccessPoints_AccessPoint_System_Memory_State& operator=(AccessPoints_AccessPoint_System_Memory_State&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AccessPoints_AccessPoint_System_Memory_State& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AccessPoints_AccessPoint_System_Memory_State* internal_default_instance() {
    return reinterpret_cast<const AccessPoints_AccessPoint_System_Memory_State*>(
               &_AccessPoints_AccessPoint_System_Memory_State_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    166;

  void Swap(AccessPoints_AccessPoint_System_Memory_State* other);
  friend void swap(AccessPoints_AccessPoint_System_Memory_State& a, AccessPoints_AccessPoint_System_Memory_State& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AccessPoints_AccessPoint_System_Memory_State* New() const PROTOBUF_FINAL { return New(NULL); }

  AccessPoints_AccessPoint_System_Memory_State* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AccessPoints_AccessPoint_System_Memory_State& from);
  void MergeFrom(const AccessPoints_AccessPoint_System_Memory_State& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AccessPoints_AccessPoint_System_Memory_State* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .ywrapper.UintValue physical = 26298580 [(.yext.schemapath) = "/access-points/access-point/system/memory/state/physical"];
  bool has_physical() const;
  void clear_physical();
  static const int kPhysicalFieldNumber = 26298580;
  const ::ywrapper::UintValue& physical() const;
  ::ywrapper::UintValue* release_physical();
  ::ywrapper::UintValue* mutable_physical();
  void set_allocated_physical(::ywrapper::UintValue* physical);

  // .ywrapper.UintValue reserved = 421913059 [(.yext.schemapath) = "/access-points/access-point/system/memory/state/reserved"];
  bool has_reserved() const;
  void clear_reserved();
  static const int kReservedFieldNumber = 421913059;
  const ::ywrapper::UintValue& reserved() const;
  ::ywrapper::UintValue* release_reserved();
  ::ywrapper::UintValue* mutable_reserved();
  void set_allocated_reserved(::ywrapper::UintValue* reserved);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Memory.State)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ywrapper::UintValue* physical_;
  ::ywrapper::UintValue* reserved_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::InitDefaultsAccessPoints_AccessPoint_System_Memory_StateImpl();
};
// -------------------------------------------------------------------

class AccessPoints_AccessPoint_System_Memory : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Memory) */ {
 public:
  AccessPoints_AccessPoint_System_Memory();
  virtual ~AccessPoints_AccessPoint_System_Memory();

  AccessPoints_AccessPoint_System_Memory(const AccessPoints_AccessPoint_System_Memory& from);

  inline AccessPoints_AccessPoint_System_Memory& operator=(const AccessPoints_AccessPoint_System_Memory& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AccessPoints_AccessPoint_System_Memory(AccessPoints_AccessPoint_System_Memory&& from) noexcept
    : AccessPoints_AccessPoint_System_Memory() {
    *this = ::std::move(from);
  }

  inline AccessPoints_AccessPoint_System_Memory& operator=(AccessPoints_AccessPoint_System_Memory&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AccessPoints_AccessPoint_System_Memory& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AccessPoints_AccessPoint_System_Memory* internal_default_instance() {
    return reinterpret_cast<const AccessPoints_AccessPoint_System_Memory*>(
               &_AccessPoints_AccessPoint_System_Memory_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    167;

  void Swap(AccessPoints_AccessPoint_System_Memory* other);
  friend void swap(AccessPoints_AccessPoint_System_Memory& a, AccessPoints_AccessPoint_System_Memory& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AccessPoints_AccessPoint_System_Memory* New() const PROTOBUF_FINAL { return New(NULL); }

  AccessPoints_AccessPoint_System_Memory* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AccessPoints_AccessPoint_System_Memory& from);
  void MergeFrom(const AccessPoints_AccessPoint_System_Memory& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AccessPoints_AccessPoint_System_Memory* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef AccessPoints_AccessPoint_System_Memory_Config Config;
  typedef AccessPoints_AccessPoint_System_Memory_State State;

  // accessors -------------------------------------------------------

  // .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Memory.State state = 120418132 [(.yext.schemapath) = "/access-points/access-point/system/memory/state"];
  bool has_state() const;
  void clear_state();
  static const int kStateFieldNumber = 120418132;
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Memory_State& state() const;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Memory_State* release_state();
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Memory_State* mutable_state();
  void set_allocated_state(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Memory_State* state);

  // .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Memory.Config config = 135107827 [(.yext.schemapath) = "/access-points/access-point/system/memory/config"];
  bool has_config() const;
  void clear_config();
  static const int kConfigFieldNumber = 135107827;
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Memory_Config& config() const;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Memory_Config* release_config();
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Memory_Config* mutable_config();
  void set_allocated_config(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Memory_Config* config);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Memory)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Memory_State* state_;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Memory_Config* config_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::InitDefaultsAccessPoints_AccessPoint_System_MemoryImpl();
};
// -------------------------------------------------------------------

class AccessPoints_AccessPoint_System_Ntp_Config : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Ntp.Config) */ {
 public:
  AccessPoints_AccessPoint_System_Ntp_Config();
  virtual ~AccessPoints_AccessPoint_System_Ntp_Config();

  AccessPoints_AccessPoint_System_Ntp_Config(const AccessPoints_AccessPoint_System_Ntp_Config& from);

  inline AccessPoints_AccessPoint_System_Ntp_Config& operator=(const AccessPoints_AccessPoint_System_Ntp_Config& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AccessPoints_AccessPoint_System_Ntp_Config(AccessPoints_AccessPoint_System_Ntp_Config&& from) noexcept
    : AccessPoints_AccessPoint_System_Ntp_Config() {
    *this = ::std::move(from);
  }

  inline AccessPoints_AccessPoint_System_Ntp_Config& operator=(AccessPoints_AccessPoint_System_Ntp_Config&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AccessPoints_AccessPoint_System_Ntp_Config& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AccessPoints_AccessPoint_System_Ntp_Config* internal_default_instance() {
    return reinterpret_cast<const AccessPoints_AccessPoint_System_Ntp_Config*>(
               &_AccessPoints_AccessPoint_System_Ntp_Config_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    168;

  void Swap(AccessPoints_AccessPoint_System_Ntp_Config* other);
  friend void swap(AccessPoints_AccessPoint_System_Ntp_Config& a, AccessPoints_AccessPoint_System_Ntp_Config& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AccessPoints_AccessPoint_System_Ntp_Config* New() const PROTOBUF_FINAL { return New(NULL); }

  AccessPoints_AccessPoint_System_Ntp_Config* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AccessPoints_AccessPoint_System_Ntp_Config& from);
  void MergeFrom(const AccessPoints_AccessPoint_System_Ntp_Config& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AccessPoints_AccessPoint_System_Ntp_Config* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .ywrapper.BoolValue enabled = 157878698 [(.yext.schemapath) = "/access-points/access-point/system/ntp/config/enabled"];
  bool has_enabled() const;
  void clear_enabled();
  static const int kEnabledFieldNumber = 157878698;
  const ::ywrapper::BoolValue& enabled() const;
  ::ywrapper::BoolValue* release_enabled();
  ::ywrapper::BoolValue* mutable_enabled();
  void set_allocated_enabled(::ywrapper::BoolValue* enabled);

  // .ywrapper.BoolValue enable_ntp_auth = 442584302 [(.yext.schemapath) = "/access-points/access-point/system/ntp/config/enable-ntp-auth"];
  bool has_enable_ntp_auth() const;
  void clear_enable_ntp_auth();
  static const int kEnableNtpAuthFieldNumber = 442584302;
  const ::ywrapper::BoolValue& enable_ntp_auth() const;
  ::ywrapper::BoolValue* release_enable_ntp_auth();
  ::ywrapper::BoolValue* mutable_enable_ntp_auth();
  void set_allocated_enable_ntp_auth(::ywrapper::BoolValue* enable_ntp_auth);

  // .ywrapper.StringValue ntp_source_address = 526405384 [(.yext.schemapath) = "/access-points/access-point/system/ntp/config/ntp-source-address"];
  bool has_ntp_source_address() const;
  void clear_ntp_source_address();
  static const int kNtpSourceAddressFieldNumber = 526405384;
  const ::ywrapper::StringValue& ntp_source_address() const;
  ::ywrapper::StringValue* release_ntp_source_address();
  ::ywrapper::StringValue* mutable_ntp_source_address();
  void set_allocated_ntp_source_address(::ywrapper::StringValue* ntp_source_address);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Ntp.Config)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ywrapper::BoolValue* enabled_;
  ::ywrapper::BoolValue* enable_ntp_auth_;
  ::ywrapper::StringValue* ntp_source_address_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::InitDefaultsAccessPoints_AccessPoint_System_Ntp_ConfigImpl();
};
// -------------------------------------------------------------------

class AccessPoints_AccessPoint_System_Ntp_NtpKeys_NtpKey_Config : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Ntp.NtpKeys.NtpKey.Config) */ {
 public:
  AccessPoints_AccessPoint_System_Ntp_NtpKeys_NtpKey_Config();
  virtual ~AccessPoints_AccessPoint_System_Ntp_NtpKeys_NtpKey_Config();

  AccessPoints_AccessPoint_System_Ntp_NtpKeys_NtpKey_Config(const AccessPoints_AccessPoint_System_Ntp_NtpKeys_NtpKey_Config& from);

  inline AccessPoints_AccessPoint_System_Ntp_NtpKeys_NtpKey_Config& operator=(const AccessPoints_AccessPoint_System_Ntp_NtpKeys_NtpKey_Config& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AccessPoints_AccessPoint_System_Ntp_NtpKeys_NtpKey_Config(AccessPoints_AccessPoint_System_Ntp_NtpKeys_NtpKey_Config&& from) noexcept
    : AccessPoints_AccessPoint_System_Ntp_NtpKeys_NtpKey_Config() {
    *this = ::std::move(from);
  }

  inline AccessPoints_AccessPoint_System_Ntp_NtpKeys_NtpKey_Config& operator=(AccessPoints_AccessPoint_System_Ntp_NtpKeys_NtpKey_Config&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AccessPoints_AccessPoint_System_Ntp_NtpKeys_NtpKey_Config& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AccessPoints_AccessPoint_System_Ntp_NtpKeys_NtpKey_Config* internal_default_instance() {
    return reinterpret_cast<const AccessPoints_AccessPoint_System_Ntp_NtpKeys_NtpKey_Config*>(
               &_AccessPoints_AccessPoint_System_Ntp_NtpKeys_NtpKey_Config_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    169;

  void Swap(AccessPoints_AccessPoint_System_Ntp_NtpKeys_NtpKey_Config* other);
  friend void swap(AccessPoints_AccessPoint_System_Ntp_NtpKeys_NtpKey_Config& a, AccessPoints_AccessPoint_System_Ntp_NtpKeys_NtpKey_Config& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AccessPoints_AccessPoint_System_Ntp_NtpKeys_NtpKey_Config* New() const PROTOBUF_FINAL { return New(NULL); }

  AccessPoints_AccessPoint_System_Ntp_NtpKeys_NtpKey_Config* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AccessPoints_AccessPoint_System_Ntp_NtpKeys_NtpKey_Config& from);
  void MergeFrom(const AccessPoints_AccessPoint_System_Ntp_NtpKeys_NtpKey_Config& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AccessPoints_AccessPoint_System_Ntp_NtpKeys_NtpKey_Config* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .ywrapper.StringValue key_value = 176946569 [(.yext.schemapath) = "/access-points/access-point/system/ntp/ntp-keys/ntp-key/config/key-value"];
  bool has_key_value() const;
  void clear_key_value();
  static const int kKeyValueFieldNumber = 176946569;
  const ::ywrapper::StringValue& key_value() const;
  ::ywrapper::StringValue* release_key_value();
  ::ywrapper::StringValue* mutable_key_value();
  void set_allocated_key_value(::ywrapper::StringValue* key_value);

  // .ywrapper.UintValue key_id = 453095733 [(.yext.schemapath) = "/access-points/access-point/system/ntp/ntp-keys/ntp-key/config/key-id"];
  bool has_key_id() const;
  void clear_key_id();
  static const int kKeyIdFieldNumber = 453095733;
  const ::ywrapper::UintValue& key_id() const;
  ::ywrapper::UintValue* release_key_id();
  ::ywrapper::UintValue* mutable_key_id();
  void set_allocated_key_id(::ywrapper::UintValue* key_id);

  // .openconfig.enums.OpenconfigSystemNTPAUTHTYPE key_type = 88813766 [(.yext.schemapath) = "/access-points/access-point/system/ntp/ntp-keys/ntp-key/config/key-type"];
  void clear_key_type();
  static const int kKeyTypeFieldNumber = 88813766;
  ::openconfig::enums::OpenconfigSystemNTPAUTHTYPE key_type() const;
  void set_key_type(::openconfig::enums::OpenconfigSystemNTPAUTHTYPE value);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Ntp.NtpKeys.NtpKey.Config)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ywrapper::StringValue* key_value_;
  ::ywrapper::UintValue* key_id_;
  int key_type_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::InitDefaultsAccessPoints_AccessPoint_System_Ntp_NtpKeys_NtpKey_ConfigImpl();
};
// -------------------------------------------------------------------

class AccessPoints_AccessPoint_System_Ntp_NtpKeys_NtpKey_State : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Ntp.NtpKeys.NtpKey.State) */ {
 public:
  AccessPoints_AccessPoint_System_Ntp_NtpKeys_NtpKey_State();
  virtual ~AccessPoints_AccessPoint_System_Ntp_NtpKeys_NtpKey_State();

  AccessPoints_AccessPoint_System_Ntp_NtpKeys_NtpKey_State(const AccessPoints_AccessPoint_System_Ntp_NtpKeys_NtpKey_State& from);

  inline AccessPoints_AccessPoint_System_Ntp_NtpKeys_NtpKey_State& operator=(const AccessPoints_AccessPoint_System_Ntp_NtpKeys_NtpKey_State& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AccessPoints_AccessPoint_System_Ntp_NtpKeys_NtpKey_State(AccessPoints_AccessPoint_System_Ntp_NtpKeys_NtpKey_State&& from) noexcept
    : AccessPoints_AccessPoint_System_Ntp_NtpKeys_NtpKey_State() {
    *this = ::std::move(from);
  }

  inline AccessPoints_AccessPoint_System_Ntp_NtpKeys_NtpKey_State& operator=(AccessPoints_AccessPoint_System_Ntp_NtpKeys_NtpKey_State&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AccessPoints_AccessPoint_System_Ntp_NtpKeys_NtpKey_State& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AccessPoints_AccessPoint_System_Ntp_NtpKeys_NtpKey_State* internal_default_instance() {
    return reinterpret_cast<const AccessPoints_AccessPoint_System_Ntp_NtpKeys_NtpKey_State*>(
               &_AccessPoints_AccessPoint_System_Ntp_NtpKeys_NtpKey_State_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    170;

  void Swap(AccessPoints_AccessPoint_System_Ntp_NtpKeys_NtpKey_State* other);
  friend void swap(AccessPoints_AccessPoint_System_Ntp_NtpKeys_NtpKey_State& a, AccessPoints_AccessPoint_System_Ntp_NtpKeys_NtpKey_State& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AccessPoints_AccessPoint_System_Ntp_NtpKeys_NtpKey_State* New() const PROTOBUF_FINAL { return New(NULL); }

  AccessPoints_AccessPoint_System_Ntp_NtpKeys_NtpKey_State* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AccessPoints_AccessPoint_System_Ntp_NtpKeys_NtpKey_State& from);
  void MergeFrom(const AccessPoints_AccessPoint_System_Ntp_NtpKeys_NtpKey_State& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AccessPoints_AccessPoint_System_Ntp_NtpKeys_NtpKey_State* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .ywrapper.UintValue key_id = 15852988 [(.yext.schemapath) = "/access-points/access-point/system/ntp/ntp-keys/ntp-key/state/key-id"];
  bool has_key_id() const;
  void clear_key_id();
  static const int kKeyIdFieldNumber = 15852988;
  const ::ywrapper::UintValue& key_id() const;
  ::ywrapper::UintValue* release_key_id();
  ::ywrapper::UintValue* mutable_key_id();
  void set_allocated_key_id(::ywrapper::UintValue* key_id);

  // .ywrapper.StringValue key_value = 63348218 [(.yext.schemapath) = "/access-points/access-point/system/ntp/ntp-keys/ntp-key/state/key-value"];
  bool has_key_value() const;
  void clear_key_value();
  static const int kKeyValueFieldNumber = 63348218;
  const ::ywrapper::StringValue& key_value() const;
  ::ywrapper::StringValue* release_key_value();
  ::ywrapper::StringValue* mutable_key_value();
  void set_allocated_key_value(::ywrapper::StringValue* key_value);

  // .openconfig.enums.OpenconfigSystemNTPAUTHTYPE key_type = 300551187 [(.yext.schemapath) = "/access-points/access-point/system/ntp/ntp-keys/ntp-key/state/key-type"];
  void clear_key_type();
  static const int kKeyTypeFieldNumber = 300551187;
  ::openconfig::enums::OpenconfigSystemNTPAUTHTYPE key_type() const;
  void set_key_type(::openconfig::enums::OpenconfigSystemNTPAUTHTYPE value);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Ntp.NtpKeys.NtpKey.State)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ywrapper::UintValue* key_id_;
  ::ywrapper::StringValue* key_value_;
  int key_type_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::InitDefaultsAccessPoints_AccessPoint_System_Ntp_NtpKeys_NtpKey_StateImpl();
};
// -------------------------------------------------------------------

class AccessPoints_AccessPoint_System_Ntp_NtpKeys_NtpKey : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Ntp.NtpKeys.NtpKey) */ {
 public:
  AccessPoints_AccessPoint_System_Ntp_NtpKeys_NtpKey();
  virtual ~AccessPoints_AccessPoint_System_Ntp_NtpKeys_NtpKey();

  AccessPoints_AccessPoint_System_Ntp_NtpKeys_NtpKey(const AccessPoints_AccessPoint_System_Ntp_NtpKeys_NtpKey& from);

  inline AccessPoints_AccessPoint_System_Ntp_NtpKeys_NtpKey& operator=(const AccessPoints_AccessPoint_System_Ntp_NtpKeys_NtpKey& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AccessPoints_AccessPoint_System_Ntp_NtpKeys_NtpKey(AccessPoints_AccessPoint_System_Ntp_NtpKeys_NtpKey&& from) noexcept
    : AccessPoints_AccessPoint_System_Ntp_NtpKeys_NtpKey() {
    *this = ::std::move(from);
  }

  inline AccessPoints_AccessPoint_System_Ntp_NtpKeys_NtpKey& operator=(AccessPoints_AccessPoint_System_Ntp_NtpKeys_NtpKey&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AccessPoints_AccessPoint_System_Ntp_NtpKeys_NtpKey& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AccessPoints_AccessPoint_System_Ntp_NtpKeys_NtpKey* internal_default_instance() {
    return reinterpret_cast<const AccessPoints_AccessPoint_System_Ntp_NtpKeys_NtpKey*>(
               &_AccessPoints_AccessPoint_System_Ntp_NtpKeys_NtpKey_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    171;

  void Swap(AccessPoints_AccessPoint_System_Ntp_NtpKeys_NtpKey* other);
  friend void swap(AccessPoints_AccessPoint_System_Ntp_NtpKeys_NtpKey& a, AccessPoints_AccessPoint_System_Ntp_NtpKeys_NtpKey& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AccessPoints_AccessPoint_System_Ntp_NtpKeys_NtpKey* New() const PROTOBUF_FINAL { return New(NULL); }

  AccessPoints_AccessPoint_System_Ntp_NtpKeys_NtpKey* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AccessPoints_AccessPoint_System_Ntp_NtpKeys_NtpKey& from);
  void MergeFrom(const AccessPoints_AccessPoint_System_Ntp_NtpKeys_NtpKey& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AccessPoints_AccessPoint_System_Ntp_NtpKeys_NtpKey* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef AccessPoints_AccessPoint_System_Ntp_NtpKeys_NtpKey_Config Config;
  typedef AccessPoints_AccessPoint_System_Ntp_NtpKeys_NtpKey_State State;

  // accessors -------------------------------------------------------

  // .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Ntp.NtpKeys.NtpKey.Config config = 115789833 [(.yext.schemapath) = "/access-points/access-point/system/ntp/ntp-keys/ntp-key/config"];
  bool has_config() const;
  void clear_config();
  static const int kConfigFieldNumber = 115789833;
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Ntp_NtpKeys_NtpKey_Config& config() const;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Ntp_NtpKeys_NtpKey_Config* release_config();
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Ntp_NtpKeys_NtpKey_Config* mutable_config();
  void set_allocated_config(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Ntp_NtpKeys_NtpKey_Config* config);

  // .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Ntp.NtpKeys.NtpKey.State state = 410663006 [(.yext.schemapath) = "/access-points/access-point/system/ntp/ntp-keys/ntp-key/state"];
  bool has_state() const;
  void clear_state();
  static const int kStateFieldNumber = 410663006;
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Ntp_NtpKeys_NtpKey_State& state() const;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Ntp_NtpKeys_NtpKey_State* release_state();
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Ntp_NtpKeys_NtpKey_State* mutable_state();
  void set_allocated_state(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Ntp_NtpKeys_NtpKey_State* state);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Ntp.NtpKeys.NtpKey)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Ntp_NtpKeys_NtpKey_Config* config_;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Ntp_NtpKeys_NtpKey_State* state_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::InitDefaultsAccessPoints_AccessPoint_System_Ntp_NtpKeys_NtpKeyImpl();
};
// -------------------------------------------------------------------

class AccessPoints_AccessPoint_System_Ntp_NtpKeys_NtpKeyKey : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Ntp.NtpKeys.NtpKeyKey) */ {
 public:
  AccessPoints_AccessPoint_System_Ntp_NtpKeys_NtpKeyKey();
  virtual ~AccessPoints_AccessPoint_System_Ntp_NtpKeys_NtpKeyKey();

  AccessPoints_AccessPoint_System_Ntp_NtpKeys_NtpKeyKey(const AccessPoints_AccessPoint_System_Ntp_NtpKeys_NtpKeyKey& from);

  inline AccessPoints_AccessPoint_System_Ntp_NtpKeys_NtpKeyKey& operator=(const AccessPoints_AccessPoint_System_Ntp_NtpKeys_NtpKeyKey& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AccessPoints_AccessPoint_System_Ntp_NtpKeys_NtpKeyKey(AccessPoints_AccessPoint_System_Ntp_NtpKeys_NtpKeyKey&& from) noexcept
    : AccessPoints_AccessPoint_System_Ntp_NtpKeys_NtpKeyKey() {
    *this = ::std::move(from);
  }

  inline AccessPoints_AccessPoint_System_Ntp_NtpKeys_NtpKeyKey& operator=(AccessPoints_AccessPoint_System_Ntp_NtpKeys_NtpKeyKey&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AccessPoints_AccessPoint_System_Ntp_NtpKeys_NtpKeyKey& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AccessPoints_AccessPoint_System_Ntp_NtpKeys_NtpKeyKey* internal_default_instance() {
    return reinterpret_cast<const AccessPoints_AccessPoint_System_Ntp_NtpKeys_NtpKeyKey*>(
               &_AccessPoints_AccessPoint_System_Ntp_NtpKeys_NtpKeyKey_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    172;

  void Swap(AccessPoints_AccessPoint_System_Ntp_NtpKeys_NtpKeyKey* other);
  friend void swap(AccessPoints_AccessPoint_System_Ntp_NtpKeys_NtpKeyKey& a, AccessPoints_AccessPoint_System_Ntp_NtpKeys_NtpKeyKey& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AccessPoints_AccessPoint_System_Ntp_NtpKeys_NtpKeyKey* New() const PROTOBUF_FINAL { return New(NULL); }

  AccessPoints_AccessPoint_System_Ntp_NtpKeys_NtpKeyKey* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AccessPoints_AccessPoint_System_Ntp_NtpKeys_NtpKeyKey& from);
  void MergeFrom(const AccessPoints_AccessPoint_System_Ntp_NtpKeys_NtpKeyKey& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AccessPoints_AccessPoint_System_Ntp_NtpKeys_NtpKeyKey* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Ntp.NtpKeys.NtpKey ntp_key = 2;
  bool has_ntp_key() const;
  void clear_ntp_key();
  static const int kNtpKeyFieldNumber = 2;
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Ntp_NtpKeys_NtpKey& ntp_key() const;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Ntp_NtpKeys_NtpKey* release_ntp_key();
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Ntp_NtpKeys_NtpKey* mutable_ntp_key();
  void set_allocated_ntp_key(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Ntp_NtpKeys_NtpKey* ntp_key);

  // uint64 key_id = 1 [(.yext.schemapath) = "/access-points/access-point/system/ntp/ntp-keys/ntp-key/key-id"];
  void clear_key_id();
  static const int kKeyIdFieldNumber = 1;
  ::google::protobuf::uint64 key_id() const;
  void set_key_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Ntp.NtpKeys.NtpKeyKey)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Ntp_NtpKeys_NtpKey* ntp_key_;
  ::google::protobuf::uint64 key_id_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::InitDefaultsAccessPoints_AccessPoint_System_Ntp_NtpKeys_NtpKeyKeyImpl();
};
// -------------------------------------------------------------------

class AccessPoints_AccessPoint_System_Ntp_NtpKeys : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Ntp.NtpKeys) */ {
 public:
  AccessPoints_AccessPoint_System_Ntp_NtpKeys();
  virtual ~AccessPoints_AccessPoint_System_Ntp_NtpKeys();

  AccessPoints_AccessPoint_System_Ntp_NtpKeys(const AccessPoints_AccessPoint_System_Ntp_NtpKeys& from);

  inline AccessPoints_AccessPoint_System_Ntp_NtpKeys& operator=(const AccessPoints_AccessPoint_System_Ntp_NtpKeys& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AccessPoints_AccessPoint_System_Ntp_NtpKeys(AccessPoints_AccessPoint_System_Ntp_NtpKeys&& from) noexcept
    : AccessPoints_AccessPoint_System_Ntp_NtpKeys() {
    *this = ::std::move(from);
  }

  inline AccessPoints_AccessPoint_System_Ntp_NtpKeys& operator=(AccessPoints_AccessPoint_System_Ntp_NtpKeys&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AccessPoints_AccessPoint_System_Ntp_NtpKeys& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AccessPoints_AccessPoint_System_Ntp_NtpKeys* internal_default_instance() {
    return reinterpret_cast<const AccessPoints_AccessPoint_System_Ntp_NtpKeys*>(
               &_AccessPoints_AccessPoint_System_Ntp_NtpKeys_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    173;

  void Swap(AccessPoints_AccessPoint_System_Ntp_NtpKeys* other);
  friend void swap(AccessPoints_AccessPoint_System_Ntp_NtpKeys& a, AccessPoints_AccessPoint_System_Ntp_NtpKeys& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AccessPoints_AccessPoint_System_Ntp_NtpKeys* New() const PROTOBUF_FINAL { return New(NULL); }

  AccessPoints_AccessPoint_System_Ntp_NtpKeys* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AccessPoints_AccessPoint_System_Ntp_NtpKeys& from);
  void MergeFrom(const AccessPoints_AccessPoint_System_Ntp_NtpKeys& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AccessPoints_AccessPoint_System_Ntp_NtpKeys* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef AccessPoints_AccessPoint_System_Ntp_NtpKeys_NtpKey NtpKey;
  typedef AccessPoints_AccessPoint_System_Ntp_NtpKeys_NtpKeyKey NtpKeyKey;

  // accessors -------------------------------------------------------

  // repeated .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Ntp.NtpKeys.NtpKeyKey ntp_key = 44804836 [(.yext.schemapath) = "/access-points/access-point/system/ntp/ntp-keys/ntp-key"];
  int ntp_key_size() const;
  void clear_ntp_key();
  static const int kNtpKeyFieldNumber = 44804836;
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Ntp_NtpKeys_NtpKeyKey& ntp_key(int index) const;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Ntp_NtpKeys_NtpKeyKey* mutable_ntp_key(int index);
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Ntp_NtpKeys_NtpKeyKey* add_ntp_key();
  ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Ntp_NtpKeys_NtpKeyKey >*
      mutable_ntp_key();
  const ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Ntp_NtpKeys_NtpKeyKey >&
      ntp_key() const;

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Ntp.NtpKeys)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Ntp_NtpKeys_NtpKeyKey > ntp_key_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::InitDefaultsAccessPoints_AccessPoint_System_Ntp_NtpKeysImpl();
};
// -------------------------------------------------------------------

class AccessPoints_AccessPoint_System_Ntp_Servers_Server_Config : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Ntp.Servers.Server.Config) */ {
 public:
  AccessPoints_AccessPoint_System_Ntp_Servers_Server_Config();
  virtual ~AccessPoints_AccessPoint_System_Ntp_Servers_Server_Config();

  AccessPoints_AccessPoint_System_Ntp_Servers_Server_Config(const AccessPoints_AccessPoint_System_Ntp_Servers_Server_Config& from);

  inline AccessPoints_AccessPoint_System_Ntp_Servers_Server_Config& operator=(const AccessPoints_AccessPoint_System_Ntp_Servers_Server_Config& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AccessPoints_AccessPoint_System_Ntp_Servers_Server_Config(AccessPoints_AccessPoint_System_Ntp_Servers_Server_Config&& from) noexcept
    : AccessPoints_AccessPoint_System_Ntp_Servers_Server_Config() {
    *this = ::std::move(from);
  }

  inline AccessPoints_AccessPoint_System_Ntp_Servers_Server_Config& operator=(AccessPoints_AccessPoint_System_Ntp_Servers_Server_Config&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AccessPoints_AccessPoint_System_Ntp_Servers_Server_Config& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AccessPoints_AccessPoint_System_Ntp_Servers_Server_Config* internal_default_instance() {
    return reinterpret_cast<const AccessPoints_AccessPoint_System_Ntp_Servers_Server_Config*>(
               &_AccessPoints_AccessPoint_System_Ntp_Servers_Server_Config_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    174;

  void Swap(AccessPoints_AccessPoint_System_Ntp_Servers_Server_Config* other);
  friend void swap(AccessPoints_AccessPoint_System_Ntp_Servers_Server_Config& a, AccessPoints_AccessPoint_System_Ntp_Servers_Server_Config& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AccessPoints_AccessPoint_System_Ntp_Servers_Server_Config* New() const PROTOBUF_FINAL { return New(NULL); }

  AccessPoints_AccessPoint_System_Ntp_Servers_Server_Config* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AccessPoints_AccessPoint_System_Ntp_Servers_Server_Config& from);
  void MergeFrom(const AccessPoints_AccessPoint_System_Ntp_Servers_Server_Config& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AccessPoints_AccessPoint_System_Ntp_Servers_Server_Config* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef AccessPoints_AccessPoint_System_Ntp_Servers_Server_Config_AssociationType AssociationType;
  static const AssociationType ASSOCIATIONTYPE_SERVER =
    AccessPoints_AccessPoint_System_Ntp_Servers_Server_Config_AssociationType_ASSOCIATIONTYPE_SERVER;
  static const AssociationType ASSOCIATIONTYPE_PEER =
    AccessPoints_AccessPoint_System_Ntp_Servers_Server_Config_AssociationType_ASSOCIATIONTYPE_PEER;
  static const AssociationType ASSOCIATIONTYPE_POOL =
    AccessPoints_AccessPoint_System_Ntp_Servers_Server_Config_AssociationType_ASSOCIATIONTYPE_POOL;
  static inline bool AssociationType_IsValid(int value) {
    return AccessPoints_AccessPoint_System_Ntp_Servers_Server_Config_AssociationType_IsValid(value);
  }
  static const AssociationType AssociationType_MIN =
    AccessPoints_AccessPoint_System_Ntp_Servers_Server_Config_AssociationType_AssociationType_MIN;
  static const AssociationType AssociationType_MAX =
    AccessPoints_AccessPoint_System_Ntp_Servers_Server_Config_AssociationType_AssociationType_MAX;
  static const int AssociationType_ARRAYSIZE =
    AccessPoints_AccessPoint_System_Ntp_Servers_Server_Config_AssociationType_AssociationType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  AssociationType_descriptor() {
    return AccessPoints_AccessPoint_System_Ntp_Servers_Server_Config_AssociationType_descriptor();
  }
  static inline const ::std::string& AssociationType_Name(AssociationType value) {
    return AccessPoints_AccessPoint_System_Ntp_Servers_Server_Config_AssociationType_Name(value);
  }
  static inline bool AssociationType_Parse(const ::std::string& name,
      AssociationType* value) {
    return AccessPoints_AccessPoint_System_Ntp_Servers_Server_Config_AssociationType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .ywrapper.StringValue address = 224303264 [(.yext.schemapath) = "/access-points/access-point/system/ntp/servers/server/config/address"];
  bool has_address() const;
  void clear_address();
  static const int kAddressFieldNumber = 224303264;
  const ::ywrapper::StringValue& address() const;
  ::ywrapper::StringValue* release_address();
  ::ywrapper::StringValue* mutable_address();
  void set_allocated_address(::ywrapper::StringValue* address);

  // .ywrapper.BoolValue prefer = 300736554 [(.yext.schemapath) = "/access-points/access-point/system/ntp/servers/server/config/prefer"];
  bool has_prefer() const;
  void clear_prefer();
  static const int kPreferFieldNumber = 300736554;
  const ::ywrapper::BoolValue& prefer() const;
  ::ywrapper::BoolValue* release_prefer();
  ::ywrapper::BoolValue* mutable_prefer();
  void set_allocated_prefer(::ywrapper::BoolValue* prefer);

  // .ywrapper.BoolValue iburst = 352581413 [(.yext.schemapath) = "/access-points/access-point/system/ntp/servers/server/config/iburst"];
  bool has_iburst() const;
  void clear_iburst();
  static const int kIburstFieldNumber = 352581413;
  const ::ywrapper::BoolValue& iburst() const;
  ::ywrapper::BoolValue* release_iburst();
  ::ywrapper::BoolValue* mutable_iburst();
  void set_allocated_iburst(::ywrapper::BoolValue* iburst);

  // .ywrapper.UintValue port = 430227705 [(.yext.schemapath) = "/access-points/access-point/system/ntp/servers/server/config/port"];
  bool has_port() const;
  void clear_port();
  static const int kPortFieldNumber = 430227705;
  const ::ywrapper::UintValue& port() const;
  ::ywrapper::UintValue* release_port();
  ::ywrapper::UintValue* mutable_port();
  void set_allocated_port(::ywrapper::UintValue* port);

  // .ywrapper.UintValue version = 480763524 [(.yext.schemapath) = "/access-points/access-point/system/ntp/servers/server/config/version"];
  bool has_version() const;
  void clear_version();
  static const int kVersionFieldNumber = 480763524;
  const ::ywrapper::UintValue& version() const;
  ::ywrapper::UintValue* release_version();
  ::ywrapper::UintValue* mutable_version();
  void set_allocated_version(::ywrapper::UintValue* version);

  // .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Ntp.Servers.Server.Config.AssociationType association_type = 252815986 [(.yext.schemapath) = "/access-points/access-point/system/ntp/servers/server/config/association-type"];
  void clear_association_type();
  static const int kAssociationTypeFieldNumber = 252815986;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Ntp_Servers_Server_Config_AssociationType association_type() const;
  void set_association_type(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Ntp_Servers_Server_Config_AssociationType value);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Ntp.Servers.Server.Config)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ywrapper::StringValue* address_;
  ::ywrapper::BoolValue* prefer_;
  ::ywrapper::BoolValue* iburst_;
  ::ywrapper::UintValue* port_;
  ::ywrapper::UintValue* version_;
  int association_type_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::InitDefaultsAccessPoints_AccessPoint_System_Ntp_Servers_Server_ConfigImpl();
};
// -------------------------------------------------------------------

class AccessPoints_AccessPoint_System_Ntp_Servers_Server_State : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Ntp.Servers.Server.State) */ {
 public:
  AccessPoints_AccessPoint_System_Ntp_Servers_Server_State();
  virtual ~AccessPoints_AccessPoint_System_Ntp_Servers_Server_State();

  AccessPoints_AccessPoint_System_Ntp_Servers_Server_State(const AccessPoints_AccessPoint_System_Ntp_Servers_Server_State& from);

  inline AccessPoints_AccessPoint_System_Ntp_Servers_Server_State& operator=(const AccessPoints_AccessPoint_System_Ntp_Servers_Server_State& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AccessPoints_AccessPoint_System_Ntp_Servers_Server_State(AccessPoints_AccessPoint_System_Ntp_Servers_Server_State&& from) noexcept
    : AccessPoints_AccessPoint_System_Ntp_Servers_Server_State() {
    *this = ::std::move(from);
  }

  inline AccessPoints_AccessPoint_System_Ntp_Servers_Server_State& operator=(AccessPoints_AccessPoint_System_Ntp_Servers_Server_State&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AccessPoints_AccessPoint_System_Ntp_Servers_Server_State& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AccessPoints_AccessPoint_System_Ntp_Servers_Server_State* internal_default_instance() {
    return reinterpret_cast<const AccessPoints_AccessPoint_System_Ntp_Servers_Server_State*>(
               &_AccessPoints_AccessPoint_System_Ntp_Servers_Server_State_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    175;

  void Swap(AccessPoints_AccessPoint_System_Ntp_Servers_Server_State* other);
  friend void swap(AccessPoints_AccessPoint_System_Ntp_Servers_Server_State& a, AccessPoints_AccessPoint_System_Ntp_Servers_Server_State& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AccessPoints_AccessPoint_System_Ntp_Servers_Server_State* New() const PROTOBUF_FINAL { return New(NULL); }

  AccessPoints_AccessPoint_System_Ntp_Servers_Server_State* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AccessPoints_AccessPoint_System_Ntp_Servers_Server_State& from);
  void MergeFrom(const AccessPoints_AccessPoint_System_Ntp_Servers_Server_State& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AccessPoints_AccessPoint_System_Ntp_Servers_Server_State* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef AccessPoints_AccessPoint_System_Ntp_Servers_Server_State_AssociationType AssociationType;
  static const AssociationType ASSOCIATIONTYPE_SERVER =
    AccessPoints_AccessPoint_System_Ntp_Servers_Server_State_AssociationType_ASSOCIATIONTYPE_SERVER;
  static const AssociationType ASSOCIATIONTYPE_PEER =
    AccessPoints_AccessPoint_System_Ntp_Servers_Server_State_AssociationType_ASSOCIATIONTYPE_PEER;
  static const AssociationType ASSOCIATIONTYPE_POOL =
    AccessPoints_AccessPoint_System_Ntp_Servers_Server_State_AssociationType_ASSOCIATIONTYPE_POOL;
  static inline bool AssociationType_IsValid(int value) {
    return AccessPoints_AccessPoint_System_Ntp_Servers_Server_State_AssociationType_IsValid(value);
  }
  static const AssociationType AssociationType_MIN =
    AccessPoints_AccessPoint_System_Ntp_Servers_Server_State_AssociationType_AssociationType_MIN;
  static const AssociationType AssociationType_MAX =
    AccessPoints_AccessPoint_System_Ntp_Servers_Server_State_AssociationType_AssociationType_MAX;
  static const int AssociationType_ARRAYSIZE =
    AccessPoints_AccessPoint_System_Ntp_Servers_Server_State_AssociationType_AssociationType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  AssociationType_descriptor() {
    return AccessPoints_AccessPoint_System_Ntp_Servers_Server_State_AssociationType_descriptor();
  }
  static inline const ::std::string& AssociationType_Name(AssociationType value) {
    return AccessPoints_AccessPoint_System_Ntp_Servers_Server_State_AssociationType_Name(value);
  }
  static inline bool AssociationType_Parse(const ::std::string& name,
      AssociationType* value) {
    return AccessPoints_AccessPoint_System_Ntp_Servers_Server_State_AssociationType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .ywrapper.UintValue root_delay = 159513027 [(.yext.schemapath) = "/access-points/access-point/system/ntp/servers/server/state/root-delay"];
  bool has_root_delay() const;
  void clear_root_delay();
  static const int kRootDelayFieldNumber = 159513027;
  const ::ywrapper::UintValue& root_delay() const;
  ::ywrapper::UintValue* release_root_delay();
  ::ywrapper::UintValue* mutable_root_delay();
  void set_allocated_root_delay(::ywrapper::UintValue* root_delay);

  // .ywrapper.BoolValue prefer = 163892659 [(.yext.schemapath) = "/access-points/access-point/system/ntp/servers/server/state/prefer"];
  bool has_prefer() const;
  void clear_prefer();
  static const int kPreferFieldNumber = 163892659;
  const ::ywrapper::BoolValue& prefer() const;
  ::ywrapper::BoolValue* release_prefer();
  ::ywrapper::BoolValue* mutable_prefer();
  void set_allocated_prefer(::ywrapper::BoolValue* prefer);

  // .ywrapper.UintValue offset = 214307632 [(.yext.schemapath) = "/access-points/access-point/system/ntp/servers/server/state/offset"];
  bool has_offset() const;
  void clear_offset();
  static const int kOffsetFieldNumber = 214307632;
  const ::ywrapper::UintValue& offset() const;
  ::ywrapper::UintValue* release_offset();
  ::ywrapper::UintValue* mutable_offset();
  void set_allocated_offset(::ywrapper::UintValue* offset);

  // .ywrapper.UintValue poll_interval = 335447264 [(.yext.schemapath) = "/access-points/access-point/system/ntp/servers/server/state/poll-interval"];
  bool has_poll_interval() const;
  void clear_poll_interval();
  static const int kPollIntervalFieldNumber = 335447264;
  const ::ywrapper::UintValue& poll_interval() const;
  ::ywrapper::UintValue* release_poll_interval();
  ::ywrapper::UintValue* mutable_poll_interval();
  void set_allocated_poll_interval(::ywrapper::UintValue* poll_interval);

  // .ywrapper.BoolValue iburst = 356088404 [(.yext.schemapath) = "/access-points/access-point/system/ntp/servers/server/state/iburst"];
  bool has_iburst() const;
  void clear_iburst();
  static const int kIburstFieldNumber = 356088404;
  const ::ywrapper::BoolValue& iburst() const;
  ::ywrapper::BoolValue* release_iburst();
  ::ywrapper::BoolValue* mutable_iburst();
  void set_allocated_iburst(::ywrapper::BoolValue* iburst);

  // .ywrapper.UintValue stratum = 365726179 [(.yext.schemapath) = "/access-points/access-point/system/ntp/servers/server/state/stratum"];
  bool has_stratum() const;
  void clear_stratum();
  static const int kStratumFieldNumber = 365726179;
  const ::ywrapper::UintValue& stratum() const;
  ::ywrapper::UintValue* release_stratum();
  ::ywrapper::UintValue* mutable_stratum();
  void set_allocated_stratum(::ywrapper::UintValue* stratum);

  // .ywrapper.UintValue version = 461023535 [(.yext.schemapath) = "/access-points/access-point/system/ntp/servers/server/state/version"];
  bool has_version() const;
  void clear_version();
  static const int kVersionFieldNumber = 461023535;
  const ::ywrapper::UintValue& version() const;
  ::ywrapper::UintValue* release_version();
  ::ywrapper::UintValue* mutable_version();
  void set_allocated_version(::ywrapper::UintValue* version);

  // .ywrapper.UintValue root_dispersion = 483188496 [(.yext.schemapath) = "/access-points/access-point/system/ntp/servers/server/state/root-dispersion"];
  bool has_root_dispersion() const;
  void clear_root_dispersion();
  static const int kRootDispersionFieldNumber = 483188496;
  const ::ywrapper::UintValue& root_dispersion() const;
  ::ywrapper::UintValue* release_root_dispersion();
  ::ywrapper::UintValue* mutable_root_dispersion();
  void set_allocated_root_dispersion(::ywrapper::UintValue* root_dispersion);

  // .ywrapper.StringValue address = 499020619 [(.yext.schemapath) = "/access-points/access-point/system/ntp/servers/server/state/address"];
  bool has_address() const;
  void clear_address();
  static const int kAddressFieldNumber = 499020619;
  const ::ywrapper::StringValue& address() const;
  ::ywrapper::StringValue* release_address();
  ::ywrapper::StringValue* mutable_address();
  void set_allocated_address(::ywrapper::StringValue* address);

  // .ywrapper.UintValue port = 506248948 [(.yext.schemapath) = "/access-points/access-point/system/ntp/servers/server/state/port"];
  bool has_port() const;
  void clear_port();
  static const int kPortFieldNumber = 506248948;
  const ::ywrapper::UintValue& port() const;
  ::ywrapper::UintValue* release_port();
  ::ywrapper::UintValue* mutable_port();
  void set_allocated_port(::ywrapper::UintValue* port);

  // .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Ntp.Servers.Server.State.AssociationType association_type = 235386659 [(.yext.schemapath) = "/access-points/access-point/system/ntp/servers/server/state/association-type"];
  void clear_association_type();
  static const int kAssociationTypeFieldNumber = 235386659;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Ntp_Servers_Server_State_AssociationType association_type() const;
  void set_association_type(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Ntp_Servers_Server_State_AssociationType value);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Ntp.Servers.Server.State)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ywrapper::UintValue* root_delay_;
  ::ywrapper::BoolValue* prefer_;
  ::ywrapper::UintValue* offset_;
  ::ywrapper::UintValue* poll_interval_;
  ::ywrapper::BoolValue* iburst_;
  ::ywrapper::UintValue* stratum_;
  ::ywrapper::UintValue* version_;
  ::ywrapper::UintValue* root_dispersion_;
  ::ywrapper::StringValue* address_;
  ::ywrapper::UintValue* port_;
  int association_type_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::InitDefaultsAccessPoints_AccessPoint_System_Ntp_Servers_Server_StateImpl();
};
// -------------------------------------------------------------------

class AccessPoints_AccessPoint_System_Ntp_Servers_Server : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Ntp.Servers.Server) */ {
 public:
  AccessPoints_AccessPoint_System_Ntp_Servers_Server();
  virtual ~AccessPoints_AccessPoint_System_Ntp_Servers_Server();

  AccessPoints_AccessPoint_System_Ntp_Servers_Server(const AccessPoints_AccessPoint_System_Ntp_Servers_Server& from);

  inline AccessPoints_AccessPoint_System_Ntp_Servers_Server& operator=(const AccessPoints_AccessPoint_System_Ntp_Servers_Server& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AccessPoints_AccessPoint_System_Ntp_Servers_Server(AccessPoints_AccessPoint_System_Ntp_Servers_Server&& from) noexcept
    : AccessPoints_AccessPoint_System_Ntp_Servers_Server() {
    *this = ::std::move(from);
  }

  inline AccessPoints_AccessPoint_System_Ntp_Servers_Server& operator=(AccessPoints_AccessPoint_System_Ntp_Servers_Server&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AccessPoints_AccessPoint_System_Ntp_Servers_Server& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AccessPoints_AccessPoint_System_Ntp_Servers_Server* internal_default_instance() {
    return reinterpret_cast<const AccessPoints_AccessPoint_System_Ntp_Servers_Server*>(
               &_AccessPoints_AccessPoint_System_Ntp_Servers_Server_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    176;

  void Swap(AccessPoints_AccessPoint_System_Ntp_Servers_Server* other);
  friend void swap(AccessPoints_AccessPoint_System_Ntp_Servers_Server& a, AccessPoints_AccessPoint_System_Ntp_Servers_Server& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AccessPoints_AccessPoint_System_Ntp_Servers_Server* New() const PROTOBUF_FINAL { return New(NULL); }

  AccessPoints_AccessPoint_System_Ntp_Servers_Server* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AccessPoints_AccessPoint_System_Ntp_Servers_Server& from);
  void MergeFrom(const AccessPoints_AccessPoint_System_Ntp_Servers_Server& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AccessPoints_AccessPoint_System_Ntp_Servers_Server* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef AccessPoints_AccessPoint_System_Ntp_Servers_Server_Config Config;
  typedef AccessPoints_AccessPoint_System_Ntp_Servers_Server_State State;

  // accessors -------------------------------------------------------

  // .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Ntp.Servers.Server.State state = 37501290 [(.yext.schemapath) = "/access-points/access-point/system/ntp/servers/server/state"];
  bool has_state() const;
  void clear_state();
  static const int kStateFieldNumber = 37501290;
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Ntp_Servers_Server_State& state() const;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Ntp_Servers_Server_State* release_state();
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Ntp_Servers_Server_State* mutable_state();
  void set_allocated_state(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Ntp_Servers_Server_State* state);

  // .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Ntp.Servers.Server.Config config = 439340661 [(.yext.schemapath) = "/access-points/access-point/system/ntp/servers/server/config"];
  bool has_config() const;
  void clear_config();
  static const int kConfigFieldNumber = 439340661;
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Ntp_Servers_Server_Config& config() const;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Ntp_Servers_Server_Config* release_config();
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Ntp_Servers_Server_Config* mutable_config();
  void set_allocated_config(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Ntp_Servers_Server_Config* config);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Ntp.Servers.Server)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Ntp_Servers_Server_State* state_;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Ntp_Servers_Server_Config* config_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::InitDefaultsAccessPoints_AccessPoint_System_Ntp_Servers_ServerImpl();
};
// -------------------------------------------------------------------

class AccessPoints_AccessPoint_System_Ntp_Servers_ServerKey : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Ntp.Servers.ServerKey) */ {
 public:
  AccessPoints_AccessPoint_System_Ntp_Servers_ServerKey();
  virtual ~AccessPoints_AccessPoint_System_Ntp_Servers_ServerKey();

  AccessPoints_AccessPoint_System_Ntp_Servers_ServerKey(const AccessPoints_AccessPoint_System_Ntp_Servers_ServerKey& from);

  inline AccessPoints_AccessPoint_System_Ntp_Servers_ServerKey& operator=(const AccessPoints_AccessPoint_System_Ntp_Servers_ServerKey& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AccessPoints_AccessPoint_System_Ntp_Servers_ServerKey(AccessPoints_AccessPoint_System_Ntp_Servers_ServerKey&& from) noexcept
    : AccessPoints_AccessPoint_System_Ntp_Servers_ServerKey() {
    *this = ::std::move(from);
  }

  inline AccessPoints_AccessPoint_System_Ntp_Servers_ServerKey& operator=(AccessPoints_AccessPoint_System_Ntp_Servers_ServerKey&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AccessPoints_AccessPoint_System_Ntp_Servers_ServerKey& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AccessPoints_AccessPoint_System_Ntp_Servers_ServerKey* internal_default_instance() {
    return reinterpret_cast<const AccessPoints_AccessPoint_System_Ntp_Servers_ServerKey*>(
               &_AccessPoints_AccessPoint_System_Ntp_Servers_ServerKey_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    177;

  void Swap(AccessPoints_AccessPoint_System_Ntp_Servers_ServerKey* other);
  friend void swap(AccessPoints_AccessPoint_System_Ntp_Servers_ServerKey& a, AccessPoints_AccessPoint_System_Ntp_Servers_ServerKey& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AccessPoints_AccessPoint_System_Ntp_Servers_ServerKey* New() const PROTOBUF_FINAL { return New(NULL); }

  AccessPoints_AccessPoint_System_Ntp_Servers_ServerKey* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AccessPoints_AccessPoint_System_Ntp_Servers_ServerKey& from);
  void MergeFrom(const AccessPoints_AccessPoint_System_Ntp_Servers_ServerKey& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AccessPoints_AccessPoint_System_Ntp_Servers_ServerKey* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string address = 1 [(.yext.schemapath) = "/access-points/access-point/system/ntp/servers/server/address"];
  void clear_address();
  static const int kAddressFieldNumber = 1;
  const ::std::string& address() const;
  void set_address(const ::std::string& value);
  #if LANG_CXX11
  void set_address(::std::string&& value);
  #endif
  void set_address(const char* value);
  void set_address(const char* value, size_t size);
  ::std::string* mutable_address();
  ::std::string* release_address();
  void set_allocated_address(::std::string* address);

  // .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Ntp.Servers.Server server = 2;
  bool has_server() const;
  void clear_server();
  static const int kServerFieldNumber = 2;
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Ntp_Servers_Server& server() const;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Ntp_Servers_Server* release_server();
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Ntp_Servers_Server* mutable_server();
  void set_allocated_server(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Ntp_Servers_Server* server);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Ntp.Servers.ServerKey)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr address_;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Ntp_Servers_Server* server_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::InitDefaultsAccessPoints_AccessPoint_System_Ntp_Servers_ServerKeyImpl();
};
// -------------------------------------------------------------------

class AccessPoints_AccessPoint_System_Ntp_Servers : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Ntp.Servers) */ {
 public:
  AccessPoints_AccessPoint_System_Ntp_Servers();
  virtual ~AccessPoints_AccessPoint_System_Ntp_Servers();

  AccessPoints_AccessPoint_System_Ntp_Servers(const AccessPoints_AccessPoint_System_Ntp_Servers& from);

  inline AccessPoints_AccessPoint_System_Ntp_Servers& operator=(const AccessPoints_AccessPoint_System_Ntp_Servers& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AccessPoints_AccessPoint_System_Ntp_Servers(AccessPoints_AccessPoint_System_Ntp_Servers&& from) noexcept
    : AccessPoints_AccessPoint_System_Ntp_Servers() {
    *this = ::std::move(from);
  }

  inline AccessPoints_AccessPoint_System_Ntp_Servers& operator=(AccessPoints_AccessPoint_System_Ntp_Servers&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AccessPoints_AccessPoint_System_Ntp_Servers& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AccessPoints_AccessPoint_System_Ntp_Servers* internal_default_instance() {
    return reinterpret_cast<const AccessPoints_AccessPoint_System_Ntp_Servers*>(
               &_AccessPoints_AccessPoint_System_Ntp_Servers_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    178;

  void Swap(AccessPoints_AccessPoint_System_Ntp_Servers* other);
  friend void swap(AccessPoints_AccessPoint_System_Ntp_Servers& a, AccessPoints_AccessPoint_System_Ntp_Servers& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AccessPoints_AccessPoint_System_Ntp_Servers* New() const PROTOBUF_FINAL { return New(NULL); }

  AccessPoints_AccessPoint_System_Ntp_Servers* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AccessPoints_AccessPoint_System_Ntp_Servers& from);
  void MergeFrom(const AccessPoints_AccessPoint_System_Ntp_Servers& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AccessPoints_AccessPoint_System_Ntp_Servers* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef AccessPoints_AccessPoint_System_Ntp_Servers_Server Server;
  typedef AccessPoints_AccessPoint_System_Ntp_Servers_ServerKey ServerKey;

  // accessors -------------------------------------------------------

  // repeated .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Ntp.Servers.ServerKey server = 521877760 [(.yext.schemapath) = "/access-points/access-point/system/ntp/servers/server"];
  int server_size() const;
  void clear_server();
  static const int kServerFieldNumber = 521877760;
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Ntp_Servers_ServerKey& server(int index) const;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Ntp_Servers_ServerKey* mutable_server(int index);
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Ntp_Servers_ServerKey* add_server();
  ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Ntp_Servers_ServerKey >*
      mutable_server();
  const ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Ntp_Servers_ServerKey >&
      server() const;

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Ntp.Servers)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Ntp_Servers_ServerKey > server_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::InitDefaultsAccessPoints_AccessPoint_System_Ntp_ServersImpl();
};
// -------------------------------------------------------------------

class AccessPoints_AccessPoint_System_Ntp_State : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Ntp.State) */ {
 public:
  AccessPoints_AccessPoint_System_Ntp_State();
  virtual ~AccessPoints_AccessPoint_System_Ntp_State();

  AccessPoints_AccessPoint_System_Ntp_State(const AccessPoints_AccessPoint_System_Ntp_State& from);

  inline AccessPoints_AccessPoint_System_Ntp_State& operator=(const AccessPoints_AccessPoint_System_Ntp_State& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AccessPoints_AccessPoint_System_Ntp_State(AccessPoints_AccessPoint_System_Ntp_State&& from) noexcept
    : AccessPoints_AccessPoint_System_Ntp_State() {
    *this = ::std::move(from);
  }

  inline AccessPoints_AccessPoint_System_Ntp_State& operator=(AccessPoints_AccessPoint_System_Ntp_State&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AccessPoints_AccessPoint_System_Ntp_State& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AccessPoints_AccessPoint_System_Ntp_State* internal_default_instance() {
    return reinterpret_cast<const AccessPoints_AccessPoint_System_Ntp_State*>(
               &_AccessPoints_AccessPoint_System_Ntp_State_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    179;

  void Swap(AccessPoints_AccessPoint_System_Ntp_State* other);
  friend void swap(AccessPoints_AccessPoint_System_Ntp_State& a, AccessPoints_AccessPoint_System_Ntp_State& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AccessPoints_AccessPoint_System_Ntp_State* New() const PROTOBUF_FINAL { return New(NULL); }

  AccessPoints_AccessPoint_System_Ntp_State* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AccessPoints_AccessPoint_System_Ntp_State& from);
  void MergeFrom(const AccessPoints_AccessPoint_System_Ntp_State& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AccessPoints_AccessPoint_System_Ntp_State* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .ywrapper.StringValue ntp_source_address = 81223679 [(.yext.schemapath) = "/access-points/access-point/system/ntp/state/ntp-source-address"];
  bool has_ntp_source_address() const;
  void clear_ntp_source_address();
  static const int kNtpSourceAddressFieldNumber = 81223679;
  const ::ywrapper::StringValue& ntp_source_address() const;
  ::ywrapper::StringValue* release_ntp_source_address();
  ::ywrapper::StringValue* mutable_ntp_source_address();
  void set_allocated_ntp_source_address(::ywrapper::StringValue* ntp_source_address);

  // .ywrapper.BoolValue enabled = 210230727 [(.yext.schemapath) = "/access-points/access-point/system/ntp/state/enabled"];
  bool has_enabled() const;
  void clear_enabled();
  static const int kEnabledFieldNumber = 210230727;
  const ::ywrapper::BoolValue& enabled() const;
  ::ywrapper::BoolValue* release_enabled();
  ::ywrapper::BoolValue* mutable_enabled();
  void set_allocated_enabled(::ywrapper::BoolValue* enabled);

  // .ywrapper.BoolValue enable_ntp_auth = 434836227 [(.yext.schemapath) = "/access-points/access-point/system/ntp/state/enable-ntp-auth"];
  bool has_enable_ntp_auth() const;
  void clear_enable_ntp_auth();
  static const int kEnableNtpAuthFieldNumber = 434836227;
  const ::ywrapper::BoolValue& enable_ntp_auth() const;
  ::ywrapper::BoolValue* release_enable_ntp_auth();
  ::ywrapper::BoolValue* mutable_enable_ntp_auth();
  void set_allocated_enable_ntp_auth(::ywrapper::BoolValue* enable_ntp_auth);

  // .ywrapper.UintValue auth_mismatch = 508665811 [(.yext.schemapath) = "/access-points/access-point/system/ntp/state/auth-mismatch"];
  bool has_auth_mismatch() const;
  void clear_auth_mismatch();
  static const int kAuthMismatchFieldNumber = 508665811;
  const ::ywrapper::UintValue& auth_mismatch() const;
  ::ywrapper::UintValue* release_auth_mismatch();
  ::ywrapper::UintValue* mutable_auth_mismatch();
  void set_allocated_auth_mismatch(::ywrapper::UintValue* auth_mismatch);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Ntp.State)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ywrapper::StringValue* ntp_source_address_;
  ::ywrapper::BoolValue* enabled_;
  ::ywrapper::BoolValue* enable_ntp_auth_;
  ::ywrapper::UintValue* auth_mismatch_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::InitDefaultsAccessPoints_AccessPoint_System_Ntp_StateImpl();
};
// -------------------------------------------------------------------

class AccessPoints_AccessPoint_System_Ntp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Ntp) */ {
 public:
  AccessPoints_AccessPoint_System_Ntp();
  virtual ~AccessPoints_AccessPoint_System_Ntp();

  AccessPoints_AccessPoint_System_Ntp(const AccessPoints_AccessPoint_System_Ntp& from);

  inline AccessPoints_AccessPoint_System_Ntp& operator=(const AccessPoints_AccessPoint_System_Ntp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AccessPoints_AccessPoint_System_Ntp(AccessPoints_AccessPoint_System_Ntp&& from) noexcept
    : AccessPoints_AccessPoint_System_Ntp() {
    *this = ::std::move(from);
  }

  inline AccessPoints_AccessPoint_System_Ntp& operator=(AccessPoints_AccessPoint_System_Ntp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AccessPoints_AccessPoint_System_Ntp& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AccessPoints_AccessPoint_System_Ntp* internal_default_instance() {
    return reinterpret_cast<const AccessPoints_AccessPoint_System_Ntp*>(
               &_AccessPoints_AccessPoint_System_Ntp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    180;

  void Swap(AccessPoints_AccessPoint_System_Ntp* other);
  friend void swap(AccessPoints_AccessPoint_System_Ntp& a, AccessPoints_AccessPoint_System_Ntp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AccessPoints_AccessPoint_System_Ntp* New() const PROTOBUF_FINAL { return New(NULL); }

  AccessPoints_AccessPoint_System_Ntp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AccessPoints_AccessPoint_System_Ntp& from);
  void MergeFrom(const AccessPoints_AccessPoint_System_Ntp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AccessPoints_AccessPoint_System_Ntp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef AccessPoints_AccessPoint_System_Ntp_Config Config;
  typedef AccessPoints_AccessPoint_System_Ntp_NtpKeys NtpKeys;
  typedef AccessPoints_AccessPoint_System_Ntp_Servers Servers;
  typedef AccessPoints_AccessPoint_System_Ntp_State State;

  // accessors -------------------------------------------------------

  // .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Ntp.NtpKeys ntp_keys = 156599249 [(.yext.schemapath) = "/access-points/access-point/system/ntp/ntp-keys"];
  bool has_ntp_keys() const;
  void clear_ntp_keys();
  static const int kNtpKeysFieldNumber = 156599249;
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Ntp_NtpKeys& ntp_keys() const;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Ntp_NtpKeys* release_ntp_keys();
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Ntp_NtpKeys* mutable_ntp_keys();
  void set_allocated_ntp_keys(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Ntp_NtpKeys* ntp_keys);

  // .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Ntp.Config config = 193793528 [(.yext.schemapath) = "/access-points/access-point/system/ntp/config"];
  bool has_config() const;
  void clear_config();
  static const int kConfigFieldNumber = 193793528;
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Ntp_Config& config() const;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Ntp_Config* release_config();
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Ntp_Config* mutable_config();
  void set_allocated_config(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Ntp_Config* config);

  // .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Ntp.State state = 196690449 [(.yext.schemapath) = "/access-points/access-point/system/ntp/state"];
  bool has_state() const;
  void clear_state();
  static const int kStateFieldNumber = 196690449;
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Ntp_State& state() const;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Ntp_State* release_state();
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Ntp_State* mutable_state();
  void set_allocated_state(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Ntp_State* state);

  // .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Ntp.Servers servers = 328283498 [(.yext.schemapath) = "/access-points/access-point/system/ntp/servers"];
  bool has_servers() const;
  void clear_servers();
  static const int kServersFieldNumber = 328283498;
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Ntp_Servers& servers() const;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Ntp_Servers* release_servers();
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Ntp_Servers* mutable_servers();
  void set_allocated_servers(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Ntp_Servers* servers);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Ntp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Ntp_NtpKeys* ntp_keys_;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Ntp_Config* config_;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Ntp_State* state_;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Ntp_Servers* servers_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::InitDefaultsAccessPoints_AccessPoint_System_NtpImpl();
};
// -------------------------------------------------------------------

class AccessPoints_AccessPoint_System_Processes_Process_State : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Processes.Process.State) */ {
 public:
  AccessPoints_AccessPoint_System_Processes_Process_State();
  virtual ~AccessPoints_AccessPoint_System_Processes_Process_State();

  AccessPoints_AccessPoint_System_Processes_Process_State(const AccessPoints_AccessPoint_System_Processes_Process_State& from);

  inline AccessPoints_AccessPoint_System_Processes_Process_State& operator=(const AccessPoints_AccessPoint_System_Processes_Process_State& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AccessPoints_AccessPoint_System_Processes_Process_State(AccessPoints_AccessPoint_System_Processes_Process_State&& from) noexcept
    : AccessPoints_AccessPoint_System_Processes_Process_State() {
    *this = ::std::move(from);
  }

  inline AccessPoints_AccessPoint_System_Processes_Process_State& operator=(AccessPoints_AccessPoint_System_Processes_Process_State&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AccessPoints_AccessPoint_System_Processes_Process_State& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AccessPoints_AccessPoint_System_Processes_Process_State* internal_default_instance() {
    return reinterpret_cast<const AccessPoints_AccessPoint_System_Processes_Process_State*>(
               &_AccessPoints_AccessPoint_System_Processes_Process_State_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    181;

  void Swap(AccessPoints_AccessPoint_System_Processes_Process_State* other);
  friend void swap(AccessPoints_AccessPoint_System_Processes_Process_State& a, AccessPoints_AccessPoint_System_Processes_Process_State& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AccessPoints_AccessPoint_System_Processes_Process_State* New() const PROTOBUF_FINAL { return New(NULL); }

  AccessPoints_AccessPoint_System_Processes_Process_State* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AccessPoints_AccessPoint_System_Processes_Process_State& from);
  void MergeFrom(const AccessPoints_AccessPoint_System_Processes_Process_State& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AccessPoints_AccessPoint_System_Processes_Process_State* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .ywrapper.StringValue args = 277927366 [(.yext.schemapath) = "/access-points/access-point/system/processes/process/state/args"];
  int args_size() const;
  void clear_args();
  static const int kArgsFieldNumber = 277927366;
  const ::ywrapper::StringValue& args(int index) const;
  ::ywrapper::StringValue* mutable_args(int index);
  ::ywrapper::StringValue* add_args();
  ::google::protobuf::RepeatedPtrField< ::ywrapper::StringValue >*
      mutable_args();
  const ::google::protobuf::RepeatedPtrField< ::ywrapper::StringValue >&
      args() const;

  // .ywrapper.UintValue cpu_usage_system = 5543219 [(.yext.schemapath) = "/access-points/access-point/system/processes/process/state/cpu-usage-system"];
  bool has_cpu_usage_system() const;
  void clear_cpu_usage_system();
  static const int kCpuUsageSystemFieldNumber = 5543219;
  const ::ywrapper::UintValue& cpu_usage_system() const;
  ::ywrapper::UintValue* release_cpu_usage_system();
  ::ywrapper::UintValue* mutable_cpu_usage_system();
  void set_allocated_cpu_usage_system(::ywrapper::UintValue* cpu_usage_system);

  // .ywrapper.StringValue name = 8483324 [(.yext.schemapath) = "/access-points/access-point/system/processes/process/state/name"];
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 8483324;
  const ::ywrapper::StringValue& name() const;
  ::ywrapper::StringValue* release_name();
  ::ywrapper::StringValue* mutable_name();
  void set_allocated_name(::ywrapper::StringValue* name);

  // .ywrapper.UintValue cpu_usage_user = 125748105 [(.yext.schemapath) = "/access-points/access-point/system/processes/process/state/cpu-usage-user"];
  bool has_cpu_usage_user() const;
  void clear_cpu_usage_user();
  static const int kCpuUsageUserFieldNumber = 125748105;
  const ::ywrapper::UintValue& cpu_usage_user() const;
  ::ywrapper::UintValue* release_cpu_usage_user();
  ::ywrapper::UintValue* mutable_cpu_usage_user();
  void set_allocated_cpu_usage_user(::ywrapper::UintValue* cpu_usage_user);

  // .ywrapper.UintValue uptime = 151923281 [(.yext.schemapath) = "/access-points/access-point/system/processes/process/state/uptime"];
  bool has_uptime() const;
  void clear_uptime();
  static const int kUptimeFieldNumber = 151923281;
  const ::ywrapper::UintValue& uptime() const;
  ::ywrapper::UintValue* release_uptime();
  ::ywrapper::UintValue* mutable_uptime();
  void set_allocated_uptime(::ywrapper::UintValue* uptime);

  // .ywrapper.UintValue memory_usage = 213458786 [(.yext.schemapath) = "/access-points/access-point/system/processes/process/state/memory-usage"];
  bool has_memory_usage() const;
  void clear_memory_usage();
  static const int kMemoryUsageFieldNumber = 213458786;
  const ::ywrapper::UintValue& memory_usage() const;
  ::ywrapper::UintValue* release_memory_usage();
  ::ywrapper::UintValue* mutable_memory_usage();
  void set_allocated_memory_usage(::ywrapper::UintValue* memory_usage);

  // .ywrapper.UintValue start_time = 299610995 [(.yext.schemapath) = "/access-points/access-point/system/processes/process/state/start-time"];
  bool has_start_time() const;
  void clear_start_time();
  static const int kStartTimeFieldNumber = 299610995;
  const ::ywrapper::UintValue& start_time() const;
  ::ywrapper::UintValue* release_start_time();
  ::ywrapper::UintValue* mutable_start_time();
  void set_allocated_start_time(::ywrapper::UintValue* start_time);

  // .ywrapper.UintValue pid = 312256224 [(.yext.schemapath) = "/access-points/access-point/system/processes/process/state/pid"];
  bool has_pid() const;
  void clear_pid();
  static const int kPidFieldNumber = 312256224;
  const ::ywrapper::UintValue& pid() const;
  ::ywrapper::UintValue* release_pid();
  ::ywrapper::UintValue* mutable_pid();
  void set_allocated_pid(::ywrapper::UintValue* pid);

  // .ywrapper.UintValue memory_utilization = 349225347 [(.yext.schemapath) = "/access-points/access-point/system/processes/process/state/memory-utilization"];
  bool has_memory_utilization() const;
  void clear_memory_utilization();
  static const int kMemoryUtilizationFieldNumber = 349225347;
  const ::ywrapper::UintValue& memory_utilization() const;
  ::ywrapper::UintValue* release_memory_utilization();
  ::ywrapper::UintValue* mutable_memory_utilization();
  void set_allocated_memory_utilization(::ywrapper::UintValue* memory_utilization);

  // .ywrapper.UintValue cpu_utilization = 532305938 [(.yext.schemapath) = "/access-points/access-point/system/processes/process/state/cpu-utilization"];
  bool has_cpu_utilization() const;
  void clear_cpu_utilization();
  static const int kCpuUtilizationFieldNumber = 532305938;
  const ::ywrapper::UintValue& cpu_utilization() const;
  ::ywrapper::UintValue* release_cpu_utilization();
  ::ywrapper::UintValue* mutable_cpu_utilization();
  void set_allocated_cpu_utilization(::ywrapper::UintValue* cpu_utilization);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Processes.Process.State)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::ywrapper::StringValue > args_;
  ::ywrapper::UintValue* cpu_usage_system_;
  ::ywrapper::StringValue* name_;
  ::ywrapper::UintValue* cpu_usage_user_;
  ::ywrapper::UintValue* uptime_;
  ::ywrapper::UintValue* memory_usage_;
  ::ywrapper::UintValue* start_time_;
  ::ywrapper::UintValue* pid_;
  ::ywrapper::UintValue* memory_utilization_;
  ::ywrapper::UintValue* cpu_utilization_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::InitDefaultsAccessPoints_AccessPoint_System_Processes_Process_StateImpl();
};
// -------------------------------------------------------------------

class AccessPoints_AccessPoint_System_Processes_Process : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Processes.Process) */ {
 public:
  AccessPoints_AccessPoint_System_Processes_Process();
  virtual ~AccessPoints_AccessPoint_System_Processes_Process();

  AccessPoints_AccessPoint_System_Processes_Process(const AccessPoints_AccessPoint_System_Processes_Process& from);

  inline AccessPoints_AccessPoint_System_Processes_Process& operator=(const AccessPoints_AccessPoint_System_Processes_Process& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AccessPoints_AccessPoint_System_Processes_Process(AccessPoints_AccessPoint_System_Processes_Process&& from) noexcept
    : AccessPoints_AccessPoint_System_Processes_Process() {
    *this = ::std::move(from);
  }

  inline AccessPoints_AccessPoint_System_Processes_Process& operator=(AccessPoints_AccessPoint_System_Processes_Process&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AccessPoints_AccessPoint_System_Processes_Process& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AccessPoints_AccessPoint_System_Processes_Process* internal_default_instance() {
    return reinterpret_cast<const AccessPoints_AccessPoint_System_Processes_Process*>(
               &_AccessPoints_AccessPoint_System_Processes_Process_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    182;

  void Swap(AccessPoints_AccessPoint_System_Processes_Process* other);
  friend void swap(AccessPoints_AccessPoint_System_Processes_Process& a, AccessPoints_AccessPoint_System_Processes_Process& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AccessPoints_AccessPoint_System_Processes_Process* New() const PROTOBUF_FINAL { return New(NULL); }

  AccessPoints_AccessPoint_System_Processes_Process* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AccessPoints_AccessPoint_System_Processes_Process& from);
  void MergeFrom(const AccessPoints_AccessPoint_System_Processes_Process& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AccessPoints_AccessPoint_System_Processes_Process* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef AccessPoints_AccessPoint_System_Processes_Process_State State;

  // accessors -------------------------------------------------------

  // .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Processes.Process.State state = 305863702 [(.yext.schemapath) = "/access-points/access-point/system/processes/process/state"];
  bool has_state() const;
  void clear_state();
  static const int kStateFieldNumber = 305863702;
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Processes_Process_State& state() const;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Processes_Process_State* release_state();
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Processes_Process_State* mutable_state();
  void set_allocated_state(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Processes_Process_State* state);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Processes.Process)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Processes_Process_State* state_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::InitDefaultsAccessPoints_AccessPoint_System_Processes_ProcessImpl();
};
// -------------------------------------------------------------------

class AccessPoints_AccessPoint_System_Processes_ProcessKey : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Processes.ProcessKey) */ {
 public:
  AccessPoints_AccessPoint_System_Processes_ProcessKey();
  virtual ~AccessPoints_AccessPoint_System_Processes_ProcessKey();

  AccessPoints_AccessPoint_System_Processes_ProcessKey(const AccessPoints_AccessPoint_System_Processes_ProcessKey& from);

  inline AccessPoints_AccessPoint_System_Processes_ProcessKey& operator=(const AccessPoints_AccessPoint_System_Processes_ProcessKey& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AccessPoints_AccessPoint_System_Processes_ProcessKey(AccessPoints_AccessPoint_System_Processes_ProcessKey&& from) noexcept
    : AccessPoints_AccessPoint_System_Processes_ProcessKey() {
    *this = ::std::move(from);
  }

  inline AccessPoints_AccessPoint_System_Processes_ProcessKey& operator=(AccessPoints_AccessPoint_System_Processes_ProcessKey&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AccessPoints_AccessPoint_System_Processes_ProcessKey& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AccessPoints_AccessPoint_System_Processes_ProcessKey* internal_default_instance() {
    return reinterpret_cast<const AccessPoints_AccessPoint_System_Processes_ProcessKey*>(
               &_AccessPoints_AccessPoint_System_Processes_ProcessKey_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    183;

  void Swap(AccessPoints_AccessPoint_System_Processes_ProcessKey* other);
  friend void swap(AccessPoints_AccessPoint_System_Processes_ProcessKey& a, AccessPoints_AccessPoint_System_Processes_ProcessKey& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AccessPoints_AccessPoint_System_Processes_ProcessKey* New() const PROTOBUF_FINAL { return New(NULL); }

  AccessPoints_AccessPoint_System_Processes_ProcessKey* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AccessPoints_AccessPoint_System_Processes_ProcessKey& from);
  void MergeFrom(const AccessPoints_AccessPoint_System_Processes_ProcessKey& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AccessPoints_AccessPoint_System_Processes_ProcessKey* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Processes.Process process = 2;
  bool has_process() const;
  void clear_process();
  static const int kProcessFieldNumber = 2;
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Processes_Process& process() const;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Processes_Process* release_process();
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Processes_Process* mutable_process();
  void set_allocated_process(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Processes_Process* process);

  // uint64 pid = 1 [(.yext.schemapath) = "/access-points/access-point/system/processes/process/pid"];
  void clear_pid();
  static const int kPidFieldNumber = 1;
  ::google::protobuf::uint64 pid() const;
  void set_pid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Processes.ProcessKey)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Processes_Process* process_;
  ::google::protobuf::uint64 pid_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::InitDefaultsAccessPoints_AccessPoint_System_Processes_ProcessKeyImpl();
};
// -------------------------------------------------------------------

class AccessPoints_AccessPoint_System_Processes : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Processes) */ {
 public:
  AccessPoints_AccessPoint_System_Processes();
  virtual ~AccessPoints_AccessPoint_System_Processes();

  AccessPoints_AccessPoint_System_Processes(const AccessPoints_AccessPoint_System_Processes& from);

  inline AccessPoints_AccessPoint_System_Processes& operator=(const AccessPoints_AccessPoint_System_Processes& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AccessPoints_AccessPoint_System_Processes(AccessPoints_AccessPoint_System_Processes&& from) noexcept
    : AccessPoints_AccessPoint_System_Processes() {
    *this = ::std::move(from);
  }

  inline AccessPoints_AccessPoint_System_Processes& operator=(AccessPoints_AccessPoint_System_Processes&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AccessPoints_AccessPoint_System_Processes& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AccessPoints_AccessPoint_System_Processes* internal_default_instance() {
    return reinterpret_cast<const AccessPoints_AccessPoint_System_Processes*>(
               &_AccessPoints_AccessPoint_System_Processes_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    184;

  void Swap(AccessPoints_AccessPoint_System_Processes* other);
  friend void swap(AccessPoints_AccessPoint_System_Processes& a, AccessPoints_AccessPoint_System_Processes& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AccessPoints_AccessPoint_System_Processes* New() const PROTOBUF_FINAL { return New(NULL); }

  AccessPoints_AccessPoint_System_Processes* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AccessPoints_AccessPoint_System_Processes& from);
  void MergeFrom(const AccessPoints_AccessPoint_System_Processes& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AccessPoints_AccessPoint_System_Processes* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef AccessPoints_AccessPoint_System_Processes_Process Process;
  typedef AccessPoints_AccessPoint_System_Processes_ProcessKey ProcessKey;

  // accessors -------------------------------------------------------

  // repeated .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Processes.ProcessKey process = 209967788 [(.yext.schemapath) = "/access-points/access-point/system/processes/process"];
  int process_size() const;
  void clear_process();
  static const int kProcessFieldNumber = 209967788;
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Processes_ProcessKey& process(int index) const;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Processes_ProcessKey* mutable_process(int index);
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Processes_ProcessKey* add_process();
  ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Processes_ProcessKey >*
      mutable_process();
  const ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Processes_ProcessKey >&
      process() const;

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Processes)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Processes_ProcessKey > process_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::InitDefaultsAccessPoints_AccessPoint_System_ProcessesImpl();
};
// -------------------------------------------------------------------

class AccessPoints_AccessPoint_System_SshServer_Config : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.SshServer.Config) */ {
 public:
  AccessPoints_AccessPoint_System_SshServer_Config();
  virtual ~AccessPoints_AccessPoint_System_SshServer_Config();

  AccessPoints_AccessPoint_System_SshServer_Config(const AccessPoints_AccessPoint_System_SshServer_Config& from);

  inline AccessPoints_AccessPoint_System_SshServer_Config& operator=(const AccessPoints_AccessPoint_System_SshServer_Config& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AccessPoints_AccessPoint_System_SshServer_Config(AccessPoints_AccessPoint_System_SshServer_Config&& from) noexcept
    : AccessPoints_AccessPoint_System_SshServer_Config() {
    *this = ::std::move(from);
  }

  inline AccessPoints_AccessPoint_System_SshServer_Config& operator=(AccessPoints_AccessPoint_System_SshServer_Config&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AccessPoints_AccessPoint_System_SshServer_Config& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AccessPoints_AccessPoint_System_SshServer_Config* internal_default_instance() {
    return reinterpret_cast<const AccessPoints_AccessPoint_System_SshServer_Config*>(
               &_AccessPoints_AccessPoint_System_SshServer_Config_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    185;

  void Swap(AccessPoints_AccessPoint_System_SshServer_Config* other);
  friend void swap(AccessPoints_AccessPoint_System_SshServer_Config& a, AccessPoints_AccessPoint_System_SshServer_Config& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AccessPoints_AccessPoint_System_SshServer_Config* New() const PROTOBUF_FINAL { return New(NULL); }

  AccessPoints_AccessPoint_System_SshServer_Config* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AccessPoints_AccessPoint_System_SshServer_Config& from);
  void MergeFrom(const AccessPoints_AccessPoint_System_SshServer_Config& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AccessPoints_AccessPoint_System_SshServer_Config* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef AccessPoints_AccessPoint_System_SshServer_Config_ProtocolVersion ProtocolVersion;
  static const ProtocolVersion PROTOCOLVERSION_V2 =
    AccessPoints_AccessPoint_System_SshServer_Config_ProtocolVersion_PROTOCOLVERSION_V2;
  static const ProtocolVersion PROTOCOLVERSION_V1 =
    AccessPoints_AccessPoint_System_SshServer_Config_ProtocolVersion_PROTOCOLVERSION_V1;
  static const ProtocolVersion PROTOCOLVERSION_V1_V2 =
    AccessPoints_AccessPoint_System_SshServer_Config_ProtocolVersion_PROTOCOLVERSION_V1_V2;
  static inline bool ProtocolVersion_IsValid(int value) {
    return AccessPoints_AccessPoint_System_SshServer_Config_ProtocolVersion_IsValid(value);
  }
  static const ProtocolVersion ProtocolVersion_MIN =
    AccessPoints_AccessPoint_System_SshServer_Config_ProtocolVersion_ProtocolVersion_MIN;
  static const ProtocolVersion ProtocolVersion_MAX =
    AccessPoints_AccessPoint_System_SshServer_Config_ProtocolVersion_ProtocolVersion_MAX;
  static const int ProtocolVersion_ARRAYSIZE =
    AccessPoints_AccessPoint_System_SshServer_Config_ProtocolVersion_ProtocolVersion_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  ProtocolVersion_descriptor() {
    return AccessPoints_AccessPoint_System_SshServer_Config_ProtocolVersion_descriptor();
  }
  static inline const ::std::string& ProtocolVersion_Name(ProtocolVersion value) {
    return AccessPoints_AccessPoint_System_SshServer_Config_ProtocolVersion_Name(value);
  }
  static inline bool ProtocolVersion_Parse(const ::std::string& name,
      ProtocolVersion* value) {
    return AccessPoints_AccessPoint_System_SshServer_Config_ProtocolVersion_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .ywrapper.BoolValue enable = 66718020 [(.yext.schemapath) = "/access-points/access-point/system/ssh-server/config/enable"];
  bool has_enable() const;
  void clear_enable();
  static const int kEnableFieldNumber = 66718020;
  const ::ywrapper::BoolValue& enable() const;
  ::ywrapper::BoolValue* release_enable();
  ::ywrapper::BoolValue* mutable_enable();
  void set_allocated_enable(::ywrapper::BoolValue* enable);

  // .ywrapper.UintValue rate_limit = 135095061 [(.yext.schemapath) = "/access-points/access-point/system/ssh-server/config/rate-limit"];
  bool has_rate_limit() const;
  void clear_rate_limit();
  static const int kRateLimitFieldNumber = 135095061;
  const ::ywrapper::UintValue& rate_limit() const;
  ::ywrapper::UintValue* release_rate_limit();
  ::ywrapper::UintValue* mutable_rate_limit();
  void set_allocated_rate_limit(::ywrapper::UintValue* rate_limit);

  // .ywrapper.UintValue timeout = 167632282 [(.yext.schemapath) = "/access-points/access-point/system/ssh-server/config/timeout"];
  bool has_timeout() const;
  void clear_timeout();
  static const int kTimeoutFieldNumber = 167632282;
  const ::ywrapper::UintValue& timeout() const;
  ::ywrapper::UintValue* release_timeout();
  ::ywrapper::UintValue* mutable_timeout();
  void set_allocated_timeout(::ywrapper::UintValue* timeout);

  // .ywrapper.UintValue session_limit = 249309649 [(.yext.schemapath) = "/access-points/access-point/system/ssh-server/config/session-limit"];
  bool has_session_limit() const;
  void clear_session_limit();
  static const int kSessionLimitFieldNumber = 249309649;
  const ::ywrapper::UintValue& session_limit() const;
  ::ywrapper::UintValue* release_session_limit();
  ::ywrapper::UintValue* mutable_session_limit();
  void set_allocated_session_limit(::ywrapper::UintValue* session_limit);

  // .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.SshServer.Config.ProtocolVersion protocol_version = 430598902 [(.yext.schemapath) = "/access-points/access-point/system/ssh-server/config/protocol-version"];
  void clear_protocol_version();
  static const int kProtocolVersionFieldNumber = 430598902;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_SshServer_Config_ProtocolVersion protocol_version() const;
  void set_protocol_version(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_SshServer_Config_ProtocolVersion value);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.SshServer.Config)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ywrapper::BoolValue* enable_;
  ::ywrapper::UintValue* rate_limit_;
  ::ywrapper::UintValue* timeout_;
  ::ywrapper::UintValue* session_limit_;
  int protocol_version_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::InitDefaultsAccessPoints_AccessPoint_System_SshServer_ConfigImpl();
};
// -------------------------------------------------------------------

class AccessPoints_AccessPoint_System_SshServer_State : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.SshServer.State) */ {
 public:
  AccessPoints_AccessPoint_System_SshServer_State();
  virtual ~AccessPoints_AccessPoint_System_SshServer_State();

  AccessPoints_AccessPoint_System_SshServer_State(const AccessPoints_AccessPoint_System_SshServer_State& from);

  inline AccessPoints_AccessPoint_System_SshServer_State& operator=(const AccessPoints_AccessPoint_System_SshServer_State& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AccessPoints_AccessPoint_System_SshServer_State(AccessPoints_AccessPoint_System_SshServer_State&& from) noexcept
    : AccessPoints_AccessPoint_System_SshServer_State() {
    *this = ::std::move(from);
  }

  inline AccessPoints_AccessPoint_System_SshServer_State& operator=(AccessPoints_AccessPoint_System_SshServer_State&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AccessPoints_AccessPoint_System_SshServer_State& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AccessPoints_AccessPoint_System_SshServer_State* internal_default_instance() {
    return reinterpret_cast<const AccessPoints_AccessPoint_System_SshServer_State*>(
               &_AccessPoints_AccessPoint_System_SshServer_State_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    186;

  void Swap(AccessPoints_AccessPoint_System_SshServer_State* other);
  friend void swap(AccessPoints_AccessPoint_System_SshServer_State& a, AccessPoints_AccessPoint_System_SshServer_State& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AccessPoints_AccessPoint_System_SshServer_State* New() const PROTOBUF_FINAL { return New(NULL); }

  AccessPoints_AccessPoint_System_SshServer_State* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AccessPoints_AccessPoint_System_SshServer_State& from);
  void MergeFrom(const AccessPoints_AccessPoint_System_SshServer_State& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AccessPoints_AccessPoint_System_SshServer_State* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef AccessPoints_AccessPoint_System_SshServer_State_ProtocolVersion ProtocolVersion;
  static const ProtocolVersion PROTOCOLVERSION_V2 =
    AccessPoints_AccessPoint_System_SshServer_State_ProtocolVersion_PROTOCOLVERSION_V2;
  static const ProtocolVersion PROTOCOLVERSION_V1 =
    AccessPoints_AccessPoint_System_SshServer_State_ProtocolVersion_PROTOCOLVERSION_V1;
  static const ProtocolVersion PROTOCOLVERSION_V1_V2 =
    AccessPoints_AccessPoint_System_SshServer_State_ProtocolVersion_PROTOCOLVERSION_V1_V2;
  static inline bool ProtocolVersion_IsValid(int value) {
    return AccessPoints_AccessPoint_System_SshServer_State_ProtocolVersion_IsValid(value);
  }
  static const ProtocolVersion ProtocolVersion_MIN =
    AccessPoints_AccessPoint_System_SshServer_State_ProtocolVersion_ProtocolVersion_MIN;
  static const ProtocolVersion ProtocolVersion_MAX =
    AccessPoints_AccessPoint_System_SshServer_State_ProtocolVersion_ProtocolVersion_MAX;
  static const int ProtocolVersion_ARRAYSIZE =
    AccessPoints_AccessPoint_System_SshServer_State_ProtocolVersion_ProtocolVersion_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  ProtocolVersion_descriptor() {
    return AccessPoints_AccessPoint_System_SshServer_State_ProtocolVersion_descriptor();
  }
  static inline const ::std::string& ProtocolVersion_Name(ProtocolVersion value) {
    return AccessPoints_AccessPoint_System_SshServer_State_ProtocolVersion_Name(value);
  }
  static inline bool ProtocolVersion_Parse(const ::std::string& name,
      ProtocolVersion* value) {
    return AccessPoints_AccessPoint_System_SshServer_State_ProtocolVersion_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .ywrapper.UintValue timeout = 189306899 [(.yext.schemapath) = "/access-points/access-point/system/ssh-server/state/timeout"];
  bool has_timeout() const;
  void clear_timeout();
  static const int kTimeoutFieldNumber = 189306899;
  const ::ywrapper::UintValue& timeout() const;
  ::ywrapper::UintValue* release_timeout();
  ::ywrapper::UintValue* mutable_timeout();
  void set_allocated_timeout(::ywrapper::UintValue* timeout);

  // .ywrapper.BoolValue enable = 263756495 [(.yext.schemapath) = "/access-points/access-point/system/ssh-server/state/enable"];
  bool has_enable() const;
  void clear_enable();
  static const int kEnableFieldNumber = 263756495;
  const ::ywrapper::BoolValue& enable() const;
  ::ywrapper::BoolValue* release_enable();
  ::ywrapper::BoolValue* mutable_enable();
  void set_allocated_enable(::ywrapper::BoolValue* enable);

  // .ywrapper.UintValue session_limit = 273640868 [(.yext.schemapath) = "/access-points/access-point/system/ssh-server/state/session-limit"];
  bool has_session_limit() const;
  void clear_session_limit();
  static const int kSessionLimitFieldNumber = 273640868;
  const ::ywrapper::UintValue& session_limit() const;
  ::ywrapper::UintValue* release_session_limit();
  ::ywrapper::UintValue* mutable_session_limit();
  void set_allocated_session_limit(::ywrapper::UintValue* session_limit);

  // .ywrapper.UintValue rate_limit = 363549802 [(.yext.schemapath) = "/access-points/access-point/system/ssh-server/state/rate-limit"];
  bool has_rate_limit() const;
  void clear_rate_limit();
  static const int kRateLimitFieldNumber = 363549802;
  const ::ywrapper::UintValue& rate_limit() const;
  ::ywrapper::UintValue* release_rate_limit();
  ::ywrapper::UintValue* mutable_rate_limit();
  void set_allocated_rate_limit(::ywrapper::UintValue* rate_limit);

  // .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.SshServer.State.ProtocolVersion protocol_version = 30232905 [(.yext.schemapath) = "/access-points/access-point/system/ssh-server/state/protocol-version"];
  void clear_protocol_version();
  static const int kProtocolVersionFieldNumber = 30232905;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_SshServer_State_ProtocolVersion protocol_version() const;
  void set_protocol_version(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_SshServer_State_ProtocolVersion value);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.SshServer.State)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ywrapper::UintValue* timeout_;
  ::ywrapper::BoolValue* enable_;
  ::ywrapper::UintValue* session_limit_;
  ::ywrapper::UintValue* rate_limit_;
  int protocol_version_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::InitDefaultsAccessPoints_AccessPoint_System_SshServer_StateImpl();
};
// -------------------------------------------------------------------

class AccessPoints_AccessPoint_System_SshServer : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.SshServer) */ {
 public:
  AccessPoints_AccessPoint_System_SshServer();
  virtual ~AccessPoints_AccessPoint_System_SshServer();

  AccessPoints_AccessPoint_System_SshServer(const AccessPoints_AccessPoint_System_SshServer& from);

  inline AccessPoints_AccessPoint_System_SshServer& operator=(const AccessPoints_AccessPoint_System_SshServer& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AccessPoints_AccessPoint_System_SshServer(AccessPoints_AccessPoint_System_SshServer&& from) noexcept
    : AccessPoints_AccessPoint_System_SshServer() {
    *this = ::std::move(from);
  }

  inline AccessPoints_AccessPoint_System_SshServer& operator=(AccessPoints_AccessPoint_System_SshServer&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AccessPoints_AccessPoint_System_SshServer& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AccessPoints_AccessPoint_System_SshServer* internal_default_instance() {
    return reinterpret_cast<const AccessPoints_AccessPoint_System_SshServer*>(
               &_AccessPoints_AccessPoint_System_SshServer_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    187;

  void Swap(AccessPoints_AccessPoint_System_SshServer* other);
  friend void swap(AccessPoints_AccessPoint_System_SshServer& a, AccessPoints_AccessPoint_System_SshServer& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AccessPoints_AccessPoint_System_SshServer* New() const PROTOBUF_FINAL { return New(NULL); }

  AccessPoints_AccessPoint_System_SshServer* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AccessPoints_AccessPoint_System_SshServer& from);
  void MergeFrom(const AccessPoints_AccessPoint_System_SshServer& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AccessPoints_AccessPoint_System_SshServer* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef AccessPoints_AccessPoint_System_SshServer_Config Config;
  typedef AccessPoints_AccessPoint_System_SshServer_State State;

  // accessors -------------------------------------------------------

  // .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.SshServer.Config config = 143078026 [(.yext.schemapath) = "/access-points/access-point/system/ssh-server/config"];
  bool has_config() const;
  void clear_config();
  static const int kConfigFieldNumber = 143078026;
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_SshServer_Config& config() const;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_SshServer_Config* release_config();
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_SshServer_Config* mutable_config();
  void set_allocated_config(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_SshServer_Config* config);

  // .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.SshServer.State state = 322762023 [(.yext.schemapath) = "/access-points/access-point/system/ssh-server/state"];
  bool has_state() const;
  void clear_state();
  static const int kStateFieldNumber = 322762023;
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_SshServer_State& state() const;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_SshServer_State* release_state();
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_SshServer_State* mutable_state();
  void set_allocated_state(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_SshServer_State* state);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.SshServer)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_SshServer_Config* config_;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_SshServer_State* state_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::InitDefaultsAccessPoints_AccessPoint_System_SshServerImpl();
};
// -------------------------------------------------------------------

class AccessPoints_AccessPoint_System_State : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.State) */ {
 public:
  AccessPoints_AccessPoint_System_State();
  virtual ~AccessPoints_AccessPoint_System_State();

  AccessPoints_AccessPoint_System_State(const AccessPoints_AccessPoint_System_State& from);

  inline AccessPoints_AccessPoint_System_State& operator=(const AccessPoints_AccessPoint_System_State& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AccessPoints_AccessPoint_System_State(AccessPoints_AccessPoint_System_State&& from) noexcept
    : AccessPoints_AccessPoint_System_State() {
    *this = ::std::move(from);
  }

  inline AccessPoints_AccessPoint_System_State& operator=(AccessPoints_AccessPoint_System_State&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AccessPoints_AccessPoint_System_State& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AccessPoints_AccessPoint_System_State* internal_default_instance() {
    return reinterpret_cast<const AccessPoints_AccessPoint_System_State*>(
               &_AccessPoints_AccessPoint_System_State_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    188;

  void Swap(AccessPoints_AccessPoint_System_State* other);
  friend void swap(AccessPoints_AccessPoint_System_State& a, AccessPoints_AccessPoint_System_State& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AccessPoints_AccessPoint_System_State* New() const PROTOBUF_FINAL { return New(NULL); }

  AccessPoints_AccessPoint_System_State* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AccessPoints_AccessPoint_System_State& from);
  void MergeFrom(const AccessPoints_AccessPoint_System_State& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AccessPoints_AccessPoint_System_State* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .ywrapper.StringValue current_datetime = 8121154 [(.yext.schemapath) = "/access-points/access-point/system/state/current-datetime"];
  bool has_current_datetime() const;
  void clear_current_datetime();
  static const int kCurrentDatetimeFieldNumber = 8121154;
  const ::ywrapper::StringValue& current_datetime() const;
  ::ywrapper::StringValue* release_current_datetime();
  ::ywrapper::StringValue* mutable_current_datetime();
  void set_allocated_current_datetime(::ywrapper::StringValue* current_datetime);

  // .ywrapper.UintValue boot_time = 307549397 [(.yext.schemapath) = "/access-points/access-point/system/state/boot-time"];
  bool has_boot_time() const;
  void clear_boot_time();
  static const int kBootTimeFieldNumber = 307549397;
  const ::ywrapper::UintValue& boot_time() const;
  ::ywrapper::UintValue* release_boot_time();
  ::ywrapper::UintValue* mutable_boot_time();
  void set_allocated_boot_time(::ywrapper::UintValue* boot_time);

  // .ywrapper.StringValue hostname = 317134122 [(.yext.schemapath) = "/access-points/access-point/system/state/hostname"];
  bool has_hostname() const;
  void clear_hostname();
  static const int kHostnameFieldNumber = 317134122;
  const ::ywrapper::StringValue& hostname() const;
  ::ywrapper::StringValue* release_hostname();
  ::ywrapper::StringValue* mutable_hostname();
  void set_allocated_hostname(::ywrapper::StringValue* hostname);

  // .ywrapper.StringValue domain_name = 344996527 [(.yext.schemapath) = "/access-points/access-point/system/state/domain-name"];
  bool has_domain_name() const;
  void clear_domain_name();
  static const int kDomainNameFieldNumber = 344996527;
  const ::ywrapper::StringValue& domain_name() const;
  ::ywrapper::StringValue* release_domain_name();
  ::ywrapper::StringValue* mutable_domain_name();
  void set_allocated_domain_name(::ywrapper::StringValue* domain_name);

  // .ywrapper.StringValue login_banner = 455717739 [(.yext.schemapath) = "/access-points/access-point/system/state/login-banner"];
  bool has_login_banner() const;
  void clear_login_banner();
  static const int kLoginBannerFieldNumber = 455717739;
  const ::ywrapper::StringValue& login_banner() const;
  ::ywrapper::StringValue* release_login_banner();
  ::ywrapper::StringValue* mutable_login_banner();
  void set_allocated_login_banner(::ywrapper::StringValue* login_banner);

  // .ywrapper.StringValue motd_banner = 505008348 [(.yext.schemapath) = "/access-points/access-point/system/state/motd-banner"];
  bool has_motd_banner() const;
  void clear_motd_banner();
  static const int kMotdBannerFieldNumber = 505008348;
  const ::ywrapper::StringValue& motd_banner() const;
  ::ywrapper::StringValue* release_motd_banner();
  ::ywrapper::StringValue* mutable_motd_banner();
  void set_allocated_motd_banner(::ywrapper::StringValue* motd_banner);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.State)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ywrapper::StringValue* current_datetime_;
  ::ywrapper::UintValue* boot_time_;
  ::ywrapper::StringValue* hostname_;
  ::ywrapper::StringValue* domain_name_;
  ::ywrapper::StringValue* login_banner_;
  ::ywrapper::StringValue* motd_banner_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::InitDefaultsAccessPoints_AccessPoint_System_StateImpl();
};
// -------------------------------------------------------------------

class AccessPoints_AccessPoint_System_TelnetServer_Config : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.TelnetServer.Config) */ {
 public:
  AccessPoints_AccessPoint_System_TelnetServer_Config();
  virtual ~AccessPoints_AccessPoint_System_TelnetServer_Config();

  AccessPoints_AccessPoint_System_TelnetServer_Config(const AccessPoints_AccessPoint_System_TelnetServer_Config& from);

  inline AccessPoints_AccessPoint_System_TelnetServer_Config& operator=(const AccessPoints_AccessPoint_System_TelnetServer_Config& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AccessPoints_AccessPoint_System_TelnetServer_Config(AccessPoints_AccessPoint_System_TelnetServer_Config&& from) noexcept
    : AccessPoints_AccessPoint_System_TelnetServer_Config() {
    *this = ::std::move(from);
  }

  inline AccessPoints_AccessPoint_System_TelnetServer_Config& operator=(AccessPoints_AccessPoint_System_TelnetServer_Config&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AccessPoints_AccessPoint_System_TelnetServer_Config& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AccessPoints_AccessPoint_System_TelnetServer_Config* internal_default_instance() {
    return reinterpret_cast<const AccessPoints_AccessPoint_System_TelnetServer_Config*>(
               &_AccessPoints_AccessPoint_System_TelnetServer_Config_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    189;

  void Swap(AccessPoints_AccessPoint_System_TelnetServer_Config* other);
  friend void swap(AccessPoints_AccessPoint_System_TelnetServer_Config& a, AccessPoints_AccessPoint_System_TelnetServer_Config& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AccessPoints_AccessPoint_System_TelnetServer_Config* New() const PROTOBUF_FINAL { return New(NULL); }

  AccessPoints_AccessPoint_System_TelnetServer_Config* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AccessPoints_AccessPoint_System_TelnetServer_Config& from);
  void MergeFrom(const AccessPoints_AccessPoint_System_TelnetServer_Config& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AccessPoints_AccessPoint_System_TelnetServer_Config* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .ywrapper.BoolValue enable = 110507488 [(.yext.schemapath) = "/access-points/access-point/system/telnet-server/config/enable"];
  bool has_enable() const;
  void clear_enable();
  static const int kEnableFieldNumber = 110507488;
  const ::ywrapper::BoolValue& enable() const;
  ::ywrapper::BoolValue* release_enable();
  ::ywrapper::BoolValue* mutable_enable();
  void set_allocated_enable(::ywrapper::BoolValue* enable);

  // .ywrapper.UintValue rate_limit = 285478145 [(.yext.schemapath) = "/access-points/access-point/system/telnet-server/config/rate-limit"];
  bool has_rate_limit() const;
  void clear_rate_limit();
  static const int kRateLimitFieldNumber = 285478145;
  const ::ywrapper::UintValue& rate_limit() const;
  ::ywrapper::UintValue* release_rate_limit();
  ::ywrapper::UintValue* mutable_rate_limit();
  void set_allocated_rate_limit(::ywrapper::UintValue* rate_limit);

  // .ywrapper.UintValue session_limit = 363906317 [(.yext.schemapath) = "/access-points/access-point/system/telnet-server/config/session-limit"];
  bool has_session_limit() const;
  void clear_session_limit();
  static const int kSessionLimitFieldNumber = 363906317;
  const ::ywrapper::UintValue& session_limit() const;
  ::ywrapper::UintValue* release_session_limit();
  ::ywrapper::UintValue* mutable_session_limit();
  void set_allocated_session_limit(::ywrapper::UintValue* session_limit);

  // .ywrapper.UintValue timeout = 439984974 [(.yext.schemapath) = "/access-points/access-point/system/telnet-server/config/timeout"];
  bool has_timeout() const;
  void clear_timeout();
  static const int kTimeoutFieldNumber = 439984974;
  const ::ywrapper::UintValue& timeout() const;
  ::ywrapper::UintValue* release_timeout();
  ::ywrapper::UintValue* mutable_timeout();
  void set_allocated_timeout(::ywrapper::UintValue* timeout);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.TelnetServer.Config)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ywrapper::BoolValue* enable_;
  ::ywrapper::UintValue* rate_limit_;
  ::ywrapper::UintValue* session_limit_;
  ::ywrapper::UintValue* timeout_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::InitDefaultsAccessPoints_AccessPoint_System_TelnetServer_ConfigImpl();
};
// -------------------------------------------------------------------

class AccessPoints_AccessPoint_System_TelnetServer_State : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.TelnetServer.State) */ {
 public:
  AccessPoints_AccessPoint_System_TelnetServer_State();
  virtual ~AccessPoints_AccessPoint_System_TelnetServer_State();

  AccessPoints_AccessPoint_System_TelnetServer_State(const AccessPoints_AccessPoint_System_TelnetServer_State& from);

  inline AccessPoints_AccessPoint_System_TelnetServer_State& operator=(const AccessPoints_AccessPoint_System_TelnetServer_State& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AccessPoints_AccessPoint_System_TelnetServer_State(AccessPoints_AccessPoint_System_TelnetServer_State&& from) noexcept
    : AccessPoints_AccessPoint_System_TelnetServer_State() {
    *this = ::std::move(from);
  }

  inline AccessPoints_AccessPoint_System_TelnetServer_State& operator=(AccessPoints_AccessPoint_System_TelnetServer_State&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AccessPoints_AccessPoint_System_TelnetServer_State& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AccessPoints_AccessPoint_System_TelnetServer_State* internal_default_instance() {
    return reinterpret_cast<const AccessPoints_AccessPoint_System_TelnetServer_State*>(
               &_AccessPoints_AccessPoint_System_TelnetServer_State_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    190;

  void Swap(AccessPoints_AccessPoint_System_TelnetServer_State* other);
  friend void swap(AccessPoints_AccessPoint_System_TelnetServer_State& a, AccessPoints_AccessPoint_System_TelnetServer_State& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AccessPoints_AccessPoint_System_TelnetServer_State* New() const PROTOBUF_FINAL { return New(NULL); }

  AccessPoints_AccessPoint_System_TelnetServer_State* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AccessPoints_AccessPoint_System_TelnetServer_State& from);
  void MergeFrom(const AccessPoints_AccessPoint_System_TelnetServer_State& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AccessPoints_AccessPoint_System_TelnetServer_State* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .ywrapper.BoolValue enable = 107151659 [(.yext.schemapath) = "/access-points/access-point/system/telnet-server/state/enable"];
  bool has_enable() const;
  void clear_enable();
  static const int kEnableFieldNumber = 107151659;
  const ::ywrapper::BoolValue& enable() const;
  ::ywrapper::BoolValue* release_enable();
  ::ywrapper::BoolValue* mutable_enable();
  void set_allocated_enable(::ywrapper::BoolValue* enable);

  // .ywrapper.UintValue rate_limit = 256816598 [(.yext.schemapath) = "/access-points/access-point/system/telnet-server/state/rate-limit"];
  bool has_rate_limit() const;
  void clear_rate_limit();
  static const int kRateLimitFieldNumber = 256816598;
  const ::ywrapper::UintValue& rate_limit() const;
  ::ywrapper::UintValue* release_rate_limit();
  ::ywrapper::UintValue* mutable_rate_limit();
  void set_allocated_rate_limit(::ywrapper::UintValue* rate_limit);

  // .ywrapper.UintValue timeout = 378958423 [(.yext.schemapath) = "/access-points/access-point/system/telnet-server/state/timeout"];
  bool has_timeout() const;
  void clear_timeout();
  static const int kTimeoutFieldNumber = 378958423;
  const ::ywrapper::UintValue& timeout() const;
  ::ywrapper::UintValue* release_timeout();
  ::ywrapper::UintValue* mutable_timeout();
  void set_allocated_timeout(::ywrapper::UintValue* timeout);

  // .ywrapper.UintValue session_limit = 522907056 [(.yext.schemapath) = "/access-points/access-point/system/telnet-server/state/session-limit"];
  bool has_session_limit() const;
  void clear_session_limit();
  static const int kSessionLimitFieldNumber = 522907056;
  const ::ywrapper::UintValue& session_limit() const;
  ::ywrapper::UintValue* release_session_limit();
  ::ywrapper::UintValue* mutable_session_limit();
  void set_allocated_session_limit(::ywrapper::UintValue* session_limit);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.TelnetServer.State)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ywrapper::BoolValue* enable_;
  ::ywrapper::UintValue* rate_limit_;
  ::ywrapper::UintValue* timeout_;
  ::ywrapper::UintValue* session_limit_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::InitDefaultsAccessPoints_AccessPoint_System_TelnetServer_StateImpl();
};
// -------------------------------------------------------------------

class AccessPoints_AccessPoint_System_TelnetServer : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.TelnetServer) */ {
 public:
  AccessPoints_AccessPoint_System_TelnetServer();
  virtual ~AccessPoints_AccessPoint_System_TelnetServer();

  AccessPoints_AccessPoint_System_TelnetServer(const AccessPoints_AccessPoint_System_TelnetServer& from);

  inline AccessPoints_AccessPoint_System_TelnetServer& operator=(const AccessPoints_AccessPoint_System_TelnetServer& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AccessPoints_AccessPoint_System_TelnetServer(AccessPoints_AccessPoint_System_TelnetServer&& from) noexcept
    : AccessPoints_AccessPoint_System_TelnetServer() {
    *this = ::std::move(from);
  }

  inline AccessPoints_AccessPoint_System_TelnetServer& operator=(AccessPoints_AccessPoint_System_TelnetServer&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AccessPoints_AccessPoint_System_TelnetServer& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AccessPoints_AccessPoint_System_TelnetServer* internal_default_instance() {
    return reinterpret_cast<const AccessPoints_AccessPoint_System_TelnetServer*>(
               &_AccessPoints_AccessPoint_System_TelnetServer_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    191;

  void Swap(AccessPoints_AccessPoint_System_TelnetServer* other);
  friend void swap(AccessPoints_AccessPoint_System_TelnetServer& a, AccessPoints_AccessPoint_System_TelnetServer& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AccessPoints_AccessPoint_System_TelnetServer* New() const PROTOBUF_FINAL { return New(NULL); }

  AccessPoints_AccessPoint_System_TelnetServer* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AccessPoints_AccessPoint_System_TelnetServer& from);
  void MergeFrom(const AccessPoints_AccessPoint_System_TelnetServer& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AccessPoints_AccessPoint_System_TelnetServer* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef AccessPoints_AccessPoint_System_TelnetServer_Config Config;
  typedef AccessPoints_AccessPoint_System_TelnetServer_State State;

  // accessors -------------------------------------------------------

  // .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.TelnetServer.State state = 389693315 [(.yext.schemapath) = "/access-points/access-point/system/telnet-server/state"];
  bool has_state() const;
  void clear_state();
  static const int kStateFieldNumber = 389693315;
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_TelnetServer_State& state() const;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_TelnetServer_State* release_state();
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_TelnetServer_State* mutable_state();
  void set_allocated_state(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_TelnetServer_State* state);

  // .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.TelnetServer.Config config = 533189078 [(.yext.schemapath) = "/access-points/access-point/system/telnet-server/config"];
  bool has_config() const;
  void clear_config();
  static const int kConfigFieldNumber = 533189078;
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_TelnetServer_Config& config() const;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_TelnetServer_Config* release_config();
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_TelnetServer_Config* mutable_config();
  void set_allocated_config(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_TelnetServer_Config* config);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.TelnetServer)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_TelnetServer_State* state_;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_TelnetServer_Config* config_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::InitDefaultsAccessPoints_AccessPoint_System_TelnetServerImpl();
};
// -------------------------------------------------------------------

class AccessPoints_AccessPoint_System : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System) */ {
 public:
  AccessPoints_AccessPoint_System();
  virtual ~AccessPoints_AccessPoint_System();

  AccessPoints_AccessPoint_System(const AccessPoints_AccessPoint_System& from);

  inline AccessPoints_AccessPoint_System& operator=(const AccessPoints_AccessPoint_System& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AccessPoints_AccessPoint_System(AccessPoints_AccessPoint_System&& from) noexcept
    : AccessPoints_AccessPoint_System() {
    *this = ::std::move(from);
  }

  inline AccessPoints_AccessPoint_System& operator=(AccessPoints_AccessPoint_System&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AccessPoints_AccessPoint_System& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AccessPoints_AccessPoint_System* internal_default_instance() {
    return reinterpret_cast<const AccessPoints_AccessPoint_System*>(
               &_AccessPoints_AccessPoint_System_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    192;

  void Swap(AccessPoints_AccessPoint_System* other);
  friend void swap(AccessPoints_AccessPoint_System& a, AccessPoints_AccessPoint_System& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AccessPoints_AccessPoint_System* New() const PROTOBUF_FINAL { return New(NULL); }

  AccessPoints_AccessPoint_System* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AccessPoints_AccessPoint_System& from);
  void MergeFrom(const AccessPoints_AccessPoint_System& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AccessPoints_AccessPoint_System* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef AccessPoints_AccessPoint_System_Aaa Aaa;
  typedef AccessPoints_AccessPoint_System_Alarms Alarms;
  typedef AccessPoints_AccessPoint_System_Clock Clock;
  typedef AccessPoints_AccessPoint_System_Config Config;
  typedef AccessPoints_AccessPoint_System_Cpus Cpus;
  typedef AccessPoints_AccessPoint_System_Dns Dns;
  typedef AccessPoints_AccessPoint_System_Logging Logging;
  typedef AccessPoints_AccessPoint_System_Memory Memory;
  typedef AccessPoints_AccessPoint_System_Ntp Ntp;
  typedef AccessPoints_AccessPoint_System_Processes Processes;
  typedef AccessPoints_AccessPoint_System_SshServer SshServer;
  typedef AccessPoints_AccessPoint_System_State State;
  typedef AccessPoints_AccessPoint_System_TelnetServer TelnetServer;

  // accessors -------------------------------------------------------

  // .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus cpus = 16333042 [(.yext.schemapath) = "/access-points/access-point/system/cpus"];
  bool has_cpus() const;
  void clear_cpus();
  static const int kCpusFieldNumber = 16333042;
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Cpus& cpus() const;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Cpus* release_cpus();
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Cpus* mutable_cpus();
  void set_allocated_cpus(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Cpus* cpus);

  // .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.State state = 84065178 [(.yext.schemapath) = "/access-points/access-point/system/state"];
  bool has_state() const;
  void clear_state();
  static const int kStateFieldNumber = 84065178;
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_State& state() const;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_State* release_state();
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_State* mutable_state();
  void set_allocated_state(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_State* state);

  // .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.SshServer ssh_server = 92192453 [(.yext.schemapath) = "/access-points/access-point/system/ssh-server"];
  bool has_ssh_server() const;
  void clear_ssh_server();
  static const int kSshServerFieldNumber = 92192453;
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_SshServer& ssh_server() const;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_SshServer* release_ssh_server();
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_SshServer* mutable_ssh_server();
  void set_allocated_ssh_server(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_SshServer* ssh_server);

  // .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.TelnetServer telnet_server = 151243057 [(.yext.schemapath) = "/access-points/access-point/system/telnet-server"];
  bool has_telnet_server() const;
  void clear_telnet_server();
  static const int kTelnetServerFieldNumber = 151243057;
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_TelnetServer& telnet_server() const;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_TelnetServer* release_telnet_server();
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_TelnetServer* mutable_telnet_server();
  void set_allocated_telnet_server(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_TelnetServer* telnet_server);

  // .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Config config = 154349349 [(.yext.schemapath) = "/access-points/access-point/system/config"];
  bool has_config() const;
  void clear_config();
  static const int kConfigFieldNumber = 154349349;
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Config& config() const;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Config* release_config();
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Config* mutable_config();
  void set_allocated_config(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Config* config);

  // .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Memory memory = 162584754 [(.yext.schemapath) = "/access-points/access-point/system/memory"];
  bool has_memory() const;
  void clear_memory();
  static const int kMemoryFieldNumber = 162584754;
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Memory& memory() const;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Memory* release_memory();
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Memory* mutable_memory();
  void set_allocated_memory(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Memory* memory);

  // .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Ntp ntp = 258554471 [(.yext.schemapath) = "/access-points/access-point/system/ntp"];
  bool has_ntp() const;
  void clear_ntp();
  static const int kNtpFieldNumber = 258554471;
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Ntp& ntp() const;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Ntp* release_ntp();
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Ntp* mutable_ntp();
  void set_allocated_ntp(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Ntp* ntp);

  // .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Clock clock = 273230439 [(.yext.schemapath) = "/access-points/access-point/system/clock"];
  bool has_clock() const;
  void clear_clock();
  static const int kClockFieldNumber = 273230439;
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Clock& clock() const;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Clock* release_clock();
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Clock* mutable_clock();
  void set_allocated_clock(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Clock* clock);

  // .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa aaa = 310301406 [(.yext.schemapath) = "/access-points/access-point/system/aaa"];
  bool has_aaa() const;
  void clear_aaa();
  static const int kAaaFieldNumber = 310301406;
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa& aaa() const;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa* release_aaa();
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa* mutable_aaa();
  void set_allocated_aaa(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa* aaa);

  // .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Logging logging = 310453074 [(.yext.schemapath) = "/access-points/access-point/system/logging"];
  bool has_logging() const;
  void clear_logging();
  static const int kLoggingFieldNumber = 310453074;
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging& logging() const;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging* release_logging();
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging* mutable_logging();
  void set_allocated_logging(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging* logging);

  // .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Processes processes = 376522710 [(.yext.schemapath) = "/access-points/access-point/system/processes"];
  bool has_processes() const;
  void clear_processes();
  static const int kProcessesFieldNumber = 376522710;
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Processes& processes() const;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Processes* release_processes();
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Processes* mutable_processes();
  void set_allocated_processes(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Processes* processes);

  // .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Dns dns = 427303308 [(.yext.schemapath) = "/access-points/access-point/system/dns"];
  bool has_dns() const;
  void clear_dns();
  static const int kDnsFieldNumber = 427303308;
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Dns& dns() const;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Dns* release_dns();
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Dns* mutable_dns();
  void set_allocated_dns(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Dns* dns);

  // .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Alarms alarms = 428484193 [(.yext.schemapath) = "/access-points/access-point/system/alarms"];
  bool has_alarms() const;
  void clear_alarms();
  static const int kAlarmsFieldNumber = 428484193;
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Alarms& alarms() const;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Alarms* release_alarms();
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Alarms* mutable_alarms();
  void set_allocated_alarms(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Alarms* alarms);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Cpus* cpus_;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_State* state_;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_SshServer* ssh_server_;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_TelnetServer* telnet_server_;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Config* config_;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Memory* memory_;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Ntp* ntp_;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Clock* clock_;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa* aaa_;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging* logging_;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Processes* processes_;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Dns* dns_;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Alarms* alarms_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::InitDefaultsAccessPoints_AccessPoint_SystemImpl();
};
// -------------------------------------------------------------------

class AccessPoints_AccessPoint : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_access_points.AccessPoints.AccessPoint) */ {
 public:
  AccessPoints_AccessPoint();
  virtual ~AccessPoints_AccessPoint();

  AccessPoints_AccessPoint(const AccessPoints_AccessPoint& from);

  inline AccessPoints_AccessPoint& operator=(const AccessPoints_AccessPoint& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AccessPoints_AccessPoint(AccessPoints_AccessPoint&& from) noexcept
    : AccessPoints_AccessPoint() {
    *this = ::std::move(from);
  }

  inline AccessPoints_AccessPoint& operator=(AccessPoints_AccessPoint&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AccessPoints_AccessPoint& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AccessPoints_AccessPoint* internal_default_instance() {
    return reinterpret_cast<const AccessPoints_AccessPoint*>(
               &_AccessPoints_AccessPoint_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    193;

  void Swap(AccessPoints_AccessPoint* other);
  friend void swap(AccessPoints_AccessPoint& a, AccessPoints_AccessPoint& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AccessPoints_AccessPoint* New() const PROTOBUF_FINAL { return New(NULL); }

  AccessPoints_AccessPoint* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AccessPoints_AccessPoint& from);
  void MergeFrom(const AccessPoints_AccessPoint& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AccessPoints_AccessPoint* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef AccessPoints_AccessPoint_AssignedApManagers AssignedApManagers;
  typedef AccessPoints_AccessPoint_Bssids Bssids;
  typedef AccessPoints_AccessPoint_Radios Radios;
  typedef AccessPoints_AccessPoint_Ssids Ssids;
  typedef AccessPoints_AccessPoint_System System;

  // accessors -------------------------------------------------------

  // .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System system = 118923792 [(.yext.schemapath) = "/access-points/access-point/system"];
  bool has_system() const;
  void clear_system();
  static const int kSystemFieldNumber = 118923792;
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System& system() const;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System* release_system();
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System* mutable_system();
  void set_allocated_system(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System* system);

  // .openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids bssids = 241067193 [(.yext.schemapath) = "/access-points/access-point/bssids"];
  bool has_bssids() const;
  void clear_bssids();
  static const int kBssidsFieldNumber = 241067193;
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Bssids& bssids() const;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Bssids* release_bssids();
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Bssids* mutable_bssids();
  void set_allocated_bssids(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Bssids* bssids);

  // .openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios radios = 276746939 [(.yext.schemapath) = "/access-points/access-point/radios"];
  bool has_radios() const;
  void clear_radios();
  static const int kRadiosFieldNumber = 276746939;
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Radios& radios() const;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Radios* release_radios();
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Radios* mutable_radios();
  void set_allocated_radios(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Radios* radios);

  // .openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids ssids = 318993297 [(.yext.schemapath) = "/access-points/access-point/ssids"];
  bool has_ssids() const;
  void clear_ssids();
  static const int kSsidsFieldNumber = 318993297;
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids& ssids() const;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids* release_ssids();
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids* mutable_ssids();
  void set_allocated_ssids(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids* ssids);

  // .openconfig.openconfig_access_points.AccessPoints.AccessPoint.AssignedApManagers assigned_ap_managers = 478163348 [(.yext.schemapath) = "/access-points/access-point/assigned-ap-managers"];
  bool has_assigned_ap_managers() const;
  void clear_assigned_ap_managers();
  static const int kAssignedApManagersFieldNumber = 478163348;
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_AssignedApManagers& assigned_ap_managers() const;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_AssignedApManagers* release_assigned_ap_managers();
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_AssignedApManagers* mutable_assigned_ap_managers();
  void set_allocated_assigned_ap_managers(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_AssignedApManagers* assigned_ap_managers);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_access_points.AccessPoints.AccessPoint)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System* system_;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Bssids* bssids_;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Radios* radios_;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids* ssids_;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_AssignedApManagers* assigned_ap_managers_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::InitDefaultsAccessPoints_AccessPointImpl();
};
// -------------------------------------------------------------------

class AccessPoints_AccessPointKey : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_access_points.AccessPoints.AccessPointKey) */ {
 public:
  AccessPoints_AccessPointKey();
  virtual ~AccessPoints_AccessPointKey();

  AccessPoints_AccessPointKey(const AccessPoints_AccessPointKey& from);

  inline AccessPoints_AccessPointKey& operator=(const AccessPoints_AccessPointKey& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AccessPoints_AccessPointKey(AccessPoints_AccessPointKey&& from) noexcept
    : AccessPoints_AccessPointKey() {
    *this = ::std::move(from);
  }

  inline AccessPoints_AccessPointKey& operator=(AccessPoints_AccessPointKey&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AccessPoints_AccessPointKey& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AccessPoints_AccessPointKey* internal_default_instance() {
    return reinterpret_cast<const AccessPoints_AccessPointKey*>(
               &_AccessPoints_AccessPointKey_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    194;

  void Swap(AccessPoints_AccessPointKey* other);
  friend void swap(AccessPoints_AccessPointKey& a, AccessPoints_AccessPointKey& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AccessPoints_AccessPointKey* New() const PROTOBUF_FINAL { return New(NULL); }

  AccessPoints_AccessPointKey* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AccessPoints_AccessPointKey& from);
  void MergeFrom(const AccessPoints_AccessPointKey& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AccessPoints_AccessPointKey* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string hostname = 1 [(.yext.schemapath) = "/access-points/access-point/hostname"];
  void clear_hostname();
  static const int kHostnameFieldNumber = 1;
  const ::std::string& hostname() const;
  void set_hostname(const ::std::string& value);
  #if LANG_CXX11
  void set_hostname(::std::string&& value);
  #endif
  void set_hostname(const char* value);
  void set_hostname(const char* value, size_t size);
  ::std::string* mutable_hostname();
  ::std::string* release_hostname();
  void set_allocated_hostname(::std::string* hostname);

  // .openconfig.openconfig_access_points.AccessPoints.AccessPoint access_point = 2;
  bool has_access_point() const;
  void clear_access_point();
  static const int kAccessPointFieldNumber = 2;
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint& access_point() const;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint* release_access_point();
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint* mutable_access_point();
  void set_allocated_access_point(::openconfig::openconfig_access_points::AccessPoints_AccessPoint* access_point);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_access_points.AccessPoints.AccessPointKey)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr hostname_;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint* access_point_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::InitDefaultsAccessPoints_AccessPointKeyImpl();
};
// -------------------------------------------------------------------

class AccessPoints : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_access_points.AccessPoints) */ {
 public:
  AccessPoints();
  virtual ~AccessPoints();

  AccessPoints(const AccessPoints& from);

  inline AccessPoints& operator=(const AccessPoints& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AccessPoints(AccessPoints&& from) noexcept
    : AccessPoints() {
    *this = ::std::move(from);
  }

  inline AccessPoints& operator=(AccessPoints&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AccessPoints& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AccessPoints* internal_default_instance() {
    return reinterpret_cast<const AccessPoints*>(
               &_AccessPoints_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    195;

  void Swap(AccessPoints* other);
  friend void swap(AccessPoints& a, AccessPoints& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AccessPoints* New() const PROTOBUF_FINAL { return New(NULL); }

  AccessPoints* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AccessPoints& from);
  void MergeFrom(const AccessPoints& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AccessPoints* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef AccessPoints_AccessPoint AccessPoint;
  typedef AccessPoints_AccessPointKey AccessPointKey;

  // accessors -------------------------------------------------------

  // repeated .openconfig.openconfig_access_points.AccessPoints.AccessPointKey access_point = 107793100 [(.yext.schemapath) = "/access-points/access-point"];
  int access_point_size() const;
  void clear_access_point();
  static const int kAccessPointFieldNumber = 107793100;
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPointKey& access_point(int index) const;
  ::openconfig::openconfig_access_points::AccessPoints_AccessPointKey* mutable_access_point(int index);
  ::openconfig::openconfig_access_points::AccessPoints_AccessPointKey* add_access_point();
  ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_access_points::AccessPoints_AccessPointKey >*
      mutable_access_point();
  const ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_access_points::AccessPoints_AccessPointKey >&
      access_point() const;

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_access_points.AccessPoints)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_access_points::AccessPoints_AccessPointKey > access_point_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto::InitDefaultsAccessPointsImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// AccessPoints_AccessPoint_AssignedApManagers_ApManager_Config

// .ywrapper.StringValue ap_manager_ipv4_address = 420165418 [(.yext.schemapath) = "/access-points/access-point/assigned-ap-managers/ap-manager/config/ap-manager-ipv4-address"];
inline bool AccessPoints_AccessPoint_AssignedApManagers_ApManager_Config::has_ap_manager_ipv4_address() const {
  return this != internal_default_instance() && ap_manager_ipv4_address_ != NULL;
}
inline const ::ywrapper::StringValue& AccessPoints_AccessPoint_AssignedApManagers_ApManager_Config::ap_manager_ipv4_address() const {
  const ::ywrapper::StringValue* p = ap_manager_ipv4_address_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.AssignedApManagers.ApManager.Config.ap_manager_ipv4_address)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::StringValue*>(
      &::ywrapper::_StringValue_default_instance_);
}
inline ::ywrapper::StringValue* AccessPoints_AccessPoint_AssignedApManagers_ApManager_Config::release_ap_manager_ipv4_address() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.AssignedApManagers.ApManager.Config.ap_manager_ipv4_address)
  
  ::ywrapper::StringValue* temp = ap_manager_ipv4_address_;
  ap_manager_ipv4_address_ = NULL;
  return temp;
}
inline ::ywrapper::StringValue* AccessPoints_AccessPoint_AssignedApManagers_ApManager_Config::mutable_ap_manager_ipv4_address() {
  
  if (ap_manager_ipv4_address_ == NULL) {
    ap_manager_ipv4_address_ = new ::ywrapper::StringValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.AssignedApManagers.ApManager.Config.ap_manager_ipv4_address)
  return ap_manager_ipv4_address_;
}
inline void AccessPoints_AccessPoint_AssignedApManagers_ApManager_Config::set_allocated_ap_manager_ipv4_address(::ywrapper::StringValue* ap_manager_ipv4_address) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(ap_manager_ipv4_address_);
  }
  if (ap_manager_ipv4_address) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      ap_manager_ipv4_address = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, ap_manager_ipv4_address, submessage_arena);
    }
    
  } else {
    
  }
  ap_manager_ipv4_address_ = ap_manager_ipv4_address;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.AssignedApManagers.ApManager.Config.ap_manager_ipv4_address)
}

// repeated .ywrapper.StringValue ap_manager_ipv6_address = 35007832 [(.yext.schemapath) = "/access-points/access-point/assigned-ap-managers/ap-manager/config/ap-manager-ipv6-address"];
inline int AccessPoints_AccessPoint_AssignedApManagers_ApManager_Config::ap_manager_ipv6_address_size() const {
  return ap_manager_ipv6_address_.size();
}
inline const ::ywrapper::StringValue& AccessPoints_AccessPoint_AssignedApManagers_ApManager_Config::ap_manager_ipv6_address(int index) const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.AssignedApManagers.ApManager.Config.ap_manager_ipv6_address)
  return ap_manager_ipv6_address_.Get(index);
}
inline ::ywrapper::StringValue* AccessPoints_AccessPoint_AssignedApManagers_ApManager_Config::mutable_ap_manager_ipv6_address(int index) {
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.AssignedApManagers.ApManager.Config.ap_manager_ipv6_address)
  return ap_manager_ipv6_address_.Mutable(index);
}
inline ::ywrapper::StringValue* AccessPoints_AccessPoint_AssignedApManagers_ApManager_Config::add_ap_manager_ipv6_address() {
  // @@protoc_insertion_point(field_add:openconfig.openconfig_access_points.AccessPoints.AccessPoint.AssignedApManagers.ApManager.Config.ap_manager_ipv6_address)
  return ap_manager_ipv6_address_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::ywrapper::StringValue >*
AccessPoints_AccessPoint_AssignedApManagers_ApManager_Config::mutable_ap_manager_ipv6_address() {
  // @@protoc_insertion_point(field_mutable_list:openconfig.openconfig_access_points.AccessPoints.AccessPoint.AssignedApManagers.ApManager.Config.ap_manager_ipv6_address)
  return &ap_manager_ipv6_address_;
}
inline const ::google::protobuf::RepeatedPtrField< ::ywrapper::StringValue >&
AccessPoints_AccessPoint_AssignedApManagers_ApManager_Config::ap_manager_ipv6_address() const {
  // @@protoc_insertion_point(field_list:openconfig.openconfig_access_points.AccessPoints.AccessPoint.AssignedApManagers.ApManager.Config.ap_manager_ipv6_address)
  return ap_manager_ipv6_address_;
}

// .ywrapper.StringValue fqdn = 235081911 [(.yext.schemapath) = "/access-points/access-point/assigned-ap-managers/ap-manager/config/fqdn"];
inline bool AccessPoints_AccessPoint_AssignedApManagers_ApManager_Config::has_fqdn() const {
  return this != internal_default_instance() && fqdn_ != NULL;
}
inline const ::ywrapper::StringValue& AccessPoints_AccessPoint_AssignedApManagers_ApManager_Config::fqdn() const {
  const ::ywrapper::StringValue* p = fqdn_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.AssignedApManagers.ApManager.Config.fqdn)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::StringValue*>(
      &::ywrapper::_StringValue_default_instance_);
}
inline ::ywrapper::StringValue* AccessPoints_AccessPoint_AssignedApManagers_ApManager_Config::release_fqdn() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.AssignedApManagers.ApManager.Config.fqdn)
  
  ::ywrapper::StringValue* temp = fqdn_;
  fqdn_ = NULL;
  return temp;
}
inline ::ywrapper::StringValue* AccessPoints_AccessPoint_AssignedApManagers_ApManager_Config::mutable_fqdn() {
  
  if (fqdn_ == NULL) {
    fqdn_ = new ::ywrapper::StringValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.AssignedApManagers.ApManager.Config.fqdn)
  return fqdn_;
}
inline void AccessPoints_AccessPoint_AssignedApManagers_ApManager_Config::set_allocated_fqdn(::ywrapper::StringValue* fqdn) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(fqdn_);
  }
  if (fqdn) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      fqdn = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, fqdn, submessage_arena);
    }
    
  } else {
    
  }
  fqdn_ = fqdn;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.AssignedApManagers.ApManager.Config.fqdn)
}

// .ywrapper.StringValue id = 34871349 [(.yext.schemapath) = "/access-points/access-point/assigned-ap-managers/ap-manager/config/id"];
inline bool AccessPoints_AccessPoint_AssignedApManagers_ApManager_Config::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::ywrapper::StringValue& AccessPoints_AccessPoint_AssignedApManagers_ApManager_Config::id() const {
  const ::ywrapper::StringValue* p = id_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.AssignedApManagers.ApManager.Config.id)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::StringValue*>(
      &::ywrapper::_StringValue_default_instance_);
}
inline ::ywrapper::StringValue* AccessPoints_AccessPoint_AssignedApManagers_ApManager_Config::release_id() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.AssignedApManagers.ApManager.Config.id)
  
  ::ywrapper::StringValue* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::ywrapper::StringValue* AccessPoints_AccessPoint_AssignedApManagers_ApManager_Config::mutable_id() {
  
  if (id_ == NULL) {
    id_ = new ::ywrapper::StringValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.AssignedApManagers.ApManager.Config.id)
  return id_;
}
inline void AccessPoints_AccessPoint_AssignedApManagers_ApManager_Config::set_allocated_id(::ywrapper::StringValue* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.AssignedApManagers.ApManager.Config.id)
}

// -------------------------------------------------------------------

// AccessPoints_AccessPoint_AssignedApManagers_ApManager_State

// .ywrapper.StringValue ap_manager_ipv4_address = 328704945 [(.yext.schemapath) = "/access-points/access-point/assigned-ap-managers/ap-manager/state/ap-manager-ipv4-address"];
inline bool AccessPoints_AccessPoint_AssignedApManagers_ApManager_State::has_ap_manager_ipv4_address() const {
  return this != internal_default_instance() && ap_manager_ipv4_address_ != NULL;
}
inline const ::ywrapper::StringValue& AccessPoints_AccessPoint_AssignedApManagers_ApManager_State::ap_manager_ipv4_address() const {
  const ::ywrapper::StringValue* p = ap_manager_ipv4_address_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.AssignedApManagers.ApManager.State.ap_manager_ipv4_address)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::StringValue*>(
      &::ywrapper::_StringValue_default_instance_);
}
inline ::ywrapper::StringValue* AccessPoints_AccessPoint_AssignedApManagers_ApManager_State::release_ap_manager_ipv4_address() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.AssignedApManagers.ApManager.State.ap_manager_ipv4_address)
  
  ::ywrapper::StringValue* temp = ap_manager_ipv4_address_;
  ap_manager_ipv4_address_ = NULL;
  return temp;
}
inline ::ywrapper::StringValue* AccessPoints_AccessPoint_AssignedApManagers_ApManager_State::mutable_ap_manager_ipv4_address() {
  
  if (ap_manager_ipv4_address_ == NULL) {
    ap_manager_ipv4_address_ = new ::ywrapper::StringValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.AssignedApManagers.ApManager.State.ap_manager_ipv4_address)
  return ap_manager_ipv4_address_;
}
inline void AccessPoints_AccessPoint_AssignedApManagers_ApManager_State::set_allocated_ap_manager_ipv4_address(::ywrapper::StringValue* ap_manager_ipv4_address) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(ap_manager_ipv4_address_);
  }
  if (ap_manager_ipv4_address) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      ap_manager_ipv4_address = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, ap_manager_ipv4_address, submessage_arena);
    }
    
  } else {
    
  }
  ap_manager_ipv4_address_ = ap_manager_ipv4_address;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.AssignedApManagers.ApManager.State.ap_manager_ipv4_address)
}

// repeated .ywrapper.StringValue ap_manager_ipv6_address = 454146723 [(.yext.schemapath) = "/access-points/access-point/assigned-ap-managers/ap-manager/state/ap-manager-ipv6-address"];
inline int AccessPoints_AccessPoint_AssignedApManagers_ApManager_State::ap_manager_ipv6_address_size() const {
  return ap_manager_ipv6_address_.size();
}
inline const ::ywrapper::StringValue& AccessPoints_AccessPoint_AssignedApManagers_ApManager_State::ap_manager_ipv6_address(int index) const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.AssignedApManagers.ApManager.State.ap_manager_ipv6_address)
  return ap_manager_ipv6_address_.Get(index);
}
inline ::ywrapper::StringValue* AccessPoints_AccessPoint_AssignedApManagers_ApManager_State::mutable_ap_manager_ipv6_address(int index) {
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.AssignedApManagers.ApManager.State.ap_manager_ipv6_address)
  return ap_manager_ipv6_address_.Mutable(index);
}
inline ::ywrapper::StringValue* AccessPoints_AccessPoint_AssignedApManagers_ApManager_State::add_ap_manager_ipv6_address() {
  // @@protoc_insertion_point(field_add:openconfig.openconfig_access_points.AccessPoints.AccessPoint.AssignedApManagers.ApManager.State.ap_manager_ipv6_address)
  return ap_manager_ipv6_address_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::ywrapper::StringValue >*
AccessPoints_AccessPoint_AssignedApManagers_ApManager_State::mutable_ap_manager_ipv6_address() {
  // @@protoc_insertion_point(field_mutable_list:openconfig.openconfig_access_points.AccessPoints.AccessPoint.AssignedApManagers.ApManager.State.ap_manager_ipv6_address)
  return &ap_manager_ipv6_address_;
}
inline const ::google::protobuf::RepeatedPtrField< ::ywrapper::StringValue >&
AccessPoints_AccessPoint_AssignedApManagers_ApManager_State::ap_manager_ipv6_address() const {
  // @@protoc_insertion_point(field_list:openconfig.openconfig_access_points.AccessPoints.AccessPoint.AssignedApManagers.ApManager.State.ap_manager_ipv6_address)
  return ap_manager_ipv6_address_;
}

// .ywrapper.StringValue fqdn = 321879454 [(.yext.schemapath) = "/access-points/access-point/assigned-ap-managers/ap-manager/state/fqdn"];
inline bool AccessPoints_AccessPoint_AssignedApManagers_ApManager_State::has_fqdn() const {
  return this != internal_default_instance() && fqdn_ != NULL;
}
inline const ::ywrapper::StringValue& AccessPoints_AccessPoint_AssignedApManagers_ApManager_State::fqdn() const {
  const ::ywrapper::StringValue* p = fqdn_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.AssignedApManagers.ApManager.State.fqdn)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::StringValue*>(
      &::ywrapper::_StringValue_default_instance_);
}
inline ::ywrapper::StringValue* AccessPoints_AccessPoint_AssignedApManagers_ApManager_State::release_fqdn() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.AssignedApManagers.ApManager.State.fqdn)
  
  ::ywrapper::StringValue* temp = fqdn_;
  fqdn_ = NULL;
  return temp;
}
inline ::ywrapper::StringValue* AccessPoints_AccessPoint_AssignedApManagers_ApManager_State::mutable_fqdn() {
  
  if (fqdn_ == NULL) {
    fqdn_ = new ::ywrapper::StringValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.AssignedApManagers.ApManager.State.fqdn)
  return fqdn_;
}
inline void AccessPoints_AccessPoint_AssignedApManagers_ApManager_State::set_allocated_fqdn(::ywrapper::StringValue* fqdn) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(fqdn_);
  }
  if (fqdn) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      fqdn = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, fqdn, submessage_arena);
    }
    
  } else {
    
  }
  fqdn_ = fqdn;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.AssignedApManagers.ApManager.State.fqdn)
}

// .ywrapper.StringValue id = 43308820 [(.yext.schemapath) = "/access-points/access-point/assigned-ap-managers/ap-manager/state/id"];
inline bool AccessPoints_AccessPoint_AssignedApManagers_ApManager_State::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::ywrapper::StringValue& AccessPoints_AccessPoint_AssignedApManagers_ApManager_State::id() const {
  const ::ywrapper::StringValue* p = id_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.AssignedApManagers.ApManager.State.id)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::StringValue*>(
      &::ywrapper::_StringValue_default_instance_);
}
inline ::ywrapper::StringValue* AccessPoints_AccessPoint_AssignedApManagers_ApManager_State::release_id() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.AssignedApManagers.ApManager.State.id)
  
  ::ywrapper::StringValue* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::ywrapper::StringValue* AccessPoints_AccessPoint_AssignedApManagers_ApManager_State::mutable_id() {
  
  if (id_ == NULL) {
    id_ = new ::ywrapper::StringValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.AssignedApManagers.ApManager.State.id)
  return id_;
}
inline void AccessPoints_AccessPoint_AssignedApManagers_ApManager_State::set_allocated_id(::ywrapper::StringValue* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.AssignedApManagers.ApManager.State.id)
}

// .ywrapper.BoolValue joined = 518346540 [(.yext.schemapath) = "/access-points/access-point/assigned-ap-managers/ap-manager/state/joined"];
inline bool AccessPoints_AccessPoint_AssignedApManagers_ApManager_State::has_joined() const {
  return this != internal_default_instance() && joined_ != NULL;
}
inline const ::ywrapper::BoolValue& AccessPoints_AccessPoint_AssignedApManagers_ApManager_State::joined() const {
  const ::ywrapper::BoolValue* p = joined_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.AssignedApManagers.ApManager.State.joined)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::BoolValue*>(
      &::ywrapper::_BoolValue_default_instance_);
}
inline ::ywrapper::BoolValue* AccessPoints_AccessPoint_AssignedApManagers_ApManager_State::release_joined() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.AssignedApManagers.ApManager.State.joined)
  
  ::ywrapper::BoolValue* temp = joined_;
  joined_ = NULL;
  return temp;
}
inline ::ywrapper::BoolValue* AccessPoints_AccessPoint_AssignedApManagers_ApManager_State::mutable_joined() {
  
  if (joined_ == NULL) {
    joined_ = new ::ywrapper::BoolValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.AssignedApManagers.ApManager.State.joined)
  return joined_;
}
inline void AccessPoints_AccessPoint_AssignedApManagers_ApManager_State::set_allocated_joined(::ywrapper::BoolValue* joined) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(joined_);
  }
  if (joined) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      joined = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, joined, submessage_arena);
    }
    
  } else {
    
  }
  joined_ = joined;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.AssignedApManagers.ApManager.State.joined)
}

// -------------------------------------------------------------------

// AccessPoints_AccessPoint_AssignedApManagers_ApManager

// .openconfig.openconfig_access_points.AccessPoints.AccessPoint.AssignedApManagers.ApManager.Config config = 401060675 [(.yext.schemapath) = "/access-points/access-point/assigned-ap-managers/ap-manager/config"];
inline bool AccessPoints_AccessPoint_AssignedApManagers_ApManager::has_config() const {
  return this != internal_default_instance() && config_ != NULL;
}
inline void AccessPoints_AccessPoint_AssignedApManagers_ApManager::clear_config() {
  if (GetArenaNoVirtual() == NULL && config_ != NULL) {
    delete config_;
  }
  config_ = NULL;
}
inline const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_AssignedApManagers_ApManager_Config& AccessPoints_AccessPoint_AssignedApManagers_ApManager::config() const {
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_AssignedApManagers_ApManager_Config* p = config_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.AssignedApManagers.ApManager.config)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_AssignedApManagers_ApManager_Config*>(
      &::openconfig::openconfig_access_points::_AccessPoints_AccessPoint_AssignedApManagers_ApManager_Config_default_instance_);
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_AssignedApManagers_ApManager_Config* AccessPoints_AccessPoint_AssignedApManagers_ApManager::release_config() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.AssignedApManagers.ApManager.config)
  
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_AssignedApManagers_ApManager_Config* temp = config_;
  config_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_AssignedApManagers_ApManager_Config* AccessPoints_AccessPoint_AssignedApManagers_ApManager::mutable_config() {
  
  if (config_ == NULL) {
    config_ = new ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_AssignedApManagers_ApManager_Config;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.AssignedApManagers.ApManager.config)
  return config_;
}
inline void AccessPoints_AccessPoint_AssignedApManagers_ApManager::set_allocated_config(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_AssignedApManagers_ApManager_Config* config) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete config_;
  }
  if (config) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      config = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, config, submessage_arena);
    }
    
  } else {
    
  }
  config_ = config;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.AssignedApManagers.ApManager.config)
}

// .openconfig.openconfig_access_points.AccessPoints.AccessPoint.AssignedApManagers.ApManager.State state = 83170980 [(.yext.schemapath) = "/access-points/access-point/assigned-ap-managers/ap-manager/state"];
inline bool AccessPoints_AccessPoint_AssignedApManagers_ApManager::has_state() const {
  return this != internal_default_instance() && state_ != NULL;
}
inline void AccessPoints_AccessPoint_AssignedApManagers_ApManager::clear_state() {
  if (GetArenaNoVirtual() == NULL && state_ != NULL) {
    delete state_;
  }
  state_ = NULL;
}
inline const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_AssignedApManagers_ApManager_State& AccessPoints_AccessPoint_AssignedApManagers_ApManager::state() const {
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_AssignedApManagers_ApManager_State* p = state_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.AssignedApManagers.ApManager.state)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_AssignedApManagers_ApManager_State*>(
      &::openconfig::openconfig_access_points::_AccessPoints_AccessPoint_AssignedApManagers_ApManager_State_default_instance_);
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_AssignedApManagers_ApManager_State* AccessPoints_AccessPoint_AssignedApManagers_ApManager::release_state() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.AssignedApManagers.ApManager.state)
  
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_AssignedApManagers_ApManager_State* temp = state_;
  state_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_AssignedApManagers_ApManager_State* AccessPoints_AccessPoint_AssignedApManagers_ApManager::mutable_state() {
  
  if (state_ == NULL) {
    state_ = new ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_AssignedApManagers_ApManager_State;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.AssignedApManagers.ApManager.state)
  return state_;
}
inline void AccessPoints_AccessPoint_AssignedApManagers_ApManager::set_allocated_state(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_AssignedApManagers_ApManager_State* state) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete state_;
  }
  if (state) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      state = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, state, submessage_arena);
    }
    
  } else {
    
  }
  state_ = state;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.AssignedApManagers.ApManager.state)
}

// -------------------------------------------------------------------

// AccessPoints_AccessPoint_AssignedApManagers_ApManagerKey

// string id = 1 [(.yext.schemapath) = "/access-points/access-point/assigned-ap-managers/ap-manager/id"];
inline void AccessPoints_AccessPoint_AssignedApManagers_ApManagerKey::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AccessPoints_AccessPoint_AssignedApManagers_ApManagerKey::id() const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.AssignedApManagers.ApManagerKey.id)
  return id_.GetNoArena();
}
inline void AccessPoints_AccessPoint_AssignedApManagers_ApManagerKey::set_id(const ::std::string& value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:openconfig.openconfig_access_points.AccessPoints.AccessPoint.AssignedApManagers.ApManagerKey.id)
}
#if LANG_CXX11
inline void AccessPoints_AccessPoint_AssignedApManagers_ApManagerKey::set_id(::std::string&& value) {
  
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:openconfig.openconfig_access_points.AccessPoints.AccessPoint.AssignedApManagers.ApManagerKey.id)
}
#endif
inline void AccessPoints_AccessPoint_AssignedApManagers_ApManagerKey::set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:openconfig.openconfig_access_points.AccessPoints.AccessPoint.AssignedApManagers.ApManagerKey.id)
}
inline void AccessPoints_AccessPoint_AssignedApManagers_ApManagerKey::set_id(const char* value, size_t size) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:openconfig.openconfig_access_points.AccessPoints.AccessPoint.AssignedApManagers.ApManagerKey.id)
}
inline ::std::string* AccessPoints_AccessPoint_AssignedApManagers_ApManagerKey::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.AssignedApManagers.ApManagerKey.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AccessPoints_AccessPoint_AssignedApManagers_ApManagerKey::release_id() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.AssignedApManagers.ApManagerKey.id)
  
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AccessPoints_AccessPoint_AssignedApManagers_ApManagerKey::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    
  } else {
    
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.AssignedApManagers.ApManagerKey.id)
}

// .openconfig.openconfig_access_points.AccessPoints.AccessPoint.AssignedApManagers.ApManager ap_manager = 2;
inline bool AccessPoints_AccessPoint_AssignedApManagers_ApManagerKey::has_ap_manager() const {
  return this != internal_default_instance() && ap_manager_ != NULL;
}
inline void AccessPoints_AccessPoint_AssignedApManagers_ApManagerKey::clear_ap_manager() {
  if (GetArenaNoVirtual() == NULL && ap_manager_ != NULL) {
    delete ap_manager_;
  }
  ap_manager_ = NULL;
}
inline const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_AssignedApManagers_ApManager& AccessPoints_AccessPoint_AssignedApManagers_ApManagerKey::ap_manager() const {
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_AssignedApManagers_ApManager* p = ap_manager_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.AssignedApManagers.ApManagerKey.ap_manager)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_AssignedApManagers_ApManager*>(
      &::openconfig::openconfig_access_points::_AccessPoints_AccessPoint_AssignedApManagers_ApManager_default_instance_);
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_AssignedApManagers_ApManager* AccessPoints_AccessPoint_AssignedApManagers_ApManagerKey::release_ap_manager() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.AssignedApManagers.ApManagerKey.ap_manager)
  
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_AssignedApManagers_ApManager* temp = ap_manager_;
  ap_manager_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_AssignedApManagers_ApManager* AccessPoints_AccessPoint_AssignedApManagers_ApManagerKey::mutable_ap_manager() {
  
  if (ap_manager_ == NULL) {
    ap_manager_ = new ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_AssignedApManagers_ApManager;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.AssignedApManagers.ApManagerKey.ap_manager)
  return ap_manager_;
}
inline void AccessPoints_AccessPoint_AssignedApManagers_ApManagerKey::set_allocated_ap_manager(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_AssignedApManagers_ApManager* ap_manager) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete ap_manager_;
  }
  if (ap_manager) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      ap_manager = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, ap_manager, submessage_arena);
    }
    
  } else {
    
  }
  ap_manager_ = ap_manager;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.AssignedApManagers.ApManagerKey.ap_manager)
}

// -------------------------------------------------------------------

// AccessPoints_AccessPoint_AssignedApManagers

// repeated .openconfig.openconfig_access_points.AccessPoints.AccessPoint.AssignedApManagers.ApManagerKey ap_manager = 57137442 [(.yext.schemapath) = "/access-points/access-point/assigned-ap-managers/ap-manager"];
inline int AccessPoints_AccessPoint_AssignedApManagers::ap_manager_size() const {
  return ap_manager_.size();
}
inline void AccessPoints_AccessPoint_AssignedApManagers::clear_ap_manager() {
  ap_manager_.Clear();
}
inline const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_AssignedApManagers_ApManagerKey& AccessPoints_AccessPoint_AssignedApManagers::ap_manager(int index) const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.AssignedApManagers.ap_manager)
  return ap_manager_.Get(index);
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_AssignedApManagers_ApManagerKey* AccessPoints_AccessPoint_AssignedApManagers::mutable_ap_manager(int index) {
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.AssignedApManagers.ap_manager)
  return ap_manager_.Mutable(index);
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_AssignedApManagers_ApManagerKey* AccessPoints_AccessPoint_AssignedApManagers::add_ap_manager() {
  // @@protoc_insertion_point(field_add:openconfig.openconfig_access_points.AccessPoints.AccessPoint.AssignedApManagers.ap_manager)
  return ap_manager_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_AssignedApManagers_ApManagerKey >*
AccessPoints_AccessPoint_AssignedApManagers::mutable_ap_manager() {
  // @@protoc_insertion_point(field_mutable_list:openconfig.openconfig_access_points.AccessPoints.AccessPoint.AssignedApManagers.ap_manager)
  return &ap_manager_;
}
inline const ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_AssignedApManagers_ApManagerKey >&
AccessPoints_AccessPoint_AssignedApManagers::ap_manager() const {
  // @@protoc_insertion_point(field_list:openconfig.openconfig_access_points.AccessPoints.AccessPoint.AssignedApManagers.ap_manager)
  return ap_manager_;
}

// -------------------------------------------------------------------

// AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxDataDist

// .ywrapper.UintValue rx_0_64 = 143422199 [(.yext.schemapath) = "/access-points/access-point/bssids/bssid/state/counters/rx-data-dist/rx-0-64"];
inline bool AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxDataDist::has_rx_0_64() const {
  return this != internal_default_instance() && rx_0_64_ != NULL;
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxDataDist::rx_0_64() const {
  const ::ywrapper::UintValue* p = rx_0_64_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.RxDataDist.rx_0_64)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxDataDist::release_rx_0_64() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.RxDataDist.rx_0_64)
  
  ::ywrapper::UintValue* temp = rx_0_64_;
  rx_0_64_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxDataDist::mutable_rx_0_64() {
  
  if (rx_0_64_ == NULL) {
    rx_0_64_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.RxDataDist.rx_0_64)
  return rx_0_64_;
}
inline void AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxDataDist::set_allocated_rx_0_64(::ywrapper::UintValue* rx_0_64) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(rx_0_64_);
  }
  if (rx_0_64) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      rx_0_64 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, rx_0_64, submessage_arena);
    }
    
  } else {
    
  }
  rx_0_64_ = rx_0_64;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.RxDataDist.rx_0_64)
}

// .ywrapper.UintValue rx_1025_2048 = 21640095 [(.yext.schemapath) = "/access-points/access-point/bssids/bssid/state/counters/rx-data-dist/rx-1025-2048"];
inline bool AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxDataDist::has_rx_1025_2048() const {
  return this != internal_default_instance() && rx_1025_2048_ != NULL;
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxDataDist::rx_1025_2048() const {
  const ::ywrapper::UintValue* p = rx_1025_2048_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.RxDataDist.rx_1025_2048)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxDataDist::release_rx_1025_2048() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.RxDataDist.rx_1025_2048)
  
  ::ywrapper::UintValue* temp = rx_1025_2048_;
  rx_1025_2048_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxDataDist::mutable_rx_1025_2048() {
  
  if (rx_1025_2048_ == NULL) {
    rx_1025_2048_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.RxDataDist.rx_1025_2048)
  return rx_1025_2048_;
}
inline void AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxDataDist::set_allocated_rx_1025_2048(::ywrapper::UintValue* rx_1025_2048) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(rx_1025_2048_);
  }
  if (rx_1025_2048) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      rx_1025_2048 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, rx_1025_2048, submessage_arena);
    }
    
  } else {
    
  }
  rx_1025_2048_ = rx_1025_2048;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.RxDataDist.rx_1025_2048)
}

// .ywrapper.UintValue rx_129_256 = 393371098 [(.yext.schemapath) = "/access-points/access-point/bssids/bssid/state/counters/rx-data-dist/rx-129-256"];
inline bool AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxDataDist::has_rx_129_256() const {
  return this != internal_default_instance() && rx_129_256_ != NULL;
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxDataDist::rx_129_256() const {
  const ::ywrapper::UintValue* p = rx_129_256_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.RxDataDist.rx_129_256)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxDataDist::release_rx_129_256() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.RxDataDist.rx_129_256)
  
  ::ywrapper::UintValue* temp = rx_129_256_;
  rx_129_256_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxDataDist::mutable_rx_129_256() {
  
  if (rx_129_256_ == NULL) {
    rx_129_256_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.RxDataDist.rx_129_256)
  return rx_129_256_;
}
inline void AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxDataDist::set_allocated_rx_129_256(::ywrapper::UintValue* rx_129_256) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(rx_129_256_);
  }
  if (rx_129_256) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      rx_129_256 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, rx_129_256, submessage_arena);
    }
    
  } else {
    
  }
  rx_129_256_ = rx_129_256;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.RxDataDist.rx_129_256)
}

// .ywrapper.UintValue rx_131073_262144 = 39261633 [(.yext.schemapath) = "/access-points/access-point/bssids/bssid/state/counters/rx-data-dist/rx-131073-262144"];
inline bool AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxDataDist::has_rx_131073_262144() const {
  return this != internal_default_instance() && rx_131073_262144_ != NULL;
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxDataDist::rx_131073_262144() const {
  const ::ywrapper::UintValue* p = rx_131073_262144_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.RxDataDist.rx_131073_262144)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxDataDist::release_rx_131073_262144() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.RxDataDist.rx_131073_262144)
  
  ::ywrapper::UintValue* temp = rx_131073_262144_;
  rx_131073_262144_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxDataDist::mutable_rx_131073_262144() {
  
  if (rx_131073_262144_ == NULL) {
    rx_131073_262144_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.RxDataDist.rx_131073_262144)
  return rx_131073_262144_;
}
inline void AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxDataDist::set_allocated_rx_131073_262144(::ywrapper::UintValue* rx_131073_262144) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(rx_131073_262144_);
  }
  if (rx_131073_262144) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      rx_131073_262144 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, rx_131073_262144, submessage_arena);
    }
    
  } else {
    
  }
  rx_131073_262144_ = rx_131073_262144;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.RxDataDist.rx_131073_262144)
}

// .ywrapper.UintValue rx_16385_32768 = 357129086 [(.yext.schemapath) = "/access-points/access-point/bssids/bssid/state/counters/rx-data-dist/rx-16385-32768"];
inline bool AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxDataDist::has_rx_16385_32768() const {
  return this != internal_default_instance() && rx_16385_32768_ != NULL;
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxDataDist::rx_16385_32768() const {
  const ::ywrapper::UintValue* p = rx_16385_32768_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.RxDataDist.rx_16385_32768)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxDataDist::release_rx_16385_32768() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.RxDataDist.rx_16385_32768)
  
  ::ywrapper::UintValue* temp = rx_16385_32768_;
  rx_16385_32768_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxDataDist::mutable_rx_16385_32768() {
  
  if (rx_16385_32768_ == NULL) {
    rx_16385_32768_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.RxDataDist.rx_16385_32768)
  return rx_16385_32768_;
}
inline void AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxDataDist::set_allocated_rx_16385_32768(::ywrapper::UintValue* rx_16385_32768) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(rx_16385_32768_);
  }
  if (rx_16385_32768) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      rx_16385_32768 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, rx_16385_32768, submessage_arena);
    }
    
  } else {
    
  }
  rx_16385_32768_ = rx_16385_32768;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.RxDataDist.rx_16385_32768)
}

// .ywrapper.UintValue rx_2049_4096 = 216726557 [(.yext.schemapath) = "/access-points/access-point/bssids/bssid/state/counters/rx-data-dist/rx-2049-4096"];
inline bool AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxDataDist::has_rx_2049_4096() const {
  return this != internal_default_instance() && rx_2049_4096_ != NULL;
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxDataDist::rx_2049_4096() const {
  const ::ywrapper::UintValue* p = rx_2049_4096_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.RxDataDist.rx_2049_4096)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxDataDist::release_rx_2049_4096() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.RxDataDist.rx_2049_4096)
  
  ::ywrapper::UintValue* temp = rx_2049_4096_;
  rx_2049_4096_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxDataDist::mutable_rx_2049_4096() {
  
  if (rx_2049_4096_ == NULL) {
    rx_2049_4096_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.RxDataDist.rx_2049_4096)
  return rx_2049_4096_;
}
inline void AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxDataDist::set_allocated_rx_2049_4096(::ywrapper::UintValue* rx_2049_4096) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(rx_2049_4096_);
  }
  if (rx_2049_4096) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      rx_2049_4096 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, rx_2049_4096, submessage_arena);
    }
    
  } else {
    
  }
  rx_2049_4096_ = rx_2049_4096;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.RxDataDist.rx_2049_4096)
}

// .ywrapper.UintValue rx_257_512 = 158965569 [(.yext.schemapath) = "/access-points/access-point/bssids/bssid/state/counters/rx-data-dist/rx-257-512"];
inline bool AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxDataDist::has_rx_257_512() const {
  return this != internal_default_instance() && rx_257_512_ != NULL;
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxDataDist::rx_257_512() const {
  const ::ywrapper::UintValue* p = rx_257_512_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.RxDataDist.rx_257_512)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxDataDist::release_rx_257_512() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.RxDataDist.rx_257_512)
  
  ::ywrapper::UintValue* temp = rx_257_512_;
  rx_257_512_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxDataDist::mutable_rx_257_512() {
  
  if (rx_257_512_ == NULL) {
    rx_257_512_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.RxDataDist.rx_257_512)
  return rx_257_512_;
}
inline void AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxDataDist::set_allocated_rx_257_512(::ywrapper::UintValue* rx_257_512) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(rx_257_512_);
  }
  if (rx_257_512) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      rx_257_512 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, rx_257_512, submessage_arena);
    }
    
  } else {
    
  }
  rx_257_512_ = rx_257_512;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.RxDataDist.rx_257_512)
}

// .ywrapper.UintValue rx_262145_524288 = 509798284 [(.yext.schemapath) = "/access-points/access-point/bssids/bssid/state/counters/rx-data-dist/rx-262145-524288"];
inline bool AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxDataDist::has_rx_262145_524288() const {
  return this != internal_default_instance() && rx_262145_524288_ != NULL;
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxDataDist::rx_262145_524288() const {
  const ::ywrapper::UintValue* p = rx_262145_524288_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.RxDataDist.rx_262145_524288)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxDataDist::release_rx_262145_524288() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.RxDataDist.rx_262145_524288)
  
  ::ywrapper::UintValue* temp = rx_262145_524288_;
  rx_262145_524288_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxDataDist::mutable_rx_262145_524288() {
  
  if (rx_262145_524288_ == NULL) {
    rx_262145_524288_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.RxDataDist.rx_262145_524288)
  return rx_262145_524288_;
}
inline void AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxDataDist::set_allocated_rx_262145_524288(::ywrapper::UintValue* rx_262145_524288) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(rx_262145_524288_);
  }
  if (rx_262145_524288) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      rx_262145_524288 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, rx_262145_524288, submessage_arena);
    }
    
  } else {
    
  }
  rx_262145_524288_ = rx_262145_524288;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.RxDataDist.rx_262145_524288)
}

// .ywrapper.UintValue rx_32769_65536 = 146888689 [(.yext.schemapath) = "/access-points/access-point/bssids/bssid/state/counters/rx-data-dist/rx-32769-65536"];
inline bool AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxDataDist::has_rx_32769_65536() const {
  return this != internal_default_instance() && rx_32769_65536_ != NULL;
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxDataDist::rx_32769_65536() const {
  const ::ywrapper::UintValue* p = rx_32769_65536_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.RxDataDist.rx_32769_65536)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxDataDist::release_rx_32769_65536() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.RxDataDist.rx_32769_65536)
  
  ::ywrapper::UintValue* temp = rx_32769_65536_;
  rx_32769_65536_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxDataDist::mutable_rx_32769_65536() {
  
  if (rx_32769_65536_ == NULL) {
    rx_32769_65536_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.RxDataDist.rx_32769_65536)
  return rx_32769_65536_;
}
inline void AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxDataDist::set_allocated_rx_32769_65536(::ywrapper::UintValue* rx_32769_65536) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(rx_32769_65536_);
  }
  if (rx_32769_65536) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      rx_32769_65536 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, rx_32769_65536, submessage_arena);
    }
    
  } else {
    
  }
  rx_32769_65536_ = rx_32769_65536;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.RxDataDist.rx_32769_65536)
}

// .ywrapper.UintValue rx_4097_8192 = 114719685 [(.yext.schemapath) = "/access-points/access-point/bssids/bssid/state/counters/rx-data-dist/rx-4097-8192"];
inline bool AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxDataDist::has_rx_4097_8192() const {
  return this != internal_default_instance() && rx_4097_8192_ != NULL;
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxDataDist::rx_4097_8192() const {
  const ::ywrapper::UintValue* p = rx_4097_8192_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.RxDataDist.rx_4097_8192)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxDataDist::release_rx_4097_8192() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.RxDataDist.rx_4097_8192)
  
  ::ywrapper::UintValue* temp = rx_4097_8192_;
  rx_4097_8192_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxDataDist::mutable_rx_4097_8192() {
  
  if (rx_4097_8192_ == NULL) {
    rx_4097_8192_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.RxDataDist.rx_4097_8192)
  return rx_4097_8192_;
}
inline void AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxDataDist::set_allocated_rx_4097_8192(::ywrapper::UintValue* rx_4097_8192) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(rx_4097_8192_);
  }
  if (rx_4097_8192) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      rx_4097_8192 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, rx_4097_8192, submessage_arena);
    }
    
  } else {
    
  }
  rx_4097_8192_ = rx_4097_8192;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.RxDataDist.rx_4097_8192)
}

// .ywrapper.UintValue rx_513_1024 = 87832527 [(.yext.schemapath) = "/access-points/access-point/bssids/bssid/state/counters/rx-data-dist/rx-513-1024"];
inline bool AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxDataDist::has_rx_513_1024() const {
  return this != internal_default_instance() && rx_513_1024_ != NULL;
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxDataDist::rx_513_1024() const {
  const ::ywrapper::UintValue* p = rx_513_1024_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.RxDataDist.rx_513_1024)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxDataDist::release_rx_513_1024() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.RxDataDist.rx_513_1024)
  
  ::ywrapper::UintValue* temp = rx_513_1024_;
  rx_513_1024_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxDataDist::mutable_rx_513_1024() {
  
  if (rx_513_1024_ == NULL) {
    rx_513_1024_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.RxDataDist.rx_513_1024)
  return rx_513_1024_;
}
inline void AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxDataDist::set_allocated_rx_513_1024(::ywrapper::UintValue* rx_513_1024) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(rx_513_1024_);
  }
  if (rx_513_1024) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      rx_513_1024 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, rx_513_1024, submessage_arena);
    }
    
  } else {
    
  }
  rx_513_1024_ = rx_513_1024;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.RxDataDist.rx_513_1024)
}

// .ywrapper.UintValue rx_524289_1048576 = 240442274 [(.yext.schemapath) = "/access-points/access-point/bssids/bssid/state/counters/rx-data-dist/rx-524289-1048576"];
inline bool AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxDataDist::has_rx_524289_1048576() const {
  return this != internal_default_instance() && rx_524289_1048576_ != NULL;
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxDataDist::rx_524289_1048576() const {
  const ::ywrapper::UintValue* p = rx_524289_1048576_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.RxDataDist.rx_524289_1048576)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxDataDist::release_rx_524289_1048576() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.RxDataDist.rx_524289_1048576)
  
  ::ywrapper::UintValue* temp = rx_524289_1048576_;
  rx_524289_1048576_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxDataDist::mutable_rx_524289_1048576() {
  
  if (rx_524289_1048576_ == NULL) {
    rx_524289_1048576_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.RxDataDist.rx_524289_1048576)
  return rx_524289_1048576_;
}
inline void AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxDataDist::set_allocated_rx_524289_1048576(::ywrapper::UintValue* rx_524289_1048576) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(rx_524289_1048576_);
  }
  if (rx_524289_1048576) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      rx_524289_1048576 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, rx_524289_1048576, submessage_arena);
    }
    
  } else {
    
  }
  rx_524289_1048576_ = rx_524289_1048576;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.RxDataDist.rx_524289_1048576)
}

// .ywrapper.UintValue rx_65_128 = 222945107 [(.yext.schemapath) = "/access-points/access-point/bssids/bssid/state/counters/rx-data-dist/rx-65-128"];
inline bool AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxDataDist::has_rx_65_128() const {
  return this != internal_default_instance() && rx_65_128_ != NULL;
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxDataDist::rx_65_128() const {
  const ::ywrapper::UintValue* p = rx_65_128_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.RxDataDist.rx_65_128)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxDataDist::release_rx_65_128() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.RxDataDist.rx_65_128)
  
  ::ywrapper::UintValue* temp = rx_65_128_;
  rx_65_128_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxDataDist::mutable_rx_65_128() {
  
  if (rx_65_128_ == NULL) {
    rx_65_128_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.RxDataDist.rx_65_128)
  return rx_65_128_;
}
inline void AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxDataDist::set_allocated_rx_65_128(::ywrapper::UintValue* rx_65_128) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(rx_65_128_);
  }
  if (rx_65_128) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      rx_65_128 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, rx_65_128, submessage_arena);
    }
    
  } else {
    
  }
  rx_65_128_ = rx_65_128;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.RxDataDist.rx_65_128)
}

// .ywrapper.UintValue rx_65537_131072 = 40498515 [(.yext.schemapath) = "/access-points/access-point/bssids/bssid/state/counters/rx-data-dist/rx-65537-131072"];
inline bool AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxDataDist::has_rx_65537_131072() const {
  return this != internal_default_instance() && rx_65537_131072_ != NULL;
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxDataDist::rx_65537_131072() const {
  const ::ywrapper::UintValue* p = rx_65537_131072_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.RxDataDist.rx_65537_131072)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxDataDist::release_rx_65537_131072() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.RxDataDist.rx_65537_131072)
  
  ::ywrapper::UintValue* temp = rx_65537_131072_;
  rx_65537_131072_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxDataDist::mutable_rx_65537_131072() {
  
  if (rx_65537_131072_ == NULL) {
    rx_65537_131072_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.RxDataDist.rx_65537_131072)
  return rx_65537_131072_;
}
inline void AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxDataDist::set_allocated_rx_65537_131072(::ywrapper::UintValue* rx_65537_131072) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(rx_65537_131072_);
  }
  if (rx_65537_131072) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      rx_65537_131072 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, rx_65537_131072, submessage_arena);
    }
    
  } else {
    
  }
  rx_65537_131072_ = rx_65537_131072;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.RxDataDist.rx_65537_131072)
}

// .ywrapper.UintValue rx_8193_16384 = 109135014 [(.yext.schemapath) = "/access-points/access-point/bssids/bssid/state/counters/rx-data-dist/rx-8193-16384"];
inline bool AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxDataDist::has_rx_8193_16384() const {
  return this != internal_default_instance() && rx_8193_16384_ != NULL;
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxDataDist::rx_8193_16384() const {
  const ::ywrapper::UintValue* p = rx_8193_16384_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.RxDataDist.rx_8193_16384)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxDataDist::release_rx_8193_16384() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.RxDataDist.rx_8193_16384)
  
  ::ywrapper::UintValue* temp = rx_8193_16384_;
  rx_8193_16384_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxDataDist::mutable_rx_8193_16384() {
  
  if (rx_8193_16384_ == NULL) {
    rx_8193_16384_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.RxDataDist.rx_8193_16384)
  return rx_8193_16384_;
}
inline void AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxDataDist::set_allocated_rx_8193_16384(::ywrapper::UintValue* rx_8193_16384) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(rx_8193_16384_);
  }
  if (rx_8193_16384) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      rx_8193_16384 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, rx_8193_16384, submessage_arena);
    }
    
  } else {
    
  }
  rx_8193_16384_ = rx_8193_16384;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.RxDataDist.rx_8193_16384)
}

// -------------------------------------------------------------------

// AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxDataWmm

// .ywrapper.UintValue be = 505730353 [(.yext.schemapath) = "/access-points/access-point/bssids/bssid/state/counters/rx-data-wmm/be"];
inline bool AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxDataWmm::has_be() const {
  return this != internal_default_instance() && be_ != NULL;
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxDataWmm::be() const {
  const ::ywrapper::UintValue* p = be_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.RxDataWmm.be)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxDataWmm::release_be() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.RxDataWmm.be)
  
  ::ywrapper::UintValue* temp = be_;
  be_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxDataWmm::mutable_be() {
  
  if (be_ == NULL) {
    be_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.RxDataWmm.be)
  return be_;
}
inline void AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxDataWmm::set_allocated_be(::ywrapper::UintValue* be) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(be_);
  }
  if (be) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      be = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, be, submessage_arena);
    }
    
  } else {
    
  }
  be_ = be;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.RxDataWmm.be)
}

// .ywrapper.UintValue bk = 505730367 [(.yext.schemapath) = "/access-points/access-point/bssids/bssid/state/counters/rx-data-wmm/bk"];
inline bool AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxDataWmm::has_bk() const {
  return this != internal_default_instance() && bk_ != NULL;
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxDataWmm::bk() const {
  const ::ywrapper::UintValue* p = bk_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.RxDataWmm.bk)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxDataWmm::release_bk() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.RxDataWmm.bk)
  
  ::ywrapper::UintValue* temp = bk_;
  bk_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxDataWmm::mutable_bk() {
  
  if (bk_ == NULL) {
    bk_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.RxDataWmm.bk)
  return bk_;
}
inline void AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxDataWmm::set_allocated_bk(::ywrapper::UintValue* bk) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(bk_);
  }
  if (bk) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      bk = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, bk, submessage_arena);
    }
    
  } else {
    
  }
  bk_ = bk;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.RxDataWmm.bk)
}

// .ywrapper.UintValue vi = 170177969 [(.yext.schemapath) = "/access-points/access-point/bssids/bssid/state/counters/rx-data-wmm/vi"];
inline bool AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxDataWmm::has_vi() const {
  return this != internal_default_instance() && vi_ != NULL;
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxDataWmm::vi() const {
  const ::ywrapper::UintValue* p = vi_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.RxDataWmm.vi)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxDataWmm::release_vi() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.RxDataWmm.vi)
  
  ::ywrapper::UintValue* temp = vi_;
  vi_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxDataWmm::mutable_vi() {
  
  if (vi_ == NULL) {
    vi_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.RxDataWmm.vi)
  return vi_;
}
inline void AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxDataWmm::set_allocated_vi(::ywrapper::UintValue* vi) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(vi_);
  }
  if (vi) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      vi = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, vi, submessage_arena);
    }
    
  } else {
    
  }
  vi_ = vi;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.RxDataWmm.vi)
}

// .ywrapper.UintValue vo = 170177975 [(.yext.schemapath) = "/access-points/access-point/bssids/bssid/state/counters/rx-data-wmm/vo"];
inline bool AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxDataWmm::has_vo() const {
  return this != internal_default_instance() && vo_ != NULL;
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxDataWmm::vo() const {
  const ::ywrapper::UintValue* p = vo_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.RxDataWmm.vo)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxDataWmm::release_vo() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.RxDataWmm.vo)
  
  ::ywrapper::UintValue* temp = vo_;
  vo_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxDataWmm::mutable_vo() {
  
  if (vo_ == NULL) {
    vo_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.RxDataWmm.vo)
  return vo_;
}
inline void AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxDataWmm::set_allocated_vo(::ywrapper::UintValue* vo) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(vo_);
  }
  if (vo) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      vo = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, vo, submessage_arena);
    }
    
  } else {
    
  }
  vo_ = vo;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.RxDataWmm.vo)
}

// -------------------------------------------------------------------

// AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxMcs

// .ywrapper.UintValue mcs0 = 6642490 [(.yext.schemapath) = "/access-points/access-point/bssids/bssid/state/counters/rx-mcs/mcs0"];
inline bool AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxMcs::has_mcs0() const {
  return this != internal_default_instance() && mcs0_ != NULL;
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxMcs::mcs0() const {
  const ::ywrapper::UintValue* p = mcs0_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.RxMcs.mcs0)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxMcs::release_mcs0() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.RxMcs.mcs0)
  
  ::ywrapper::UintValue* temp = mcs0_;
  mcs0_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxMcs::mutable_mcs0() {
  
  if (mcs0_ == NULL) {
    mcs0_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.RxMcs.mcs0)
  return mcs0_;
}
inline void AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxMcs::set_allocated_mcs0(::ywrapper::UintValue* mcs0) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(mcs0_);
  }
  if (mcs0) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      mcs0 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, mcs0, submessage_arena);
    }
    
  } else {
    
  }
  mcs0_ = mcs0;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.RxMcs.mcs0)
}

// .ywrapper.UintValue mcs1 = 6642491 [(.yext.schemapath) = "/access-points/access-point/bssids/bssid/state/counters/rx-mcs/mcs1"];
inline bool AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxMcs::has_mcs1() const {
  return this != internal_default_instance() && mcs1_ != NULL;
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxMcs::mcs1() const {
  const ::ywrapper::UintValue* p = mcs1_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.RxMcs.mcs1)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxMcs::release_mcs1() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.RxMcs.mcs1)
  
  ::ywrapper::UintValue* temp = mcs1_;
  mcs1_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxMcs::mutable_mcs1() {
  
  if (mcs1_ == NULL) {
    mcs1_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.RxMcs.mcs1)
  return mcs1_;
}
inline void AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxMcs::set_allocated_mcs1(::ywrapper::UintValue* mcs1) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(mcs1_);
  }
  if (mcs1) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      mcs1 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, mcs1, submessage_arena);
    }
    
  } else {
    
  }
  mcs1_ = mcs1;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.RxMcs.mcs1)
}

// .ywrapper.UintValue mcs2 = 6642488 [(.yext.schemapath) = "/access-points/access-point/bssids/bssid/state/counters/rx-mcs/mcs2"];
inline bool AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxMcs::has_mcs2() const {
  return this != internal_default_instance() && mcs2_ != NULL;
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxMcs::mcs2() const {
  const ::ywrapper::UintValue* p = mcs2_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.RxMcs.mcs2)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxMcs::release_mcs2() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.RxMcs.mcs2)
  
  ::ywrapper::UintValue* temp = mcs2_;
  mcs2_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxMcs::mutable_mcs2() {
  
  if (mcs2_ == NULL) {
    mcs2_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.RxMcs.mcs2)
  return mcs2_;
}
inline void AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxMcs::set_allocated_mcs2(::ywrapper::UintValue* mcs2) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(mcs2_);
  }
  if (mcs2) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      mcs2 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, mcs2, submessage_arena);
    }
    
  } else {
    
  }
  mcs2_ = mcs2;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.RxMcs.mcs2)
}

// .ywrapper.UintValue mcs3 = 6642489 [(.yext.schemapath) = "/access-points/access-point/bssids/bssid/state/counters/rx-mcs/mcs3"];
inline bool AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxMcs::has_mcs3() const {
  return this != internal_default_instance() && mcs3_ != NULL;
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxMcs::mcs3() const {
  const ::ywrapper::UintValue* p = mcs3_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.RxMcs.mcs3)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxMcs::release_mcs3() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.RxMcs.mcs3)
  
  ::ywrapper::UintValue* temp = mcs3_;
  mcs3_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxMcs::mutable_mcs3() {
  
  if (mcs3_ == NULL) {
    mcs3_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.RxMcs.mcs3)
  return mcs3_;
}
inline void AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxMcs::set_allocated_mcs3(::ywrapper::UintValue* mcs3) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(mcs3_);
  }
  if (mcs3) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      mcs3 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, mcs3, submessage_arena);
    }
    
  } else {
    
  }
  mcs3_ = mcs3;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.RxMcs.mcs3)
}

// .ywrapper.UintValue mcs4 = 6642494 [(.yext.schemapath) = "/access-points/access-point/bssids/bssid/state/counters/rx-mcs/mcs4"];
inline bool AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxMcs::has_mcs4() const {
  return this != internal_default_instance() && mcs4_ != NULL;
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxMcs::mcs4() const {
  const ::ywrapper::UintValue* p = mcs4_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.RxMcs.mcs4)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxMcs::release_mcs4() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.RxMcs.mcs4)
  
  ::ywrapper::UintValue* temp = mcs4_;
  mcs4_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxMcs::mutable_mcs4() {
  
  if (mcs4_ == NULL) {
    mcs4_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.RxMcs.mcs4)
  return mcs4_;
}
inline void AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxMcs::set_allocated_mcs4(::ywrapper::UintValue* mcs4) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(mcs4_);
  }
  if (mcs4) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      mcs4 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, mcs4, submessage_arena);
    }
    
  } else {
    
  }
  mcs4_ = mcs4;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.RxMcs.mcs4)
}

// .ywrapper.UintValue mcs5 = 6642495 [(.yext.schemapath) = "/access-points/access-point/bssids/bssid/state/counters/rx-mcs/mcs5"];
inline bool AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxMcs::has_mcs5() const {
  return this != internal_default_instance() && mcs5_ != NULL;
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxMcs::mcs5() const {
  const ::ywrapper::UintValue* p = mcs5_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.RxMcs.mcs5)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxMcs::release_mcs5() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.RxMcs.mcs5)
  
  ::ywrapper::UintValue* temp = mcs5_;
  mcs5_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxMcs::mutable_mcs5() {
  
  if (mcs5_ == NULL) {
    mcs5_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.RxMcs.mcs5)
  return mcs5_;
}
inline void AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxMcs::set_allocated_mcs5(::ywrapper::UintValue* mcs5) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(mcs5_);
  }
  if (mcs5) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      mcs5 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, mcs5, submessage_arena);
    }
    
  } else {
    
  }
  mcs5_ = mcs5;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.RxMcs.mcs5)
}

// .ywrapper.UintValue mcs6 = 6642492 [(.yext.schemapath) = "/access-points/access-point/bssids/bssid/state/counters/rx-mcs/mcs6"];
inline bool AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxMcs::has_mcs6() const {
  return this != internal_default_instance() && mcs6_ != NULL;
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxMcs::mcs6() const {
  const ::ywrapper::UintValue* p = mcs6_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.RxMcs.mcs6)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxMcs::release_mcs6() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.RxMcs.mcs6)
  
  ::ywrapper::UintValue* temp = mcs6_;
  mcs6_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxMcs::mutable_mcs6() {
  
  if (mcs6_ == NULL) {
    mcs6_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.RxMcs.mcs6)
  return mcs6_;
}
inline void AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxMcs::set_allocated_mcs6(::ywrapper::UintValue* mcs6) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(mcs6_);
  }
  if (mcs6) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      mcs6 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, mcs6, submessage_arena);
    }
    
  } else {
    
  }
  mcs6_ = mcs6;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.RxMcs.mcs6)
}

// .ywrapper.UintValue mcs7 = 6642493 [(.yext.schemapath) = "/access-points/access-point/bssids/bssid/state/counters/rx-mcs/mcs7"];
inline bool AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxMcs::has_mcs7() const {
  return this != internal_default_instance() && mcs7_ != NULL;
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxMcs::mcs7() const {
  const ::ywrapper::UintValue* p = mcs7_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.RxMcs.mcs7)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxMcs::release_mcs7() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.RxMcs.mcs7)
  
  ::ywrapper::UintValue* temp = mcs7_;
  mcs7_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxMcs::mutable_mcs7() {
  
  if (mcs7_ == NULL) {
    mcs7_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.RxMcs.mcs7)
  return mcs7_;
}
inline void AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxMcs::set_allocated_mcs7(::ywrapper::UintValue* mcs7) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(mcs7_);
  }
  if (mcs7) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      mcs7 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, mcs7, submessage_arena);
    }
    
  } else {
    
  }
  mcs7_ = mcs7;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.RxMcs.mcs7)
}

// .ywrapper.UintValue mcs8 = 6642482 [(.yext.schemapath) = "/access-points/access-point/bssids/bssid/state/counters/rx-mcs/mcs8"];
inline bool AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxMcs::has_mcs8() const {
  return this != internal_default_instance() && mcs8_ != NULL;
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxMcs::mcs8() const {
  const ::ywrapper::UintValue* p = mcs8_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.RxMcs.mcs8)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxMcs::release_mcs8() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.RxMcs.mcs8)
  
  ::ywrapper::UintValue* temp = mcs8_;
  mcs8_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxMcs::mutable_mcs8() {
  
  if (mcs8_ == NULL) {
    mcs8_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.RxMcs.mcs8)
  return mcs8_;
}
inline void AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxMcs::set_allocated_mcs8(::ywrapper::UintValue* mcs8) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(mcs8_);
  }
  if (mcs8) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      mcs8 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, mcs8, submessage_arena);
    }
    
  } else {
    
  }
  mcs8_ = mcs8;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.RxMcs.mcs8)
}

// .ywrapper.UintValue mcs9 = 6642483 [(.yext.schemapath) = "/access-points/access-point/bssids/bssid/state/counters/rx-mcs/mcs9"];
inline bool AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxMcs::has_mcs9() const {
  return this != internal_default_instance() && mcs9_ != NULL;
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxMcs::mcs9() const {
  const ::ywrapper::UintValue* p = mcs9_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.RxMcs.mcs9)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxMcs::release_mcs9() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.RxMcs.mcs9)
  
  ::ywrapper::UintValue* temp = mcs9_;
  mcs9_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxMcs::mutable_mcs9() {
  
  if (mcs9_ == NULL) {
    mcs9_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.RxMcs.mcs9)
  return mcs9_;
}
inline void AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxMcs::set_allocated_mcs9(::ywrapper::UintValue* mcs9) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(mcs9_);
  }
  if (mcs9) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      mcs9 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, mcs9, submessage_arena);
    }
    
  } else {
    
  }
  mcs9_ = mcs9;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.RxMcs.mcs9)
}

// -------------------------------------------------------------------

// AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxDataDist

// .ywrapper.UintValue tx_0_64 = 250529087 [(.yext.schemapath) = "/access-points/access-point/bssids/bssid/state/counters/tx-data-dist/tx-0-64"];
inline bool AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxDataDist::has_tx_0_64() const {
  return this != internal_default_instance() && tx_0_64_ != NULL;
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxDataDist::tx_0_64() const {
  const ::ywrapper::UintValue* p = tx_0_64_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.TxDataDist.tx_0_64)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxDataDist::release_tx_0_64() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.TxDataDist.tx_0_64)
  
  ::ywrapper::UintValue* temp = tx_0_64_;
  tx_0_64_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxDataDist::mutable_tx_0_64() {
  
  if (tx_0_64_ == NULL) {
    tx_0_64_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.TxDataDist.tx_0_64)
  return tx_0_64_;
}
inline void AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxDataDist::set_allocated_tx_0_64(::ywrapper::UintValue* tx_0_64) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(tx_0_64_);
  }
  if (tx_0_64) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      tx_0_64 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, tx_0_64, submessage_arena);
    }
    
  } else {
    
  }
  tx_0_64_ = tx_0_64;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.TxDataDist.tx_0_64)
}

// .ywrapper.UintValue tx_1025_2048 = 305880711 [(.yext.schemapath) = "/access-points/access-point/bssids/bssid/state/counters/tx-data-dist/tx-1025-2048"];
inline bool AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxDataDist::has_tx_1025_2048() const {
  return this != internal_default_instance() && tx_1025_2048_ != NULL;
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxDataDist::tx_1025_2048() const {
  const ::ywrapper::UintValue* p = tx_1025_2048_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.TxDataDist.tx_1025_2048)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxDataDist::release_tx_1025_2048() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.TxDataDist.tx_1025_2048)
  
  ::ywrapper::UintValue* temp = tx_1025_2048_;
  tx_1025_2048_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxDataDist::mutable_tx_1025_2048() {
  
  if (tx_1025_2048_ == NULL) {
    tx_1025_2048_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.TxDataDist.tx_1025_2048)
  return tx_1025_2048_;
}
inline void AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxDataDist::set_allocated_tx_1025_2048(::ywrapper::UintValue* tx_1025_2048) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(tx_1025_2048_);
  }
  if (tx_1025_2048) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      tx_1025_2048 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, tx_1025_2048, submessage_arena);
    }
    
  } else {
    
  }
  tx_1025_2048_ = tx_1025_2048;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.TxDataDist.tx_1025_2048)
}

// .ywrapper.UintValue tx_129_256 = 508408610 [(.yext.schemapath) = "/access-points/access-point/bssids/bssid/state/counters/tx-data-dist/tx-129-256"];
inline bool AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxDataDist::has_tx_129_256() const {
  return this != internal_default_instance() && tx_129_256_ != NULL;
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxDataDist::tx_129_256() const {
  const ::ywrapper::UintValue* p = tx_129_256_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.TxDataDist.tx_129_256)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxDataDist::release_tx_129_256() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.TxDataDist.tx_129_256)
  
  ::ywrapper::UintValue* temp = tx_129_256_;
  tx_129_256_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxDataDist::mutable_tx_129_256() {
  
  if (tx_129_256_ == NULL) {
    tx_129_256_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.TxDataDist.tx_129_256)
  return tx_129_256_;
}
inline void AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxDataDist::set_allocated_tx_129_256(::ywrapper::UintValue* tx_129_256) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(tx_129_256_);
  }
  if (tx_129_256) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      tx_129_256 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, tx_129_256, submessage_arena);
    }
    
  } else {
    
  }
  tx_129_256_ = tx_129_256;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.TxDataDist.tx_129_256)
}

// .ywrapper.UintValue tx_131073_262144 = 162458105 [(.yext.schemapath) = "/access-points/access-point/bssids/bssid/state/counters/tx-data-dist/tx-131073-262144"];
inline bool AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxDataDist::has_tx_131073_262144() const {
  return this != internal_default_instance() && tx_131073_262144_ != NULL;
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxDataDist::tx_131073_262144() const {
  const ::ywrapper::UintValue* p = tx_131073_262144_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.TxDataDist.tx_131073_262144)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxDataDist::release_tx_131073_262144() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.TxDataDist.tx_131073_262144)
  
  ::ywrapper::UintValue* temp = tx_131073_262144_;
  tx_131073_262144_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxDataDist::mutable_tx_131073_262144() {
  
  if (tx_131073_262144_ == NULL) {
    tx_131073_262144_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.TxDataDist.tx_131073_262144)
  return tx_131073_262144_;
}
inline void AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxDataDist::set_allocated_tx_131073_262144(::ywrapper::UintValue* tx_131073_262144) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(tx_131073_262144_);
  }
  if (tx_131073_262144) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      tx_131073_262144 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, tx_131073_262144, submessage_arena);
    }
    
  } else {
    
  }
  tx_131073_262144_ = tx_131073_262144;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.TxDataDist.tx_131073_262144)
}

// .ywrapper.UintValue tx_16385_32768 = 349262166 [(.yext.schemapath) = "/access-points/access-point/bssids/bssid/state/counters/tx-data-dist/tx-16385-32768"];
inline bool AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxDataDist::has_tx_16385_32768() const {
  return this != internal_default_instance() && tx_16385_32768_ != NULL;
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxDataDist::tx_16385_32768() const {
  const ::ywrapper::UintValue* p = tx_16385_32768_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.TxDataDist.tx_16385_32768)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxDataDist::release_tx_16385_32768() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.TxDataDist.tx_16385_32768)
  
  ::ywrapper::UintValue* temp = tx_16385_32768_;
  tx_16385_32768_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxDataDist::mutable_tx_16385_32768() {
  
  if (tx_16385_32768_ == NULL) {
    tx_16385_32768_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.TxDataDist.tx_16385_32768)
  return tx_16385_32768_;
}
inline void AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxDataDist::set_allocated_tx_16385_32768(::ywrapper::UintValue* tx_16385_32768) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(tx_16385_32768_);
  }
  if (tx_16385_32768) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      tx_16385_32768 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, tx_16385_32768, submessage_arena);
    }
    
  } else {
    
  }
  tx_16385_32768_ = tx_16385_32768;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.TxDataDist.tx_16385_32768)
}

// .ywrapper.UintValue tx_2049_4096 = 462525077 [(.yext.schemapath) = "/access-points/access-point/bssids/bssid/state/counters/tx-data-dist/tx-2049-4096"];
inline bool AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxDataDist::has_tx_2049_4096() const {
  return this != internal_default_instance() && tx_2049_4096_ != NULL;
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxDataDist::tx_2049_4096() const {
  const ::ywrapper::UintValue* p = tx_2049_4096_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.TxDataDist.tx_2049_4096)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxDataDist::release_tx_2049_4096() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.TxDataDist.tx_2049_4096)
  
  ::ywrapper::UintValue* temp = tx_2049_4096_;
  tx_2049_4096_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxDataDist::mutable_tx_2049_4096() {
  
  if (tx_2049_4096_ == NULL) {
    tx_2049_4096_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.TxDataDist.tx_2049_4096)
  return tx_2049_4096_;
}
inline void AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxDataDist::set_allocated_tx_2049_4096(::ywrapper::UintValue* tx_2049_4096) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(tx_2049_4096_);
  }
  if (tx_2049_4096) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      tx_2049_4096 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, tx_2049_4096, submessage_arena);
    }
    
  } else {
    
  }
  tx_2049_4096_ = tx_2049_4096;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.TxDataDist.tx_2049_4096)
}

// .ywrapper.UintValue tx_257_512 = 115951001 [(.yext.schemapath) = "/access-points/access-point/bssids/bssid/state/counters/tx-data-dist/tx-257-512"];
inline bool AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxDataDist::has_tx_257_512() const {
  return this != internal_default_instance() && tx_257_512_ != NULL;
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxDataDist::tx_257_512() const {
  const ::ywrapper::UintValue* p = tx_257_512_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.TxDataDist.tx_257_512)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxDataDist::release_tx_257_512() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.TxDataDist.tx_257_512)
  
  ::ywrapper::UintValue* temp = tx_257_512_;
  tx_257_512_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxDataDist::mutable_tx_257_512() {
  
  if (tx_257_512_ == NULL) {
    tx_257_512_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.TxDataDist.tx_257_512)
  return tx_257_512_;
}
inline void AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxDataDist::set_allocated_tx_257_512(::ywrapper::UintValue* tx_257_512) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(tx_257_512_);
  }
  if (tx_257_512) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      tx_257_512 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, tx_257_512, submessage_arena);
    }
    
  } else {
    
  }
  tx_257_512_ = tx_257_512;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.TxDataDist.tx_257_512)
}

// .ywrapper.UintValue tx_262145_524288 = 247601604 [(.yext.schemapath) = "/access-points/access-point/bssids/bssid/state/counters/tx-data-dist/tx-262145-524288"];
inline bool AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxDataDist::has_tx_262145_524288() const {
  return this != internal_default_instance() && tx_262145_524288_ != NULL;
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxDataDist::tx_262145_524288() const {
  const ::ywrapper::UintValue* p = tx_262145_524288_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.TxDataDist.tx_262145_524288)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxDataDist::release_tx_262145_524288() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.TxDataDist.tx_262145_524288)
  
  ::ywrapper::UintValue* temp = tx_262145_524288_;
  tx_262145_524288_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxDataDist::mutable_tx_262145_524288() {
  
  if (tx_262145_524288_ == NULL) {
    tx_262145_524288_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.TxDataDist.tx_262145_524288)
  return tx_262145_524288_;
}
inline void AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxDataDist::set_allocated_tx_262145_524288(::ywrapper::UintValue* tx_262145_524288) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(tx_262145_524288_);
  }
  if (tx_262145_524288) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      tx_262145_524288 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, tx_262145_524288, submessage_arena);
    }
    
  } else {
    
  }
  tx_262145_524288_ = tx_262145_524288;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.TxDataDist.tx_262145_524288)
}

// .ywrapper.UintValue tx_32769_65536 = 422821273 [(.yext.schemapath) = "/access-points/access-point/bssids/bssid/state/counters/tx-data-dist/tx-32769-65536"];
inline bool AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxDataDist::has_tx_32769_65536() const {
  return this != internal_default_instance() && tx_32769_65536_ != NULL;
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxDataDist::tx_32769_65536() const {
  const ::ywrapper::UintValue* p = tx_32769_65536_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.TxDataDist.tx_32769_65536)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxDataDist::release_tx_32769_65536() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.TxDataDist.tx_32769_65536)
  
  ::ywrapper::UintValue* temp = tx_32769_65536_;
  tx_32769_65536_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxDataDist::mutable_tx_32769_65536() {
  
  if (tx_32769_65536_ == NULL) {
    tx_32769_65536_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.TxDataDist.tx_32769_65536)
  return tx_32769_65536_;
}
inline void AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxDataDist::set_allocated_tx_32769_65536(::ywrapper::UintValue* tx_32769_65536) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(tx_32769_65536_);
  }
  if (tx_32769_65536) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      tx_32769_65536 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, tx_32769_65536, submessage_arena);
    }
    
  } else {
    
  }
  tx_32769_65536_ = tx_32769_65536;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.TxDataDist.tx_32769_65536)
}

// .ywrapper.UintValue tx_4097_8192 = 491057293 [(.yext.schemapath) = "/access-points/access-point/bssids/bssid/state/counters/tx-data-dist/tx-4097-8192"];
inline bool AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxDataDist::has_tx_4097_8192() const {
  return this != internal_default_instance() && tx_4097_8192_ != NULL;
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxDataDist::tx_4097_8192() const {
  const ::ywrapper::UintValue* p = tx_4097_8192_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.TxDataDist.tx_4097_8192)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxDataDist::release_tx_4097_8192() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.TxDataDist.tx_4097_8192)
  
  ::ywrapper::UintValue* temp = tx_4097_8192_;
  tx_4097_8192_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxDataDist::mutable_tx_4097_8192() {
  
  if (tx_4097_8192_ == NULL) {
    tx_4097_8192_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.TxDataDist.tx_4097_8192)
  return tx_4097_8192_;
}
inline void AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxDataDist::set_allocated_tx_4097_8192(::ywrapper::UintValue* tx_4097_8192) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(tx_4097_8192_);
  }
  if (tx_4097_8192) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      tx_4097_8192 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, tx_4097_8192, submessage_arena);
    }
    
  } else {
    
  }
  tx_4097_8192_ = tx_4097_8192;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.TxDataDist.tx_4097_8192)
}

// .ywrapper.UintValue tx_513_1024 = 33435479 [(.yext.schemapath) = "/access-points/access-point/bssids/bssid/state/counters/tx-data-dist/tx-513-1024"];
inline bool AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxDataDist::has_tx_513_1024() const {
  return this != internal_default_instance() && tx_513_1024_ != NULL;
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxDataDist::tx_513_1024() const {
  const ::ywrapper::UintValue* p = tx_513_1024_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.TxDataDist.tx_513_1024)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxDataDist::release_tx_513_1024() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.TxDataDist.tx_513_1024)
  
  ::ywrapper::UintValue* temp = tx_513_1024_;
  tx_513_1024_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxDataDist::mutable_tx_513_1024() {
  
  if (tx_513_1024_ == NULL) {
    tx_513_1024_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.TxDataDist.tx_513_1024)
  return tx_513_1024_;
}
inline void AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxDataDist::set_allocated_tx_513_1024(::ywrapper::UintValue* tx_513_1024) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(tx_513_1024_);
  }
  if (tx_513_1024) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      tx_513_1024 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, tx_513_1024, submessage_arena);
    }
    
  } else {
    
  }
  tx_513_1024_ = tx_513_1024;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.TxDataDist.tx_513_1024)
}

// .ywrapper.UintValue tx_524289_1048576 = 140166202 [(.yext.schemapath) = "/access-points/access-point/bssids/bssid/state/counters/tx-data-dist/tx-524289-1048576"];
inline bool AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxDataDist::has_tx_524289_1048576() const {
  return this != internal_default_instance() && tx_524289_1048576_ != NULL;
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxDataDist::tx_524289_1048576() const {
  const ::ywrapper::UintValue* p = tx_524289_1048576_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.TxDataDist.tx_524289_1048576)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxDataDist::release_tx_524289_1048576() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.TxDataDist.tx_524289_1048576)
  
  ::ywrapper::UintValue* temp = tx_524289_1048576_;
  tx_524289_1048576_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxDataDist::mutable_tx_524289_1048576() {
  
  if (tx_524289_1048576_ == NULL) {
    tx_524289_1048576_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.TxDataDist.tx_524289_1048576)
  return tx_524289_1048576_;
}
inline void AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxDataDist::set_allocated_tx_524289_1048576(::ywrapper::UintValue* tx_524289_1048576) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(tx_524289_1048576_);
  }
  if (tx_524289_1048576) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      tx_524289_1048576 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, tx_524289_1048576, submessage_arena);
    }
    
  } else {
    
  }
  tx_524289_1048576_ = tx_524289_1048576;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.TxDataDist.tx_524289_1048576)
}

// .ywrapper.UintValue tx_65_128 = 394305867 [(.yext.schemapath) = "/access-points/access-point/bssids/bssid/state/counters/tx-data-dist/tx-65-128"];
inline bool AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxDataDist::has_tx_65_128() const {
  return this != internal_default_instance() && tx_65_128_ != NULL;
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxDataDist::tx_65_128() const {
  const ::ywrapper::UintValue* p = tx_65_128_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.TxDataDist.tx_65_128)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxDataDist::release_tx_65_128() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.TxDataDist.tx_65_128)
  
  ::ywrapper::UintValue* temp = tx_65_128_;
  tx_65_128_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxDataDist::mutable_tx_65_128() {
  
  if (tx_65_128_ == NULL) {
    tx_65_128_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.TxDataDist.tx_65_128)
  return tx_65_128_;
}
inline void AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxDataDist::set_allocated_tx_65_128(::ywrapper::UintValue* tx_65_128) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(tx_65_128_);
  }
  if (tx_65_128) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      tx_65_128 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, tx_65_128, submessage_arena);
    }
    
  } else {
    
  }
  tx_65_128_ = tx_65_128;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.TxDataDist.tx_65_128)
}

// .ywrapper.UintValue tx_65537_131072 = 183849915 [(.yext.schemapath) = "/access-points/access-point/bssids/bssid/state/counters/tx-data-dist/tx-65537-131072"];
inline bool AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxDataDist::has_tx_65537_131072() const {
  return this != internal_default_instance() && tx_65537_131072_ != NULL;
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxDataDist::tx_65537_131072() const {
  const ::ywrapper::UintValue* p = tx_65537_131072_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.TxDataDist.tx_65537_131072)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxDataDist::release_tx_65537_131072() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.TxDataDist.tx_65537_131072)
  
  ::ywrapper::UintValue* temp = tx_65537_131072_;
  tx_65537_131072_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxDataDist::mutable_tx_65537_131072() {
  
  if (tx_65537_131072_ == NULL) {
    tx_65537_131072_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.TxDataDist.tx_65537_131072)
  return tx_65537_131072_;
}
inline void AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxDataDist::set_allocated_tx_65537_131072(::ywrapper::UintValue* tx_65537_131072) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(tx_65537_131072_);
  }
  if (tx_65537_131072) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      tx_65537_131072 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, tx_65537_131072, submessage_arena);
    }
    
  } else {
    
  }
  tx_65537_131072_ = tx_65537_131072;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.TxDataDist.tx_65537_131072)
}

// .ywrapper.UintValue tx_8193_16384 = 315748638 [(.yext.schemapath) = "/access-points/access-point/bssids/bssid/state/counters/tx-data-dist/tx-8193-16384"];
inline bool AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxDataDist::has_tx_8193_16384() const {
  return this != internal_default_instance() && tx_8193_16384_ != NULL;
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxDataDist::tx_8193_16384() const {
  const ::ywrapper::UintValue* p = tx_8193_16384_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.TxDataDist.tx_8193_16384)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxDataDist::release_tx_8193_16384() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.TxDataDist.tx_8193_16384)
  
  ::ywrapper::UintValue* temp = tx_8193_16384_;
  tx_8193_16384_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxDataDist::mutable_tx_8193_16384() {
  
  if (tx_8193_16384_ == NULL) {
    tx_8193_16384_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.TxDataDist.tx_8193_16384)
  return tx_8193_16384_;
}
inline void AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxDataDist::set_allocated_tx_8193_16384(::ywrapper::UintValue* tx_8193_16384) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(tx_8193_16384_);
  }
  if (tx_8193_16384) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      tx_8193_16384 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, tx_8193_16384, submessage_arena);
    }
    
  } else {
    
  }
  tx_8193_16384_ = tx_8193_16384;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.TxDataDist.tx_8193_16384)
}

// -------------------------------------------------------------------

// AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxDataWmm

// .ywrapper.UintValue be = 321631815 [(.yext.schemapath) = "/access-points/access-point/bssids/bssid/state/counters/tx-data-wmm/be"];
inline bool AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxDataWmm::has_be() const {
  return this != internal_default_instance() && be_ != NULL;
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxDataWmm::be() const {
  const ::ywrapper::UintValue* p = be_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.TxDataWmm.be)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxDataWmm::release_be() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.TxDataWmm.be)
  
  ::ywrapper::UintValue* temp = be_;
  be_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxDataWmm::mutable_be() {
  
  if (be_ == NULL) {
    be_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.TxDataWmm.be)
  return be_;
}
inline void AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxDataWmm::set_allocated_be(::ywrapper::UintValue* be) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(be_);
  }
  if (be) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      be = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, be, submessage_arena);
    }
    
  } else {
    
  }
  be_ = be;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.TxDataWmm.be)
}

// .ywrapper.UintValue bk = 321631817 [(.yext.schemapath) = "/access-points/access-point/bssids/bssid/state/counters/tx-data-wmm/bk"];
inline bool AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxDataWmm::has_bk() const {
  return this != internal_default_instance() && bk_ != NULL;
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxDataWmm::bk() const {
  const ::ywrapper::UintValue* p = bk_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.TxDataWmm.bk)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxDataWmm::release_bk() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.TxDataWmm.bk)
  
  ::ywrapper::UintValue* temp = bk_;
  bk_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxDataWmm::mutable_bk() {
  
  if (bk_ == NULL) {
    bk_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.TxDataWmm.bk)
  return bk_;
}
inline void AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxDataWmm::set_allocated_bk(::ywrapper::UintValue* bk) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(bk_);
  }
  if (bk) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      bk = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, bk, submessage_arena);
    }
    
  } else {
    
  }
  bk_ = bk;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.TxDataWmm.bk)
}

// .ywrapper.UintValue vi = 522950351 [(.yext.schemapath) = "/access-points/access-point/bssids/bssid/state/counters/tx-data-wmm/vi"];
inline bool AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxDataWmm::has_vi() const {
  return this != internal_default_instance() && vi_ != NULL;
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxDataWmm::vi() const {
  const ::ywrapper::UintValue* p = vi_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.TxDataWmm.vi)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxDataWmm::release_vi() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.TxDataWmm.vi)
  
  ::ywrapper::UintValue* temp = vi_;
  vi_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxDataWmm::mutable_vi() {
  
  if (vi_ == NULL) {
    vi_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.TxDataWmm.vi)
  return vi_;
}
inline void AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxDataWmm::set_allocated_vi(::ywrapper::UintValue* vi) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(vi_);
  }
  if (vi) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      vi = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, vi, submessage_arena);
    }
    
  } else {
    
  }
  vi_ = vi;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.TxDataWmm.vi)
}

// .ywrapper.UintValue vo = 522950345 [(.yext.schemapath) = "/access-points/access-point/bssids/bssid/state/counters/tx-data-wmm/vo"];
inline bool AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxDataWmm::has_vo() const {
  return this != internal_default_instance() && vo_ != NULL;
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxDataWmm::vo() const {
  const ::ywrapper::UintValue* p = vo_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.TxDataWmm.vo)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxDataWmm::release_vo() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.TxDataWmm.vo)
  
  ::ywrapper::UintValue* temp = vo_;
  vo_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxDataWmm::mutable_vo() {
  
  if (vo_ == NULL) {
    vo_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.TxDataWmm.vo)
  return vo_;
}
inline void AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxDataWmm::set_allocated_vo(::ywrapper::UintValue* vo) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(vo_);
  }
  if (vo) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      vo = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, vo, submessage_arena);
    }
    
  } else {
    
  }
  vo_ = vo;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.TxDataWmm.vo)
}

// -------------------------------------------------------------------

// AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxMcs

// .ywrapper.UintValue mcs0 = 431477292 [(.yext.schemapath) = "/access-points/access-point/bssids/bssid/state/counters/tx-mcs/mcs0"];
inline bool AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxMcs::has_mcs0() const {
  return this != internal_default_instance() && mcs0_ != NULL;
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxMcs::mcs0() const {
  const ::ywrapper::UintValue* p = mcs0_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.TxMcs.mcs0)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxMcs::release_mcs0() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.TxMcs.mcs0)
  
  ::ywrapper::UintValue* temp = mcs0_;
  mcs0_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxMcs::mutable_mcs0() {
  
  if (mcs0_ == NULL) {
    mcs0_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.TxMcs.mcs0)
  return mcs0_;
}
inline void AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxMcs::set_allocated_mcs0(::ywrapper::UintValue* mcs0) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(mcs0_);
  }
  if (mcs0) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      mcs0 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, mcs0, submessage_arena);
    }
    
  } else {
    
  }
  mcs0_ = mcs0;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.TxMcs.mcs0)
}

// .ywrapper.UintValue mcs1 = 431477293 [(.yext.schemapath) = "/access-points/access-point/bssids/bssid/state/counters/tx-mcs/mcs1"];
inline bool AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxMcs::has_mcs1() const {
  return this != internal_default_instance() && mcs1_ != NULL;
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxMcs::mcs1() const {
  const ::ywrapper::UintValue* p = mcs1_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.TxMcs.mcs1)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxMcs::release_mcs1() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.TxMcs.mcs1)
  
  ::ywrapper::UintValue* temp = mcs1_;
  mcs1_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxMcs::mutable_mcs1() {
  
  if (mcs1_ == NULL) {
    mcs1_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.TxMcs.mcs1)
  return mcs1_;
}
inline void AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxMcs::set_allocated_mcs1(::ywrapper::UintValue* mcs1) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(mcs1_);
  }
  if (mcs1) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      mcs1 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, mcs1, submessage_arena);
    }
    
  } else {
    
  }
  mcs1_ = mcs1;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.TxMcs.mcs1)
}

// .ywrapper.UintValue mcs2 = 431477294 [(.yext.schemapath) = "/access-points/access-point/bssids/bssid/state/counters/tx-mcs/mcs2"];
inline bool AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxMcs::has_mcs2() const {
  return this != internal_default_instance() && mcs2_ != NULL;
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxMcs::mcs2() const {
  const ::ywrapper::UintValue* p = mcs2_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.TxMcs.mcs2)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxMcs::release_mcs2() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.TxMcs.mcs2)
  
  ::ywrapper::UintValue* temp = mcs2_;
  mcs2_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxMcs::mutable_mcs2() {
  
  if (mcs2_ == NULL) {
    mcs2_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.TxMcs.mcs2)
  return mcs2_;
}
inline void AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxMcs::set_allocated_mcs2(::ywrapper::UintValue* mcs2) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(mcs2_);
  }
  if (mcs2) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      mcs2 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, mcs2, submessage_arena);
    }
    
  } else {
    
  }
  mcs2_ = mcs2;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.TxMcs.mcs2)
}

// .ywrapper.UintValue mcs3 = 431477295 [(.yext.schemapath) = "/access-points/access-point/bssids/bssid/state/counters/tx-mcs/mcs3"];
inline bool AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxMcs::has_mcs3() const {
  return this != internal_default_instance() && mcs3_ != NULL;
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxMcs::mcs3() const {
  const ::ywrapper::UintValue* p = mcs3_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.TxMcs.mcs3)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxMcs::release_mcs3() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.TxMcs.mcs3)
  
  ::ywrapper::UintValue* temp = mcs3_;
  mcs3_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxMcs::mutable_mcs3() {
  
  if (mcs3_ == NULL) {
    mcs3_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.TxMcs.mcs3)
  return mcs3_;
}
inline void AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxMcs::set_allocated_mcs3(::ywrapper::UintValue* mcs3) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(mcs3_);
  }
  if (mcs3) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      mcs3 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, mcs3, submessage_arena);
    }
    
  } else {
    
  }
  mcs3_ = mcs3;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.TxMcs.mcs3)
}

// .ywrapper.UintValue mcs4 = 431477288 [(.yext.schemapath) = "/access-points/access-point/bssids/bssid/state/counters/tx-mcs/mcs4"];
inline bool AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxMcs::has_mcs4() const {
  return this != internal_default_instance() && mcs4_ != NULL;
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxMcs::mcs4() const {
  const ::ywrapper::UintValue* p = mcs4_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.TxMcs.mcs4)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxMcs::release_mcs4() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.TxMcs.mcs4)
  
  ::ywrapper::UintValue* temp = mcs4_;
  mcs4_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxMcs::mutable_mcs4() {
  
  if (mcs4_ == NULL) {
    mcs4_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.TxMcs.mcs4)
  return mcs4_;
}
inline void AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxMcs::set_allocated_mcs4(::ywrapper::UintValue* mcs4) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(mcs4_);
  }
  if (mcs4) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      mcs4 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, mcs4, submessage_arena);
    }
    
  } else {
    
  }
  mcs4_ = mcs4;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.TxMcs.mcs4)
}

// .ywrapper.UintValue mcs5 = 431477289 [(.yext.schemapath) = "/access-points/access-point/bssids/bssid/state/counters/tx-mcs/mcs5"];
inline bool AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxMcs::has_mcs5() const {
  return this != internal_default_instance() && mcs5_ != NULL;
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxMcs::mcs5() const {
  const ::ywrapper::UintValue* p = mcs5_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.TxMcs.mcs5)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxMcs::release_mcs5() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.TxMcs.mcs5)
  
  ::ywrapper::UintValue* temp = mcs5_;
  mcs5_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxMcs::mutable_mcs5() {
  
  if (mcs5_ == NULL) {
    mcs5_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.TxMcs.mcs5)
  return mcs5_;
}
inline void AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxMcs::set_allocated_mcs5(::ywrapper::UintValue* mcs5) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(mcs5_);
  }
  if (mcs5) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      mcs5 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, mcs5, submessage_arena);
    }
    
  } else {
    
  }
  mcs5_ = mcs5;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.TxMcs.mcs5)
}

// .ywrapper.UintValue mcs6 = 431477290 [(.yext.schemapath) = "/access-points/access-point/bssids/bssid/state/counters/tx-mcs/mcs6"];
inline bool AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxMcs::has_mcs6() const {
  return this != internal_default_instance() && mcs6_ != NULL;
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxMcs::mcs6() const {
  const ::ywrapper::UintValue* p = mcs6_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.TxMcs.mcs6)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxMcs::release_mcs6() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.TxMcs.mcs6)
  
  ::ywrapper::UintValue* temp = mcs6_;
  mcs6_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxMcs::mutable_mcs6() {
  
  if (mcs6_ == NULL) {
    mcs6_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.TxMcs.mcs6)
  return mcs6_;
}
inline void AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxMcs::set_allocated_mcs6(::ywrapper::UintValue* mcs6) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(mcs6_);
  }
  if (mcs6) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      mcs6 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, mcs6, submessage_arena);
    }
    
  } else {
    
  }
  mcs6_ = mcs6;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.TxMcs.mcs6)
}

// .ywrapper.UintValue mcs7 = 431477291 [(.yext.schemapath) = "/access-points/access-point/bssids/bssid/state/counters/tx-mcs/mcs7"];
inline bool AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxMcs::has_mcs7() const {
  return this != internal_default_instance() && mcs7_ != NULL;
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxMcs::mcs7() const {
  const ::ywrapper::UintValue* p = mcs7_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.TxMcs.mcs7)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxMcs::release_mcs7() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.TxMcs.mcs7)
  
  ::ywrapper::UintValue* temp = mcs7_;
  mcs7_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxMcs::mutable_mcs7() {
  
  if (mcs7_ == NULL) {
    mcs7_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.TxMcs.mcs7)
  return mcs7_;
}
inline void AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxMcs::set_allocated_mcs7(::ywrapper::UintValue* mcs7) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(mcs7_);
  }
  if (mcs7) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      mcs7 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, mcs7, submessage_arena);
    }
    
  } else {
    
  }
  mcs7_ = mcs7;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.TxMcs.mcs7)
}

// .ywrapper.UintValue mcs8 = 431477284 [(.yext.schemapath) = "/access-points/access-point/bssids/bssid/state/counters/tx-mcs/mcs8"];
inline bool AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxMcs::has_mcs8() const {
  return this != internal_default_instance() && mcs8_ != NULL;
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxMcs::mcs8() const {
  const ::ywrapper::UintValue* p = mcs8_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.TxMcs.mcs8)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxMcs::release_mcs8() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.TxMcs.mcs8)
  
  ::ywrapper::UintValue* temp = mcs8_;
  mcs8_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxMcs::mutable_mcs8() {
  
  if (mcs8_ == NULL) {
    mcs8_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.TxMcs.mcs8)
  return mcs8_;
}
inline void AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxMcs::set_allocated_mcs8(::ywrapper::UintValue* mcs8) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(mcs8_);
  }
  if (mcs8) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      mcs8 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, mcs8, submessage_arena);
    }
    
  } else {
    
  }
  mcs8_ = mcs8;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.TxMcs.mcs8)
}

// .ywrapper.UintValue mcs9 = 431477285 [(.yext.schemapath) = "/access-points/access-point/bssids/bssid/state/counters/tx-mcs/mcs9"];
inline bool AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxMcs::has_mcs9() const {
  return this != internal_default_instance() && mcs9_ != NULL;
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxMcs::mcs9() const {
  const ::ywrapper::UintValue* p = mcs9_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.TxMcs.mcs9)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxMcs::release_mcs9() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.TxMcs.mcs9)
  
  ::ywrapper::UintValue* temp = mcs9_;
  mcs9_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxMcs::mutable_mcs9() {
  
  if (mcs9_ == NULL) {
    mcs9_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.TxMcs.mcs9)
  return mcs9_;
}
inline void AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxMcs::set_allocated_mcs9(::ywrapper::UintValue* mcs9) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(mcs9_);
  }
  if (mcs9) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      mcs9 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, mcs9, submessage_arena);
    }
    
  } else {
    
  }
  mcs9_ = mcs9;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.TxMcs.mcs9)
}

// -------------------------------------------------------------------

// AccessPoints_AccessPoint_Bssids_Bssid_State_Counters

// .ywrapper.UintValue rx_bytes_data = 159230175 [(.yext.schemapath) = "/access-points/access-point/bssids/bssid/state/counters/rx-bytes-data"];
inline bool AccessPoints_AccessPoint_Bssids_Bssid_State_Counters::has_rx_bytes_data() const {
  return this != internal_default_instance() && rx_bytes_data_ != NULL;
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_Bssids_Bssid_State_Counters::rx_bytes_data() const {
  const ::ywrapper::UintValue* p = rx_bytes_data_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.rx_bytes_data)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Bssids_Bssid_State_Counters::release_rx_bytes_data() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.rx_bytes_data)
  
  ::ywrapper::UintValue* temp = rx_bytes_data_;
  rx_bytes_data_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Bssids_Bssid_State_Counters::mutable_rx_bytes_data() {
  
  if (rx_bytes_data_ == NULL) {
    rx_bytes_data_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.rx_bytes_data)
  return rx_bytes_data_;
}
inline void AccessPoints_AccessPoint_Bssids_Bssid_State_Counters::set_allocated_rx_bytes_data(::ywrapper::UintValue* rx_bytes_data) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(rx_bytes_data_);
  }
  if (rx_bytes_data) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      rx_bytes_data = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, rx_bytes_data, submessage_arena);
    }
    
  } else {
    
  }
  rx_bytes_data_ = rx_bytes_data;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.rx_bytes_data)
}

// .ywrapper.UintValue rx_control = 247598360 [(.yext.schemapath) = "/access-points/access-point/bssids/bssid/state/counters/rx-control"];
inline bool AccessPoints_AccessPoint_Bssids_Bssid_State_Counters::has_rx_control() const {
  return this != internal_default_instance() && rx_control_ != NULL;
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_Bssids_Bssid_State_Counters::rx_control() const {
  const ::ywrapper::UintValue* p = rx_control_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.rx_control)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Bssids_Bssid_State_Counters::release_rx_control() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.rx_control)
  
  ::ywrapper::UintValue* temp = rx_control_;
  rx_control_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Bssids_Bssid_State_Counters::mutable_rx_control() {
  
  if (rx_control_ == NULL) {
    rx_control_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.rx_control)
  return rx_control_;
}
inline void AccessPoints_AccessPoint_Bssids_Bssid_State_Counters::set_allocated_rx_control(::ywrapper::UintValue* rx_control) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(rx_control_);
  }
  if (rx_control) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      rx_control = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, rx_control, submessage_arena);
    }
    
  } else {
    
  }
  rx_control_ = rx_control;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.rx_control)
}

// .openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.RxDataDist rx_data_dist = 387518846 [(.yext.schemapath) = "/access-points/access-point/bssids/bssid/state/counters/rx-data-dist"];
inline bool AccessPoints_AccessPoint_Bssids_Bssid_State_Counters::has_rx_data_dist() const {
  return this != internal_default_instance() && rx_data_dist_ != NULL;
}
inline void AccessPoints_AccessPoint_Bssids_Bssid_State_Counters::clear_rx_data_dist() {
  if (GetArenaNoVirtual() == NULL && rx_data_dist_ != NULL) {
    delete rx_data_dist_;
  }
  rx_data_dist_ = NULL;
}
inline const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxDataDist& AccessPoints_AccessPoint_Bssids_Bssid_State_Counters::rx_data_dist() const {
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxDataDist* p = rx_data_dist_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.rx_data_dist)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxDataDist*>(
      &::openconfig::openconfig_access_points::_AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxDataDist_default_instance_);
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxDataDist* AccessPoints_AccessPoint_Bssids_Bssid_State_Counters::release_rx_data_dist() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.rx_data_dist)
  
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxDataDist* temp = rx_data_dist_;
  rx_data_dist_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxDataDist* AccessPoints_AccessPoint_Bssids_Bssid_State_Counters::mutable_rx_data_dist() {
  
  if (rx_data_dist_ == NULL) {
    rx_data_dist_ = new ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxDataDist;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.rx_data_dist)
  return rx_data_dist_;
}
inline void AccessPoints_AccessPoint_Bssids_Bssid_State_Counters::set_allocated_rx_data_dist(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxDataDist* rx_data_dist) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete rx_data_dist_;
  }
  if (rx_data_dist) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      rx_data_dist = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, rx_data_dist, submessage_arena);
    }
    
  } else {
    
  }
  rx_data_dist_ = rx_data_dist;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.rx_data_dist)
}

// .openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.RxDataWmm rx_data_wmm = 351323239 [(.yext.schemapath) = "/access-points/access-point/bssids/bssid/state/counters/rx-data-wmm"];
inline bool AccessPoints_AccessPoint_Bssids_Bssid_State_Counters::has_rx_data_wmm() const {
  return this != internal_default_instance() && rx_data_wmm_ != NULL;
}
inline void AccessPoints_AccessPoint_Bssids_Bssid_State_Counters::clear_rx_data_wmm() {
  if (GetArenaNoVirtual() == NULL && rx_data_wmm_ != NULL) {
    delete rx_data_wmm_;
  }
  rx_data_wmm_ = NULL;
}
inline const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxDataWmm& AccessPoints_AccessPoint_Bssids_Bssid_State_Counters::rx_data_wmm() const {
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxDataWmm* p = rx_data_wmm_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.rx_data_wmm)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxDataWmm*>(
      &::openconfig::openconfig_access_points::_AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxDataWmm_default_instance_);
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxDataWmm* AccessPoints_AccessPoint_Bssids_Bssid_State_Counters::release_rx_data_wmm() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.rx_data_wmm)
  
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxDataWmm* temp = rx_data_wmm_;
  rx_data_wmm_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxDataWmm* AccessPoints_AccessPoint_Bssids_Bssid_State_Counters::mutable_rx_data_wmm() {
  
  if (rx_data_wmm_ == NULL) {
    rx_data_wmm_ = new ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxDataWmm;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.rx_data_wmm)
  return rx_data_wmm_;
}
inline void AccessPoints_AccessPoint_Bssids_Bssid_State_Counters::set_allocated_rx_data_wmm(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxDataWmm* rx_data_wmm) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete rx_data_wmm_;
  }
  if (rx_data_wmm) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      rx_data_wmm = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, rx_data_wmm, submessage_arena);
    }
    
  } else {
    
  }
  rx_data_wmm_ = rx_data_wmm;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.rx_data_wmm)
}

// .openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.RxMcs rx_mcs = 119858772 [(.yext.schemapath) = "/access-points/access-point/bssids/bssid/state/counters/rx-mcs"];
inline bool AccessPoints_AccessPoint_Bssids_Bssid_State_Counters::has_rx_mcs() const {
  return this != internal_default_instance() && rx_mcs_ != NULL;
}
inline void AccessPoints_AccessPoint_Bssids_Bssid_State_Counters::clear_rx_mcs() {
  if (GetArenaNoVirtual() == NULL && rx_mcs_ != NULL) {
    delete rx_mcs_;
  }
  rx_mcs_ = NULL;
}
inline const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxMcs& AccessPoints_AccessPoint_Bssids_Bssid_State_Counters::rx_mcs() const {
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxMcs* p = rx_mcs_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.rx_mcs)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxMcs*>(
      &::openconfig::openconfig_access_points::_AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxMcs_default_instance_);
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxMcs* AccessPoints_AccessPoint_Bssids_Bssid_State_Counters::release_rx_mcs() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.rx_mcs)
  
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxMcs* temp = rx_mcs_;
  rx_mcs_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxMcs* AccessPoints_AccessPoint_Bssids_Bssid_State_Counters::mutable_rx_mcs() {
  
  if (rx_mcs_ == NULL) {
    rx_mcs_ = new ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxMcs;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.rx_mcs)
  return rx_mcs_;
}
inline void AccessPoints_AccessPoint_Bssids_Bssid_State_Counters::set_allocated_rx_mcs(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_RxMcs* rx_mcs) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete rx_mcs_;
  }
  if (rx_mcs) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      rx_mcs = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, rx_mcs, submessage_arena);
    }
    
  } else {
    
  }
  rx_mcs_ = rx_mcs;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.rx_mcs)
}

// .ywrapper.UintValue rx_mgmt = 151792630 [(.yext.schemapath) = "/access-points/access-point/bssids/bssid/state/counters/rx-mgmt"];
inline bool AccessPoints_AccessPoint_Bssids_Bssid_State_Counters::has_rx_mgmt() const {
  return this != internal_default_instance() && rx_mgmt_ != NULL;
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_Bssids_Bssid_State_Counters::rx_mgmt() const {
  const ::ywrapper::UintValue* p = rx_mgmt_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.rx_mgmt)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Bssids_Bssid_State_Counters::release_rx_mgmt() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.rx_mgmt)
  
  ::ywrapper::UintValue* temp = rx_mgmt_;
  rx_mgmt_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Bssids_Bssid_State_Counters::mutable_rx_mgmt() {
  
  if (rx_mgmt_ == NULL) {
    rx_mgmt_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.rx_mgmt)
  return rx_mgmt_;
}
inline void AccessPoints_AccessPoint_Bssids_Bssid_State_Counters::set_allocated_rx_mgmt(::ywrapper::UintValue* rx_mgmt) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(rx_mgmt_);
  }
  if (rx_mgmt) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      rx_mgmt = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, rx_mgmt, submessage_arena);
    }
    
  } else {
    
  }
  rx_mgmt_ = rx_mgmt;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.rx_mgmt)
}

// .ywrapper.UintValue rx_retries = 143381957 [(.yext.schemapath) = "/access-points/access-point/bssids/bssid/state/counters/rx-retries"];
inline bool AccessPoints_AccessPoint_Bssids_Bssid_State_Counters::has_rx_retries() const {
  return this != internal_default_instance() && rx_retries_ != NULL;
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_Bssids_Bssid_State_Counters::rx_retries() const {
  const ::ywrapper::UintValue* p = rx_retries_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.rx_retries)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Bssids_Bssid_State_Counters::release_rx_retries() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.rx_retries)
  
  ::ywrapper::UintValue* temp = rx_retries_;
  rx_retries_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Bssids_Bssid_State_Counters::mutable_rx_retries() {
  
  if (rx_retries_ == NULL) {
    rx_retries_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.rx_retries)
  return rx_retries_;
}
inline void AccessPoints_AccessPoint_Bssids_Bssid_State_Counters::set_allocated_rx_retries(::ywrapper::UintValue* rx_retries) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(rx_retries_);
  }
  if (rx_retries) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      rx_retries = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, rx_retries, submessage_arena);
    }
    
  } else {
    
  }
  rx_retries_ = rx_retries;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.rx_retries)
}

// .ywrapper.UintValue rx_retries_data = 63230482 [(.yext.schemapath) = "/access-points/access-point/bssids/bssid/state/counters/rx-retries-data"];
inline bool AccessPoints_AccessPoint_Bssids_Bssid_State_Counters::has_rx_retries_data() const {
  return this != internal_default_instance() && rx_retries_data_ != NULL;
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_Bssids_Bssid_State_Counters::rx_retries_data() const {
  const ::ywrapper::UintValue* p = rx_retries_data_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.rx_retries_data)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Bssids_Bssid_State_Counters::release_rx_retries_data() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.rx_retries_data)
  
  ::ywrapper::UintValue* temp = rx_retries_data_;
  rx_retries_data_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Bssids_Bssid_State_Counters::mutable_rx_retries_data() {
  
  if (rx_retries_data_ == NULL) {
    rx_retries_data_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.rx_retries_data)
  return rx_retries_data_;
}
inline void AccessPoints_AccessPoint_Bssids_Bssid_State_Counters::set_allocated_rx_retries_data(::ywrapper::UintValue* rx_retries_data) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(rx_retries_data_);
  }
  if (rx_retries_data) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      rx_retries_data = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, rx_retries_data, submessage_arena);
    }
    
  } else {
    
  }
  rx_retries_data_ = rx_retries_data;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.rx_retries_data)
}

// .ywrapper.UintValue rx_retries_subframe = 452796363 [(.yext.schemapath) = "/access-points/access-point/bssids/bssid/state/counters/rx-retries-subframe"];
inline bool AccessPoints_AccessPoint_Bssids_Bssid_State_Counters::has_rx_retries_subframe() const {
  return this != internal_default_instance() && rx_retries_subframe_ != NULL;
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_Bssids_Bssid_State_Counters::rx_retries_subframe() const {
  const ::ywrapper::UintValue* p = rx_retries_subframe_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.rx_retries_subframe)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Bssids_Bssid_State_Counters::release_rx_retries_subframe() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.rx_retries_subframe)
  
  ::ywrapper::UintValue* temp = rx_retries_subframe_;
  rx_retries_subframe_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Bssids_Bssid_State_Counters::mutable_rx_retries_subframe() {
  
  if (rx_retries_subframe_ == NULL) {
    rx_retries_subframe_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.rx_retries_subframe)
  return rx_retries_subframe_;
}
inline void AccessPoints_AccessPoint_Bssids_Bssid_State_Counters::set_allocated_rx_retries_subframe(::ywrapper::UintValue* rx_retries_subframe) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(rx_retries_subframe_);
  }
  if (rx_retries_subframe) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      rx_retries_subframe = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, rx_retries_subframe, submessage_arena);
    }
    
  } else {
    
  }
  rx_retries_subframe_ = rx_retries_subframe;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.rx_retries_subframe)
}

// .ywrapper.UintValue tx_bytes_data = 318830013 [(.yext.schemapath) = "/access-points/access-point/bssids/bssid/state/counters/tx-bytes-data"];
inline bool AccessPoints_AccessPoint_Bssids_Bssid_State_Counters::has_tx_bytes_data() const {
  return this != internal_default_instance() && tx_bytes_data_ != NULL;
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_Bssids_Bssid_State_Counters::tx_bytes_data() const {
  const ::ywrapper::UintValue* p = tx_bytes_data_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.tx_bytes_data)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Bssids_Bssid_State_Counters::release_tx_bytes_data() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.tx_bytes_data)
  
  ::ywrapper::UintValue* temp = tx_bytes_data_;
  tx_bytes_data_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Bssids_Bssid_State_Counters::mutable_tx_bytes_data() {
  
  if (tx_bytes_data_ == NULL) {
    tx_bytes_data_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.tx_bytes_data)
  return tx_bytes_data_;
}
inline void AccessPoints_AccessPoint_Bssids_Bssid_State_Counters::set_allocated_tx_bytes_data(::ywrapper::UintValue* tx_bytes_data) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(tx_bytes_data_);
  }
  if (tx_bytes_data) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      tx_bytes_data = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, tx_bytes_data, submessage_arena);
    }
    
  } else {
    
  }
  tx_bytes_data_ = tx_bytes_data;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.tx_bytes_data)
}

// .ywrapper.UintValue tx_control = 334314718 [(.yext.schemapath) = "/access-points/access-point/bssids/bssid/state/counters/tx-control"];
inline bool AccessPoints_AccessPoint_Bssids_Bssid_State_Counters::has_tx_control() const {
  return this != internal_default_instance() && tx_control_ != NULL;
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_Bssids_Bssid_State_Counters::tx_control() const {
  const ::ywrapper::UintValue* p = tx_control_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.tx_control)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Bssids_Bssid_State_Counters::release_tx_control() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.tx_control)
  
  ::ywrapper::UintValue* temp = tx_control_;
  tx_control_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Bssids_Bssid_State_Counters::mutable_tx_control() {
  
  if (tx_control_ == NULL) {
    tx_control_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.tx_control)
  return tx_control_;
}
inline void AccessPoints_AccessPoint_Bssids_Bssid_State_Counters::set_allocated_tx_control(::ywrapper::UintValue* tx_control) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(tx_control_);
  }
  if (tx_control) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      tx_control = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, tx_control, submessage_arena);
    }
    
  } else {
    
  }
  tx_control_ = tx_control;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.tx_control)
}

// .openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.TxDataDist tx_data_dist = 393055292 [(.yext.schemapath) = "/access-points/access-point/bssids/bssid/state/counters/tx-data-dist"];
inline bool AccessPoints_AccessPoint_Bssids_Bssid_State_Counters::has_tx_data_dist() const {
  return this != internal_default_instance() && tx_data_dist_ != NULL;
}
inline void AccessPoints_AccessPoint_Bssids_Bssid_State_Counters::clear_tx_data_dist() {
  if (GetArenaNoVirtual() == NULL && tx_data_dist_ != NULL) {
    delete tx_data_dist_;
  }
  tx_data_dist_ = NULL;
}
inline const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxDataDist& AccessPoints_AccessPoint_Bssids_Bssid_State_Counters::tx_data_dist() const {
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxDataDist* p = tx_data_dist_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.tx_data_dist)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxDataDist*>(
      &::openconfig::openconfig_access_points::_AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxDataDist_default_instance_);
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxDataDist* AccessPoints_AccessPoint_Bssids_Bssid_State_Counters::release_tx_data_dist() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.tx_data_dist)
  
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxDataDist* temp = tx_data_dist_;
  tx_data_dist_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxDataDist* AccessPoints_AccessPoint_Bssids_Bssid_State_Counters::mutable_tx_data_dist() {
  
  if (tx_data_dist_ == NULL) {
    tx_data_dist_ = new ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxDataDist;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.tx_data_dist)
  return tx_data_dist_;
}
inline void AccessPoints_AccessPoint_Bssids_Bssid_State_Counters::set_allocated_tx_data_dist(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxDataDist* tx_data_dist) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete tx_data_dist_;
  }
  if (tx_data_dist) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      tx_data_dist = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, tx_data_dist, submessage_arena);
    }
    
  } else {
    
  }
  tx_data_dist_ = tx_data_dist;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.tx_data_dist)
}

// .openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.TxDataWmm tx_data_wmm = 279344129 [(.yext.schemapath) = "/access-points/access-point/bssids/bssid/state/counters/tx-data-wmm"];
inline bool AccessPoints_AccessPoint_Bssids_Bssid_State_Counters::has_tx_data_wmm() const {
  return this != internal_default_instance() && tx_data_wmm_ != NULL;
}
inline void AccessPoints_AccessPoint_Bssids_Bssid_State_Counters::clear_tx_data_wmm() {
  if (GetArenaNoVirtual() == NULL && tx_data_wmm_ != NULL) {
    delete tx_data_wmm_;
  }
  tx_data_wmm_ = NULL;
}
inline const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxDataWmm& AccessPoints_AccessPoint_Bssids_Bssid_State_Counters::tx_data_wmm() const {
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxDataWmm* p = tx_data_wmm_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.tx_data_wmm)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxDataWmm*>(
      &::openconfig::openconfig_access_points::_AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxDataWmm_default_instance_);
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxDataWmm* AccessPoints_AccessPoint_Bssids_Bssid_State_Counters::release_tx_data_wmm() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.tx_data_wmm)
  
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxDataWmm* temp = tx_data_wmm_;
  tx_data_wmm_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxDataWmm* AccessPoints_AccessPoint_Bssids_Bssid_State_Counters::mutable_tx_data_wmm() {
  
  if (tx_data_wmm_ == NULL) {
    tx_data_wmm_ = new ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxDataWmm;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.tx_data_wmm)
  return tx_data_wmm_;
}
inline void AccessPoints_AccessPoint_Bssids_Bssid_State_Counters::set_allocated_tx_data_wmm(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxDataWmm* tx_data_wmm) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete tx_data_wmm_;
  }
  if (tx_data_wmm) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      tx_data_wmm = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, tx_data_wmm, submessage_arena);
    }
    
  } else {
    
  }
  tx_data_wmm_ = tx_data_wmm;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.tx_data_wmm)
}

// .openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.TxMcs tx_mcs = 186904038 [(.yext.schemapath) = "/access-points/access-point/bssids/bssid/state/counters/tx-mcs"];
inline bool AccessPoints_AccessPoint_Bssids_Bssid_State_Counters::has_tx_mcs() const {
  return this != internal_default_instance() && tx_mcs_ != NULL;
}
inline void AccessPoints_AccessPoint_Bssids_Bssid_State_Counters::clear_tx_mcs() {
  if (GetArenaNoVirtual() == NULL && tx_mcs_ != NULL) {
    delete tx_mcs_;
  }
  tx_mcs_ = NULL;
}
inline const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxMcs& AccessPoints_AccessPoint_Bssids_Bssid_State_Counters::tx_mcs() const {
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxMcs* p = tx_mcs_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.tx_mcs)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxMcs*>(
      &::openconfig::openconfig_access_points::_AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxMcs_default_instance_);
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxMcs* AccessPoints_AccessPoint_Bssids_Bssid_State_Counters::release_tx_mcs() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.tx_mcs)
  
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxMcs* temp = tx_mcs_;
  tx_mcs_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxMcs* AccessPoints_AccessPoint_Bssids_Bssid_State_Counters::mutable_tx_mcs() {
  
  if (tx_mcs_ == NULL) {
    tx_mcs_ = new ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxMcs;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.tx_mcs)
  return tx_mcs_;
}
inline void AccessPoints_AccessPoint_Bssids_Bssid_State_Counters::set_allocated_tx_mcs(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_TxMcs* tx_mcs) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete tx_mcs_;
  }
  if (tx_mcs) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      tx_mcs = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, tx_mcs, submessage_arena);
    }
    
  } else {
    
  }
  tx_mcs_ = tx_mcs;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.tx_mcs)
}

// .ywrapper.UintValue tx_mgmt = 25484760 [(.yext.schemapath) = "/access-points/access-point/bssids/bssid/state/counters/tx-mgmt"];
inline bool AccessPoints_AccessPoint_Bssids_Bssid_State_Counters::has_tx_mgmt() const {
  return this != internal_default_instance() && tx_mgmt_ != NULL;
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_Bssids_Bssid_State_Counters::tx_mgmt() const {
  const ::ywrapper::UintValue* p = tx_mgmt_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.tx_mgmt)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Bssids_Bssid_State_Counters::release_tx_mgmt() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.tx_mgmt)
  
  ::ywrapper::UintValue* temp = tx_mgmt_;
  tx_mgmt_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Bssids_Bssid_State_Counters::mutable_tx_mgmt() {
  
  if (tx_mgmt_ == NULL) {
    tx_mgmt_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.tx_mgmt)
  return tx_mgmt_;
}
inline void AccessPoints_AccessPoint_Bssids_Bssid_State_Counters::set_allocated_tx_mgmt(::ywrapper::UintValue* tx_mgmt) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(tx_mgmt_);
  }
  if (tx_mgmt) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      tx_mgmt = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, tx_mgmt, submessage_arena);
    }
    
  } else {
    
  }
  tx_mgmt_ = tx_mgmt;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.tx_mgmt)
}

// .ywrapper.UintValue tx_retries = 343186923 [(.yext.schemapath) = "/access-points/access-point/bssids/bssid/state/counters/tx-retries"];
inline bool AccessPoints_AccessPoint_Bssids_Bssid_State_Counters::has_tx_retries() const {
  return this != internal_default_instance() && tx_retries_ != NULL;
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_Bssids_Bssid_State_Counters::tx_retries() const {
  const ::ywrapper::UintValue* p = tx_retries_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.tx_retries)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Bssids_Bssid_State_Counters::release_tx_retries() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.tx_retries)
  
  ::ywrapper::UintValue* temp = tx_retries_;
  tx_retries_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Bssids_Bssid_State_Counters::mutable_tx_retries() {
  
  if (tx_retries_ == NULL) {
    tx_retries_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.tx_retries)
  return tx_retries_;
}
inline void AccessPoints_AccessPoint_Bssids_Bssid_State_Counters::set_allocated_tx_retries(::ywrapper::UintValue* tx_retries) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(tx_retries_);
  }
  if (tx_retries) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      tx_retries = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, tx_retries, submessage_arena);
    }
    
  } else {
    
  }
  tx_retries_ = tx_retries;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.tx_retries)
}

// .ywrapper.UintValue tx_retries_data = 30080596 [(.yext.schemapath) = "/access-points/access-point/bssids/bssid/state/counters/tx-retries-data"];
inline bool AccessPoints_AccessPoint_Bssids_Bssid_State_Counters::has_tx_retries_data() const {
  return this != internal_default_instance() && tx_retries_data_ != NULL;
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_Bssids_Bssid_State_Counters::tx_retries_data() const {
  const ::ywrapper::UintValue* p = tx_retries_data_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.tx_retries_data)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Bssids_Bssid_State_Counters::release_tx_retries_data() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.tx_retries_data)
  
  ::ywrapper::UintValue* temp = tx_retries_data_;
  tx_retries_data_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Bssids_Bssid_State_Counters::mutable_tx_retries_data() {
  
  if (tx_retries_data_ == NULL) {
    tx_retries_data_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.tx_retries_data)
  return tx_retries_data_;
}
inline void AccessPoints_AccessPoint_Bssids_Bssid_State_Counters::set_allocated_tx_retries_data(::ywrapper::UintValue* tx_retries_data) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(tx_retries_data_);
  }
  if (tx_retries_data) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      tx_retries_data = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, tx_retries_data, submessage_arena);
    }
    
  } else {
    
  }
  tx_retries_data_ = tx_retries_data;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.tx_retries_data)
}

// .ywrapper.UintValue tx_retries_subframe = 536002493 [(.yext.schemapath) = "/access-points/access-point/bssids/bssid/state/counters/tx-retries-subframe"];
inline bool AccessPoints_AccessPoint_Bssids_Bssid_State_Counters::has_tx_retries_subframe() const {
  return this != internal_default_instance() && tx_retries_subframe_ != NULL;
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_Bssids_Bssid_State_Counters::tx_retries_subframe() const {
  const ::ywrapper::UintValue* p = tx_retries_subframe_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.tx_retries_subframe)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Bssids_Bssid_State_Counters::release_tx_retries_subframe() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.tx_retries_subframe)
  
  ::ywrapper::UintValue* temp = tx_retries_subframe_;
  tx_retries_subframe_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Bssids_Bssid_State_Counters::mutable_tx_retries_subframe() {
  
  if (tx_retries_subframe_ == NULL) {
    tx_retries_subframe_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.tx_retries_subframe)
  return tx_retries_subframe_;
}
inline void AccessPoints_AccessPoint_Bssids_Bssid_State_Counters::set_allocated_tx_retries_subframe(::ywrapper::UintValue* tx_retries_subframe) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(tx_retries_subframe_);
  }
  if (tx_retries_subframe) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      tx_retries_subframe = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, tx_retries_subframe, submessage_arena);
    }
    
  } else {
    
  }
  tx_retries_subframe_ = tx_retries_subframe;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters.tx_retries_subframe)
}

// -------------------------------------------------------------------

// AccessPoints_AccessPoint_Bssids_Bssid_State

// .ywrapper.StringValue bssid = 354430463 [(.yext.schemapath) = "/access-points/access-point/bssids/bssid/state/bssid"];
inline bool AccessPoints_AccessPoint_Bssids_Bssid_State::has_bssid() const {
  return this != internal_default_instance() && bssid_ != NULL;
}
inline const ::ywrapper::StringValue& AccessPoints_AccessPoint_Bssids_Bssid_State::bssid() const {
  const ::ywrapper::StringValue* p = bssid_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.bssid)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::StringValue*>(
      &::ywrapper::_StringValue_default_instance_);
}
inline ::ywrapper::StringValue* AccessPoints_AccessPoint_Bssids_Bssid_State::release_bssid() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.bssid)
  
  ::ywrapper::StringValue* temp = bssid_;
  bssid_ = NULL;
  return temp;
}
inline ::ywrapper::StringValue* AccessPoints_AccessPoint_Bssids_Bssid_State::mutable_bssid() {
  
  if (bssid_ == NULL) {
    bssid_ = new ::ywrapper::StringValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.bssid)
  return bssid_;
}
inline void AccessPoints_AccessPoint_Bssids_Bssid_State::set_allocated_bssid(::ywrapper::StringValue* bssid) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(bssid_);
  }
  if (bssid) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      bssid = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, bssid, submessage_arena);
    }
    
  } else {
    
  }
  bssid_ = bssid;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.bssid)
}

// .openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.Counters counters = 351841403 [(.yext.schemapath) = "/access-points/access-point/bssids/bssid/state/counters"];
inline bool AccessPoints_AccessPoint_Bssids_Bssid_State::has_counters() const {
  return this != internal_default_instance() && counters_ != NULL;
}
inline void AccessPoints_AccessPoint_Bssids_Bssid_State::clear_counters() {
  if (GetArenaNoVirtual() == NULL && counters_ != NULL) {
    delete counters_;
  }
  counters_ = NULL;
}
inline const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Bssids_Bssid_State_Counters& AccessPoints_AccessPoint_Bssids_Bssid_State::counters() const {
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Bssids_Bssid_State_Counters* p = counters_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.counters)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Bssids_Bssid_State_Counters*>(
      &::openconfig::openconfig_access_points::_AccessPoints_AccessPoint_Bssids_Bssid_State_Counters_default_instance_);
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Bssids_Bssid_State_Counters* AccessPoints_AccessPoint_Bssids_Bssid_State::release_counters() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.counters)
  
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Bssids_Bssid_State_Counters* temp = counters_;
  counters_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Bssids_Bssid_State_Counters* AccessPoints_AccessPoint_Bssids_Bssid_State::mutable_counters() {
  
  if (counters_ == NULL) {
    counters_ = new ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Bssids_Bssid_State_Counters;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.counters)
  return counters_;
}
inline void AccessPoints_AccessPoint_Bssids_Bssid_State::set_allocated_counters(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Bssids_Bssid_State_Counters* counters) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete counters_;
  }
  if (counters) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      counters = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, counters, submessage_arena);
    }
    
  } else {
    
  }
  counters_ = counters;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.counters)
}

// .ywrapper.StringValue ess = 272594563 [(.yext.schemapath) = "/access-points/access-point/bssids/bssid/state/ess"];
inline bool AccessPoints_AccessPoint_Bssids_Bssid_State::has_ess() const {
  return this != internal_default_instance() && ess_ != NULL;
}
inline const ::ywrapper::StringValue& AccessPoints_AccessPoint_Bssids_Bssid_State::ess() const {
  const ::ywrapper::StringValue* p = ess_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.ess)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::StringValue*>(
      &::ywrapper::_StringValue_default_instance_);
}
inline ::ywrapper::StringValue* AccessPoints_AccessPoint_Bssids_Bssid_State::release_ess() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.ess)
  
  ::ywrapper::StringValue* temp = ess_;
  ess_ = NULL;
  return temp;
}
inline ::ywrapper::StringValue* AccessPoints_AccessPoint_Bssids_Bssid_State::mutable_ess() {
  
  if (ess_ == NULL) {
    ess_ = new ::ywrapper::StringValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.ess)
  return ess_;
}
inline void AccessPoints_AccessPoint_Bssids_Bssid_State::set_allocated_ess(::ywrapper::StringValue* ess) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(ess_);
  }
  if (ess) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      ess = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, ess, submessage_arena);
    }
    
  } else {
    
  }
  ess_ = ess;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.ess)
}

// .ywrapper.UintValue num_associated_clients = 239913592 [(.yext.schemapath) = "/access-points/access-point/bssids/bssid/state/num-associated-clients"];
inline bool AccessPoints_AccessPoint_Bssids_Bssid_State::has_num_associated_clients() const {
  return this != internal_default_instance() && num_associated_clients_ != NULL;
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_Bssids_Bssid_State::num_associated_clients() const {
  const ::ywrapper::UintValue* p = num_associated_clients_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.num_associated_clients)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Bssids_Bssid_State::release_num_associated_clients() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.num_associated_clients)
  
  ::ywrapper::UintValue* temp = num_associated_clients_;
  num_associated_clients_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Bssids_Bssid_State::mutable_num_associated_clients() {
  
  if (num_associated_clients_ == NULL) {
    num_associated_clients_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.num_associated_clients)
  return num_associated_clients_;
}
inline void AccessPoints_AccessPoint_Bssids_Bssid_State::set_allocated_num_associated_clients(::ywrapper::UintValue* num_associated_clients) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(num_associated_clients_);
  }
  if (num_associated_clients) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      num_associated_clients = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, num_associated_clients, submessage_arena);
    }
    
  } else {
    
  }
  num_associated_clients_ = num_associated_clients;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State.num_associated_clients)
}

// -------------------------------------------------------------------

// AccessPoints_AccessPoint_Bssids_Bssid

// .openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.State state = 110851873 [(.yext.schemapath) = "/access-points/access-point/bssids/bssid/state"];
inline bool AccessPoints_AccessPoint_Bssids_Bssid::has_state() const {
  return this != internal_default_instance() && state_ != NULL;
}
inline void AccessPoints_AccessPoint_Bssids_Bssid::clear_state() {
  if (GetArenaNoVirtual() == NULL && state_ != NULL) {
    delete state_;
  }
  state_ = NULL;
}
inline const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Bssids_Bssid_State& AccessPoints_AccessPoint_Bssids_Bssid::state() const {
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Bssids_Bssid_State* p = state_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.state)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Bssids_Bssid_State*>(
      &::openconfig::openconfig_access_points::_AccessPoints_AccessPoint_Bssids_Bssid_State_default_instance_);
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Bssids_Bssid_State* AccessPoints_AccessPoint_Bssids_Bssid::release_state() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.state)
  
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Bssids_Bssid_State* temp = state_;
  state_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Bssids_Bssid_State* AccessPoints_AccessPoint_Bssids_Bssid::mutable_state() {
  
  if (state_ == NULL) {
    state_ = new ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Bssids_Bssid_State;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.state)
  return state_;
}
inline void AccessPoints_AccessPoint_Bssids_Bssid::set_allocated_state(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Bssids_Bssid_State* state) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete state_;
  }
  if (state) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      state = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, state, submessage_arena);
    }
    
  } else {
    
  }
  state_ = state;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid.state)
}

// -------------------------------------------------------------------

// AccessPoints_AccessPoint_Bssids_BssidKey

// string bssid_key = 1 [(.yext.schemapath) = "/access-points/access-point/bssids/bssid/bssid"];
inline void AccessPoints_AccessPoint_Bssids_BssidKey::clear_bssid_key() {
  bssid_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AccessPoints_AccessPoint_Bssids_BssidKey::bssid_key() const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.BssidKey.bssid_key)
  return bssid_key_.GetNoArena();
}
inline void AccessPoints_AccessPoint_Bssids_BssidKey::set_bssid_key(const ::std::string& value) {
  
  bssid_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.BssidKey.bssid_key)
}
#if LANG_CXX11
inline void AccessPoints_AccessPoint_Bssids_BssidKey::set_bssid_key(::std::string&& value) {
  
  bssid_key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.BssidKey.bssid_key)
}
#endif
inline void AccessPoints_AccessPoint_Bssids_BssidKey::set_bssid_key(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  bssid_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.BssidKey.bssid_key)
}
inline void AccessPoints_AccessPoint_Bssids_BssidKey::set_bssid_key(const char* value, size_t size) {
  
  bssid_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.BssidKey.bssid_key)
}
inline ::std::string* AccessPoints_AccessPoint_Bssids_BssidKey::mutable_bssid_key() {
  
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.BssidKey.bssid_key)
  return bssid_key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AccessPoints_AccessPoint_Bssids_BssidKey::release_bssid_key() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.BssidKey.bssid_key)
  
  return bssid_key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AccessPoints_AccessPoint_Bssids_BssidKey::set_allocated_bssid_key(::std::string* bssid_key) {
  if (bssid_key != NULL) {
    
  } else {
    
  }
  bssid_key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bssid_key);
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.BssidKey.bssid_key)
}

// .openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.Bssid bssid = 2;
inline bool AccessPoints_AccessPoint_Bssids_BssidKey::has_bssid() const {
  return this != internal_default_instance() && bssid_ != NULL;
}
inline void AccessPoints_AccessPoint_Bssids_BssidKey::clear_bssid() {
  if (GetArenaNoVirtual() == NULL && bssid_ != NULL) {
    delete bssid_;
  }
  bssid_ = NULL;
}
inline const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Bssids_Bssid& AccessPoints_AccessPoint_Bssids_BssidKey::bssid() const {
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Bssids_Bssid* p = bssid_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.BssidKey.bssid)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Bssids_Bssid*>(
      &::openconfig::openconfig_access_points::_AccessPoints_AccessPoint_Bssids_Bssid_default_instance_);
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Bssids_Bssid* AccessPoints_AccessPoint_Bssids_BssidKey::release_bssid() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.BssidKey.bssid)
  
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Bssids_Bssid* temp = bssid_;
  bssid_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Bssids_Bssid* AccessPoints_AccessPoint_Bssids_BssidKey::mutable_bssid() {
  
  if (bssid_ == NULL) {
    bssid_ = new ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Bssids_Bssid;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.BssidKey.bssid)
  return bssid_;
}
inline void AccessPoints_AccessPoint_Bssids_BssidKey::set_allocated_bssid(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Bssids_Bssid* bssid) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete bssid_;
  }
  if (bssid) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      bssid = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, bssid, submessage_arena);
    }
    
  } else {
    
  }
  bssid_ = bssid;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.BssidKey.bssid)
}

// -------------------------------------------------------------------

// AccessPoints_AccessPoint_Bssids

// repeated .openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.BssidKey bssid = 476509079 [(.yext.schemapath) = "/access-points/access-point/bssids/bssid"];
inline int AccessPoints_AccessPoint_Bssids::bssid_size() const {
  return bssid_.size();
}
inline void AccessPoints_AccessPoint_Bssids::clear_bssid() {
  bssid_.Clear();
}
inline const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Bssids_BssidKey& AccessPoints_AccessPoint_Bssids::bssid(int index) const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.bssid)
  return bssid_.Get(index);
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Bssids_BssidKey* AccessPoints_AccessPoint_Bssids::mutable_bssid(int index) {
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.bssid)
  return bssid_.Mutable(index);
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Bssids_BssidKey* AccessPoints_AccessPoint_Bssids::add_bssid() {
  // @@protoc_insertion_point(field_add:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.bssid)
  return bssid_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Bssids_BssidKey >*
AccessPoints_AccessPoint_Bssids::mutable_bssid() {
  // @@protoc_insertion_point(field_mutable_list:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.bssid)
  return &bssid_;
}
inline const ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Bssids_BssidKey >&
AccessPoints_AccessPoint_Bssids::bssid() const {
  // @@protoc_insertion_point(field_list:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids.bssid)
  return bssid_;
}

// -------------------------------------------------------------------

// AccessPoints_AccessPoint_Radios_Radio_Config

// repeated .ywrapper.UintValue allowed_channels = 377176594 [(.yext.schemapath) = "/access-points/access-point/radios/radio/config/allowed-channels"];
inline int AccessPoints_AccessPoint_Radios_Radio_Config::allowed_channels_size() const {
  return allowed_channels_.size();
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_Radios_Radio_Config::allowed_channels(int index) const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.Config.allowed_channels)
  return allowed_channels_.Get(index);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Radios_Radio_Config::mutable_allowed_channels(int index) {
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.Config.allowed_channels)
  return allowed_channels_.Mutable(index);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Radios_Radio_Config::add_allowed_channels() {
  // @@protoc_insertion_point(field_add:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.Config.allowed_channels)
  return allowed_channels_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::ywrapper::UintValue >*
AccessPoints_AccessPoint_Radios_Radio_Config::mutable_allowed_channels() {
  // @@protoc_insertion_point(field_mutable_list:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.Config.allowed_channels)
  return &allowed_channels_;
}
inline const ::google::protobuf::RepeatedPtrField< ::ywrapper::UintValue >&
AccessPoints_AccessPoint_Radios_Radio_Config::allowed_channels() const {
  // @@protoc_insertion_point(field_list:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.Config.allowed_channels)
  return allowed_channels_;
}

// .ywrapper.IntValue antenna_gain = 395589676 [(.yext.schemapath) = "/access-points/access-point/radios/radio/config/antenna-gain"];
inline bool AccessPoints_AccessPoint_Radios_Radio_Config::has_antenna_gain() const {
  return this != internal_default_instance() && antenna_gain_ != NULL;
}
inline const ::ywrapper::IntValue& AccessPoints_AccessPoint_Radios_Radio_Config::antenna_gain() const {
  const ::ywrapper::IntValue* p = antenna_gain_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.Config.antenna_gain)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::IntValue*>(
      &::ywrapper::_IntValue_default_instance_);
}
inline ::ywrapper::IntValue* AccessPoints_AccessPoint_Radios_Radio_Config::release_antenna_gain() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.Config.antenna_gain)
  
  ::ywrapper::IntValue* temp = antenna_gain_;
  antenna_gain_ = NULL;
  return temp;
}
inline ::ywrapper::IntValue* AccessPoints_AccessPoint_Radios_Radio_Config::mutable_antenna_gain() {
  
  if (antenna_gain_ == NULL) {
    antenna_gain_ = new ::ywrapper::IntValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.Config.antenna_gain)
  return antenna_gain_;
}
inline void AccessPoints_AccessPoint_Radios_Radio_Config::set_allocated_antenna_gain(::ywrapper::IntValue* antenna_gain) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(antenna_gain_);
  }
  if (antenna_gain) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      antenna_gain = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, antenna_gain, submessage_arena);
    }
    
  } else {
    
  }
  antenna_gain_ = antenna_gain;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.Config.antenna_gain)
}

// .ywrapper.UintValue channel = 142234560 [(.yext.schemapath) = "/access-points/access-point/radios/radio/config/channel"];
inline bool AccessPoints_AccessPoint_Radios_Radio_Config::has_channel() const {
  return this != internal_default_instance() && channel_ != NULL;
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_Radios_Radio_Config::channel() const {
  const ::ywrapper::UintValue* p = channel_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.Config.channel)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Radios_Radio_Config::release_channel() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.Config.channel)
  
  ::ywrapper::UintValue* temp = channel_;
  channel_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Radios_Radio_Config::mutable_channel() {
  
  if (channel_ == NULL) {
    channel_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.Config.channel)
  return channel_;
}
inline void AccessPoints_AccessPoint_Radios_Radio_Config::set_allocated_channel(::ywrapper::UintValue* channel) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(channel_);
  }
  if (channel) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      channel = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, channel, submessage_arena);
    }
    
  } else {
    
  }
  channel_ = channel;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.Config.channel)
}

// .ywrapper.UintValue channel_width = 312377251 [(.yext.schemapath) = "/access-points/access-point/radios/radio/config/channel-width"];
inline bool AccessPoints_AccessPoint_Radios_Radio_Config::has_channel_width() const {
  return this != internal_default_instance() && channel_width_ != NULL;
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_Radios_Radio_Config::channel_width() const {
  const ::ywrapper::UintValue* p = channel_width_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.Config.channel_width)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Radios_Radio_Config::release_channel_width() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.Config.channel_width)
  
  ::ywrapper::UintValue* temp = channel_width_;
  channel_width_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Radios_Radio_Config::mutable_channel_width() {
  
  if (channel_width_ == NULL) {
    channel_width_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.Config.channel_width)
  return channel_width_;
}
inline void AccessPoints_AccessPoint_Radios_Radio_Config::set_allocated_channel_width(::ywrapper::UintValue* channel_width) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(channel_width_);
  }
  if (channel_width) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      channel_width = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, channel_width, submessage_arena);
    }
    
  } else {
    
  }
  channel_width_ = channel_width;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.Config.channel_width)
}

// .ywrapper.BoolValue dca = 121063389 [(.yext.schemapath) = "/access-points/access-point/radios/radio/config/dca"];
inline bool AccessPoints_AccessPoint_Radios_Radio_Config::has_dca() const {
  return this != internal_default_instance() && dca_ != NULL;
}
inline const ::ywrapper::BoolValue& AccessPoints_AccessPoint_Radios_Radio_Config::dca() const {
  const ::ywrapper::BoolValue* p = dca_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.Config.dca)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::BoolValue*>(
      &::ywrapper::_BoolValue_default_instance_);
}
inline ::ywrapper::BoolValue* AccessPoints_AccessPoint_Radios_Radio_Config::release_dca() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.Config.dca)
  
  ::ywrapper::BoolValue* temp = dca_;
  dca_ = NULL;
  return temp;
}
inline ::ywrapper::BoolValue* AccessPoints_AccessPoint_Radios_Radio_Config::mutable_dca() {
  
  if (dca_ == NULL) {
    dca_ = new ::ywrapper::BoolValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.Config.dca)
  return dca_;
}
inline void AccessPoints_AccessPoint_Radios_Radio_Config::set_allocated_dca(::ywrapper::BoolValue* dca) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(dca_);
  }
  if (dca) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      dca = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, dca, submessage_arena);
    }
    
  } else {
    
  }
  dca_ = dca;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.Config.dca)
}

// .ywrapper.BoolValue dtp = 372714633 [(.yext.schemapath) = "/access-points/access-point/radios/radio/config/dtp"];
inline bool AccessPoints_AccessPoint_Radios_Radio_Config::has_dtp() const {
  return this != internal_default_instance() && dtp_ != NULL;
}
inline const ::ywrapper::BoolValue& AccessPoints_AccessPoint_Radios_Radio_Config::dtp() const {
  const ::ywrapper::BoolValue* p = dtp_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.Config.dtp)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::BoolValue*>(
      &::ywrapper::_BoolValue_default_instance_);
}
inline ::ywrapper::BoolValue* AccessPoints_AccessPoint_Radios_Radio_Config::release_dtp() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.Config.dtp)
  
  ::ywrapper::BoolValue* temp = dtp_;
  dtp_ = NULL;
  return temp;
}
inline ::ywrapper::BoolValue* AccessPoints_AccessPoint_Radios_Radio_Config::mutable_dtp() {
  
  if (dtp_ == NULL) {
    dtp_ = new ::ywrapper::BoolValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.Config.dtp)
  return dtp_;
}
inline void AccessPoints_AccessPoint_Radios_Radio_Config::set_allocated_dtp(::ywrapper::BoolValue* dtp) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(dtp_);
  }
  if (dtp) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      dtp = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, dtp, submessage_arena);
    }
    
  } else {
    
  }
  dtp_ = dtp;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.Config.dtp)
}

// .ywrapper.UintValue dtp_max = 436592188 [(.yext.schemapath) = "/access-points/access-point/radios/radio/config/dtp-max"];
inline bool AccessPoints_AccessPoint_Radios_Radio_Config::has_dtp_max() const {
  return this != internal_default_instance() && dtp_max_ != NULL;
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_Radios_Radio_Config::dtp_max() const {
  const ::ywrapper::UintValue* p = dtp_max_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.Config.dtp_max)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Radios_Radio_Config::release_dtp_max() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.Config.dtp_max)
  
  ::ywrapper::UintValue* temp = dtp_max_;
  dtp_max_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Radios_Radio_Config::mutable_dtp_max() {
  
  if (dtp_max_ == NULL) {
    dtp_max_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.Config.dtp_max)
  return dtp_max_;
}
inline void AccessPoints_AccessPoint_Radios_Radio_Config::set_allocated_dtp_max(::ywrapper::UintValue* dtp_max) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(dtp_max_);
  }
  if (dtp_max) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      dtp_max = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, dtp_max, submessage_arena);
    }
    
  } else {
    
  }
  dtp_max_ = dtp_max;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.Config.dtp_max)
}

// .ywrapper.UintValue dtp_min = 302371266 [(.yext.schemapath) = "/access-points/access-point/radios/radio/config/dtp-min"];
inline bool AccessPoints_AccessPoint_Radios_Radio_Config::has_dtp_min() const {
  return this != internal_default_instance() && dtp_min_ != NULL;
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_Radios_Radio_Config::dtp_min() const {
  const ::ywrapper::UintValue* p = dtp_min_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.Config.dtp_min)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Radios_Radio_Config::release_dtp_min() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.Config.dtp_min)
  
  ::ywrapper::UintValue* temp = dtp_min_;
  dtp_min_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Radios_Radio_Config::mutable_dtp_min() {
  
  if (dtp_min_ == NULL) {
    dtp_min_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.Config.dtp_min)
  return dtp_min_;
}
inline void AccessPoints_AccessPoint_Radios_Radio_Config::set_allocated_dtp_min(::ywrapper::UintValue* dtp_min) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(dtp_min_);
  }
  if (dtp_min) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      dtp_min = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, dtp_min, submessage_arena);
    }
    
  } else {
    
  }
  dtp_min_ = dtp_min;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.Config.dtp_min)
}

// .ywrapper.BoolValue enabled = 61757750 [(.yext.schemapath) = "/access-points/access-point/radios/radio/config/enabled"];
inline bool AccessPoints_AccessPoint_Radios_Radio_Config::has_enabled() const {
  return this != internal_default_instance() && enabled_ != NULL;
}
inline const ::ywrapper::BoolValue& AccessPoints_AccessPoint_Radios_Radio_Config::enabled() const {
  const ::ywrapper::BoolValue* p = enabled_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.Config.enabled)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::BoolValue*>(
      &::ywrapper::_BoolValue_default_instance_);
}
inline ::ywrapper::BoolValue* AccessPoints_AccessPoint_Radios_Radio_Config::release_enabled() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.Config.enabled)
  
  ::ywrapper::BoolValue* temp = enabled_;
  enabled_ = NULL;
  return temp;
}
inline ::ywrapper::BoolValue* AccessPoints_AccessPoint_Radios_Radio_Config::mutable_enabled() {
  
  if (enabled_ == NULL) {
    enabled_ = new ::ywrapper::BoolValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.Config.enabled)
  return enabled_;
}
inline void AccessPoints_AccessPoint_Radios_Radio_Config::set_allocated_enabled(::ywrapper::BoolValue* enabled) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(enabled_);
  }
  if (enabled) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      enabled = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, enabled, submessage_arena);
    }
    
  } else {
    
  }
  enabled_ = enabled;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.Config.enabled)
}

// .ywrapper.UintValue id = 51792420 [(.yext.schemapath) = "/access-points/access-point/radios/radio/config/id"];
inline bool AccessPoints_AccessPoint_Radios_Radio_Config::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_Radios_Radio_Config::id() const {
  const ::ywrapper::UintValue* p = id_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.Config.id)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Radios_Radio_Config::release_id() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.Config.id)
  
  ::ywrapper::UintValue* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Radios_Radio_Config::mutable_id() {
  
  if (id_ == NULL) {
    id_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.Config.id)
  return id_;
}
inline void AccessPoints_AccessPoint_Radios_Radio_Config::set_allocated_id(::ywrapper::UintValue* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.Config.id)
}

// .openconfig.enums.OpenconfigWifiTypesOPERATINGFREQUENCY operating_frequency = 326739705 [(.yext.schemapath) = "/access-points/access-point/radios/radio/config/operating-frequency"];
inline void AccessPoints_AccessPoint_Radios_Radio_Config::clear_operating_frequency() {
  operating_frequency_ = 0;
}
inline ::openconfig::enums::OpenconfigWifiTypesOPERATINGFREQUENCY AccessPoints_AccessPoint_Radios_Radio_Config::operating_frequency() const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.Config.operating_frequency)
  return static_cast< ::openconfig::enums::OpenconfigWifiTypesOPERATINGFREQUENCY >(operating_frequency_);
}
inline void AccessPoints_AccessPoint_Radios_Radio_Config::set_operating_frequency(::openconfig::enums::OpenconfigWifiTypesOPERATINGFREQUENCY value) {
  
  operating_frequency_ = value;
  // @@protoc_insertion_point(field_set:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.Config.operating_frequency)
}

// .ywrapper.BoolValue scanning = 120410214 [(.yext.schemapath) = "/access-points/access-point/radios/radio/config/scanning"];
inline bool AccessPoints_AccessPoint_Radios_Radio_Config::has_scanning() const {
  return this != internal_default_instance() && scanning_ != NULL;
}
inline const ::ywrapper::BoolValue& AccessPoints_AccessPoint_Radios_Radio_Config::scanning() const {
  const ::ywrapper::BoolValue* p = scanning_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.Config.scanning)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::BoolValue*>(
      &::ywrapper::_BoolValue_default_instance_);
}
inline ::ywrapper::BoolValue* AccessPoints_AccessPoint_Radios_Radio_Config::release_scanning() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.Config.scanning)
  
  ::ywrapper::BoolValue* temp = scanning_;
  scanning_ = NULL;
  return temp;
}
inline ::ywrapper::BoolValue* AccessPoints_AccessPoint_Radios_Radio_Config::mutable_scanning() {
  
  if (scanning_ == NULL) {
    scanning_ = new ::ywrapper::BoolValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.Config.scanning)
  return scanning_;
}
inline void AccessPoints_AccessPoint_Radios_Radio_Config::set_allocated_scanning(::ywrapper::BoolValue* scanning) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(scanning_);
  }
  if (scanning) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      scanning = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, scanning, submessage_arena);
    }
    
  } else {
    
  }
  scanning_ = scanning;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.Config.scanning)
}

// .ywrapper.UintValue scanning_defer_clients = 508920778 [(.yext.schemapath) = "/access-points/access-point/radios/radio/config/scanning-defer-clients"];
inline bool AccessPoints_AccessPoint_Radios_Radio_Config::has_scanning_defer_clients() const {
  return this != internal_default_instance() && scanning_defer_clients_ != NULL;
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_Radios_Radio_Config::scanning_defer_clients() const {
  const ::ywrapper::UintValue* p = scanning_defer_clients_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.Config.scanning_defer_clients)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Radios_Radio_Config::release_scanning_defer_clients() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.Config.scanning_defer_clients)
  
  ::ywrapper::UintValue* temp = scanning_defer_clients_;
  scanning_defer_clients_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Radios_Radio_Config::mutable_scanning_defer_clients() {
  
  if (scanning_defer_clients_ == NULL) {
    scanning_defer_clients_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.Config.scanning_defer_clients)
  return scanning_defer_clients_;
}
inline void AccessPoints_AccessPoint_Radios_Radio_Config::set_allocated_scanning_defer_clients(::ywrapper::UintValue* scanning_defer_clients) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(scanning_defer_clients_);
  }
  if (scanning_defer_clients) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      scanning_defer_clients = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, scanning_defer_clients, submessage_arena);
    }
    
  } else {
    
  }
  scanning_defer_clients_ = scanning_defer_clients;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.Config.scanning_defer_clients)
}

// .ywrapper.BoolValue scanning_defer_traffic = 201270109 [(.yext.schemapath) = "/access-points/access-point/radios/radio/config/scanning-defer-traffic"];
inline bool AccessPoints_AccessPoint_Radios_Radio_Config::has_scanning_defer_traffic() const {
  return this != internal_default_instance() && scanning_defer_traffic_ != NULL;
}
inline const ::ywrapper::BoolValue& AccessPoints_AccessPoint_Radios_Radio_Config::scanning_defer_traffic() const {
  const ::ywrapper::BoolValue* p = scanning_defer_traffic_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.Config.scanning_defer_traffic)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::BoolValue*>(
      &::ywrapper::_BoolValue_default_instance_);
}
inline ::ywrapper::BoolValue* AccessPoints_AccessPoint_Radios_Radio_Config::release_scanning_defer_traffic() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.Config.scanning_defer_traffic)
  
  ::ywrapper::BoolValue* temp = scanning_defer_traffic_;
  scanning_defer_traffic_ = NULL;
  return temp;
}
inline ::ywrapper::BoolValue* AccessPoints_AccessPoint_Radios_Radio_Config::mutable_scanning_defer_traffic() {
  
  if (scanning_defer_traffic_ == NULL) {
    scanning_defer_traffic_ = new ::ywrapper::BoolValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.Config.scanning_defer_traffic)
  return scanning_defer_traffic_;
}
inline void AccessPoints_AccessPoint_Radios_Radio_Config::set_allocated_scanning_defer_traffic(::ywrapper::BoolValue* scanning_defer_traffic) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(scanning_defer_traffic_);
  }
  if (scanning_defer_traffic) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      scanning_defer_traffic = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, scanning_defer_traffic, submessage_arena);
    }
    
  } else {
    
  }
  scanning_defer_traffic_ = scanning_defer_traffic;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.Config.scanning_defer_traffic)
}

// .ywrapper.UintValue scanning_dwell_time = 301364873 [(.yext.schemapath) = "/access-points/access-point/radios/radio/config/scanning-dwell-time"];
inline bool AccessPoints_AccessPoint_Radios_Radio_Config::has_scanning_dwell_time() const {
  return this != internal_default_instance() && scanning_dwell_time_ != NULL;
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_Radios_Radio_Config::scanning_dwell_time() const {
  const ::ywrapper::UintValue* p = scanning_dwell_time_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.Config.scanning_dwell_time)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Radios_Radio_Config::release_scanning_dwell_time() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.Config.scanning_dwell_time)
  
  ::ywrapper::UintValue* temp = scanning_dwell_time_;
  scanning_dwell_time_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Radios_Radio_Config::mutable_scanning_dwell_time() {
  
  if (scanning_dwell_time_ == NULL) {
    scanning_dwell_time_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.Config.scanning_dwell_time)
  return scanning_dwell_time_;
}
inline void AccessPoints_AccessPoint_Radios_Radio_Config::set_allocated_scanning_dwell_time(::ywrapper::UintValue* scanning_dwell_time) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(scanning_dwell_time_);
  }
  if (scanning_dwell_time) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      scanning_dwell_time = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, scanning_dwell_time, submessage_arena);
    }
    
  } else {
    
  }
  scanning_dwell_time_ = scanning_dwell_time;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.Config.scanning_dwell_time)
}

// .ywrapper.UintValue scanning_interval = 227708400 [(.yext.schemapath) = "/access-points/access-point/radios/radio/config/scanning-interval"];
inline bool AccessPoints_AccessPoint_Radios_Radio_Config::has_scanning_interval() const {
  return this != internal_default_instance() && scanning_interval_ != NULL;
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_Radios_Radio_Config::scanning_interval() const {
  const ::ywrapper::UintValue* p = scanning_interval_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.Config.scanning_interval)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Radios_Radio_Config::release_scanning_interval() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.Config.scanning_interval)
  
  ::ywrapper::UintValue* temp = scanning_interval_;
  scanning_interval_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Radios_Radio_Config::mutable_scanning_interval() {
  
  if (scanning_interval_ == NULL) {
    scanning_interval_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.Config.scanning_interval)
  return scanning_interval_;
}
inline void AccessPoints_AccessPoint_Radios_Radio_Config::set_allocated_scanning_interval(::ywrapper::UintValue* scanning_interval) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(scanning_interval_);
  }
  if (scanning_interval) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      scanning_interval = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, scanning_interval, submessage_arena);
    }
    
  } else {
    
  }
  scanning_interval_ = scanning_interval;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.Config.scanning_interval)
}

// .ywrapper.UintValue transmit_power = 13864931 [(.yext.schemapath) = "/access-points/access-point/radios/radio/config/transmit-power"];
inline bool AccessPoints_AccessPoint_Radios_Radio_Config::has_transmit_power() const {
  return this != internal_default_instance() && transmit_power_ != NULL;
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_Radios_Radio_Config::transmit_power() const {
  const ::ywrapper::UintValue* p = transmit_power_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.Config.transmit_power)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Radios_Radio_Config::release_transmit_power() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.Config.transmit_power)
  
  ::ywrapper::UintValue* temp = transmit_power_;
  transmit_power_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Radios_Radio_Config::mutable_transmit_power() {
  
  if (transmit_power_ == NULL) {
    transmit_power_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.Config.transmit_power)
  return transmit_power_;
}
inline void AccessPoints_AccessPoint_Radios_Radio_Config::set_allocated_transmit_power(::ywrapper::UintValue* transmit_power) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(transmit_power_);
  }
  if (transmit_power) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      transmit_power = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, transmit_power, submessage_arena);
    }
    
  } else {
    
  }
  transmit_power_ = transmit_power;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.Config.transmit_power)
}

// -------------------------------------------------------------------

// AccessPoints_AccessPoint_Radios_Radio_Neighbors_Neighbor_State

// .ywrapper.StringValue bssid = 401305860 [(.yext.schemapath) = "/access-points/access-point/radios/radio/neighbors/neighbor/state/bssid"];
inline bool AccessPoints_AccessPoint_Radios_Radio_Neighbors_Neighbor_State::has_bssid() const {
  return this != internal_default_instance() && bssid_ != NULL;
}
inline const ::ywrapper::StringValue& AccessPoints_AccessPoint_Radios_Radio_Neighbors_Neighbor_State::bssid() const {
  const ::ywrapper::StringValue* p = bssid_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.Neighbors.Neighbor.State.bssid)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::StringValue*>(
      &::ywrapper::_StringValue_default_instance_);
}
inline ::ywrapper::StringValue* AccessPoints_AccessPoint_Radios_Radio_Neighbors_Neighbor_State::release_bssid() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.Neighbors.Neighbor.State.bssid)
  
  ::ywrapper::StringValue* temp = bssid_;
  bssid_ = NULL;
  return temp;
}
inline ::ywrapper::StringValue* AccessPoints_AccessPoint_Radios_Radio_Neighbors_Neighbor_State::mutable_bssid() {
  
  if (bssid_ == NULL) {
    bssid_ = new ::ywrapper::StringValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.Neighbors.Neighbor.State.bssid)
  return bssid_;
}
inline void AccessPoints_AccessPoint_Radios_Radio_Neighbors_Neighbor_State::set_allocated_bssid(::ywrapper::StringValue* bssid) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(bssid_);
  }
  if (bssid) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      bssid = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, bssid, submessage_arena);
    }
    
  } else {
    
  }
  bssid_ = bssid;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.Neighbors.Neighbor.State.bssid)
}

// .ywrapper.UintValue channel = 528074318 [(.yext.schemapath) = "/access-points/access-point/radios/radio/neighbors/neighbor/state/channel"];
inline bool AccessPoints_AccessPoint_Radios_Radio_Neighbors_Neighbor_State::has_channel() const {
  return this != internal_default_instance() && channel_ != NULL;
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_Radios_Radio_Neighbors_Neighbor_State::channel() const {
  const ::ywrapper::UintValue* p = channel_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.Neighbors.Neighbor.State.channel)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Radios_Radio_Neighbors_Neighbor_State::release_channel() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.Neighbors.Neighbor.State.channel)
  
  ::ywrapper::UintValue* temp = channel_;
  channel_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Radios_Radio_Neighbors_Neighbor_State::mutable_channel() {
  
  if (channel_ == NULL) {
    channel_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.Neighbors.Neighbor.State.channel)
  return channel_;
}
inline void AccessPoints_AccessPoint_Radios_Radio_Neighbors_Neighbor_State::set_allocated_channel(::ywrapper::UintValue* channel) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(channel_);
  }
  if (channel) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      channel = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, channel, submessage_arena);
    }
    
  } else {
    
  }
  channel_ = channel;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.Neighbors.Neighbor.State.channel)
}

// .ywrapper.UintValue last_seen = 4425411 [(.yext.schemapath) = "/access-points/access-point/radios/radio/neighbors/neighbor/state/last-seen"];
inline bool AccessPoints_AccessPoint_Radios_Radio_Neighbors_Neighbor_State::has_last_seen() const {
  return this != internal_default_instance() && last_seen_ != NULL;
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_Radios_Radio_Neighbors_Neighbor_State::last_seen() const {
  const ::ywrapper::UintValue* p = last_seen_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.Neighbors.Neighbor.State.last_seen)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Radios_Radio_Neighbors_Neighbor_State::release_last_seen() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.Neighbors.Neighbor.State.last_seen)
  
  ::ywrapper::UintValue* temp = last_seen_;
  last_seen_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Radios_Radio_Neighbors_Neighbor_State::mutable_last_seen() {
  
  if (last_seen_ == NULL) {
    last_seen_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.Neighbors.Neighbor.State.last_seen)
  return last_seen_;
}
inline void AccessPoints_AccessPoint_Radios_Radio_Neighbors_Neighbor_State::set_allocated_last_seen(::ywrapper::UintValue* last_seen) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(last_seen_);
  }
  if (last_seen) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      last_seen = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, last_seen, submessage_arena);
    }
    
  } else {
    
  }
  last_seen_ = last_seen;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.Neighbors.Neighbor.State.last_seen)
}

// .ywrapper.UintValue primary_channel = 458175343 [(.yext.schemapath) = "/access-points/access-point/radios/radio/neighbors/neighbor/state/primary-channel"];
inline bool AccessPoints_AccessPoint_Radios_Radio_Neighbors_Neighbor_State::has_primary_channel() const {
  return this != internal_default_instance() && primary_channel_ != NULL;
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_Radios_Radio_Neighbors_Neighbor_State::primary_channel() const {
  const ::ywrapper::UintValue* p = primary_channel_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.Neighbors.Neighbor.State.primary_channel)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Radios_Radio_Neighbors_Neighbor_State::release_primary_channel() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.Neighbors.Neighbor.State.primary_channel)
  
  ::ywrapper::UintValue* temp = primary_channel_;
  primary_channel_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Radios_Radio_Neighbors_Neighbor_State::mutable_primary_channel() {
  
  if (primary_channel_ == NULL) {
    primary_channel_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.Neighbors.Neighbor.State.primary_channel)
  return primary_channel_;
}
inline void AccessPoints_AccessPoint_Radios_Radio_Neighbors_Neighbor_State::set_allocated_primary_channel(::ywrapper::UintValue* primary_channel) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(primary_channel_);
  }
  if (primary_channel) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      primary_channel = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, primary_channel, submessage_arena);
    }
    
  } else {
    
  }
  primary_channel_ = primary_channel;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.Neighbors.Neighbor.State.primary_channel)
}

// .ywrapper.IntValue rssi = 162047120 [(.yext.schemapath) = "/access-points/access-point/radios/radio/neighbors/neighbor/state/rssi"];
inline bool AccessPoints_AccessPoint_Radios_Radio_Neighbors_Neighbor_State::has_rssi() const {
  return this != internal_default_instance() && rssi_ != NULL;
}
inline const ::ywrapper::IntValue& AccessPoints_AccessPoint_Radios_Radio_Neighbors_Neighbor_State::rssi() const {
  const ::ywrapper::IntValue* p = rssi_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.Neighbors.Neighbor.State.rssi)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::IntValue*>(
      &::ywrapper::_IntValue_default_instance_);
}
inline ::ywrapper::IntValue* AccessPoints_AccessPoint_Radios_Radio_Neighbors_Neighbor_State::release_rssi() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.Neighbors.Neighbor.State.rssi)
  
  ::ywrapper::IntValue* temp = rssi_;
  rssi_ = NULL;
  return temp;
}
inline ::ywrapper::IntValue* AccessPoints_AccessPoint_Radios_Radio_Neighbors_Neighbor_State::mutable_rssi() {
  
  if (rssi_ == NULL) {
    rssi_ = new ::ywrapper::IntValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.Neighbors.Neighbor.State.rssi)
  return rssi_;
}
inline void AccessPoints_AccessPoint_Radios_Radio_Neighbors_Neighbor_State::set_allocated_rssi(::ywrapper::IntValue* rssi) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(rssi_);
  }
  if (rssi) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      rssi = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, rssi, submessage_arena);
    }
    
  } else {
    
  }
  rssi_ = rssi;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.Neighbors.Neighbor.State.rssi)
}

// .ywrapper.StringValue ssid = 320899124 [(.yext.schemapath) = "/access-points/access-point/radios/radio/neighbors/neighbor/state/ssid"];
inline bool AccessPoints_AccessPoint_Radios_Radio_Neighbors_Neighbor_State::has_ssid() const {
  return this != internal_default_instance() && ssid_ != NULL;
}
inline const ::ywrapper::StringValue& AccessPoints_AccessPoint_Radios_Radio_Neighbors_Neighbor_State::ssid() const {
  const ::ywrapper::StringValue* p = ssid_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.Neighbors.Neighbor.State.ssid)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::StringValue*>(
      &::ywrapper::_StringValue_default_instance_);
}
inline ::ywrapper::StringValue* AccessPoints_AccessPoint_Radios_Radio_Neighbors_Neighbor_State::release_ssid() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.Neighbors.Neighbor.State.ssid)
  
  ::ywrapper::StringValue* temp = ssid_;
  ssid_ = NULL;
  return temp;
}
inline ::ywrapper::StringValue* AccessPoints_AccessPoint_Radios_Radio_Neighbors_Neighbor_State::mutable_ssid() {
  
  if (ssid_ == NULL) {
    ssid_ = new ::ywrapper::StringValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.Neighbors.Neighbor.State.ssid)
  return ssid_;
}
inline void AccessPoints_AccessPoint_Radios_Radio_Neighbors_Neighbor_State::set_allocated_ssid(::ywrapper::StringValue* ssid) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(ssid_);
  }
  if (ssid) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      ssid = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, ssid, submessage_arena);
    }
    
  } else {
    
  }
  ssid_ = ssid;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.Neighbors.Neighbor.State.ssid)
}

// -------------------------------------------------------------------

// AccessPoints_AccessPoint_Radios_Radio_Neighbors_Neighbor

// .openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.Neighbors.Neighbor.State state = 508862922 [(.yext.schemapath) = "/access-points/access-point/radios/radio/neighbors/neighbor/state"];
inline bool AccessPoints_AccessPoint_Radios_Radio_Neighbors_Neighbor::has_state() const {
  return this != internal_default_instance() && state_ != NULL;
}
inline void AccessPoints_AccessPoint_Radios_Radio_Neighbors_Neighbor::clear_state() {
  if (GetArenaNoVirtual() == NULL && state_ != NULL) {
    delete state_;
  }
  state_ = NULL;
}
inline const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Radios_Radio_Neighbors_Neighbor_State& AccessPoints_AccessPoint_Radios_Radio_Neighbors_Neighbor::state() const {
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Radios_Radio_Neighbors_Neighbor_State* p = state_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.Neighbors.Neighbor.state)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Radios_Radio_Neighbors_Neighbor_State*>(
      &::openconfig::openconfig_access_points::_AccessPoints_AccessPoint_Radios_Radio_Neighbors_Neighbor_State_default_instance_);
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Radios_Radio_Neighbors_Neighbor_State* AccessPoints_AccessPoint_Radios_Radio_Neighbors_Neighbor::release_state() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.Neighbors.Neighbor.state)
  
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Radios_Radio_Neighbors_Neighbor_State* temp = state_;
  state_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Radios_Radio_Neighbors_Neighbor_State* AccessPoints_AccessPoint_Radios_Radio_Neighbors_Neighbor::mutable_state() {
  
  if (state_ == NULL) {
    state_ = new ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Radios_Radio_Neighbors_Neighbor_State;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.Neighbors.Neighbor.state)
  return state_;
}
inline void AccessPoints_AccessPoint_Radios_Radio_Neighbors_Neighbor::set_allocated_state(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Radios_Radio_Neighbors_Neighbor_State* state) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete state_;
  }
  if (state) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      state = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, state, submessage_arena);
    }
    
  } else {
    
  }
  state_ = state;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.Neighbors.Neighbor.state)
}

// -------------------------------------------------------------------

// AccessPoints_AccessPoint_Radios_Radio_Neighbors_NeighborKey

// string bssid = 1 [(.yext.schemapath) = "/access-points/access-point/radios/radio/neighbors/neighbor/bssid"];
inline void AccessPoints_AccessPoint_Radios_Radio_Neighbors_NeighborKey::clear_bssid() {
  bssid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AccessPoints_AccessPoint_Radios_Radio_Neighbors_NeighborKey::bssid() const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.Neighbors.NeighborKey.bssid)
  return bssid_.GetNoArena();
}
inline void AccessPoints_AccessPoint_Radios_Radio_Neighbors_NeighborKey::set_bssid(const ::std::string& value) {
  
  bssid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.Neighbors.NeighborKey.bssid)
}
#if LANG_CXX11
inline void AccessPoints_AccessPoint_Radios_Radio_Neighbors_NeighborKey::set_bssid(::std::string&& value) {
  
  bssid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.Neighbors.NeighborKey.bssid)
}
#endif
inline void AccessPoints_AccessPoint_Radios_Radio_Neighbors_NeighborKey::set_bssid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  bssid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.Neighbors.NeighborKey.bssid)
}
inline void AccessPoints_AccessPoint_Radios_Radio_Neighbors_NeighborKey::set_bssid(const char* value, size_t size) {
  
  bssid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.Neighbors.NeighborKey.bssid)
}
inline ::std::string* AccessPoints_AccessPoint_Radios_Radio_Neighbors_NeighborKey::mutable_bssid() {
  
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.Neighbors.NeighborKey.bssid)
  return bssid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AccessPoints_AccessPoint_Radios_Radio_Neighbors_NeighborKey::release_bssid() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.Neighbors.NeighborKey.bssid)
  
  return bssid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AccessPoints_AccessPoint_Radios_Radio_Neighbors_NeighborKey::set_allocated_bssid(::std::string* bssid) {
  if (bssid != NULL) {
    
  } else {
    
  }
  bssid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bssid);
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.Neighbors.NeighborKey.bssid)
}

// .openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.Neighbors.Neighbor neighbor = 2;
inline bool AccessPoints_AccessPoint_Radios_Radio_Neighbors_NeighborKey::has_neighbor() const {
  return this != internal_default_instance() && neighbor_ != NULL;
}
inline void AccessPoints_AccessPoint_Radios_Radio_Neighbors_NeighborKey::clear_neighbor() {
  if (GetArenaNoVirtual() == NULL && neighbor_ != NULL) {
    delete neighbor_;
  }
  neighbor_ = NULL;
}
inline const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Radios_Radio_Neighbors_Neighbor& AccessPoints_AccessPoint_Radios_Radio_Neighbors_NeighborKey::neighbor() const {
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Radios_Radio_Neighbors_Neighbor* p = neighbor_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.Neighbors.NeighborKey.neighbor)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Radios_Radio_Neighbors_Neighbor*>(
      &::openconfig::openconfig_access_points::_AccessPoints_AccessPoint_Radios_Radio_Neighbors_Neighbor_default_instance_);
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Radios_Radio_Neighbors_Neighbor* AccessPoints_AccessPoint_Radios_Radio_Neighbors_NeighborKey::release_neighbor() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.Neighbors.NeighborKey.neighbor)
  
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Radios_Radio_Neighbors_Neighbor* temp = neighbor_;
  neighbor_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Radios_Radio_Neighbors_Neighbor* AccessPoints_AccessPoint_Radios_Radio_Neighbors_NeighborKey::mutable_neighbor() {
  
  if (neighbor_ == NULL) {
    neighbor_ = new ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Radios_Radio_Neighbors_Neighbor;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.Neighbors.NeighborKey.neighbor)
  return neighbor_;
}
inline void AccessPoints_AccessPoint_Radios_Radio_Neighbors_NeighborKey::set_allocated_neighbor(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Radios_Radio_Neighbors_Neighbor* neighbor) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete neighbor_;
  }
  if (neighbor) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      neighbor = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, neighbor, submessage_arena);
    }
    
  } else {
    
  }
  neighbor_ = neighbor;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.Neighbors.NeighborKey.neighbor)
}

// -------------------------------------------------------------------

// AccessPoints_AccessPoint_Radios_Radio_Neighbors

// repeated .openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.Neighbors.NeighborKey neighbor = 69564256 [(.yext.schemapath) = "/access-points/access-point/radios/radio/neighbors/neighbor"];
inline int AccessPoints_AccessPoint_Radios_Radio_Neighbors::neighbor_size() const {
  return neighbor_.size();
}
inline void AccessPoints_AccessPoint_Radios_Radio_Neighbors::clear_neighbor() {
  neighbor_.Clear();
}
inline const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Radios_Radio_Neighbors_NeighborKey& AccessPoints_AccessPoint_Radios_Radio_Neighbors::neighbor(int index) const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.Neighbors.neighbor)
  return neighbor_.Get(index);
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Radios_Radio_Neighbors_NeighborKey* AccessPoints_AccessPoint_Radios_Radio_Neighbors::mutable_neighbor(int index) {
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.Neighbors.neighbor)
  return neighbor_.Mutable(index);
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Radios_Radio_Neighbors_NeighborKey* AccessPoints_AccessPoint_Radios_Radio_Neighbors::add_neighbor() {
  // @@protoc_insertion_point(field_add:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.Neighbors.neighbor)
  return neighbor_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Radios_Radio_Neighbors_NeighborKey >*
AccessPoints_AccessPoint_Radios_Radio_Neighbors::mutable_neighbor() {
  // @@protoc_insertion_point(field_mutable_list:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.Neighbors.neighbor)
  return &neighbor_;
}
inline const ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Radios_Radio_Neighbors_NeighborKey >&
AccessPoints_AccessPoint_Radios_Radio_Neighbors::neighbor() const {
  // @@protoc_insertion_point(field_list:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.Neighbors.neighbor)
  return neighbor_;
}

// -------------------------------------------------------------------

// AccessPoints_AccessPoint_Radios_Radio_State_Counters

// .ywrapper.UintValue failed_fcs_frames = 471565761 [(.yext.schemapath) = "/access-points/access-point/radios/radio/state/counters/failed-fcs-frames"];
inline bool AccessPoints_AccessPoint_Radios_Radio_State_Counters::has_failed_fcs_frames() const {
  return this != internal_default_instance() && failed_fcs_frames_ != NULL;
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_Radios_Radio_State_Counters::failed_fcs_frames() const {
  const ::ywrapper::UintValue* p = failed_fcs_frames_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.State.Counters.failed_fcs_frames)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Radios_Radio_State_Counters::release_failed_fcs_frames() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.State.Counters.failed_fcs_frames)
  
  ::ywrapper::UintValue* temp = failed_fcs_frames_;
  failed_fcs_frames_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Radios_Radio_State_Counters::mutable_failed_fcs_frames() {
  
  if (failed_fcs_frames_ == NULL) {
    failed_fcs_frames_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.State.Counters.failed_fcs_frames)
  return failed_fcs_frames_;
}
inline void AccessPoints_AccessPoint_Radios_Radio_State_Counters::set_allocated_failed_fcs_frames(::ywrapper::UintValue* failed_fcs_frames) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(failed_fcs_frames_);
  }
  if (failed_fcs_frames) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      failed_fcs_frames = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, failed_fcs_frames, submessage_arena);
    }
    
  } else {
    
  }
  failed_fcs_frames_ = failed_fcs_frames;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.State.Counters.failed_fcs_frames)
}

// .ywrapper.IntValue noise_floor = 382544921 [(.yext.schemapath) = "/access-points/access-point/radios/radio/state/counters/noise-floor"];
inline bool AccessPoints_AccessPoint_Radios_Radio_State_Counters::has_noise_floor() const {
  return this != internal_default_instance() && noise_floor_ != NULL;
}
inline const ::ywrapper::IntValue& AccessPoints_AccessPoint_Radios_Radio_State_Counters::noise_floor() const {
  const ::ywrapper::IntValue* p = noise_floor_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.State.Counters.noise_floor)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::IntValue*>(
      &::ywrapper::_IntValue_default_instance_);
}
inline ::ywrapper::IntValue* AccessPoints_AccessPoint_Radios_Radio_State_Counters::release_noise_floor() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.State.Counters.noise_floor)
  
  ::ywrapper::IntValue* temp = noise_floor_;
  noise_floor_ = NULL;
  return temp;
}
inline ::ywrapper::IntValue* AccessPoints_AccessPoint_Radios_Radio_State_Counters::mutable_noise_floor() {
  
  if (noise_floor_ == NULL) {
    noise_floor_ = new ::ywrapper::IntValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.State.Counters.noise_floor)
  return noise_floor_;
}
inline void AccessPoints_AccessPoint_Radios_Radio_State_Counters::set_allocated_noise_floor(::ywrapper::IntValue* noise_floor) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(noise_floor_);
  }
  if (noise_floor) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      noise_floor = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, noise_floor, submessage_arena);
    }
    
  } else {
    
  }
  noise_floor_ = noise_floor;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.State.Counters.noise_floor)
}

// -------------------------------------------------------------------

// AccessPoints_AccessPoint_Radios_Radio_State

// repeated .ywrapper.UintValue allowed_channels = 262666109 [(.yext.schemapath) = "/access-points/access-point/radios/radio/state/allowed-channels"];
inline int AccessPoints_AccessPoint_Radios_Radio_State::allowed_channels_size() const {
  return allowed_channels_.size();
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_Radios_Radio_State::allowed_channels(int index) const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.State.allowed_channels)
  return allowed_channels_.Get(index);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Radios_Radio_State::mutable_allowed_channels(int index) {
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.State.allowed_channels)
  return allowed_channels_.Mutable(index);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Radios_Radio_State::add_allowed_channels() {
  // @@protoc_insertion_point(field_add:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.State.allowed_channels)
  return allowed_channels_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::ywrapper::UintValue >*
AccessPoints_AccessPoint_Radios_Radio_State::mutable_allowed_channels() {
  // @@protoc_insertion_point(field_mutable_list:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.State.allowed_channels)
  return &allowed_channels_;
}
inline const ::google::protobuf::RepeatedPtrField< ::ywrapper::UintValue >&
AccessPoints_AccessPoint_Radios_Radio_State::allowed_channels() const {
  // @@protoc_insertion_point(field_list:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.State.allowed_channels)
  return allowed_channels_;
}

// .ywrapper.IntValue antenna_gain = 57872087 [(.yext.schemapath) = "/access-points/access-point/radios/radio/state/antenna-gain"];
inline bool AccessPoints_AccessPoint_Radios_Radio_State::has_antenna_gain() const {
  return this != internal_default_instance() && antenna_gain_ != NULL;
}
inline const ::ywrapper::IntValue& AccessPoints_AccessPoint_Radios_Radio_State::antenna_gain() const {
  const ::ywrapper::IntValue* p = antenna_gain_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.State.antenna_gain)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::IntValue*>(
      &::ywrapper::_IntValue_default_instance_);
}
inline ::ywrapper::IntValue* AccessPoints_AccessPoint_Radios_Radio_State::release_antenna_gain() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.State.antenna_gain)
  
  ::ywrapper::IntValue* temp = antenna_gain_;
  antenna_gain_ = NULL;
  return temp;
}
inline ::ywrapper::IntValue* AccessPoints_AccessPoint_Radios_Radio_State::mutable_antenna_gain() {
  
  if (antenna_gain_ == NULL) {
    antenna_gain_ = new ::ywrapper::IntValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.State.antenna_gain)
  return antenna_gain_;
}
inline void AccessPoints_AccessPoint_Radios_Radio_State::set_allocated_antenna_gain(::ywrapper::IntValue* antenna_gain) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(antenna_gain_);
  }
  if (antenna_gain) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      antenna_gain = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, antenna_gain, submessage_arena);
    }
    
  } else {
    
  }
  antenna_gain_ = antenna_gain;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.State.antenna_gain)
}

// .ywrapper.StringValue base_radio_mac = 260970223 [(.yext.schemapath) = "/access-points/access-point/radios/radio/state/base-radio-mac"];
inline bool AccessPoints_AccessPoint_Radios_Radio_State::has_base_radio_mac() const {
  return this != internal_default_instance() && base_radio_mac_ != NULL;
}
inline const ::ywrapper::StringValue& AccessPoints_AccessPoint_Radios_Radio_State::base_radio_mac() const {
  const ::ywrapper::StringValue* p = base_radio_mac_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.State.base_radio_mac)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::StringValue*>(
      &::ywrapper::_StringValue_default_instance_);
}
inline ::ywrapper::StringValue* AccessPoints_AccessPoint_Radios_Radio_State::release_base_radio_mac() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.State.base_radio_mac)
  
  ::ywrapper::StringValue* temp = base_radio_mac_;
  base_radio_mac_ = NULL;
  return temp;
}
inline ::ywrapper::StringValue* AccessPoints_AccessPoint_Radios_Radio_State::mutable_base_radio_mac() {
  
  if (base_radio_mac_ == NULL) {
    base_radio_mac_ = new ::ywrapper::StringValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.State.base_radio_mac)
  return base_radio_mac_;
}
inline void AccessPoints_AccessPoint_Radios_Radio_State::set_allocated_base_radio_mac(::ywrapper::StringValue* base_radio_mac) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(base_radio_mac_);
  }
  if (base_radio_mac) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      base_radio_mac = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, base_radio_mac, submessage_arena);
    }
    
  } else {
    
  }
  base_radio_mac_ = base_radio_mac;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.State.base_radio_mac)
}

// .ywrapper.UintValue channel = 248347633 [(.yext.schemapath) = "/access-points/access-point/radios/radio/state/channel"];
inline bool AccessPoints_AccessPoint_Radios_Radio_State::has_channel() const {
  return this != internal_default_instance() && channel_ != NULL;
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_Radios_Radio_State::channel() const {
  const ::ywrapper::UintValue* p = channel_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.State.channel)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Radios_Radio_State::release_channel() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.State.channel)
  
  ::ywrapper::UintValue* temp = channel_;
  channel_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Radios_Radio_State::mutable_channel() {
  
  if (channel_ == NULL) {
    channel_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.State.channel)
  return channel_;
}
inline void AccessPoints_AccessPoint_Radios_Radio_State::set_allocated_channel(::ywrapper::UintValue* channel) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(channel_);
  }
  if (channel) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      channel = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, channel, submessage_arena);
    }
    
  } else {
    
  }
  channel_ = channel;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.State.channel)
}

// .openconfig.enums.OpenconfigWifiTypesCHANGEREASONTYPE channel_change_reason = 457538455 [(.yext.schemapath) = "/access-points/access-point/radios/radio/state/channel-change-reason"];
inline void AccessPoints_AccessPoint_Radios_Radio_State::clear_channel_change_reason() {
  channel_change_reason_ = 0;
}
inline ::openconfig::enums::OpenconfigWifiTypesCHANGEREASONTYPE AccessPoints_AccessPoint_Radios_Radio_State::channel_change_reason() const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.State.channel_change_reason)
  return static_cast< ::openconfig::enums::OpenconfigWifiTypesCHANGEREASONTYPE >(channel_change_reason_);
}
inline void AccessPoints_AccessPoint_Radios_Radio_State::set_channel_change_reason(::openconfig::enums::OpenconfigWifiTypesCHANGEREASONTYPE value) {
  
  channel_change_reason_ = value;
  // @@protoc_insertion_point(field_set:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.State.channel_change_reason)
}

// .ywrapper.UintValue channel_width = 145442034 [(.yext.schemapath) = "/access-points/access-point/radios/radio/state/channel-width"];
inline bool AccessPoints_AccessPoint_Radios_Radio_State::has_channel_width() const {
  return this != internal_default_instance() && channel_width_ != NULL;
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_Radios_Radio_State::channel_width() const {
  const ::ywrapper::UintValue* p = channel_width_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.State.channel_width)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Radios_Radio_State::release_channel_width() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.State.channel_width)
  
  ::ywrapper::UintValue* temp = channel_width_;
  channel_width_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Radios_Radio_State::mutable_channel_width() {
  
  if (channel_width_ == NULL) {
    channel_width_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.State.channel_width)
  return channel_width_;
}
inline void AccessPoints_AccessPoint_Radios_Radio_State::set_allocated_channel_width(::ywrapper::UintValue* channel_width) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(channel_width_);
  }
  if (channel_width) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      channel_width = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, channel_width, submessage_arena);
    }
    
  } else {
    
  }
  channel_width_ = channel_width;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.State.channel_width)
}

// .openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.State.Counters counters = 85857871 [(.yext.schemapath) = "/access-points/access-point/radios/radio/state/counters"];
inline bool AccessPoints_AccessPoint_Radios_Radio_State::has_counters() const {
  return this != internal_default_instance() && counters_ != NULL;
}
inline void AccessPoints_AccessPoint_Radios_Radio_State::clear_counters() {
  if (GetArenaNoVirtual() == NULL && counters_ != NULL) {
    delete counters_;
  }
  counters_ = NULL;
}
inline const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Radios_Radio_State_Counters& AccessPoints_AccessPoint_Radios_Radio_State::counters() const {
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Radios_Radio_State_Counters* p = counters_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.State.counters)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Radios_Radio_State_Counters*>(
      &::openconfig::openconfig_access_points::_AccessPoints_AccessPoint_Radios_Radio_State_Counters_default_instance_);
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Radios_Radio_State_Counters* AccessPoints_AccessPoint_Radios_Radio_State::release_counters() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.State.counters)
  
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Radios_Radio_State_Counters* temp = counters_;
  counters_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Radios_Radio_State_Counters* AccessPoints_AccessPoint_Radios_Radio_State::mutable_counters() {
  
  if (counters_ == NULL) {
    counters_ = new ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Radios_Radio_State_Counters;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.State.counters)
  return counters_;
}
inline void AccessPoints_AccessPoint_Radios_Radio_State::set_allocated_counters(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Radios_Radio_State_Counters* counters) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete counters_;
  }
  if (counters) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      counters = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, counters, submessage_arena);
    }
    
  } else {
    
  }
  counters_ = counters;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.State.counters)
}

// .ywrapper.BoolValue dca = 220593508 [(.yext.schemapath) = "/access-points/access-point/radios/radio/state/dca"];
inline bool AccessPoints_AccessPoint_Radios_Radio_State::has_dca() const {
  return this != internal_default_instance() && dca_ != NULL;
}
inline const ::ywrapper::BoolValue& AccessPoints_AccessPoint_Radios_Radio_State::dca() const {
  const ::ywrapper::BoolValue* p = dca_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.State.dca)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::BoolValue*>(
      &::ywrapper::_BoolValue_default_instance_);
}
inline ::ywrapper::BoolValue* AccessPoints_AccessPoint_Radios_Radio_State::release_dca() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.State.dca)
  
  ::ywrapper::BoolValue* temp = dca_;
  dca_ = NULL;
  return temp;
}
inline ::ywrapper::BoolValue* AccessPoints_AccessPoint_Radios_Radio_State::mutable_dca() {
  
  if (dca_ == NULL) {
    dca_ = new ::ywrapper::BoolValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.State.dca)
  return dca_;
}
inline void AccessPoints_AccessPoint_Radios_Radio_State::set_allocated_dca(::ywrapper::BoolValue* dca) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(dca_);
  }
  if (dca) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      dca = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, dca, submessage_arena);
    }
    
  } else {
    
  }
  dca_ = dca;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.State.dca)
}

// .ywrapper.UintValue dfs_hit_time = 217001949 [(.yext.schemapath) = "/access-points/access-point/radios/radio/state/dfs-hit-time"];
inline bool AccessPoints_AccessPoint_Radios_Radio_State::has_dfs_hit_time() const {
  return this != internal_default_instance() && dfs_hit_time_ != NULL;
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_Radios_Radio_State::dfs_hit_time() const {
  const ::ywrapper::UintValue* p = dfs_hit_time_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.State.dfs_hit_time)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Radios_Radio_State::release_dfs_hit_time() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.State.dfs_hit_time)
  
  ::ywrapper::UintValue* temp = dfs_hit_time_;
  dfs_hit_time_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Radios_Radio_State::mutable_dfs_hit_time() {
  
  if (dfs_hit_time_ == NULL) {
    dfs_hit_time_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.State.dfs_hit_time)
  return dfs_hit_time_;
}
inline void AccessPoints_AccessPoint_Radios_Radio_State::set_allocated_dfs_hit_time(::ywrapper::UintValue* dfs_hit_time) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(dfs_hit_time_);
  }
  if (dfs_hit_time) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      dfs_hit_time = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, dfs_hit_time, submessage_arena);
    }
    
  } else {
    
  }
  dfs_hit_time_ = dfs_hit_time;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.State.dfs_hit_time)
}

// .ywrapper.BoolValue dtp = 371592000 [(.yext.schemapath) = "/access-points/access-point/radios/radio/state/dtp"];
inline bool AccessPoints_AccessPoint_Radios_Radio_State::has_dtp() const {
  return this != internal_default_instance() && dtp_ != NULL;
}
inline const ::ywrapper::BoolValue& AccessPoints_AccessPoint_Radios_Radio_State::dtp() const {
  const ::ywrapper::BoolValue* p = dtp_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.State.dtp)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::BoolValue*>(
      &::ywrapper::_BoolValue_default_instance_);
}
inline ::ywrapper::BoolValue* AccessPoints_AccessPoint_Radios_Radio_State::release_dtp() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.State.dtp)
  
  ::ywrapper::BoolValue* temp = dtp_;
  dtp_ = NULL;
  return temp;
}
inline ::ywrapper::BoolValue* AccessPoints_AccessPoint_Radios_Radio_State::mutable_dtp() {
  
  if (dtp_ == NULL) {
    dtp_ = new ::ywrapper::BoolValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.State.dtp)
  return dtp_;
}
inline void AccessPoints_AccessPoint_Radios_Radio_State::set_allocated_dtp(::ywrapper::BoolValue* dtp) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(dtp_);
  }
  if (dtp) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      dtp = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, dtp, submessage_arena);
    }
    
  } else {
    
  }
  dtp_ = dtp;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.State.dtp)
}

// .ywrapper.UintValue dtp_max = 114225861 [(.yext.schemapath) = "/access-points/access-point/radios/radio/state/dtp-max"];
inline bool AccessPoints_AccessPoint_Radios_Radio_State::has_dtp_max() const {
  return this != internal_default_instance() && dtp_max_ != NULL;
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_Radios_Radio_State::dtp_max() const {
  const ::ywrapper::UintValue* p = dtp_max_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.State.dtp_max)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Radios_Radio_State::release_dtp_max() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.State.dtp_max)
  
  ::ywrapper::UintValue* temp = dtp_max_;
  dtp_max_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Radios_Radio_State::mutable_dtp_max() {
  
  if (dtp_max_ == NULL) {
    dtp_max_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.State.dtp_max)
  return dtp_max_;
}
inline void AccessPoints_AccessPoint_Radios_Radio_State::set_allocated_dtp_max(::ywrapper::UintValue* dtp_max) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(dtp_max_);
  }
  if (dtp_max) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      dtp_max = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, dtp_max, submessage_arena);
    }
    
  } else {
    
  }
  dtp_max_ = dtp_max;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.State.dtp_max)
}

// .ywrapper.UintValue dtp_min = 516875851 [(.yext.schemapath) = "/access-points/access-point/radios/radio/state/dtp-min"];
inline bool AccessPoints_AccessPoint_Radios_Radio_State::has_dtp_min() const {
  return this != internal_default_instance() && dtp_min_ != NULL;
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_Radios_Radio_State::dtp_min() const {
  const ::ywrapper::UintValue* p = dtp_min_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.State.dtp_min)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Radios_Radio_State::release_dtp_min() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.State.dtp_min)
  
  ::ywrapper::UintValue* temp = dtp_min_;
  dtp_min_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Radios_Radio_State::mutable_dtp_min() {
  
  if (dtp_min_ == NULL) {
    dtp_min_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.State.dtp_min)
  return dtp_min_;
}
inline void AccessPoints_AccessPoint_Radios_Radio_State::set_allocated_dtp_min(::ywrapper::UintValue* dtp_min) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(dtp_min_);
  }
  if (dtp_min) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      dtp_min = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, dtp_min, submessage_arena);
    }
    
  } else {
    
  }
  dtp_min_ = dtp_min;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.State.dtp_min)
}

// .ywrapper.BoolValue enabled = 129422531 [(.yext.schemapath) = "/access-points/access-point/radios/radio/state/enabled"];
inline bool AccessPoints_AccessPoint_Radios_Radio_State::has_enabled() const {
  return this != internal_default_instance() && enabled_ != NULL;
}
inline const ::ywrapper::BoolValue& AccessPoints_AccessPoint_Radios_Radio_State::enabled() const {
  const ::ywrapper::BoolValue* p = enabled_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.State.enabled)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::BoolValue*>(
      &::ywrapper::_BoolValue_default_instance_);
}
inline ::ywrapper::BoolValue* AccessPoints_AccessPoint_Radios_Radio_State::release_enabled() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.State.enabled)
  
  ::ywrapper::BoolValue* temp = enabled_;
  enabled_ = NULL;
  return temp;
}
inline ::ywrapper::BoolValue* AccessPoints_AccessPoint_Radios_Radio_State::mutable_enabled() {
  
  if (enabled_ == NULL) {
    enabled_ = new ::ywrapper::BoolValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.State.enabled)
  return enabled_;
}
inline void AccessPoints_AccessPoint_Radios_Radio_State::set_allocated_enabled(::ywrapper::BoolValue* enabled) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(enabled_);
  }
  if (enabled) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      enabled = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, enabled, submessage_arena);
    }
    
  } else {
    
  }
  enabled_ = enabled;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.State.enabled)
}

// .ywrapper.UintValue id = 440497527 [(.yext.schemapath) = "/access-points/access-point/radios/radio/state/id"];
inline bool AccessPoints_AccessPoint_Radios_Radio_State::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_Radios_Radio_State::id() const {
  const ::ywrapper::UintValue* p = id_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.State.id)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Radios_Radio_State::release_id() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.State.id)
  
  ::ywrapper::UintValue* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Radios_Radio_State::mutable_id() {
  
  if (id_ == NULL) {
    id_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.State.id)
  return id_;
}
inline void AccessPoints_AccessPoint_Radios_Radio_State::set_allocated_id(::ywrapper::UintValue* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.State.id)
}

// .openconfig.enums.OpenconfigWifiTypesOPERATINGFREQUENCY operating_frequency = 383131064 [(.yext.schemapath) = "/access-points/access-point/radios/radio/state/operating-frequency"];
inline void AccessPoints_AccessPoint_Radios_Radio_State::clear_operating_frequency() {
  operating_frequency_ = 0;
}
inline ::openconfig::enums::OpenconfigWifiTypesOPERATINGFREQUENCY AccessPoints_AccessPoint_Radios_Radio_State::operating_frequency() const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.State.operating_frequency)
  return static_cast< ::openconfig::enums::OpenconfigWifiTypesOPERATINGFREQUENCY >(operating_frequency_);
}
inline void AccessPoints_AccessPoint_Radios_Radio_State::set_operating_frequency(::openconfig::enums::OpenconfigWifiTypesOPERATINGFREQUENCY value) {
  
  operating_frequency_ = value;
  // @@protoc_insertion_point(field_set:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.State.operating_frequency)
}

// .ywrapper.UintValue rx_dot11_channel_utilization = 292487107 [(.yext.schemapath) = "/access-points/access-point/radios/radio/state/rx-dot11-channel-utilization"];
inline bool AccessPoints_AccessPoint_Radios_Radio_State::has_rx_dot11_channel_utilization() const {
  return this != internal_default_instance() && rx_dot11_channel_utilization_ != NULL;
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_Radios_Radio_State::rx_dot11_channel_utilization() const {
  const ::ywrapper::UintValue* p = rx_dot11_channel_utilization_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.State.rx_dot11_channel_utilization)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Radios_Radio_State::release_rx_dot11_channel_utilization() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.State.rx_dot11_channel_utilization)
  
  ::ywrapper::UintValue* temp = rx_dot11_channel_utilization_;
  rx_dot11_channel_utilization_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Radios_Radio_State::mutable_rx_dot11_channel_utilization() {
  
  if (rx_dot11_channel_utilization_ == NULL) {
    rx_dot11_channel_utilization_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.State.rx_dot11_channel_utilization)
  return rx_dot11_channel_utilization_;
}
inline void AccessPoints_AccessPoint_Radios_Radio_State::set_allocated_rx_dot11_channel_utilization(::ywrapper::UintValue* rx_dot11_channel_utilization) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(rx_dot11_channel_utilization_);
  }
  if (rx_dot11_channel_utilization) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      rx_dot11_channel_utilization = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, rx_dot11_channel_utilization, submessage_arena);
    }
    
  } else {
    
  }
  rx_dot11_channel_utilization_ = rx_dot11_channel_utilization;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.State.rx_dot11_channel_utilization)
}

// .ywrapper.UintValue rx_noise_channel_utilization = 169818606 [(.yext.schemapath) = "/access-points/access-point/radios/radio/state/rx-noise-channel-utilization"];
inline bool AccessPoints_AccessPoint_Radios_Radio_State::has_rx_noise_channel_utilization() const {
  return this != internal_default_instance() && rx_noise_channel_utilization_ != NULL;
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_Radios_Radio_State::rx_noise_channel_utilization() const {
  const ::ywrapper::UintValue* p = rx_noise_channel_utilization_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.State.rx_noise_channel_utilization)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Radios_Radio_State::release_rx_noise_channel_utilization() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.State.rx_noise_channel_utilization)
  
  ::ywrapper::UintValue* temp = rx_noise_channel_utilization_;
  rx_noise_channel_utilization_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Radios_Radio_State::mutable_rx_noise_channel_utilization() {
  
  if (rx_noise_channel_utilization_ == NULL) {
    rx_noise_channel_utilization_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.State.rx_noise_channel_utilization)
  return rx_noise_channel_utilization_;
}
inline void AccessPoints_AccessPoint_Radios_Radio_State::set_allocated_rx_noise_channel_utilization(::ywrapper::UintValue* rx_noise_channel_utilization) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(rx_noise_channel_utilization_);
  }
  if (rx_noise_channel_utilization) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      rx_noise_channel_utilization = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, rx_noise_channel_utilization, submessage_arena);
    }
    
  } else {
    
  }
  rx_noise_channel_utilization_ = rx_noise_channel_utilization;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.State.rx_noise_channel_utilization)
}

// .ywrapper.BoolValue scanning = 140421665 [(.yext.schemapath) = "/access-points/access-point/radios/radio/state/scanning"];
inline bool AccessPoints_AccessPoint_Radios_Radio_State::has_scanning() const {
  return this != internal_default_instance() && scanning_ != NULL;
}
inline const ::ywrapper::BoolValue& AccessPoints_AccessPoint_Radios_Radio_State::scanning() const {
  const ::ywrapper::BoolValue* p = scanning_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.State.scanning)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::BoolValue*>(
      &::ywrapper::_BoolValue_default_instance_);
}
inline ::ywrapper::BoolValue* AccessPoints_AccessPoint_Radios_Radio_State::release_scanning() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.State.scanning)
  
  ::ywrapper::BoolValue* temp = scanning_;
  scanning_ = NULL;
  return temp;
}
inline ::ywrapper::BoolValue* AccessPoints_AccessPoint_Radios_Radio_State::mutable_scanning() {
  
  if (scanning_ == NULL) {
    scanning_ = new ::ywrapper::BoolValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.State.scanning)
  return scanning_;
}
inline void AccessPoints_AccessPoint_Radios_Radio_State::set_allocated_scanning(::ywrapper::BoolValue* scanning) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(scanning_);
  }
  if (scanning) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      scanning = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, scanning, submessage_arena);
    }
    
  } else {
    
  }
  scanning_ = scanning;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.State.scanning)
}

// .ywrapper.UintValue scanning_defer_clients = 144804173 [(.yext.schemapath) = "/access-points/access-point/radios/radio/state/scanning-defer-clients"];
inline bool AccessPoints_AccessPoint_Radios_Radio_State::has_scanning_defer_clients() const {
  return this != internal_default_instance() && scanning_defer_clients_ != NULL;
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_Radios_Radio_State::scanning_defer_clients() const {
  const ::ywrapper::UintValue* p = scanning_defer_clients_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.State.scanning_defer_clients)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Radios_Radio_State::release_scanning_defer_clients() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.State.scanning_defer_clients)
  
  ::ywrapper::UintValue* temp = scanning_defer_clients_;
  scanning_defer_clients_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Radios_Radio_State::mutable_scanning_defer_clients() {
  
  if (scanning_defer_clients_ == NULL) {
    scanning_defer_clients_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.State.scanning_defer_clients)
  return scanning_defer_clients_;
}
inline void AccessPoints_AccessPoint_Radios_Radio_State::set_allocated_scanning_defer_clients(::ywrapper::UintValue* scanning_defer_clients) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(scanning_defer_clients_);
  }
  if (scanning_defer_clients) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      scanning_defer_clients = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, scanning_defer_clients, submessage_arena);
    }
    
  } else {
    
  }
  scanning_defer_clients_ = scanning_defer_clients;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.State.scanning_defer_clients)
}

// .ywrapper.BoolValue scanning_defer_traffic = 212283074 [(.yext.schemapath) = "/access-points/access-point/radios/radio/state/scanning-defer-traffic"];
inline bool AccessPoints_AccessPoint_Radios_Radio_State::has_scanning_defer_traffic() const {
  return this != internal_default_instance() && scanning_defer_traffic_ != NULL;
}
inline const ::ywrapper::BoolValue& AccessPoints_AccessPoint_Radios_Radio_State::scanning_defer_traffic() const {
  const ::ywrapper::BoolValue* p = scanning_defer_traffic_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.State.scanning_defer_traffic)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::BoolValue*>(
      &::ywrapper::_BoolValue_default_instance_);
}
inline ::ywrapper::BoolValue* AccessPoints_AccessPoint_Radios_Radio_State::release_scanning_defer_traffic() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.State.scanning_defer_traffic)
  
  ::ywrapper::BoolValue* temp = scanning_defer_traffic_;
  scanning_defer_traffic_ = NULL;
  return temp;
}
inline ::ywrapper::BoolValue* AccessPoints_AccessPoint_Radios_Radio_State::mutable_scanning_defer_traffic() {
  
  if (scanning_defer_traffic_ == NULL) {
    scanning_defer_traffic_ = new ::ywrapper::BoolValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.State.scanning_defer_traffic)
  return scanning_defer_traffic_;
}
inline void AccessPoints_AccessPoint_Radios_Radio_State::set_allocated_scanning_defer_traffic(::ywrapper::BoolValue* scanning_defer_traffic) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(scanning_defer_traffic_);
  }
  if (scanning_defer_traffic) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      scanning_defer_traffic = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, scanning_defer_traffic, submessage_arena);
    }
    
  } else {
    
  }
  scanning_defer_traffic_ = scanning_defer_traffic;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.State.scanning_defer_traffic)
}

// .ywrapper.UintValue scanning_dwell_time = 271355480 [(.yext.schemapath) = "/access-points/access-point/radios/radio/state/scanning-dwell-time"];
inline bool AccessPoints_AccessPoint_Radios_Radio_State::has_scanning_dwell_time() const {
  return this != internal_default_instance() && scanning_dwell_time_ != NULL;
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_Radios_Radio_State::scanning_dwell_time() const {
  const ::ywrapper::UintValue* p = scanning_dwell_time_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.State.scanning_dwell_time)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Radios_Radio_State::release_scanning_dwell_time() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.State.scanning_dwell_time)
  
  ::ywrapper::UintValue* temp = scanning_dwell_time_;
  scanning_dwell_time_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Radios_Radio_State::mutable_scanning_dwell_time() {
  
  if (scanning_dwell_time_ == NULL) {
    scanning_dwell_time_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.State.scanning_dwell_time)
  return scanning_dwell_time_;
}
inline void AccessPoints_AccessPoint_Radios_Radio_State::set_allocated_scanning_dwell_time(::ywrapper::UintValue* scanning_dwell_time) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(scanning_dwell_time_);
  }
  if (scanning_dwell_time) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      scanning_dwell_time = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, scanning_dwell_time, submessage_arena);
    }
    
  } else {
    
  }
  scanning_dwell_time_ = scanning_dwell_time;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.State.scanning_dwell_time)
}

// .ywrapper.UintValue scanning_interval = 224778997 [(.yext.schemapath) = "/access-points/access-point/radios/radio/state/scanning-interval"];
inline bool AccessPoints_AccessPoint_Radios_Radio_State::has_scanning_interval() const {
  return this != internal_default_instance() && scanning_interval_ != NULL;
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_Radios_Radio_State::scanning_interval() const {
  const ::ywrapper::UintValue* p = scanning_interval_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.State.scanning_interval)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Radios_Radio_State::release_scanning_interval() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.State.scanning_interval)
  
  ::ywrapper::UintValue* temp = scanning_interval_;
  scanning_interval_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Radios_Radio_State::mutable_scanning_interval() {
  
  if (scanning_interval_ == NULL) {
    scanning_interval_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.State.scanning_interval)
  return scanning_interval_;
}
inline void AccessPoints_AccessPoint_Radios_Radio_State::set_allocated_scanning_interval(::ywrapper::UintValue* scanning_interval) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(scanning_interval_);
  }
  if (scanning_interval) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      scanning_interval = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, scanning_interval, submessage_arena);
    }
    
  } else {
    
  }
  scanning_interval_ = scanning_interval;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.State.scanning_interval)
}

// .ywrapper.UintValue total_channel_utilization = 304999823 [(.yext.schemapath) = "/access-points/access-point/radios/radio/state/total-channel-utilization"];
inline bool AccessPoints_AccessPoint_Radios_Radio_State::has_total_channel_utilization() const {
  return this != internal_default_instance() && total_channel_utilization_ != NULL;
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_Radios_Radio_State::total_channel_utilization() const {
  const ::ywrapper::UintValue* p = total_channel_utilization_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.State.total_channel_utilization)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Radios_Radio_State::release_total_channel_utilization() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.State.total_channel_utilization)
  
  ::ywrapper::UintValue* temp = total_channel_utilization_;
  total_channel_utilization_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Radios_Radio_State::mutable_total_channel_utilization() {
  
  if (total_channel_utilization_ == NULL) {
    total_channel_utilization_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.State.total_channel_utilization)
  return total_channel_utilization_;
}
inline void AccessPoints_AccessPoint_Radios_Radio_State::set_allocated_total_channel_utilization(::ywrapper::UintValue* total_channel_utilization) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(total_channel_utilization_);
  }
  if (total_channel_utilization) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      total_channel_utilization = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, total_channel_utilization, submessage_arena);
    }
    
  } else {
    
  }
  total_channel_utilization_ = total_channel_utilization;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.State.total_channel_utilization)
}

// .ywrapper.UintValue transmit_power = 109974624 [(.yext.schemapath) = "/access-points/access-point/radios/radio/state/transmit-power"];
inline bool AccessPoints_AccessPoint_Radios_Radio_State::has_transmit_power() const {
  return this != internal_default_instance() && transmit_power_ != NULL;
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_Radios_Radio_State::transmit_power() const {
  const ::ywrapper::UintValue* p = transmit_power_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.State.transmit_power)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Radios_Radio_State::release_transmit_power() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.State.transmit_power)
  
  ::ywrapper::UintValue* temp = transmit_power_;
  transmit_power_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Radios_Radio_State::mutable_transmit_power() {
  
  if (transmit_power_ == NULL) {
    transmit_power_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.State.transmit_power)
  return transmit_power_;
}
inline void AccessPoints_AccessPoint_Radios_Radio_State::set_allocated_transmit_power(::ywrapper::UintValue* transmit_power) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(transmit_power_);
  }
  if (transmit_power) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      transmit_power = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, transmit_power, submessage_arena);
    }
    
  } else {
    
  }
  transmit_power_ = transmit_power;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.State.transmit_power)
}

// .ywrapper.UintValue tx_dot11_channel_utilization = 200526165 [(.yext.schemapath) = "/access-points/access-point/radios/radio/state/tx-dot11-channel-utilization"];
inline bool AccessPoints_AccessPoint_Radios_Radio_State::has_tx_dot11_channel_utilization() const {
  return this != internal_default_instance() && tx_dot11_channel_utilization_ != NULL;
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_Radios_Radio_State::tx_dot11_channel_utilization() const {
  const ::ywrapper::UintValue* p = tx_dot11_channel_utilization_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.State.tx_dot11_channel_utilization)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Radios_Radio_State::release_tx_dot11_channel_utilization() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.State.tx_dot11_channel_utilization)
  
  ::ywrapper::UintValue* temp = tx_dot11_channel_utilization_;
  tx_dot11_channel_utilization_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Radios_Radio_State::mutable_tx_dot11_channel_utilization() {
  
  if (tx_dot11_channel_utilization_ == NULL) {
    tx_dot11_channel_utilization_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.State.tx_dot11_channel_utilization)
  return tx_dot11_channel_utilization_;
}
inline void AccessPoints_AccessPoint_Radios_Radio_State::set_allocated_tx_dot11_channel_utilization(::ywrapper::UintValue* tx_dot11_channel_utilization) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(tx_dot11_channel_utilization_);
  }
  if (tx_dot11_channel_utilization) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      tx_dot11_channel_utilization = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, tx_dot11_channel_utilization, submessage_arena);
    }
    
  } else {
    
  }
  tx_dot11_channel_utilization_ = tx_dot11_channel_utilization;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.State.tx_dot11_channel_utilization)
}

// -------------------------------------------------------------------

// AccessPoints_AccessPoint_Radios_Radio

// .openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.Config config = 340450580 [(.yext.schemapath) = "/access-points/access-point/radios/radio/config"];
inline bool AccessPoints_AccessPoint_Radios_Radio::has_config() const {
  return this != internal_default_instance() && config_ != NULL;
}
inline void AccessPoints_AccessPoint_Radios_Radio::clear_config() {
  if (GetArenaNoVirtual() == NULL && config_ != NULL) {
    delete config_;
  }
  config_ = NULL;
}
inline const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Radios_Radio_Config& AccessPoints_AccessPoint_Radios_Radio::config() const {
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Radios_Radio_Config* p = config_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.config)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Radios_Radio_Config*>(
      &::openconfig::openconfig_access_points::_AccessPoints_AccessPoint_Radios_Radio_Config_default_instance_);
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Radios_Radio_Config* AccessPoints_AccessPoint_Radios_Radio::release_config() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.config)
  
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Radios_Radio_Config* temp = config_;
  config_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Radios_Radio_Config* AccessPoints_AccessPoint_Radios_Radio::mutable_config() {
  
  if (config_ == NULL) {
    config_ = new ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Radios_Radio_Config;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.config)
  return config_;
}
inline void AccessPoints_AccessPoint_Radios_Radio::set_allocated_config(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Radios_Radio_Config* config) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete config_;
  }
  if (config) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      config = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, config, submessage_arena);
    }
    
  } else {
    
  }
  config_ = config;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.config)
}

// .openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.Neighbors neighbors = 292366027 [(.yext.schemapath) = "/access-points/access-point/radios/radio/neighbors"];
inline bool AccessPoints_AccessPoint_Radios_Radio::has_neighbors() const {
  return this != internal_default_instance() && neighbors_ != NULL;
}
inline void AccessPoints_AccessPoint_Radios_Radio::clear_neighbors() {
  if (GetArenaNoVirtual() == NULL && neighbors_ != NULL) {
    delete neighbors_;
  }
  neighbors_ = NULL;
}
inline const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Radios_Radio_Neighbors& AccessPoints_AccessPoint_Radios_Radio::neighbors() const {
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Radios_Radio_Neighbors* p = neighbors_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.neighbors)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Radios_Radio_Neighbors*>(
      &::openconfig::openconfig_access_points::_AccessPoints_AccessPoint_Radios_Radio_Neighbors_default_instance_);
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Radios_Radio_Neighbors* AccessPoints_AccessPoint_Radios_Radio::release_neighbors() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.neighbors)
  
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Radios_Radio_Neighbors* temp = neighbors_;
  neighbors_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Radios_Radio_Neighbors* AccessPoints_AccessPoint_Radios_Radio::mutable_neighbors() {
  
  if (neighbors_ == NULL) {
    neighbors_ = new ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Radios_Radio_Neighbors;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.neighbors)
  return neighbors_;
}
inline void AccessPoints_AccessPoint_Radios_Radio::set_allocated_neighbors(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Radios_Radio_Neighbors* neighbors) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete neighbors_;
  }
  if (neighbors) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      neighbors = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, neighbors, submessage_arena);
    }
    
  } else {
    
  }
  neighbors_ = neighbors;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.neighbors)
}

// .openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.State state = 381530797 [(.yext.schemapath) = "/access-points/access-point/radios/radio/state"];
inline bool AccessPoints_AccessPoint_Radios_Radio::has_state() const {
  return this != internal_default_instance() && state_ != NULL;
}
inline void AccessPoints_AccessPoint_Radios_Radio::clear_state() {
  if (GetArenaNoVirtual() == NULL && state_ != NULL) {
    delete state_;
  }
  state_ = NULL;
}
inline const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Radios_Radio_State& AccessPoints_AccessPoint_Radios_Radio::state() const {
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Radios_Radio_State* p = state_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.state)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Radios_Radio_State*>(
      &::openconfig::openconfig_access_points::_AccessPoints_AccessPoint_Radios_Radio_State_default_instance_);
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Radios_Radio_State* AccessPoints_AccessPoint_Radios_Radio::release_state() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.state)
  
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Radios_Radio_State* temp = state_;
  state_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Radios_Radio_State* AccessPoints_AccessPoint_Radios_Radio::mutable_state() {
  
  if (state_ == NULL) {
    state_ = new ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Radios_Radio_State;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.state)
  return state_;
}
inline void AccessPoints_AccessPoint_Radios_Radio::set_allocated_state(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Radios_Radio_State* state) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete state_;
  }
  if (state) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      state = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, state, submessage_arena);
    }
    
  } else {
    
  }
  state_ = state;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio.state)
}

// -------------------------------------------------------------------

// AccessPoints_AccessPoint_Radios_RadioKey

// uint64 id = 1 [(.yext.schemapath) = "/access-points/access-point/radios/radio/id"];
inline void AccessPoints_AccessPoint_Radios_RadioKey::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 AccessPoints_AccessPoint_Radios_RadioKey::id() const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.RadioKey.id)
  return id_;
}
inline void AccessPoints_AccessPoint_Radios_RadioKey::set_id(::google::protobuf::uint64 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.RadioKey.id)
}

// .openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.Radio radio = 2;
inline bool AccessPoints_AccessPoint_Radios_RadioKey::has_radio() const {
  return this != internal_default_instance() && radio_ != NULL;
}
inline void AccessPoints_AccessPoint_Radios_RadioKey::clear_radio() {
  if (GetArenaNoVirtual() == NULL && radio_ != NULL) {
    delete radio_;
  }
  radio_ = NULL;
}
inline const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Radios_Radio& AccessPoints_AccessPoint_Radios_RadioKey::radio() const {
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Radios_Radio* p = radio_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.RadioKey.radio)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Radios_Radio*>(
      &::openconfig::openconfig_access_points::_AccessPoints_AccessPoint_Radios_Radio_default_instance_);
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Radios_Radio* AccessPoints_AccessPoint_Radios_RadioKey::release_radio() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.RadioKey.radio)
  
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Radios_Radio* temp = radio_;
  radio_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Radios_Radio* AccessPoints_AccessPoint_Radios_RadioKey::mutable_radio() {
  
  if (radio_ == NULL) {
    radio_ = new ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Radios_Radio;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.RadioKey.radio)
  return radio_;
}
inline void AccessPoints_AccessPoint_Radios_RadioKey::set_allocated_radio(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Radios_Radio* radio) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete radio_;
  }
  if (radio) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      radio = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, radio, submessage_arena);
    }
    
  } else {
    
  }
  radio_ = radio;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.RadioKey.radio)
}

// -------------------------------------------------------------------

// AccessPoints_AccessPoint_Radios

// repeated .openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.RadioKey radio = 488065651 [(.yext.schemapath) = "/access-points/access-point/radios/radio"];
inline int AccessPoints_AccessPoint_Radios::radio_size() const {
  return radio_.size();
}
inline void AccessPoints_AccessPoint_Radios::clear_radio() {
  radio_.Clear();
}
inline const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Radios_RadioKey& AccessPoints_AccessPoint_Radios::radio(int index) const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.radio)
  return radio_.Get(index);
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Radios_RadioKey* AccessPoints_AccessPoint_Radios::mutable_radio(int index) {
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.radio)
  return radio_.Mutable(index);
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Radios_RadioKey* AccessPoints_AccessPoint_Radios::add_radio() {
  // @@protoc_insertion_point(field_add:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.radio)
  return radio_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Radios_RadioKey >*
AccessPoints_AccessPoint_Radios::mutable_radio() {
  // @@protoc_insertion_point(field_mutable_list:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.radio)
  return &radio_;
}
inline const ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Radios_RadioKey >&
AccessPoints_AccessPoint_Radios::radio() const {
  // @@protoc_insertion_point(field_list:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios.radio)
  return radio_;
}

// -------------------------------------------------------------------

// AccessPoints_AccessPoint_Ssids_Ssid_BandSteering_Config

// .ywrapper.BoolValue band_steering = 533262210 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/band-steering/config/band-steering"];
inline bool AccessPoints_AccessPoint_Ssids_Ssid_BandSteering_Config::has_band_steering() const {
  return this != internal_default_instance() && band_steering_ != NULL;
}
inline const ::ywrapper::BoolValue& AccessPoints_AccessPoint_Ssids_Ssid_BandSteering_Config::band_steering() const {
  const ::ywrapper::BoolValue* p = band_steering_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.BandSteering.Config.band_steering)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::BoolValue*>(
      &::ywrapper::_BoolValue_default_instance_);
}
inline ::ywrapper::BoolValue* AccessPoints_AccessPoint_Ssids_Ssid_BandSteering_Config::release_band_steering() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.BandSteering.Config.band_steering)
  
  ::ywrapper::BoolValue* temp = band_steering_;
  band_steering_ = NULL;
  return temp;
}
inline ::ywrapper::BoolValue* AccessPoints_AccessPoint_Ssids_Ssid_BandSteering_Config::mutable_band_steering() {
  
  if (band_steering_ == NULL) {
    band_steering_ = new ::ywrapper::BoolValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.BandSteering.Config.band_steering)
  return band_steering_;
}
inline void AccessPoints_AccessPoint_Ssids_Ssid_BandSteering_Config::set_allocated_band_steering(::ywrapper::BoolValue* band_steering) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(band_steering_);
  }
  if (band_steering) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      band_steering = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, band_steering, submessage_arena);
    }
    
  } else {
    
  }
  band_steering_ = band_steering;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.BandSteering.Config.band_steering)
}

// .ywrapper.IntValue steering_rssi = 241689858 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/band-steering/config/steering-rssi"];
inline bool AccessPoints_AccessPoint_Ssids_Ssid_BandSteering_Config::has_steering_rssi() const {
  return this != internal_default_instance() && steering_rssi_ != NULL;
}
inline const ::ywrapper::IntValue& AccessPoints_AccessPoint_Ssids_Ssid_BandSteering_Config::steering_rssi() const {
  const ::ywrapper::IntValue* p = steering_rssi_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.BandSteering.Config.steering_rssi)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::IntValue*>(
      &::ywrapper::_IntValue_default_instance_);
}
inline ::ywrapper::IntValue* AccessPoints_AccessPoint_Ssids_Ssid_BandSteering_Config::release_steering_rssi() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.BandSteering.Config.steering_rssi)
  
  ::ywrapper::IntValue* temp = steering_rssi_;
  steering_rssi_ = NULL;
  return temp;
}
inline ::ywrapper::IntValue* AccessPoints_AccessPoint_Ssids_Ssid_BandSteering_Config::mutable_steering_rssi() {
  
  if (steering_rssi_ == NULL) {
    steering_rssi_ = new ::ywrapper::IntValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.BandSteering.Config.steering_rssi)
  return steering_rssi_;
}
inline void AccessPoints_AccessPoint_Ssids_Ssid_BandSteering_Config::set_allocated_steering_rssi(::ywrapper::IntValue* steering_rssi) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(steering_rssi_);
  }
  if (steering_rssi) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      steering_rssi = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, steering_rssi, submessage_arena);
    }
    
  } else {
    
  }
  steering_rssi_ = steering_rssi;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.BandSteering.Config.steering_rssi)
}

// -------------------------------------------------------------------

// AccessPoints_AccessPoint_Ssids_Ssid_BandSteering_State

// .ywrapper.BoolValue band_steering = 446209579 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/band-steering/state/band-steering"];
inline bool AccessPoints_AccessPoint_Ssids_Ssid_BandSteering_State::has_band_steering() const {
  return this != internal_default_instance() && band_steering_ != NULL;
}
inline const ::ywrapper::BoolValue& AccessPoints_AccessPoint_Ssids_Ssid_BandSteering_State::band_steering() const {
  const ::ywrapper::BoolValue* p = band_steering_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.BandSteering.State.band_steering)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::BoolValue*>(
      &::ywrapper::_BoolValue_default_instance_);
}
inline ::ywrapper::BoolValue* AccessPoints_AccessPoint_Ssids_Ssid_BandSteering_State::release_band_steering() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.BandSteering.State.band_steering)
  
  ::ywrapper::BoolValue* temp = band_steering_;
  band_steering_ = NULL;
  return temp;
}
inline ::ywrapper::BoolValue* AccessPoints_AccessPoint_Ssids_Ssid_BandSteering_State::mutable_band_steering() {
  
  if (band_steering_ == NULL) {
    band_steering_ = new ::ywrapper::BoolValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.BandSteering.State.band_steering)
  return band_steering_;
}
inline void AccessPoints_AccessPoint_Ssids_Ssid_BandSteering_State::set_allocated_band_steering(::ywrapper::BoolValue* band_steering) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(band_steering_);
  }
  if (band_steering) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      band_steering = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, band_steering, submessage_arena);
    }
    
  } else {
    
  }
  band_steering_ = band_steering;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.BandSteering.State.band_steering)
}

// .ywrapper.IntValue steering_rssi = 414866207 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/band-steering/state/steering-rssi"];
inline bool AccessPoints_AccessPoint_Ssids_Ssid_BandSteering_State::has_steering_rssi() const {
  return this != internal_default_instance() && steering_rssi_ != NULL;
}
inline const ::ywrapper::IntValue& AccessPoints_AccessPoint_Ssids_Ssid_BandSteering_State::steering_rssi() const {
  const ::ywrapper::IntValue* p = steering_rssi_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.BandSteering.State.steering_rssi)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::IntValue*>(
      &::ywrapper::_IntValue_default_instance_);
}
inline ::ywrapper::IntValue* AccessPoints_AccessPoint_Ssids_Ssid_BandSteering_State::release_steering_rssi() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.BandSteering.State.steering_rssi)
  
  ::ywrapper::IntValue* temp = steering_rssi_;
  steering_rssi_ = NULL;
  return temp;
}
inline ::ywrapper::IntValue* AccessPoints_AccessPoint_Ssids_Ssid_BandSteering_State::mutable_steering_rssi() {
  
  if (steering_rssi_ == NULL) {
    steering_rssi_ = new ::ywrapper::IntValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.BandSteering.State.steering_rssi)
  return steering_rssi_;
}
inline void AccessPoints_AccessPoint_Ssids_Ssid_BandSteering_State::set_allocated_steering_rssi(::ywrapper::IntValue* steering_rssi) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(steering_rssi_);
  }
  if (steering_rssi) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      steering_rssi = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, steering_rssi, submessage_arena);
    }
    
  } else {
    
  }
  steering_rssi_ = steering_rssi;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.BandSteering.State.steering_rssi)
}

// -------------------------------------------------------------------

// AccessPoints_AccessPoint_Ssids_Ssid_BandSteering

// .openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.BandSteering.Config config = 480153216 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/band-steering/config"];
inline bool AccessPoints_AccessPoint_Ssids_Ssid_BandSteering::has_config() const {
  return this != internal_default_instance() && config_ != NULL;
}
inline void AccessPoints_AccessPoint_Ssids_Ssid_BandSteering::clear_config() {
  if (GetArenaNoVirtual() == NULL && config_ != NULL) {
    delete config_;
  }
  config_ = NULL;
}
inline const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_BandSteering_Config& AccessPoints_AccessPoint_Ssids_Ssid_BandSteering::config() const {
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_BandSteering_Config* p = config_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.BandSteering.config)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_BandSteering_Config*>(
      &::openconfig::openconfig_access_points::_AccessPoints_AccessPoint_Ssids_Ssid_BandSteering_Config_default_instance_);
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_BandSteering_Config* AccessPoints_AccessPoint_Ssids_Ssid_BandSteering::release_config() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.BandSteering.config)
  
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_BandSteering_Config* temp = config_;
  config_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_BandSteering_Config* AccessPoints_AccessPoint_Ssids_Ssid_BandSteering::mutable_config() {
  
  if (config_ == NULL) {
    config_ = new ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_BandSteering_Config;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.BandSteering.config)
  return config_;
}
inline void AccessPoints_AccessPoint_Ssids_Ssid_BandSteering::set_allocated_config(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_BandSteering_Config* config) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete config_;
  }
  if (config) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      config = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, config, submessage_arena);
    }
    
  } else {
    
  }
  config_ = config;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.BandSteering.config)
}

// .openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.BandSteering.State state = 45444217 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/band-steering/state"];
inline bool AccessPoints_AccessPoint_Ssids_Ssid_BandSteering::has_state() const {
  return this != internal_default_instance() && state_ != NULL;
}
inline void AccessPoints_AccessPoint_Ssids_Ssid_BandSteering::clear_state() {
  if (GetArenaNoVirtual() == NULL && state_ != NULL) {
    delete state_;
  }
  state_ = NULL;
}
inline const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_BandSteering_State& AccessPoints_AccessPoint_Ssids_Ssid_BandSteering::state() const {
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_BandSteering_State* p = state_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.BandSteering.state)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_BandSteering_State*>(
      &::openconfig::openconfig_access_points::_AccessPoints_AccessPoint_Ssids_Ssid_BandSteering_State_default_instance_);
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_BandSteering_State* AccessPoints_AccessPoint_Ssids_Ssid_BandSteering::release_state() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.BandSteering.state)
  
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_BandSteering_State* temp = state_;
  state_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_BandSteering_State* AccessPoints_AccessPoint_Ssids_Ssid_BandSteering::mutable_state() {
  
  if (state_ == NULL) {
    state_ = new ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_BandSteering_State;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.BandSteering.state)
  return state_;
}
inline void AccessPoints_AccessPoint_Ssids_Ssid_BandSteering::set_allocated_state(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_BandSteering_State* state) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete state_;
  }
  if (state) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      state = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, state, submessage_arena);
    }
    
  } else {
    
  }
  state_ = state;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.BandSteering.state)
}

// -------------------------------------------------------------------

// AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientCapabilities_State

// repeated .ywrapper.UintValue channel_support = 101977719 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/clients/client/client-capabilities/state/channel-support"];
inline int AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientCapabilities_State::channel_support_size() const {
  return channel_support_.size();
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientCapabilities_State::channel_support(int index) const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Clients.Client.ClientCapabilities.State.channel_support)
  return channel_support_.Get(index);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientCapabilities_State::mutable_channel_support(int index) {
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Clients.Client.ClientCapabilities.State.channel_support)
  return channel_support_.Mutable(index);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientCapabilities_State::add_channel_support() {
  // @@protoc_insertion_point(field_add:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Clients.Client.ClientCapabilities.State.channel_support)
  return channel_support_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::ywrapper::UintValue >*
AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientCapabilities_State::mutable_channel_support() {
  // @@protoc_insertion_point(field_mutable_list:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Clients.Client.ClientCapabilities.State.channel_support)
  return &channel_support_;
}
inline const ::google::protobuf::RepeatedPtrField< ::ywrapper::UintValue >&
AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientCapabilities_State::channel_support() const {
  // @@protoc_insertion_point(field_list:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Clients.Client.ClientCapabilities.State.channel_support)
  return channel_support_;
}

// repeated .openconfig.enums.OpenconfigWifiTypesCLIENTCAPABILITIES client_capabilities = 373949492 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/clients/client/client-capabilities/state/client-capabilities"];
inline int AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientCapabilities_State::client_capabilities_size() const {
  return client_capabilities_.size();
}
inline void AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientCapabilities_State::clear_client_capabilities() {
  client_capabilities_.Clear();
}
inline ::openconfig::enums::OpenconfigWifiTypesCLIENTCAPABILITIES AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientCapabilities_State::client_capabilities(int index) const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Clients.Client.ClientCapabilities.State.client_capabilities)
  return static_cast< ::openconfig::enums::OpenconfigWifiTypesCLIENTCAPABILITIES >(client_capabilities_.Get(index));
}
inline void AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientCapabilities_State::set_client_capabilities(int index, ::openconfig::enums::OpenconfigWifiTypesCLIENTCAPABILITIES value) {
  client_capabilities_.Set(index, value);
  // @@protoc_insertion_point(field_set:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Clients.Client.ClientCapabilities.State.client_capabilities)
}
inline void AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientCapabilities_State::add_client_capabilities(::openconfig::enums::OpenconfigWifiTypesCLIENTCAPABILITIES value) {
  client_capabilities_.Add(value);
  // @@protoc_insertion_point(field_add:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Clients.Client.ClientCapabilities.State.client_capabilities)
}
inline const ::google::protobuf::RepeatedField<int>&
AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientCapabilities_State::client_capabilities() const {
  // @@protoc_insertion_point(field_list:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Clients.Client.ClientCapabilities.State.client_capabilities)
  return client_capabilities_;
}
inline ::google::protobuf::RepeatedField<int>*
AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientCapabilities_State::mutable_client_capabilities() {
  // @@protoc_insertion_point(field_mutable_list:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Clients.Client.ClientCapabilities.State.client_capabilities)
  return &client_capabilities_;
}

// -------------------------------------------------------------------

// AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientCapabilities

// .openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Clients.Client.ClientCapabilities.State state = 249137545 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/clients/client/client-capabilities/state"];
inline bool AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientCapabilities::has_state() const {
  return this != internal_default_instance() && state_ != NULL;
}
inline void AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientCapabilities::clear_state() {
  if (GetArenaNoVirtual() == NULL && state_ != NULL) {
    delete state_;
  }
  state_ = NULL;
}
inline const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientCapabilities_State& AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientCapabilities::state() const {
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientCapabilities_State* p = state_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Clients.Client.ClientCapabilities.state)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientCapabilities_State*>(
      &::openconfig::openconfig_access_points::_AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientCapabilities_State_default_instance_);
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientCapabilities_State* AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientCapabilities::release_state() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Clients.Client.ClientCapabilities.state)
  
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientCapabilities_State* temp = state_;
  state_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientCapabilities_State* AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientCapabilities::mutable_state() {
  
  if (state_ == NULL) {
    state_ = new ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientCapabilities_State;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Clients.Client.ClientCapabilities.state)
  return state_;
}
inline void AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientCapabilities::set_allocated_state(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientCapabilities_State* state) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete state_;
  }
  if (state) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      state = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, state, submessage_arena);
    }
    
  } else {
    
  }
  state_ = state;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Clients.Client.ClientCapabilities.state)
}

// -------------------------------------------------------------------

// AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientConnection_State

// .openconfig.enums.OpenconfigWifiTypesCLIENTSTATE client_state = 178171191 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/clients/client/client-connection/state/client-state"];
inline void AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientConnection_State::clear_client_state() {
  client_state_ = 0;
}
inline ::openconfig::enums::OpenconfigWifiTypesCLIENTSTATE AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientConnection_State::client_state() const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Clients.Client.ClientConnection.State.client_state)
  return static_cast< ::openconfig::enums::OpenconfigWifiTypesCLIENTSTATE >(client_state_);
}
inline void AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientConnection_State::set_client_state(::openconfig::enums::OpenconfigWifiTypesCLIENTSTATE value) {
  
  client_state_ = value;
  // @@protoc_insertion_point(field_set:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Clients.Client.ClientConnection.State.client_state)
}

// .ywrapper.UintValue connection_time = 299049484 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/clients/client/client-connection/state/connection-time"];
inline bool AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientConnection_State::has_connection_time() const {
  return this != internal_default_instance() && connection_time_ != NULL;
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientConnection_State::connection_time() const {
  const ::ywrapper::UintValue* p = connection_time_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Clients.Client.ClientConnection.State.connection_time)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientConnection_State::release_connection_time() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Clients.Client.ClientConnection.State.connection_time)
  
  ::ywrapper::UintValue* temp = connection_time_;
  connection_time_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientConnection_State::mutable_connection_time() {
  
  if (connection_time_ == NULL) {
    connection_time_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Clients.Client.ClientConnection.State.connection_time)
  return connection_time_;
}
inline void AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientConnection_State::set_allocated_connection_time(::ywrapper::UintValue* connection_time) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(connection_time_);
  }
  if (connection_time) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      connection_time = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, connection_time, submessage_arena);
    }
    
  } else {
    
  }
  connection_time_ = connection_time;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Clients.Client.ClientConnection.State.connection_time)
}

// .ywrapper.StringValue hostname = 70608921 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/clients/client/client-connection/state/hostname"];
inline bool AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientConnection_State::has_hostname() const {
  return this != internal_default_instance() && hostname_ != NULL;
}
inline const ::ywrapper::StringValue& AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientConnection_State::hostname() const {
  const ::ywrapper::StringValue* p = hostname_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Clients.Client.ClientConnection.State.hostname)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::StringValue*>(
      &::ywrapper::_StringValue_default_instance_);
}
inline ::ywrapper::StringValue* AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientConnection_State::release_hostname() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Clients.Client.ClientConnection.State.hostname)
  
  ::ywrapper::StringValue* temp = hostname_;
  hostname_ = NULL;
  return temp;
}
inline ::ywrapper::StringValue* AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientConnection_State::mutable_hostname() {
  
  if (hostname_ == NULL) {
    hostname_ = new ::ywrapper::StringValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Clients.Client.ClientConnection.State.hostname)
  return hostname_;
}
inline void AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientConnection_State::set_allocated_hostname(::ywrapper::StringValue* hostname) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(hostname_);
  }
  if (hostname) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      hostname = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, hostname, submessage_arena);
    }
    
  } else {
    
  }
  hostname_ = hostname;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Clients.Client.ClientConnection.State.hostname)
}

// .ywrapper.StringValue ipv4_address = 97222160 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/clients/client/client-connection/state/ipv4-address"];
inline bool AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientConnection_State::has_ipv4_address() const {
  return this != internal_default_instance() && ipv4_address_ != NULL;
}
inline const ::ywrapper::StringValue& AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientConnection_State::ipv4_address() const {
  const ::ywrapper::StringValue* p = ipv4_address_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Clients.Client.ClientConnection.State.ipv4_address)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::StringValue*>(
      &::ywrapper::_StringValue_default_instance_);
}
inline ::ywrapper::StringValue* AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientConnection_State::release_ipv4_address() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Clients.Client.ClientConnection.State.ipv4_address)
  
  ::ywrapper::StringValue* temp = ipv4_address_;
  ipv4_address_ = NULL;
  return temp;
}
inline ::ywrapper::StringValue* AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientConnection_State::mutable_ipv4_address() {
  
  if (ipv4_address_ == NULL) {
    ipv4_address_ = new ::ywrapper::StringValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Clients.Client.ClientConnection.State.ipv4_address)
  return ipv4_address_;
}
inline void AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientConnection_State::set_allocated_ipv4_address(::ywrapper::StringValue* ipv4_address) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(ipv4_address_);
  }
  if (ipv4_address) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      ipv4_address = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, ipv4_address, submessage_arena);
    }
    
  } else {
    
  }
  ipv4_address_ = ipv4_address;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Clients.Client.ClientConnection.State.ipv4_address)
}

// .ywrapper.StringValue ipv6_address = 366913794 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/clients/client/client-connection/state/ipv6-address"];
inline bool AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientConnection_State::has_ipv6_address() const {
  return this != internal_default_instance() && ipv6_address_ != NULL;
}
inline const ::ywrapper::StringValue& AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientConnection_State::ipv6_address() const {
  const ::ywrapper::StringValue* p = ipv6_address_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Clients.Client.ClientConnection.State.ipv6_address)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::StringValue*>(
      &::ywrapper::_StringValue_default_instance_);
}
inline ::ywrapper::StringValue* AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientConnection_State::release_ipv6_address() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Clients.Client.ClientConnection.State.ipv6_address)
  
  ::ywrapper::StringValue* temp = ipv6_address_;
  ipv6_address_ = NULL;
  return temp;
}
inline ::ywrapper::StringValue* AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientConnection_State::mutable_ipv6_address() {
  
  if (ipv6_address_ == NULL) {
    ipv6_address_ = new ::ywrapper::StringValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Clients.Client.ClientConnection.State.ipv6_address)
  return ipv6_address_;
}
inline void AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientConnection_State::set_allocated_ipv6_address(::ywrapper::StringValue* ipv6_address) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(ipv6_address_);
  }
  if (ipv6_address) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      ipv6_address = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, ipv6_address, submessage_arena);
    }
    
  } else {
    
  }
  ipv6_address_ = ipv6_address;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Clients.Client.ClientConnection.State.ipv6_address)
}

// .ywrapper.StringValue operating_system = 302484799 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/clients/client/client-connection/state/operating-system"];
inline bool AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientConnection_State::has_operating_system() const {
  return this != internal_default_instance() && operating_system_ != NULL;
}
inline const ::ywrapper::StringValue& AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientConnection_State::operating_system() const {
  const ::ywrapper::StringValue* p = operating_system_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Clients.Client.ClientConnection.State.operating_system)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::StringValue*>(
      &::ywrapper::_StringValue_default_instance_);
}
inline ::ywrapper::StringValue* AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientConnection_State::release_operating_system() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Clients.Client.ClientConnection.State.operating_system)
  
  ::ywrapper::StringValue* temp = operating_system_;
  operating_system_ = NULL;
  return temp;
}
inline ::ywrapper::StringValue* AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientConnection_State::mutable_operating_system() {
  
  if (operating_system_ == NULL) {
    operating_system_ = new ::ywrapper::StringValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Clients.Client.ClientConnection.State.operating_system)
  return operating_system_;
}
inline void AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientConnection_State::set_allocated_operating_system(::ywrapper::StringValue* operating_system) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(operating_system_);
  }
  if (operating_system) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      operating_system = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, operating_system, submessage_arena);
    }
    
  } else {
    
  }
  operating_system_ = operating_system;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Clients.Client.ClientConnection.State.operating_system)
}

// .ywrapper.StringValue username = 146636734 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/clients/client/client-connection/state/username"];
inline bool AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientConnection_State::has_username() const {
  return this != internal_default_instance() && username_ != NULL;
}
inline const ::ywrapper::StringValue& AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientConnection_State::username() const {
  const ::ywrapper::StringValue* p = username_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Clients.Client.ClientConnection.State.username)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::StringValue*>(
      &::ywrapper::_StringValue_default_instance_);
}
inline ::ywrapper::StringValue* AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientConnection_State::release_username() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Clients.Client.ClientConnection.State.username)
  
  ::ywrapper::StringValue* temp = username_;
  username_ = NULL;
  return temp;
}
inline ::ywrapper::StringValue* AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientConnection_State::mutable_username() {
  
  if (username_ == NULL) {
    username_ = new ::ywrapper::StringValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Clients.Client.ClientConnection.State.username)
  return username_;
}
inline void AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientConnection_State::set_allocated_username(::ywrapper::StringValue* username) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(username_);
  }
  if (username) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      username = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, username, submessage_arena);
    }
    
  } else {
    
  }
  username_ = username;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Clients.Client.ClientConnection.State.username)
}

// -------------------------------------------------------------------

// AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientConnection

// .openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Clients.Client.ClientConnection.State state = 248348919 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/clients/client/client-connection/state"];
inline bool AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientConnection::has_state() const {
  return this != internal_default_instance() && state_ != NULL;
}
inline void AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientConnection::clear_state() {
  if (GetArenaNoVirtual() == NULL && state_ != NULL) {
    delete state_;
  }
  state_ = NULL;
}
inline const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientConnection_State& AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientConnection::state() const {
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientConnection_State* p = state_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Clients.Client.ClientConnection.state)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientConnection_State*>(
      &::openconfig::openconfig_access_points::_AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientConnection_State_default_instance_);
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientConnection_State* AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientConnection::release_state() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Clients.Client.ClientConnection.state)
  
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientConnection_State* temp = state_;
  state_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientConnection_State* AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientConnection::mutable_state() {
  
  if (state_ == NULL) {
    state_ = new ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientConnection_State;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Clients.Client.ClientConnection.state)
  return state_;
}
inline void AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientConnection::set_allocated_state(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientConnection_State* state) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete state_;
  }
  if (state) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      state = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, state, submessage_arena);
    }
    
  } else {
    
  }
  state_ = state;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Clients.Client.ClientConnection.state)
}

// -------------------------------------------------------------------

// AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientRf_State

// .openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Clients.Client.ClientRf.State.ConnectionMode connection_mode = 383209746 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/clients/client/client-rf/state/connection-mode"];
inline void AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientRf_State::clear_connection_mode() {
  connection_mode_ = 0;
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientRf_State_ConnectionMode AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientRf_State::connection_mode() const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Clients.Client.ClientRf.State.connection_mode)
  return static_cast< ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientRf_State_ConnectionMode >(connection_mode_);
}
inline void AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientRf_State::set_connection_mode(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientRf_State_ConnectionMode value) {
  
  connection_mode_ = value;
  // @@protoc_insertion_point(field_set:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Clients.Client.ClientRf.State.connection_mode)
}

// .ywrapper.UintValue frequency = 286587908 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/clients/client/client-rf/state/frequency"];
inline bool AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientRf_State::has_frequency() const {
  return this != internal_default_instance() && frequency_ != NULL;
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientRf_State::frequency() const {
  const ::ywrapper::UintValue* p = frequency_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Clients.Client.ClientRf.State.frequency)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientRf_State::release_frequency() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Clients.Client.ClientRf.State.frequency)
  
  ::ywrapper::UintValue* temp = frequency_;
  frequency_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientRf_State::mutable_frequency() {
  
  if (frequency_ == NULL) {
    frequency_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Clients.Client.ClientRf.State.frequency)
  return frequency_;
}
inline void AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientRf_State::set_allocated_frequency(::ywrapper::UintValue* frequency) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(frequency_);
  }
  if (frequency) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      frequency = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, frequency, submessage_arena);
    }
    
  } else {
    
  }
  frequency_ = frequency;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Clients.Client.ClientRf.State.frequency)
}

// .ywrapper.UintValue phy_rate = 382033986 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/clients/client/client-rf/state/phy-rate"];
inline bool AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientRf_State::has_phy_rate() const {
  return this != internal_default_instance() && phy_rate_ != NULL;
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientRf_State::phy_rate() const {
  const ::ywrapper::UintValue* p = phy_rate_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Clients.Client.ClientRf.State.phy_rate)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientRf_State::release_phy_rate() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Clients.Client.ClientRf.State.phy_rate)
  
  ::ywrapper::UintValue* temp = phy_rate_;
  phy_rate_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientRf_State::mutable_phy_rate() {
  
  if (phy_rate_ == NULL) {
    phy_rate_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Clients.Client.ClientRf.State.phy_rate)
  return phy_rate_;
}
inline void AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientRf_State::set_allocated_phy_rate(::ywrapper::UintValue* phy_rate) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(phy_rate_);
  }
  if (phy_rate) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      phy_rate = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, phy_rate, submessage_arena);
    }
    
  } else {
    
  }
  phy_rate_ = phy_rate;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Clients.Client.ClientRf.State.phy_rate)
}

// .ywrapper.IntValue rssi = 323836415 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/clients/client/client-rf/state/rssi"];
inline bool AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientRf_State::has_rssi() const {
  return this != internal_default_instance() && rssi_ != NULL;
}
inline const ::ywrapper::IntValue& AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientRf_State::rssi() const {
  const ::ywrapper::IntValue* p = rssi_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Clients.Client.ClientRf.State.rssi)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::IntValue*>(
      &::ywrapper::_IntValue_default_instance_);
}
inline ::ywrapper::IntValue* AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientRf_State::release_rssi() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Clients.Client.ClientRf.State.rssi)
  
  ::ywrapper::IntValue* temp = rssi_;
  rssi_ = NULL;
  return temp;
}
inline ::ywrapper::IntValue* AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientRf_State::mutable_rssi() {
  
  if (rssi_ == NULL) {
    rssi_ = new ::ywrapper::IntValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Clients.Client.ClientRf.State.rssi)
  return rssi_;
}
inline void AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientRf_State::set_allocated_rssi(::ywrapper::IntValue* rssi) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(rssi_);
  }
  if (rssi) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      rssi = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, rssi, submessage_arena);
    }
    
  } else {
    
  }
  rssi_ = rssi;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Clients.Client.ClientRf.State.rssi)
}

// .ywrapper.UintValue snr = 235628765 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/clients/client/client-rf/state/snr"];
inline bool AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientRf_State::has_snr() const {
  return this != internal_default_instance() && snr_ != NULL;
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientRf_State::snr() const {
  const ::ywrapper::UintValue* p = snr_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Clients.Client.ClientRf.State.snr)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientRf_State::release_snr() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Clients.Client.ClientRf.State.snr)
  
  ::ywrapper::UintValue* temp = snr_;
  snr_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientRf_State::mutable_snr() {
  
  if (snr_ == NULL) {
    snr_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Clients.Client.ClientRf.State.snr)
  return snr_;
}
inline void AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientRf_State::set_allocated_snr(::ywrapper::UintValue* snr) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(snr_);
  }
  if (snr) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      snr = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, snr, submessage_arena);
    }
    
  } else {
    
  }
  snr_ = snr;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Clients.Client.ClientRf.State.snr)
}

// .ywrapper.UintValue ss = 240836072 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/clients/client/client-rf/state/ss"];
inline bool AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientRf_State::has_ss() const {
  return this != internal_default_instance() && ss_ != NULL;
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientRf_State::ss() const {
  const ::ywrapper::UintValue* p = ss_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Clients.Client.ClientRf.State.ss)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientRf_State::release_ss() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Clients.Client.ClientRf.State.ss)
  
  ::ywrapper::UintValue* temp = ss_;
  ss_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientRf_State::mutable_ss() {
  
  if (ss_ == NULL) {
    ss_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Clients.Client.ClientRf.State.ss)
  return ss_;
}
inline void AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientRf_State::set_allocated_ss(::ywrapper::UintValue* ss) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(ss_);
  }
  if (ss) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      ss = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, ss, submessage_arena);
    }
    
  } else {
    
  }
  ss_ = ss;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Clients.Client.ClientRf.State.ss)
}

// -------------------------------------------------------------------

// AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientRf

// .openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Clients.Client.ClientRf.State state = 62147291 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/clients/client/client-rf/state"];
inline bool AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientRf::has_state() const {
  return this != internal_default_instance() && state_ != NULL;
}
inline void AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientRf::clear_state() {
  if (GetArenaNoVirtual() == NULL && state_ != NULL) {
    delete state_;
  }
  state_ = NULL;
}
inline const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientRf_State& AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientRf::state() const {
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientRf_State* p = state_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Clients.Client.ClientRf.state)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientRf_State*>(
      &::openconfig::openconfig_access_points::_AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientRf_State_default_instance_);
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientRf_State* AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientRf::release_state() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Clients.Client.ClientRf.state)
  
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientRf_State* temp = state_;
  state_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientRf_State* AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientRf::mutable_state() {
  
  if (state_ == NULL) {
    state_ = new ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientRf_State;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Clients.Client.ClientRf.state)
  return state_;
}
inline void AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientRf::set_allocated_state(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientRf_State* state) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete state_;
  }
  if (state) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      state = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, state, submessage_arena);
    }
    
  } else {
    
  }
  state_ = state;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Clients.Client.ClientRf.state)
}

// -------------------------------------------------------------------

// AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_Dot11KNeighbors_State

// .ywrapper.UintValue channel_load_report = 489610331 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/clients/client/dot11k-neighbors/state/channel-load-report"];
inline bool AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_Dot11KNeighbors_State::has_channel_load_report() const {
  return this != internal_default_instance() && channel_load_report_ != NULL;
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_Dot11KNeighbors_State::channel_load_report() const {
  const ::ywrapper::UintValue* p = channel_load_report_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Clients.Client.Dot11KNeighbors.State.channel_load_report)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_Dot11KNeighbors_State::release_channel_load_report() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Clients.Client.Dot11KNeighbors.State.channel_load_report)
  
  ::ywrapper::UintValue* temp = channel_load_report_;
  channel_load_report_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_Dot11KNeighbors_State::mutable_channel_load_report() {
  
  if (channel_load_report_ == NULL) {
    channel_load_report_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Clients.Client.Dot11KNeighbors.State.channel_load_report)
  return channel_load_report_;
}
inline void AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_Dot11KNeighbors_State::set_allocated_channel_load_report(::ywrapper::UintValue* channel_load_report) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(channel_load_report_);
  }
  if (channel_load_report) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      channel_load_report = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, channel_load_report, submessage_arena);
    }
    
  } else {
    
  }
  channel_load_report_ = channel_load_report;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Clients.Client.Dot11KNeighbors.State.channel_load_report)
}

// .ywrapper.UintValue neighbor_antenna = 507846906 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/clients/client/dot11k-neighbors/state/neighbor-antenna"];
inline bool AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_Dot11KNeighbors_State::has_neighbor_antenna() const {
  return this != internal_default_instance() && neighbor_antenna_ != NULL;
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_Dot11KNeighbors_State::neighbor_antenna() const {
  const ::ywrapper::UintValue* p = neighbor_antenna_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Clients.Client.Dot11KNeighbors.State.neighbor_antenna)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_Dot11KNeighbors_State::release_neighbor_antenna() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Clients.Client.Dot11KNeighbors.State.neighbor_antenna)
  
  ::ywrapper::UintValue* temp = neighbor_antenna_;
  neighbor_antenna_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_Dot11KNeighbors_State::mutable_neighbor_antenna() {
  
  if (neighbor_antenna_ == NULL) {
    neighbor_antenna_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Clients.Client.Dot11KNeighbors.State.neighbor_antenna)
  return neighbor_antenna_;
}
inline void AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_Dot11KNeighbors_State::set_allocated_neighbor_antenna(::ywrapper::UintValue* neighbor_antenna) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(neighbor_antenna_);
  }
  if (neighbor_antenna) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      neighbor_antenna = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, neighbor_antenna, submessage_arena);
    }
    
  } else {
    
  }
  neighbor_antenna_ = neighbor_antenna;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Clients.Client.Dot11KNeighbors.State.neighbor_antenna)
}

// .ywrapper.StringValue neighbor_bssid = 498949236 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/clients/client/dot11k-neighbors/state/neighbor-bssid"];
inline bool AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_Dot11KNeighbors_State::has_neighbor_bssid() const {
  return this != internal_default_instance() && neighbor_bssid_ != NULL;
}
inline const ::ywrapper::StringValue& AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_Dot11KNeighbors_State::neighbor_bssid() const {
  const ::ywrapper::StringValue* p = neighbor_bssid_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Clients.Client.Dot11KNeighbors.State.neighbor_bssid)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::StringValue*>(
      &::ywrapper::_StringValue_default_instance_);
}
inline ::ywrapper::StringValue* AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_Dot11KNeighbors_State::release_neighbor_bssid() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Clients.Client.Dot11KNeighbors.State.neighbor_bssid)
  
  ::ywrapper::StringValue* temp = neighbor_bssid_;
  neighbor_bssid_ = NULL;
  return temp;
}
inline ::ywrapper::StringValue* AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_Dot11KNeighbors_State::mutable_neighbor_bssid() {
  
  if (neighbor_bssid_ == NULL) {
    neighbor_bssid_ = new ::ywrapper::StringValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Clients.Client.Dot11KNeighbors.State.neighbor_bssid)
  return neighbor_bssid_;
}
inline void AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_Dot11KNeighbors_State::set_allocated_neighbor_bssid(::ywrapper::StringValue* neighbor_bssid) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(neighbor_bssid_);
  }
  if (neighbor_bssid) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      neighbor_bssid = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, neighbor_bssid, submessage_arena);
    }
    
  } else {
    
  }
  neighbor_bssid_ = neighbor_bssid;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Clients.Client.Dot11KNeighbors.State.neighbor_bssid)
}

// .ywrapper.UintValue neighbor_channel = 53393662 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/clients/client/dot11k-neighbors/state/neighbor-channel"];
inline bool AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_Dot11KNeighbors_State::has_neighbor_channel() const {
  return this != internal_default_instance() && neighbor_channel_ != NULL;
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_Dot11KNeighbors_State::neighbor_channel() const {
  const ::ywrapper::UintValue* p = neighbor_channel_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Clients.Client.Dot11KNeighbors.State.neighbor_channel)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_Dot11KNeighbors_State::release_neighbor_channel() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Clients.Client.Dot11KNeighbors.State.neighbor_channel)
  
  ::ywrapper::UintValue* temp = neighbor_channel_;
  neighbor_channel_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_Dot11KNeighbors_State::mutable_neighbor_channel() {
  
  if (neighbor_channel_ == NULL) {
    neighbor_channel_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Clients.Client.Dot11KNeighbors.State.neighbor_channel)
  return neighbor_channel_;
}
inline void AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_Dot11KNeighbors_State::set_allocated_neighbor_channel(::ywrapper::UintValue* neighbor_channel) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(neighbor_channel_);
  }
  if (neighbor_channel) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      neighbor_channel = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, neighbor_channel, submessage_arena);
    }
    
  } else {
    
  }
  neighbor_channel_ = neighbor_channel;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Clients.Client.Dot11KNeighbors.State.neighbor_channel)
}

// .ywrapper.IntValue neighbor_rssi = 173899328 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/clients/client/dot11k-neighbors/state/neighbor-rssi"];
inline bool AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_Dot11KNeighbors_State::has_neighbor_rssi() const {
  return this != internal_default_instance() && neighbor_rssi_ != NULL;
}
inline const ::ywrapper::IntValue& AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_Dot11KNeighbors_State::neighbor_rssi() const {
  const ::ywrapper::IntValue* p = neighbor_rssi_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Clients.Client.Dot11KNeighbors.State.neighbor_rssi)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::IntValue*>(
      &::ywrapper::_IntValue_default_instance_);
}
inline ::ywrapper::IntValue* AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_Dot11KNeighbors_State::release_neighbor_rssi() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Clients.Client.Dot11KNeighbors.State.neighbor_rssi)
  
  ::ywrapper::IntValue* temp = neighbor_rssi_;
  neighbor_rssi_ = NULL;
  return temp;
}
inline ::ywrapper::IntValue* AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_Dot11KNeighbors_State::mutable_neighbor_rssi() {
  
  if (neighbor_rssi_ == NULL) {
    neighbor_rssi_ = new ::ywrapper::IntValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Clients.Client.Dot11KNeighbors.State.neighbor_rssi)
  return neighbor_rssi_;
}
inline void AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_Dot11KNeighbors_State::set_allocated_neighbor_rssi(::ywrapper::IntValue* neighbor_rssi) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(neighbor_rssi_);
  }
  if (neighbor_rssi) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      neighbor_rssi = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, neighbor_rssi, submessage_arena);
    }
    
  } else {
    
  }
  neighbor_rssi_ = neighbor_rssi;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Clients.Client.Dot11KNeighbors.State.neighbor_rssi)
}

// -------------------------------------------------------------------

// AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_Dot11KNeighbors

// .openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Clients.Client.Dot11KNeighbors.State state = 63168671 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/clients/client/dot11k-neighbors/state"];
inline bool AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_Dot11KNeighbors::has_state() const {
  return this != internal_default_instance() && state_ != NULL;
}
inline void AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_Dot11KNeighbors::clear_state() {
  if (GetArenaNoVirtual() == NULL && state_ != NULL) {
    delete state_;
  }
  state_ = NULL;
}
inline const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_Dot11KNeighbors_State& AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_Dot11KNeighbors::state() const {
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_Dot11KNeighbors_State* p = state_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Clients.Client.Dot11KNeighbors.state)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_Dot11KNeighbors_State*>(
      &::openconfig::openconfig_access_points::_AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_Dot11KNeighbors_State_default_instance_);
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_Dot11KNeighbors_State* AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_Dot11KNeighbors::release_state() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Clients.Client.Dot11KNeighbors.state)
  
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_Dot11KNeighbors_State* temp = state_;
  state_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_Dot11KNeighbors_State* AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_Dot11KNeighbors::mutable_state() {
  
  if (state_ == NULL) {
    state_ = new ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_Dot11KNeighbors_State;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Clients.Client.Dot11KNeighbors.state)
  return state_;
}
inline void AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_Dot11KNeighbors::set_allocated_state(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_Dot11KNeighbors_State* state) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete state_;
  }
  if (state) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      state = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, state, submessage_arena);
    }
    
  } else {
    
  }
  state_ = state;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Clients.Client.Dot11KNeighbors.state)
}

// -------------------------------------------------------------------

// AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_State_Counters

// .ywrapper.UintValue rx_bytes = 374808599 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/clients/client/state/counters/rx-bytes"];
inline bool AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_State_Counters::has_rx_bytes() const {
  return this != internal_default_instance() && rx_bytes_ != NULL;
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_State_Counters::rx_bytes() const {
  const ::ywrapper::UintValue* p = rx_bytes_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Clients.Client.State.Counters.rx_bytes)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_State_Counters::release_rx_bytes() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Clients.Client.State.Counters.rx_bytes)
  
  ::ywrapper::UintValue* temp = rx_bytes_;
  rx_bytes_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_State_Counters::mutable_rx_bytes() {
  
  if (rx_bytes_ == NULL) {
    rx_bytes_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Clients.Client.State.Counters.rx_bytes)
  return rx_bytes_;
}
inline void AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_State_Counters::set_allocated_rx_bytes(::ywrapper::UintValue* rx_bytes) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(rx_bytes_);
  }
  if (rx_bytes) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      rx_bytes = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, rx_bytes, submessage_arena);
    }
    
  } else {
    
  }
  rx_bytes_ = rx_bytes;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Clients.Client.State.Counters.rx_bytes)
}

// .ywrapper.UintValue rx_retries = 459608640 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/clients/client/state/counters/rx-retries"];
inline bool AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_State_Counters::has_rx_retries() const {
  return this != internal_default_instance() && rx_retries_ != NULL;
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_State_Counters::rx_retries() const {
  const ::ywrapper::UintValue* p = rx_retries_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Clients.Client.State.Counters.rx_retries)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_State_Counters::release_rx_retries() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Clients.Client.State.Counters.rx_retries)
  
  ::ywrapper::UintValue* temp = rx_retries_;
  rx_retries_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_State_Counters::mutable_rx_retries() {
  
  if (rx_retries_ == NULL) {
    rx_retries_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Clients.Client.State.Counters.rx_retries)
  return rx_retries_;
}
inline void AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_State_Counters::set_allocated_rx_retries(::ywrapper::UintValue* rx_retries) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(rx_retries_);
  }
  if (rx_retries) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      rx_retries = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, rx_retries, submessage_arena);
    }
    
  } else {
    
  }
  rx_retries_ = rx_retries;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Clients.Client.State.Counters.rx_retries)
}

// .ywrapper.UintValue tx_bytes = 529493213 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/clients/client/state/counters/tx-bytes"];
inline bool AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_State_Counters::has_tx_bytes() const {
  return this != internal_default_instance() && tx_bytes_ != NULL;
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_State_Counters::tx_bytes() const {
  const ::ywrapper::UintValue* p = tx_bytes_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Clients.Client.State.Counters.tx_bytes)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_State_Counters::release_tx_bytes() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Clients.Client.State.Counters.tx_bytes)
  
  ::ywrapper::UintValue* temp = tx_bytes_;
  tx_bytes_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_State_Counters::mutable_tx_bytes() {
  
  if (tx_bytes_ == NULL) {
    tx_bytes_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Clients.Client.State.Counters.tx_bytes)
  return tx_bytes_;
}
inline void AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_State_Counters::set_allocated_tx_bytes(::ywrapper::UintValue* tx_bytes) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(tx_bytes_);
  }
  if (tx_bytes) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      tx_bytes = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, tx_bytes, submessage_arena);
    }
    
  } else {
    
  }
  tx_bytes_ = tx_bytes;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Clients.Client.State.Counters.tx_bytes)
}

// .ywrapper.UintValue tx_retries = 421101202 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/clients/client/state/counters/tx-retries"];
inline bool AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_State_Counters::has_tx_retries() const {
  return this != internal_default_instance() && tx_retries_ != NULL;
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_State_Counters::tx_retries() const {
  const ::ywrapper::UintValue* p = tx_retries_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Clients.Client.State.Counters.tx_retries)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_State_Counters::release_tx_retries() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Clients.Client.State.Counters.tx_retries)
  
  ::ywrapper::UintValue* temp = tx_retries_;
  tx_retries_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_State_Counters::mutable_tx_retries() {
  
  if (tx_retries_ == NULL) {
    tx_retries_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Clients.Client.State.Counters.tx_retries)
  return tx_retries_;
}
inline void AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_State_Counters::set_allocated_tx_retries(::ywrapper::UintValue* tx_retries) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(tx_retries_);
  }
  if (tx_retries) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      tx_retries = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, tx_retries, submessage_arena);
    }
    
  } else {
    
  }
  tx_retries_ = tx_retries;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Clients.Client.State.Counters.tx_retries)
}

// -------------------------------------------------------------------

// AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_State

// .openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Clients.Client.State.Counters counters = 366574872 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/clients/client/state/counters"];
inline bool AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_State::has_counters() const {
  return this != internal_default_instance() && counters_ != NULL;
}
inline void AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_State::clear_counters() {
  if (GetArenaNoVirtual() == NULL && counters_ != NULL) {
    delete counters_;
  }
  counters_ = NULL;
}
inline const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_State_Counters& AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_State::counters() const {
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_State_Counters* p = counters_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Clients.Client.State.counters)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_State_Counters*>(
      &::openconfig::openconfig_access_points::_AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_State_Counters_default_instance_);
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_State_Counters* AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_State::release_counters() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Clients.Client.State.counters)
  
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_State_Counters* temp = counters_;
  counters_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_State_Counters* AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_State::mutable_counters() {
  
  if (counters_ == NULL) {
    counters_ = new ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_State_Counters;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Clients.Client.State.counters)
  return counters_;
}
inline void AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_State::set_allocated_counters(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_State_Counters* counters) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete counters_;
  }
  if (counters) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      counters = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, counters, submessage_arena);
    }
    
  } else {
    
  }
  counters_ = counters;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Clients.Client.State.counters)
}

// .ywrapper.StringValue mac = 244865024 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/clients/client/state/mac"];
inline bool AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_State::has_mac() const {
  return this != internal_default_instance() && mac_ != NULL;
}
inline const ::ywrapper::StringValue& AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_State::mac() const {
  const ::ywrapper::StringValue* p = mac_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Clients.Client.State.mac)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::StringValue*>(
      &::ywrapper::_StringValue_default_instance_);
}
inline ::ywrapper::StringValue* AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_State::release_mac() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Clients.Client.State.mac)
  
  ::ywrapper::StringValue* temp = mac_;
  mac_ = NULL;
  return temp;
}
inline ::ywrapper::StringValue* AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_State::mutable_mac() {
  
  if (mac_ == NULL) {
    mac_ = new ::ywrapper::StringValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Clients.Client.State.mac)
  return mac_;
}
inline void AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_State::set_allocated_mac(::ywrapper::StringValue* mac) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(mac_);
  }
  if (mac) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      mac = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, mac, submessage_arena);
    }
    
  } else {
    
  }
  mac_ = mac;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Clients.Client.State.mac)
}

// -------------------------------------------------------------------

// AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client

// .openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Clients.Client.ClientCapabilities client_capabilities = 426048559 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/clients/client/client-capabilities"];
inline bool AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client::has_client_capabilities() const {
  return this != internal_default_instance() && client_capabilities_ != NULL;
}
inline void AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client::clear_client_capabilities() {
  if (GetArenaNoVirtual() == NULL && client_capabilities_ != NULL) {
    delete client_capabilities_;
  }
  client_capabilities_ = NULL;
}
inline const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientCapabilities& AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client::client_capabilities() const {
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientCapabilities* p = client_capabilities_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Clients.Client.client_capabilities)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientCapabilities*>(
      &::openconfig::openconfig_access_points::_AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientCapabilities_default_instance_);
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientCapabilities* AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client::release_client_capabilities() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Clients.Client.client_capabilities)
  
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientCapabilities* temp = client_capabilities_;
  client_capabilities_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientCapabilities* AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client::mutable_client_capabilities() {
  
  if (client_capabilities_ == NULL) {
    client_capabilities_ = new ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientCapabilities;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Clients.Client.client_capabilities)
  return client_capabilities_;
}
inline void AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client::set_allocated_client_capabilities(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientCapabilities* client_capabilities) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete client_capabilities_;
  }
  if (client_capabilities) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      client_capabilities = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, client_capabilities, submessage_arena);
    }
    
  } else {
    
  }
  client_capabilities_ = client_capabilities;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Clients.Client.client_capabilities)
}

// .openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Clients.Client.ClientConnection client_connection = 143477045 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/clients/client/client-connection"];
inline bool AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client::has_client_connection() const {
  return this != internal_default_instance() && client_connection_ != NULL;
}
inline void AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client::clear_client_connection() {
  if (GetArenaNoVirtual() == NULL && client_connection_ != NULL) {
    delete client_connection_;
  }
  client_connection_ = NULL;
}
inline const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientConnection& AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client::client_connection() const {
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientConnection* p = client_connection_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Clients.Client.client_connection)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientConnection*>(
      &::openconfig::openconfig_access_points::_AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientConnection_default_instance_);
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientConnection* AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client::release_client_connection() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Clients.Client.client_connection)
  
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientConnection* temp = client_connection_;
  client_connection_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientConnection* AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client::mutable_client_connection() {
  
  if (client_connection_ == NULL) {
    client_connection_ = new ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientConnection;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Clients.Client.client_connection)
  return client_connection_;
}
inline void AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client::set_allocated_client_connection(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientConnection* client_connection) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete client_connection_;
  }
  if (client_connection) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      client_connection = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, client_connection, submessage_arena);
    }
    
  } else {
    
  }
  client_connection_ = client_connection;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Clients.Client.client_connection)
}

// .openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Clients.Client.ClientRf client_rf = 367682393 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/clients/client/client-rf"];
inline bool AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client::has_client_rf() const {
  return this != internal_default_instance() && client_rf_ != NULL;
}
inline void AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client::clear_client_rf() {
  if (GetArenaNoVirtual() == NULL && client_rf_ != NULL) {
    delete client_rf_;
  }
  client_rf_ = NULL;
}
inline const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientRf& AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client::client_rf() const {
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientRf* p = client_rf_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Clients.Client.client_rf)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientRf*>(
      &::openconfig::openconfig_access_points::_AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientRf_default_instance_);
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientRf* AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client::release_client_rf() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Clients.Client.client_rf)
  
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientRf* temp = client_rf_;
  client_rf_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientRf* AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client::mutable_client_rf() {
  
  if (client_rf_ == NULL) {
    client_rf_ = new ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientRf;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Clients.Client.client_rf)
  return client_rf_;
}
inline void AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client::set_allocated_client_rf(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientRf* client_rf) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete client_rf_;
  }
  if (client_rf) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      client_rf = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, client_rf, submessage_arena);
    }
    
  } else {
    
  }
  client_rf_ = client_rf;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Clients.Client.client_rf)
}

// .openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Clients.Client.Dot11KNeighbors dot11k_neighbors = 383304525 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/clients/client/dot11k-neighbors"];
inline bool AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client::has_dot11k_neighbors() const {
  return this != internal_default_instance() && dot11k_neighbors_ != NULL;
}
inline void AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client::clear_dot11k_neighbors() {
  if (GetArenaNoVirtual() == NULL && dot11k_neighbors_ != NULL) {
    delete dot11k_neighbors_;
  }
  dot11k_neighbors_ = NULL;
}
inline const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_Dot11KNeighbors& AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client::dot11k_neighbors() const {
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_Dot11KNeighbors* p = dot11k_neighbors_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Clients.Client.dot11k_neighbors)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_Dot11KNeighbors*>(
      &::openconfig::openconfig_access_points::_AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_Dot11KNeighbors_default_instance_);
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_Dot11KNeighbors* AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client::release_dot11k_neighbors() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Clients.Client.dot11k_neighbors)
  
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_Dot11KNeighbors* temp = dot11k_neighbors_;
  dot11k_neighbors_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_Dot11KNeighbors* AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client::mutable_dot11k_neighbors() {
  
  if (dot11k_neighbors_ == NULL) {
    dot11k_neighbors_ = new ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_Dot11KNeighbors;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Clients.Client.dot11k_neighbors)
  return dot11k_neighbors_;
}
inline void AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client::set_allocated_dot11k_neighbors(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_Dot11KNeighbors* dot11k_neighbors) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete dot11k_neighbors_;
  }
  if (dot11k_neighbors) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      dot11k_neighbors = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, dot11k_neighbors, submessage_arena);
    }
    
  } else {
    
  }
  dot11k_neighbors_ = dot11k_neighbors;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Clients.Client.dot11k_neighbors)
}

// .openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Clients.Client.State state = 49326624 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/clients/client/state"];
inline bool AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client::has_state() const {
  return this != internal_default_instance() && state_ != NULL;
}
inline void AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client::clear_state() {
  if (GetArenaNoVirtual() == NULL && state_ != NULL) {
    delete state_;
  }
  state_ = NULL;
}
inline const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_State& AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client::state() const {
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_State* p = state_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Clients.Client.state)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_State*>(
      &::openconfig::openconfig_access_points::_AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_State_default_instance_);
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_State* AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client::release_state() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Clients.Client.state)
  
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_State* temp = state_;
  state_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_State* AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client::mutable_state() {
  
  if (state_ == NULL) {
    state_ = new ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_State;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Clients.Client.state)
  return state_;
}
inline void AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client::set_allocated_state(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_State* state) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete state_;
  }
  if (state) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      state = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, state, submessage_arena);
    }
    
  } else {
    
  }
  state_ = state;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Clients.Client.state)
}

// -------------------------------------------------------------------

// AccessPoints_AccessPoint_Ssids_Ssid_Clients_ClientKey

// string mac = 1 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/clients/client/mac"];
inline void AccessPoints_AccessPoint_Ssids_Ssid_Clients_ClientKey::clear_mac() {
  mac_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AccessPoints_AccessPoint_Ssids_Ssid_Clients_ClientKey::mac() const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Clients.ClientKey.mac)
  return mac_.GetNoArena();
}
inline void AccessPoints_AccessPoint_Ssids_Ssid_Clients_ClientKey::set_mac(const ::std::string& value) {
  
  mac_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Clients.ClientKey.mac)
}
#if LANG_CXX11
inline void AccessPoints_AccessPoint_Ssids_Ssid_Clients_ClientKey::set_mac(::std::string&& value) {
  
  mac_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Clients.ClientKey.mac)
}
#endif
inline void AccessPoints_AccessPoint_Ssids_Ssid_Clients_ClientKey::set_mac(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  mac_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Clients.ClientKey.mac)
}
inline void AccessPoints_AccessPoint_Ssids_Ssid_Clients_ClientKey::set_mac(const char* value, size_t size) {
  
  mac_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Clients.ClientKey.mac)
}
inline ::std::string* AccessPoints_AccessPoint_Ssids_Ssid_Clients_ClientKey::mutable_mac() {
  
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Clients.ClientKey.mac)
  return mac_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AccessPoints_AccessPoint_Ssids_Ssid_Clients_ClientKey::release_mac() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Clients.ClientKey.mac)
  
  return mac_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AccessPoints_AccessPoint_Ssids_Ssid_Clients_ClientKey::set_allocated_mac(::std::string* mac) {
  if (mac != NULL) {
    
  } else {
    
  }
  mac_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mac);
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Clients.ClientKey.mac)
}

// .openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Clients.Client client = 2;
inline bool AccessPoints_AccessPoint_Ssids_Ssid_Clients_ClientKey::has_client() const {
  return this != internal_default_instance() && client_ != NULL;
}
inline void AccessPoints_AccessPoint_Ssids_Ssid_Clients_ClientKey::clear_client() {
  if (GetArenaNoVirtual() == NULL && client_ != NULL) {
    delete client_;
  }
  client_ = NULL;
}
inline const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client& AccessPoints_AccessPoint_Ssids_Ssid_Clients_ClientKey::client() const {
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client* p = client_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Clients.ClientKey.client)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client*>(
      &::openconfig::openconfig_access_points::_AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_default_instance_);
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client* AccessPoints_AccessPoint_Ssids_Ssid_Clients_ClientKey::release_client() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Clients.ClientKey.client)
  
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client* temp = client_;
  client_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client* AccessPoints_AccessPoint_Ssids_Ssid_Clients_ClientKey::mutable_client() {
  
  if (client_ == NULL) {
    client_ = new ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Clients.ClientKey.client)
  return client_;
}
inline void AccessPoints_AccessPoint_Ssids_Ssid_Clients_ClientKey::set_allocated_client(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client* client) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete client_;
  }
  if (client) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      client = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, client, submessage_arena);
    }
    
  } else {
    
  }
  client_ = client;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Clients.ClientKey.client)
}

// -------------------------------------------------------------------

// AccessPoints_AccessPoint_Ssids_Ssid_Clients

// repeated .openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Clients.ClientKey client = 49373022 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/clients/client"];
inline int AccessPoints_AccessPoint_Ssids_Ssid_Clients::client_size() const {
  return client_.size();
}
inline void AccessPoints_AccessPoint_Ssids_Ssid_Clients::clear_client() {
  client_.Clear();
}
inline const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Clients_ClientKey& AccessPoints_AccessPoint_Ssids_Ssid_Clients::client(int index) const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Clients.client)
  return client_.Get(index);
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Clients_ClientKey* AccessPoints_AccessPoint_Ssids_Ssid_Clients::mutable_client(int index) {
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Clients.client)
  return client_.Mutable(index);
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Clients_ClientKey* AccessPoints_AccessPoint_Ssids_Ssid_Clients::add_client() {
  // @@protoc_insertion_point(field_add:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Clients.client)
  return client_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Clients_ClientKey >*
AccessPoints_AccessPoint_Ssids_Ssid_Clients::mutable_client() {
  // @@protoc_insertion_point(field_mutable_list:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Clients.client)
  return &client_;
}
inline const ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Clients_ClientKey >&
AccessPoints_AccessPoint_Ssids_Ssid_Clients::client() const {
  // @@protoc_insertion_point(field_list:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Clients.client)
  return client_;
}

// -------------------------------------------------------------------

// AccessPoints_AccessPoint_Ssids_Ssid_Config

// .ywrapper.BoolValue advertise_apname = 430443627 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/config/advertise-apname"];
inline bool AccessPoints_AccessPoint_Ssids_Ssid_Config::has_advertise_apname() const {
  return this != internal_default_instance() && advertise_apname_ != NULL;
}
inline const ::ywrapper::BoolValue& AccessPoints_AccessPoint_Ssids_Ssid_Config::advertise_apname() const {
  const ::ywrapper::BoolValue* p = advertise_apname_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Config.advertise_apname)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::BoolValue*>(
      &::ywrapper::_BoolValue_default_instance_);
}
inline ::ywrapper::BoolValue* AccessPoints_AccessPoint_Ssids_Ssid_Config::release_advertise_apname() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Config.advertise_apname)
  
  ::ywrapper::BoolValue* temp = advertise_apname_;
  advertise_apname_ = NULL;
  return temp;
}
inline ::ywrapper::BoolValue* AccessPoints_AccessPoint_Ssids_Ssid_Config::mutable_advertise_apname() {
  
  if (advertise_apname_ == NULL) {
    advertise_apname_ = new ::ywrapper::BoolValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Config.advertise_apname)
  return advertise_apname_;
}
inline void AccessPoints_AccessPoint_Ssids_Ssid_Config::set_allocated_advertise_apname(::ywrapper::BoolValue* advertise_apname) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(advertise_apname_);
  }
  if (advertise_apname) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      advertise_apname = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, advertise_apname, submessage_arena);
    }
    
  } else {
    
  }
  advertise_apname_ = advertise_apname;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Config.advertise_apname)
}

// repeated .openconfig.enums.OpenconfigWifiTypesDATARATE basic_data_rates = 152957844 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/config/basic-data-rates"];
inline int AccessPoints_AccessPoint_Ssids_Ssid_Config::basic_data_rates_size() const {
  return basic_data_rates_.size();
}
inline void AccessPoints_AccessPoint_Ssids_Ssid_Config::clear_basic_data_rates() {
  basic_data_rates_.Clear();
}
inline ::openconfig::enums::OpenconfigWifiTypesDATARATE AccessPoints_AccessPoint_Ssids_Ssid_Config::basic_data_rates(int index) const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Config.basic_data_rates)
  return static_cast< ::openconfig::enums::OpenconfigWifiTypesDATARATE >(basic_data_rates_.Get(index));
}
inline void AccessPoints_AccessPoint_Ssids_Ssid_Config::set_basic_data_rates(int index, ::openconfig::enums::OpenconfigWifiTypesDATARATE value) {
  basic_data_rates_.Set(index, value);
  // @@protoc_insertion_point(field_set:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Config.basic_data_rates)
}
inline void AccessPoints_AccessPoint_Ssids_Ssid_Config::add_basic_data_rates(::openconfig::enums::OpenconfigWifiTypesDATARATE value) {
  basic_data_rates_.Add(value);
  // @@protoc_insertion_point(field_add:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Config.basic_data_rates)
}
inline const ::google::protobuf::RepeatedField<int>&
AccessPoints_AccessPoint_Ssids_Ssid_Config::basic_data_rates() const {
  // @@protoc_insertion_point(field_list:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Config.basic_data_rates)
  return basic_data_rates_;
}
inline ::google::protobuf::RepeatedField<int>*
AccessPoints_AccessPoint_Ssids_Ssid_Config::mutable_basic_data_rates() {
  // @@protoc_insertion_point(field_mutable_list:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Config.basic_data_rates)
  return &basic_data_rates_;
}

// .ywrapper.BoolValue broadcast_filter = 380494917 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/config/broadcast-filter"];
inline bool AccessPoints_AccessPoint_Ssids_Ssid_Config::has_broadcast_filter() const {
  return this != internal_default_instance() && broadcast_filter_ != NULL;
}
inline const ::ywrapper::BoolValue& AccessPoints_AccessPoint_Ssids_Ssid_Config::broadcast_filter() const {
  const ::ywrapper::BoolValue* p = broadcast_filter_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Config.broadcast_filter)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::BoolValue*>(
      &::ywrapper::_BoolValue_default_instance_);
}
inline ::ywrapper::BoolValue* AccessPoints_AccessPoint_Ssids_Ssid_Config::release_broadcast_filter() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Config.broadcast_filter)
  
  ::ywrapper::BoolValue* temp = broadcast_filter_;
  broadcast_filter_ = NULL;
  return temp;
}
inline ::ywrapper::BoolValue* AccessPoints_AccessPoint_Ssids_Ssid_Config::mutable_broadcast_filter() {
  
  if (broadcast_filter_ == NULL) {
    broadcast_filter_ = new ::ywrapper::BoolValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Config.broadcast_filter)
  return broadcast_filter_;
}
inline void AccessPoints_AccessPoint_Ssids_Ssid_Config::set_allocated_broadcast_filter(::ywrapper::BoolValue* broadcast_filter) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(broadcast_filter_);
  }
  if (broadcast_filter) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      broadcast_filter = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, broadcast_filter, submessage_arena);
    }
    
  } else {
    
  }
  broadcast_filter_ = broadcast_filter;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Config.broadcast_filter)
}

// .ywrapper.BoolValue csa = 10921288 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/config/csa"];
inline bool AccessPoints_AccessPoint_Ssids_Ssid_Config::has_csa() const {
  return this != internal_default_instance() && csa_ != NULL;
}
inline const ::ywrapper::BoolValue& AccessPoints_AccessPoint_Ssids_Ssid_Config::csa() const {
  const ::ywrapper::BoolValue* p = csa_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Config.csa)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::BoolValue*>(
      &::ywrapper::_BoolValue_default_instance_);
}
inline ::ywrapper::BoolValue* AccessPoints_AccessPoint_Ssids_Ssid_Config::release_csa() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Config.csa)
  
  ::ywrapper::BoolValue* temp = csa_;
  csa_ = NULL;
  return temp;
}
inline ::ywrapper::BoolValue* AccessPoints_AccessPoint_Ssids_Ssid_Config::mutable_csa() {
  
  if (csa_ == NULL) {
    csa_ = new ::ywrapper::BoolValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Config.csa)
  return csa_;
}
inline void AccessPoints_AccessPoint_Ssids_Ssid_Config::set_allocated_csa(::ywrapper::BoolValue* csa) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(csa_);
  }
  if (csa) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      csa = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, csa, submessage_arena);
    }
    
  } else {
    
  }
  csa_ = csa;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Config.csa)
}

// .ywrapper.BoolValue dhcp_required = 495414066 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/config/dhcp-required"];
inline bool AccessPoints_AccessPoint_Ssids_Ssid_Config::has_dhcp_required() const {
  return this != internal_default_instance() && dhcp_required_ != NULL;
}
inline const ::ywrapper::BoolValue& AccessPoints_AccessPoint_Ssids_Ssid_Config::dhcp_required() const {
  const ::ywrapper::BoolValue* p = dhcp_required_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Config.dhcp_required)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::BoolValue*>(
      &::ywrapper::_BoolValue_default_instance_);
}
inline ::ywrapper::BoolValue* AccessPoints_AccessPoint_Ssids_Ssid_Config::release_dhcp_required() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Config.dhcp_required)
  
  ::ywrapper::BoolValue* temp = dhcp_required_;
  dhcp_required_ = NULL;
  return temp;
}
inline ::ywrapper::BoolValue* AccessPoints_AccessPoint_Ssids_Ssid_Config::mutable_dhcp_required() {
  
  if (dhcp_required_ == NULL) {
    dhcp_required_ = new ::ywrapper::BoolValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Config.dhcp_required)
  return dhcp_required_;
}
inline void AccessPoints_AccessPoint_Ssids_Ssid_Config::set_allocated_dhcp_required(::ywrapper::BoolValue* dhcp_required) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(dhcp_required_);
  }
  if (dhcp_required) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      dhcp_required = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, dhcp_required, submessage_arena);
    }
    
  } else {
    
  }
  dhcp_required_ = dhcp_required;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Config.dhcp_required)
}

// .ywrapper.BoolValue dot11k = 122548655 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/config/dot11k"];
inline bool AccessPoints_AccessPoint_Ssids_Ssid_Config::has_dot11k() const {
  return this != internal_default_instance() && dot11k_ != NULL;
}
inline const ::ywrapper::BoolValue& AccessPoints_AccessPoint_Ssids_Ssid_Config::dot11k() const {
  const ::ywrapper::BoolValue* p = dot11k_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Config.dot11k)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::BoolValue*>(
      &::ywrapper::_BoolValue_default_instance_);
}
inline ::ywrapper::BoolValue* AccessPoints_AccessPoint_Ssids_Ssid_Config::release_dot11k() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Config.dot11k)
  
  ::ywrapper::BoolValue* temp = dot11k_;
  dot11k_ = NULL;
  return temp;
}
inline ::ywrapper::BoolValue* AccessPoints_AccessPoint_Ssids_Ssid_Config::mutable_dot11k() {
  
  if (dot11k_ == NULL) {
    dot11k_ = new ::ywrapper::BoolValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Config.dot11k)
  return dot11k_;
}
inline void AccessPoints_AccessPoint_Ssids_Ssid_Config::set_allocated_dot11k(::ywrapper::BoolValue* dot11k) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(dot11k_);
  }
  if (dot11k) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      dot11k = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, dot11k, submessage_arena);
    }
    
  } else {
    
  }
  dot11k_ = dot11k;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Config.dot11k)
}

// .ywrapper.BoolValue dva = 95942216 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/config/dva"];
inline bool AccessPoints_AccessPoint_Ssids_Ssid_Config::has_dva() const {
  return this != internal_default_instance() && dva_ != NULL;
}
inline const ::ywrapper::BoolValue& AccessPoints_AccessPoint_Ssids_Ssid_Config::dva() const {
  const ::ywrapper::BoolValue* p = dva_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Config.dva)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::BoolValue*>(
      &::ywrapper::_BoolValue_default_instance_);
}
inline ::ywrapper::BoolValue* AccessPoints_AccessPoint_Ssids_Ssid_Config::release_dva() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Config.dva)
  
  ::ywrapper::BoolValue* temp = dva_;
  dva_ = NULL;
  return temp;
}
inline ::ywrapper::BoolValue* AccessPoints_AccessPoint_Ssids_Ssid_Config::mutable_dva() {
  
  if (dva_ == NULL) {
    dva_ = new ::ywrapper::BoolValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Config.dva)
  return dva_;
}
inline void AccessPoints_AccessPoint_Ssids_Ssid_Config::set_allocated_dva(::ywrapper::BoolValue* dva) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(dva_);
  }
  if (dva) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      dva = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, dva, submessage_arena);
    }
    
  } else {
    
  }
  dva_ = dva;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Config.dva)
}

// .ywrapper.BoolValue enabled = 243311784 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/config/enabled"];
inline bool AccessPoints_AccessPoint_Ssids_Ssid_Config::has_enabled() const {
  return this != internal_default_instance() && enabled_ != NULL;
}
inline const ::ywrapper::BoolValue& AccessPoints_AccessPoint_Ssids_Ssid_Config::enabled() const {
  const ::ywrapper::BoolValue* p = enabled_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Config.enabled)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::BoolValue*>(
      &::ywrapper::_BoolValue_default_instance_);
}
inline ::ywrapper::BoolValue* AccessPoints_AccessPoint_Ssids_Ssid_Config::release_enabled() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Config.enabled)
  
  ::ywrapper::BoolValue* temp = enabled_;
  enabled_ = NULL;
  return temp;
}
inline ::ywrapper::BoolValue* AccessPoints_AccessPoint_Ssids_Ssid_Config::mutable_enabled() {
  
  if (enabled_ == NULL) {
    enabled_ = new ::ywrapper::BoolValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Config.enabled)
  return enabled_;
}
inline void AccessPoints_AccessPoint_Ssids_Ssid_Config::set_allocated_enabled(::ywrapper::BoolValue* enabled) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(enabled_);
  }
  if (enabled) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      enabled = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, enabled, submessage_arena);
    }
    
  } else {
    
  }
  enabled_ = enabled;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Config.enabled)
}

// .ywrapper.UintValue gtk_timeout = 241734605 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/config/gtk-timeout"];
inline bool AccessPoints_AccessPoint_Ssids_Ssid_Config::has_gtk_timeout() const {
  return this != internal_default_instance() && gtk_timeout_ != NULL;
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_Ssids_Ssid_Config::gtk_timeout() const {
  const ::ywrapper::UintValue* p = gtk_timeout_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Config.gtk_timeout)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Ssids_Ssid_Config::release_gtk_timeout() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Config.gtk_timeout)
  
  ::ywrapper::UintValue* temp = gtk_timeout_;
  gtk_timeout_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Ssids_Ssid_Config::mutable_gtk_timeout() {
  
  if (gtk_timeout_ == NULL) {
    gtk_timeout_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Config.gtk_timeout)
  return gtk_timeout_;
}
inline void AccessPoints_AccessPoint_Ssids_Ssid_Config::set_allocated_gtk_timeout(::ywrapper::UintValue* gtk_timeout) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(gtk_timeout_);
  }
  if (gtk_timeout) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      gtk_timeout = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, gtk_timeout, submessage_arena);
    }
    
  } else {
    
  }
  gtk_timeout_ = gtk_timeout;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Config.gtk_timeout)
}

// .ywrapper.BoolValue hidden = 59524017 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/config/hidden"];
inline bool AccessPoints_AccessPoint_Ssids_Ssid_Config::has_hidden() const {
  return this != internal_default_instance() && hidden_ != NULL;
}
inline const ::ywrapper::BoolValue& AccessPoints_AccessPoint_Ssids_Ssid_Config::hidden() const {
  const ::ywrapper::BoolValue* p = hidden_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Config.hidden)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::BoolValue*>(
      &::ywrapper::_BoolValue_default_instance_);
}
inline ::ywrapper::BoolValue* AccessPoints_AccessPoint_Ssids_Ssid_Config::release_hidden() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Config.hidden)
  
  ::ywrapper::BoolValue* temp = hidden_;
  hidden_ = NULL;
  return temp;
}
inline ::ywrapper::BoolValue* AccessPoints_AccessPoint_Ssids_Ssid_Config::mutable_hidden() {
  
  if (hidden_ == NULL) {
    hidden_ = new ::ywrapper::BoolValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Config.hidden)
  return hidden_;
}
inline void AccessPoints_AccessPoint_Ssids_Ssid_Config::set_allocated_hidden(::ywrapper::BoolValue* hidden) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(hidden_);
  }
  if (hidden) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      hidden = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, hidden, submessage_arena);
    }
    
  } else {
    
  }
  hidden_ = hidden;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Config.hidden)
}

// .ywrapper.BoolValue ipv6_ndp_filter = 299064706 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/config/ipv6-ndp-filter"];
inline bool AccessPoints_AccessPoint_Ssids_Ssid_Config::has_ipv6_ndp_filter() const {
  return this != internal_default_instance() && ipv6_ndp_filter_ != NULL;
}
inline const ::ywrapper::BoolValue& AccessPoints_AccessPoint_Ssids_Ssid_Config::ipv6_ndp_filter() const {
  const ::ywrapper::BoolValue* p = ipv6_ndp_filter_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Config.ipv6_ndp_filter)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::BoolValue*>(
      &::ywrapper::_BoolValue_default_instance_);
}
inline ::ywrapper::BoolValue* AccessPoints_AccessPoint_Ssids_Ssid_Config::release_ipv6_ndp_filter() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Config.ipv6_ndp_filter)
  
  ::ywrapper::BoolValue* temp = ipv6_ndp_filter_;
  ipv6_ndp_filter_ = NULL;
  return temp;
}
inline ::ywrapper::BoolValue* AccessPoints_AccessPoint_Ssids_Ssid_Config::mutable_ipv6_ndp_filter() {
  
  if (ipv6_ndp_filter_ == NULL) {
    ipv6_ndp_filter_ = new ::ywrapper::BoolValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Config.ipv6_ndp_filter)
  return ipv6_ndp_filter_;
}
inline void AccessPoints_AccessPoint_Ssids_Ssid_Config::set_allocated_ipv6_ndp_filter(::ywrapper::BoolValue* ipv6_ndp_filter) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(ipv6_ndp_filter_);
  }
  if (ipv6_ndp_filter) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      ipv6_ndp_filter = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, ipv6_ndp_filter, submessage_arena);
    }
    
  } else {
    
  }
  ipv6_ndp_filter_ = ipv6_ndp_filter;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Config.ipv6_ndp_filter)
}

// .ywrapper.UintValue ipv6_ndp_filter_timer = 497415066 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/config/ipv6-ndp-filter-timer"];
inline bool AccessPoints_AccessPoint_Ssids_Ssid_Config::has_ipv6_ndp_filter_timer() const {
  return this != internal_default_instance() && ipv6_ndp_filter_timer_ != NULL;
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_Ssids_Ssid_Config::ipv6_ndp_filter_timer() const {
  const ::ywrapper::UintValue* p = ipv6_ndp_filter_timer_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Config.ipv6_ndp_filter_timer)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Ssids_Ssid_Config::release_ipv6_ndp_filter_timer() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Config.ipv6_ndp_filter_timer)
  
  ::ywrapper::UintValue* temp = ipv6_ndp_filter_timer_;
  ipv6_ndp_filter_timer_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Ssids_Ssid_Config::mutable_ipv6_ndp_filter_timer() {
  
  if (ipv6_ndp_filter_timer_ == NULL) {
    ipv6_ndp_filter_timer_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Config.ipv6_ndp_filter_timer)
  return ipv6_ndp_filter_timer_;
}
inline void AccessPoints_AccessPoint_Ssids_Ssid_Config::set_allocated_ipv6_ndp_filter_timer(::ywrapper::UintValue* ipv6_ndp_filter_timer) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(ipv6_ndp_filter_timer_);
  }
  if (ipv6_ndp_filter_timer) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      ipv6_ndp_filter_timer = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, ipv6_ndp_filter_timer, submessage_arena);
    }
    
  } else {
    
  }
  ipv6_ndp_filter_timer_ = ipv6_ndp_filter_timer;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Config.ipv6_ndp_filter_timer)
}

// .ywrapper.StringValue mobility_domain = 333478803 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/config/mobility-domain"];
inline bool AccessPoints_AccessPoint_Ssids_Ssid_Config::has_mobility_domain() const {
  return this != internal_default_instance() && mobility_domain_ != NULL;
}
inline const ::ywrapper::StringValue& AccessPoints_AccessPoint_Ssids_Ssid_Config::mobility_domain() const {
  const ::ywrapper::StringValue* p = mobility_domain_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Config.mobility_domain)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::StringValue*>(
      &::ywrapper::_StringValue_default_instance_);
}
inline ::ywrapper::StringValue* AccessPoints_AccessPoint_Ssids_Ssid_Config::release_mobility_domain() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Config.mobility_domain)
  
  ::ywrapper::StringValue* temp = mobility_domain_;
  mobility_domain_ = NULL;
  return temp;
}
inline ::ywrapper::StringValue* AccessPoints_AccessPoint_Ssids_Ssid_Config::mutable_mobility_domain() {
  
  if (mobility_domain_ == NULL) {
    mobility_domain_ = new ::ywrapper::StringValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Config.mobility_domain)
  return mobility_domain_;
}
inline void AccessPoints_AccessPoint_Ssids_Ssid_Config::set_allocated_mobility_domain(::ywrapper::StringValue* mobility_domain) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(mobility_domain_);
  }
  if (mobility_domain) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      mobility_domain = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, mobility_domain, submessage_arena);
    }
    
  } else {
    
  }
  mobility_domain_ = mobility_domain;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Config.mobility_domain)
}

// .ywrapper.BoolValue multicast_filter = 126597300 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/config/multicast-filter"];
inline bool AccessPoints_AccessPoint_Ssids_Ssid_Config::has_multicast_filter() const {
  return this != internal_default_instance() && multicast_filter_ != NULL;
}
inline const ::ywrapper::BoolValue& AccessPoints_AccessPoint_Ssids_Ssid_Config::multicast_filter() const {
  const ::ywrapper::BoolValue* p = multicast_filter_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Config.multicast_filter)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::BoolValue*>(
      &::ywrapper::_BoolValue_default_instance_);
}
inline ::ywrapper::BoolValue* AccessPoints_AccessPoint_Ssids_Ssid_Config::release_multicast_filter() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Config.multicast_filter)
  
  ::ywrapper::BoolValue* temp = multicast_filter_;
  multicast_filter_ = NULL;
  return temp;
}
inline ::ywrapper::BoolValue* AccessPoints_AccessPoint_Ssids_Ssid_Config::mutable_multicast_filter() {
  
  if (multicast_filter_ == NULL) {
    multicast_filter_ = new ::ywrapper::BoolValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Config.multicast_filter)
  return multicast_filter_;
}
inline void AccessPoints_AccessPoint_Ssids_Ssid_Config::set_allocated_multicast_filter(::ywrapper::BoolValue* multicast_filter) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(multicast_filter_);
  }
  if (multicast_filter) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      multicast_filter = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, multicast_filter, submessage_arena);
    }
    
  } else {
    
  }
  multicast_filter_ = multicast_filter;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Config.multicast_filter)
}

// .ywrapper.StringValue name = 377095704 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/config/name"];
inline bool AccessPoints_AccessPoint_Ssids_Ssid_Config::has_name() const {
  return this != internal_default_instance() && name_ != NULL;
}
inline const ::ywrapper::StringValue& AccessPoints_AccessPoint_Ssids_Ssid_Config::name() const {
  const ::ywrapper::StringValue* p = name_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Config.name)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::StringValue*>(
      &::ywrapper::_StringValue_default_instance_);
}
inline ::ywrapper::StringValue* AccessPoints_AccessPoint_Ssids_Ssid_Config::release_name() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Config.name)
  
  ::ywrapper::StringValue* temp = name_;
  name_ = NULL;
  return temp;
}
inline ::ywrapper::StringValue* AccessPoints_AccessPoint_Ssids_Ssid_Config::mutable_name() {
  
  if (name_ == NULL) {
    name_ = new ::ywrapper::StringValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Config.name)
  return name_;
}
inline void AccessPoints_AccessPoint_Ssids_Ssid_Config::set_allocated_name(::ywrapper::StringValue* name) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(name_);
  }
  if (name) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      name = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, name, submessage_arena);
    }
    
  } else {
    
  }
  name_ = name;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Config.name)
}

// .ywrapper.BoolValue okc = 12892766 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/config/okc"];
inline bool AccessPoints_AccessPoint_Ssids_Ssid_Config::has_okc() const {
  return this != internal_default_instance() && okc_ != NULL;
}
inline const ::ywrapper::BoolValue& AccessPoints_AccessPoint_Ssids_Ssid_Config::okc() const {
  const ::ywrapper::BoolValue* p = okc_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Config.okc)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::BoolValue*>(
      &::ywrapper::_BoolValue_default_instance_);
}
inline ::ywrapper::BoolValue* AccessPoints_AccessPoint_Ssids_Ssid_Config::release_okc() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Config.okc)
  
  ::ywrapper::BoolValue* temp = okc_;
  okc_ = NULL;
  return temp;
}
inline ::ywrapper::BoolValue* AccessPoints_AccessPoint_Ssids_Ssid_Config::mutable_okc() {
  
  if (okc_ == NULL) {
    okc_ = new ::ywrapper::BoolValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Config.okc)
  return okc_;
}
inline void AccessPoints_AccessPoint_Ssids_Ssid_Config::set_allocated_okc(::ywrapper::BoolValue* okc) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(okc_);
  }
  if (okc) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      okc = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, okc, submessage_arena);
    }
    
  } else {
    
  }
  okc_ = okc;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Config.okc)
}

// .openconfig.enums.OpenconfigWifiTypesOPERATINGFREQUENCY operating_frequency = 231725667 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/config/operating-frequency"];
inline void AccessPoints_AccessPoint_Ssids_Ssid_Config::clear_operating_frequency() {
  operating_frequency_ = 0;
}
inline ::openconfig::enums::OpenconfigWifiTypesOPERATINGFREQUENCY AccessPoints_AccessPoint_Ssids_Ssid_Config::operating_frequency() const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Config.operating_frequency)
  return static_cast< ::openconfig::enums::OpenconfigWifiTypesOPERATINGFREQUENCY >(operating_frequency_);
}
inline void AccessPoints_AccessPoint_Ssids_Ssid_Config::set_operating_frequency(::openconfig::enums::OpenconfigWifiTypesOPERATINGFREQUENCY value) {
  
  operating_frequency_ = value;
  // @@protoc_insertion_point(field_set:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Config.operating_frequency)
}

// .openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Config.Opmode opmode = 88589157 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/config/opmode"];
inline void AccessPoints_AccessPoint_Ssids_Ssid_Config::clear_opmode() {
  opmode_ = 0;
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Config_Opmode AccessPoints_AccessPoint_Ssids_Ssid_Config::opmode() const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Config.opmode)
  return static_cast< ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Config_Opmode >(opmode_);
}
inline void AccessPoints_AccessPoint_Ssids_Ssid_Config::set_opmode(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Config_Opmode value) {
  
  opmode_ = value;
  // @@protoc_insertion_point(field_set:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Config.opmode)
}

// .ywrapper.UintValue ptk_timeout = 206828754 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/config/ptk-timeout"];
inline bool AccessPoints_AccessPoint_Ssids_Ssid_Config::has_ptk_timeout() const {
  return this != internal_default_instance() && ptk_timeout_ != NULL;
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_Ssids_Ssid_Config::ptk_timeout() const {
  const ::ywrapper::UintValue* p = ptk_timeout_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Config.ptk_timeout)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Ssids_Ssid_Config::release_ptk_timeout() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Config.ptk_timeout)
  
  ::ywrapper::UintValue* temp = ptk_timeout_;
  ptk_timeout_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Ssids_Ssid_Config::mutable_ptk_timeout() {
  
  if (ptk_timeout_ == NULL) {
    ptk_timeout_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Config.ptk_timeout)
  return ptk_timeout_;
}
inline void AccessPoints_AccessPoint_Ssids_Ssid_Config::set_allocated_ptk_timeout(::ywrapper::UintValue* ptk_timeout) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(ptk_timeout_);
  }
  if (ptk_timeout) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      ptk_timeout = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, ptk_timeout, submessage_arena);
    }
    
  } else {
    
  }
  ptk_timeout_ = ptk_timeout;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Config.ptk_timeout)
}

// .ywrapper.BoolValue qbss_load = 373022163 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/config/qbss-load"];
inline bool AccessPoints_AccessPoint_Ssids_Ssid_Config::has_qbss_load() const {
  return this != internal_default_instance() && qbss_load_ != NULL;
}
inline const ::ywrapper::BoolValue& AccessPoints_AccessPoint_Ssids_Ssid_Config::qbss_load() const {
  const ::ywrapper::BoolValue* p = qbss_load_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Config.qbss_load)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::BoolValue*>(
      &::ywrapper::_BoolValue_default_instance_);
}
inline ::ywrapper::BoolValue* AccessPoints_AccessPoint_Ssids_Ssid_Config::release_qbss_load() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Config.qbss_load)
  
  ::ywrapper::BoolValue* temp = qbss_load_;
  qbss_load_ = NULL;
  return temp;
}
inline ::ywrapper::BoolValue* AccessPoints_AccessPoint_Ssids_Ssid_Config::mutable_qbss_load() {
  
  if (qbss_load_ == NULL) {
    qbss_load_ = new ::ywrapper::BoolValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Config.qbss_load)
  return qbss_load_;
}
inline void AccessPoints_AccessPoint_Ssids_Ssid_Config::set_allocated_qbss_load(::ywrapper::BoolValue* qbss_load) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(qbss_load_);
  }
  if (qbss_load) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      qbss_load = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, qbss_load, submessage_arena);
    }
    
  } else {
    
  }
  qbss_load_ = qbss_load;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Config.qbss_load)
}

// .ywrapper.StringValue server_group = 4432650 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/config/server-group"];
inline bool AccessPoints_AccessPoint_Ssids_Ssid_Config::has_server_group() const {
  return this != internal_default_instance() && server_group_ != NULL;
}
inline const ::ywrapper::StringValue& AccessPoints_AccessPoint_Ssids_Ssid_Config::server_group() const {
  const ::ywrapper::StringValue* p = server_group_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Config.server_group)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::StringValue*>(
      &::ywrapper::_StringValue_default_instance_);
}
inline ::ywrapper::StringValue* AccessPoints_AccessPoint_Ssids_Ssid_Config::release_server_group() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Config.server_group)
  
  ::ywrapper::StringValue* temp = server_group_;
  server_group_ = NULL;
  return temp;
}
inline ::ywrapper::StringValue* AccessPoints_AccessPoint_Ssids_Ssid_Config::mutable_server_group() {
  
  if (server_group_ == NULL) {
    server_group_ = new ::ywrapper::StringValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Config.server_group)
  return server_group_;
}
inline void AccessPoints_AccessPoint_Ssids_Ssid_Config::set_allocated_server_group(::ywrapper::StringValue* server_group) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(server_group_);
  }
  if (server_group) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      server_group = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, server_group, submessage_arena);
    }
    
  } else {
    
  }
  server_group_ = server_group;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Config.server_group)
}

// .ywrapper.BoolValue station_isolation = 479304948 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/config/station-isolation"];
inline bool AccessPoints_AccessPoint_Ssids_Ssid_Config::has_station_isolation() const {
  return this != internal_default_instance() && station_isolation_ != NULL;
}
inline const ::ywrapper::BoolValue& AccessPoints_AccessPoint_Ssids_Ssid_Config::station_isolation() const {
  const ::ywrapper::BoolValue* p = station_isolation_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Config.station_isolation)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::BoolValue*>(
      &::ywrapper::_BoolValue_default_instance_);
}
inline ::ywrapper::BoolValue* AccessPoints_AccessPoint_Ssids_Ssid_Config::release_station_isolation() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Config.station_isolation)
  
  ::ywrapper::BoolValue* temp = station_isolation_;
  station_isolation_ = NULL;
  return temp;
}
inline ::ywrapper::BoolValue* AccessPoints_AccessPoint_Ssids_Ssid_Config::mutable_station_isolation() {
  
  if (station_isolation_ == NULL) {
    station_isolation_ = new ::ywrapper::BoolValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Config.station_isolation)
  return station_isolation_;
}
inline void AccessPoints_AccessPoint_Ssids_Ssid_Config::set_allocated_station_isolation(::ywrapper::BoolValue* station_isolation) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(station_isolation_);
  }
  if (station_isolation) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      station_isolation = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, station_isolation, submessage_arena);
    }
    
  } else {
    
  }
  station_isolation_ = station_isolation;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Config.station_isolation)
}

// repeated .openconfig.enums.OpenconfigWifiTypesDATARATE supported_data_rates = 373081616 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/config/supported-data-rates"];
inline int AccessPoints_AccessPoint_Ssids_Ssid_Config::supported_data_rates_size() const {
  return supported_data_rates_.size();
}
inline void AccessPoints_AccessPoint_Ssids_Ssid_Config::clear_supported_data_rates() {
  supported_data_rates_.Clear();
}
inline ::openconfig::enums::OpenconfigWifiTypesDATARATE AccessPoints_AccessPoint_Ssids_Ssid_Config::supported_data_rates(int index) const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Config.supported_data_rates)
  return static_cast< ::openconfig::enums::OpenconfigWifiTypesDATARATE >(supported_data_rates_.Get(index));
}
inline void AccessPoints_AccessPoint_Ssids_Ssid_Config::set_supported_data_rates(int index, ::openconfig::enums::OpenconfigWifiTypesDATARATE value) {
  supported_data_rates_.Set(index, value);
  // @@protoc_insertion_point(field_set:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Config.supported_data_rates)
}
inline void AccessPoints_AccessPoint_Ssids_Ssid_Config::add_supported_data_rates(::openconfig::enums::OpenconfigWifiTypesDATARATE value) {
  supported_data_rates_.Add(value);
  // @@protoc_insertion_point(field_add:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Config.supported_data_rates)
}
inline const ::google::protobuf::RepeatedField<int>&
AccessPoints_AccessPoint_Ssids_Ssid_Config::supported_data_rates() const {
  // @@protoc_insertion_point(field_list:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Config.supported_data_rates)
  return supported_data_rates_;
}
inline ::google::protobuf::RepeatedField<int>*
AccessPoints_AccessPoint_Ssids_Ssid_Config::mutable_supported_data_rates() {
  // @@protoc_insertion_point(field_mutable_list:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Config.supported_data_rates)
  return &supported_data_rates_;
}

// .ywrapper.UintValue vlan_id = 261414696 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/config/vlan-id"];
inline bool AccessPoints_AccessPoint_Ssids_Ssid_Config::has_vlan_id() const {
  return this != internal_default_instance() && vlan_id_ != NULL;
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_Ssids_Ssid_Config::vlan_id() const {
  const ::ywrapper::UintValue* p = vlan_id_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Config.vlan_id)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Ssids_Ssid_Config::release_vlan_id() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Config.vlan_id)
  
  ::ywrapper::UintValue* temp = vlan_id_;
  vlan_id_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Ssids_Ssid_Config::mutable_vlan_id() {
  
  if (vlan_id_ == NULL) {
    vlan_id_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Config.vlan_id)
  return vlan_id_;
}
inline void AccessPoints_AccessPoint_Ssids_Ssid_Config::set_allocated_vlan_id(::ywrapper::UintValue* vlan_id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(vlan_id_);
  }
  if (vlan_id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      vlan_id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, vlan_id, submessage_arena);
    }
    
  } else {
    
  }
  vlan_id_ = vlan_id;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Config.vlan_id)
}

// .ywrapper.StringValue wpa2_psk = 29027968 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/config/wpa2-psk"];
inline bool AccessPoints_AccessPoint_Ssids_Ssid_Config::has_wpa2_psk() const {
  return this != internal_default_instance() && wpa2_psk_ != NULL;
}
inline const ::ywrapper::StringValue& AccessPoints_AccessPoint_Ssids_Ssid_Config::wpa2_psk() const {
  const ::ywrapper::StringValue* p = wpa2_psk_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Config.wpa2_psk)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::StringValue*>(
      &::ywrapper::_StringValue_default_instance_);
}
inline ::ywrapper::StringValue* AccessPoints_AccessPoint_Ssids_Ssid_Config::release_wpa2_psk() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Config.wpa2_psk)
  
  ::ywrapper::StringValue* temp = wpa2_psk_;
  wpa2_psk_ = NULL;
  return temp;
}
inline ::ywrapper::StringValue* AccessPoints_AccessPoint_Ssids_Ssid_Config::mutable_wpa2_psk() {
  
  if (wpa2_psk_ == NULL) {
    wpa2_psk_ = new ::ywrapper::StringValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Config.wpa2_psk)
  return wpa2_psk_;
}
inline void AccessPoints_AccessPoint_Ssids_Ssid_Config::set_allocated_wpa2_psk(::ywrapper::StringValue* wpa2_psk) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(wpa2_psk_);
  }
  if (wpa2_psk) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      wpa2_psk = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, wpa2_psk, submessage_arena);
    }
    
  } else {
    
  }
  wpa2_psk_ = wpa2_psk;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Config.wpa2_psk)
}

// -------------------------------------------------------------------

// AccessPoints_AccessPoint_Ssids_Ssid_Dot11R_Config

// .ywrapper.BoolValue dot11r = 196944768 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/dot11r/config/dot11r"];
inline bool AccessPoints_AccessPoint_Ssids_Ssid_Dot11R_Config::has_dot11r() const {
  return this != internal_default_instance() && dot11r_ != NULL;
}
inline const ::ywrapper::BoolValue& AccessPoints_AccessPoint_Ssids_Ssid_Dot11R_Config::dot11r() const {
  const ::ywrapper::BoolValue* p = dot11r_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Dot11R.Config.dot11r)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::BoolValue*>(
      &::ywrapper::_BoolValue_default_instance_);
}
inline ::ywrapper::BoolValue* AccessPoints_AccessPoint_Ssids_Ssid_Dot11R_Config::release_dot11r() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Dot11R.Config.dot11r)
  
  ::ywrapper::BoolValue* temp = dot11r_;
  dot11r_ = NULL;
  return temp;
}
inline ::ywrapper::BoolValue* AccessPoints_AccessPoint_Ssids_Ssid_Dot11R_Config::mutable_dot11r() {
  
  if (dot11r_ == NULL) {
    dot11r_ = new ::ywrapper::BoolValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Dot11R.Config.dot11r)
  return dot11r_;
}
inline void AccessPoints_AccessPoint_Ssids_Ssid_Dot11R_Config::set_allocated_dot11r(::ywrapper::BoolValue* dot11r) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(dot11r_);
  }
  if (dot11r) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      dot11r = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, dot11r, submessage_arena);
    }
    
  } else {
    
  }
  dot11r_ = dot11r;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Dot11R.Config.dot11r)
}

// .ywrapper.UintValue dot11r_domainid = 381501970 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/dot11r/config/dot11r-domainid"];
inline bool AccessPoints_AccessPoint_Ssids_Ssid_Dot11R_Config::has_dot11r_domainid() const {
  return this != internal_default_instance() && dot11r_domainid_ != NULL;
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_Ssids_Ssid_Dot11R_Config::dot11r_domainid() const {
  const ::ywrapper::UintValue* p = dot11r_domainid_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Dot11R.Config.dot11r_domainid)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Ssids_Ssid_Dot11R_Config::release_dot11r_domainid() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Dot11R.Config.dot11r_domainid)
  
  ::ywrapper::UintValue* temp = dot11r_domainid_;
  dot11r_domainid_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Ssids_Ssid_Dot11R_Config::mutable_dot11r_domainid() {
  
  if (dot11r_domainid_ == NULL) {
    dot11r_domainid_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Dot11R.Config.dot11r_domainid)
  return dot11r_domainid_;
}
inline void AccessPoints_AccessPoint_Ssids_Ssid_Dot11R_Config::set_allocated_dot11r_domainid(::ywrapper::UintValue* dot11r_domainid) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(dot11r_domainid_);
  }
  if (dot11r_domainid) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      dot11r_domainid = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, dot11r_domainid, submessage_arena);
    }
    
  } else {
    
  }
  dot11r_domainid_ = dot11r_domainid;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Dot11R.Config.dot11r_domainid)
}

// .openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Dot11R.Config.Dot11RMethod dot11r_method = 145788970 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/dot11r/config/dot11r-method"];
inline void AccessPoints_AccessPoint_Ssids_Ssid_Dot11R_Config::clear_dot11r_method() {
  dot11r_method_ = 0;
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Dot11R_Config_Dot11RMethod AccessPoints_AccessPoint_Ssids_Ssid_Dot11R_Config::dot11r_method() const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Dot11R.Config.dot11r_method)
  return static_cast< ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Dot11R_Config_Dot11RMethod >(dot11r_method_);
}
inline void AccessPoints_AccessPoint_Ssids_Ssid_Dot11R_Config::set_dot11r_method(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Dot11R_Config_Dot11RMethod value) {
  
  dot11r_method_ = value;
  // @@protoc_insertion_point(field_set:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Dot11R.Config.dot11r_method)
}

// .ywrapper.UintValue dot11r_r1key_timeout = 205779077 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/dot11r/config/dot11r-r1key-timeout"];
inline bool AccessPoints_AccessPoint_Ssids_Ssid_Dot11R_Config::has_dot11r_r1key_timeout() const {
  return this != internal_default_instance() && dot11r_r1key_timeout_ != NULL;
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_Ssids_Ssid_Dot11R_Config::dot11r_r1key_timeout() const {
  const ::ywrapper::UintValue* p = dot11r_r1key_timeout_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Dot11R.Config.dot11r_r1key_timeout)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Ssids_Ssid_Dot11R_Config::release_dot11r_r1key_timeout() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Dot11R.Config.dot11r_r1key_timeout)
  
  ::ywrapper::UintValue* temp = dot11r_r1key_timeout_;
  dot11r_r1key_timeout_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Ssids_Ssid_Dot11R_Config::mutable_dot11r_r1key_timeout() {
  
  if (dot11r_r1key_timeout_ == NULL) {
    dot11r_r1key_timeout_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Dot11R.Config.dot11r_r1key_timeout)
  return dot11r_r1key_timeout_;
}
inline void AccessPoints_AccessPoint_Ssids_Ssid_Dot11R_Config::set_allocated_dot11r_r1key_timeout(::ywrapper::UintValue* dot11r_r1key_timeout) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(dot11r_r1key_timeout_);
  }
  if (dot11r_r1key_timeout) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      dot11r_r1key_timeout = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, dot11r_r1key_timeout, submessage_arena);
    }
    
  } else {
    
  }
  dot11r_r1key_timeout_ = dot11r_r1key_timeout;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Dot11R.Config.dot11r_r1key_timeout)
}

// -------------------------------------------------------------------

// AccessPoints_AccessPoint_Ssids_Ssid_Dot11R_State

// .ywrapper.BoolValue dot11r = 372456859 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/dot11r/state/dot11r"];
inline bool AccessPoints_AccessPoint_Ssids_Ssid_Dot11R_State::has_dot11r() const {
  return this != internal_default_instance() && dot11r_ != NULL;
}
inline const ::ywrapper::BoolValue& AccessPoints_AccessPoint_Ssids_Ssid_Dot11R_State::dot11r() const {
  const ::ywrapper::BoolValue* p = dot11r_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Dot11R.State.dot11r)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::BoolValue*>(
      &::ywrapper::_BoolValue_default_instance_);
}
inline ::ywrapper::BoolValue* AccessPoints_AccessPoint_Ssids_Ssid_Dot11R_State::release_dot11r() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Dot11R.State.dot11r)
  
  ::ywrapper::BoolValue* temp = dot11r_;
  dot11r_ = NULL;
  return temp;
}
inline ::ywrapper::BoolValue* AccessPoints_AccessPoint_Ssids_Ssid_Dot11R_State::mutable_dot11r() {
  
  if (dot11r_ == NULL) {
    dot11r_ = new ::ywrapper::BoolValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Dot11R.State.dot11r)
  return dot11r_;
}
inline void AccessPoints_AccessPoint_Ssids_Ssid_Dot11R_State::set_allocated_dot11r(::ywrapper::BoolValue* dot11r) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(dot11r_);
  }
  if (dot11r) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      dot11r = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, dot11r, submessage_arena);
    }
    
  } else {
    
  }
  dot11r_ = dot11r;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Dot11R.State.dot11r)
}

// .ywrapper.UintValue dot11r_domainid = 126600447 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/dot11r/state/dot11r-domainid"];
inline bool AccessPoints_AccessPoint_Ssids_Ssid_Dot11R_State::has_dot11r_domainid() const {
  return this != internal_default_instance() && dot11r_domainid_ != NULL;
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_Ssids_Ssid_Dot11R_State::dot11r_domainid() const {
  const ::ywrapper::UintValue* p = dot11r_domainid_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Dot11R.State.dot11r_domainid)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Ssids_Ssid_Dot11R_State::release_dot11r_domainid() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Dot11R.State.dot11r_domainid)
  
  ::ywrapper::UintValue* temp = dot11r_domainid_;
  dot11r_domainid_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Ssids_Ssid_Dot11R_State::mutable_dot11r_domainid() {
  
  if (dot11r_domainid_ == NULL) {
    dot11r_domainid_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Dot11R.State.dot11r_domainid)
  return dot11r_domainid_;
}
inline void AccessPoints_AccessPoint_Ssids_Ssid_Dot11R_State::set_allocated_dot11r_domainid(::ywrapper::UintValue* dot11r_domainid) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(dot11r_domainid_);
  }
  if (dot11r_domainid) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      dot11r_domainid = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, dot11r_domainid, submessage_arena);
    }
    
  } else {
    
  }
  dot11r_domainid_ = dot11r_domainid;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Dot11R.State.dot11r_domainid)
}

// .openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Dot11R.State.Dot11RMethod dot11r_method = 127604447 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/dot11r/state/dot11r-method"];
inline void AccessPoints_AccessPoint_Ssids_Ssid_Dot11R_State::clear_dot11r_method() {
  dot11r_method_ = 0;
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Dot11R_State_Dot11RMethod AccessPoints_AccessPoint_Ssids_Ssid_Dot11R_State::dot11r_method() const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Dot11R.State.dot11r_method)
  return static_cast< ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Dot11R_State_Dot11RMethod >(dot11r_method_);
}
inline void AccessPoints_AccessPoint_Ssids_Ssid_Dot11R_State::set_dot11r_method(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Dot11R_State_Dot11RMethod value) {
  
  dot11r_method_ = value;
  // @@protoc_insertion_point(field_set:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Dot11R.State.dot11r_method)
}

// .ywrapper.UintValue dot11r_r1key_timeout = 438778830 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/dot11r/state/dot11r-r1key-timeout"];
inline bool AccessPoints_AccessPoint_Ssids_Ssid_Dot11R_State::has_dot11r_r1key_timeout() const {
  return this != internal_default_instance() && dot11r_r1key_timeout_ != NULL;
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_Ssids_Ssid_Dot11R_State::dot11r_r1key_timeout() const {
  const ::ywrapper::UintValue* p = dot11r_r1key_timeout_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Dot11R.State.dot11r_r1key_timeout)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Ssids_Ssid_Dot11R_State::release_dot11r_r1key_timeout() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Dot11R.State.dot11r_r1key_timeout)
  
  ::ywrapper::UintValue* temp = dot11r_r1key_timeout_;
  dot11r_r1key_timeout_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Ssids_Ssid_Dot11R_State::mutable_dot11r_r1key_timeout() {
  
  if (dot11r_r1key_timeout_ == NULL) {
    dot11r_r1key_timeout_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Dot11R.State.dot11r_r1key_timeout)
  return dot11r_r1key_timeout_;
}
inline void AccessPoints_AccessPoint_Ssids_Ssid_Dot11R_State::set_allocated_dot11r_r1key_timeout(::ywrapper::UintValue* dot11r_r1key_timeout) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(dot11r_r1key_timeout_);
  }
  if (dot11r_r1key_timeout) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      dot11r_r1key_timeout = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, dot11r_r1key_timeout, submessage_arena);
    }
    
  } else {
    
  }
  dot11r_r1key_timeout_ = dot11r_r1key_timeout;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Dot11R.State.dot11r_r1key_timeout)
}

// -------------------------------------------------------------------

// AccessPoints_AccessPoint_Ssids_Ssid_Dot11R

// .openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Dot11R.Config config = 365623788 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/dot11r/config"];
inline bool AccessPoints_AccessPoint_Ssids_Ssid_Dot11R::has_config() const {
  return this != internal_default_instance() && config_ != NULL;
}
inline void AccessPoints_AccessPoint_Ssids_Ssid_Dot11R::clear_config() {
  if (GetArenaNoVirtual() == NULL && config_ != NULL) {
    delete config_;
  }
  config_ = NULL;
}
inline const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Dot11R_Config& AccessPoints_AccessPoint_Ssids_Ssid_Dot11R::config() const {
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Dot11R_Config* p = config_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Dot11R.config)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Dot11R_Config*>(
      &::openconfig::openconfig_access_points::_AccessPoints_AccessPoint_Ssids_Ssid_Dot11R_Config_default_instance_);
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Dot11R_Config* AccessPoints_AccessPoint_Ssids_Ssid_Dot11R::release_config() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Dot11R.config)
  
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Dot11R_Config* temp = config_;
  config_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Dot11R_Config* AccessPoints_AccessPoint_Ssids_Ssid_Dot11R::mutable_config() {
  
  if (config_ == NULL) {
    config_ = new ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Dot11R_Config;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Dot11R.config)
  return config_;
}
inline void AccessPoints_AccessPoint_Ssids_Ssid_Dot11R::set_allocated_config(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Dot11R_Config* config) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete config_;
  }
  if (config) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      config = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, config, submessage_arena);
    }
    
  } else {
    
  }
  config_ = config;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Dot11R.config)
}

// .openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Dot11R.State state = 187410917 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/dot11r/state"];
inline bool AccessPoints_AccessPoint_Ssids_Ssid_Dot11R::has_state() const {
  return this != internal_default_instance() && state_ != NULL;
}
inline void AccessPoints_AccessPoint_Ssids_Ssid_Dot11R::clear_state() {
  if (GetArenaNoVirtual() == NULL && state_ != NULL) {
    delete state_;
  }
  state_ = NULL;
}
inline const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Dot11R_State& AccessPoints_AccessPoint_Ssids_Ssid_Dot11R::state() const {
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Dot11R_State* p = state_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Dot11R.state)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Dot11R_State*>(
      &::openconfig::openconfig_access_points::_AccessPoints_AccessPoint_Ssids_Ssid_Dot11R_State_default_instance_);
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Dot11R_State* AccessPoints_AccessPoint_Ssids_Ssid_Dot11R::release_state() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Dot11R.state)
  
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Dot11R_State* temp = state_;
  state_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Dot11R_State* AccessPoints_AccessPoint_Ssids_Ssid_Dot11R::mutable_state() {
  
  if (state_ == NULL) {
    state_ = new ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Dot11R_State;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Dot11R.state)
  return state_;
}
inline void AccessPoints_AccessPoint_Ssids_Ssid_Dot11R::set_allocated_state(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Dot11R_State* state) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete state_;
  }
  if (state) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      state = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, state, submessage_arena);
    }
    
  } else {
    
  }
  state_ = state;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Dot11R.state)
}

// -------------------------------------------------------------------

// AccessPoints_AccessPoint_Ssids_Ssid_Dot11V_Config

// .ywrapper.BoolValue dot11v_bssidle = 434441385 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/dot11v/config/dot11v-bssidle"];
inline bool AccessPoints_AccessPoint_Ssids_Ssid_Dot11V_Config::has_dot11v_bssidle() const {
  return this != internal_default_instance() && dot11v_bssidle_ != NULL;
}
inline const ::ywrapper::BoolValue& AccessPoints_AccessPoint_Ssids_Ssid_Dot11V_Config::dot11v_bssidle() const {
  const ::ywrapper::BoolValue* p = dot11v_bssidle_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Dot11V.Config.dot11v_bssidle)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::BoolValue*>(
      &::ywrapper::_BoolValue_default_instance_);
}
inline ::ywrapper::BoolValue* AccessPoints_AccessPoint_Ssids_Ssid_Dot11V_Config::release_dot11v_bssidle() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Dot11V.Config.dot11v_bssidle)
  
  ::ywrapper::BoolValue* temp = dot11v_bssidle_;
  dot11v_bssidle_ = NULL;
  return temp;
}
inline ::ywrapper::BoolValue* AccessPoints_AccessPoint_Ssids_Ssid_Dot11V_Config::mutable_dot11v_bssidle() {
  
  if (dot11v_bssidle_ == NULL) {
    dot11v_bssidle_ = new ::ywrapper::BoolValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Dot11V.Config.dot11v_bssidle)
  return dot11v_bssidle_;
}
inline void AccessPoints_AccessPoint_Ssids_Ssid_Dot11V_Config::set_allocated_dot11v_bssidle(::ywrapper::BoolValue* dot11v_bssidle) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(dot11v_bssidle_);
  }
  if (dot11v_bssidle) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      dot11v_bssidle = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, dot11v_bssidle, submessage_arena);
    }
    
  } else {
    
  }
  dot11v_bssidle_ = dot11v_bssidle;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Dot11V.Config.dot11v_bssidle)
}

// .ywrapper.UintValue dot11v_bssidle_timeout = 110172327 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/dot11v/config/dot11v-bssidle-timeout"];
inline bool AccessPoints_AccessPoint_Ssids_Ssid_Dot11V_Config::has_dot11v_bssidle_timeout() const {
  return this != internal_default_instance() && dot11v_bssidle_timeout_ != NULL;
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_Ssids_Ssid_Dot11V_Config::dot11v_bssidle_timeout() const {
  const ::ywrapper::UintValue* p = dot11v_bssidle_timeout_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Dot11V.Config.dot11v_bssidle_timeout)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Ssids_Ssid_Dot11V_Config::release_dot11v_bssidle_timeout() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Dot11V.Config.dot11v_bssidle_timeout)
  
  ::ywrapper::UintValue* temp = dot11v_bssidle_timeout_;
  dot11v_bssidle_timeout_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Ssids_Ssid_Dot11V_Config::mutable_dot11v_bssidle_timeout() {
  
  if (dot11v_bssidle_timeout_ == NULL) {
    dot11v_bssidle_timeout_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Dot11V.Config.dot11v_bssidle_timeout)
  return dot11v_bssidle_timeout_;
}
inline void AccessPoints_AccessPoint_Ssids_Ssid_Dot11V_Config::set_allocated_dot11v_bssidle_timeout(::ywrapper::UintValue* dot11v_bssidle_timeout) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(dot11v_bssidle_timeout_);
  }
  if (dot11v_bssidle_timeout) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      dot11v_bssidle_timeout = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, dot11v_bssidle_timeout, submessage_arena);
    }
    
  } else {
    
  }
  dot11v_bssidle_timeout_ = dot11v_bssidle_timeout;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Dot11V.Config.dot11v_bssidle_timeout)
}

// .ywrapper.BoolValue dot11v_bsstransition = 43017806 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/dot11v/config/dot11v-bsstransition"];
inline bool AccessPoints_AccessPoint_Ssids_Ssid_Dot11V_Config::has_dot11v_bsstransition() const {
  return this != internal_default_instance() && dot11v_bsstransition_ != NULL;
}
inline const ::ywrapper::BoolValue& AccessPoints_AccessPoint_Ssids_Ssid_Dot11V_Config::dot11v_bsstransition() const {
  const ::ywrapper::BoolValue* p = dot11v_bsstransition_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Dot11V.Config.dot11v_bsstransition)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::BoolValue*>(
      &::ywrapper::_BoolValue_default_instance_);
}
inline ::ywrapper::BoolValue* AccessPoints_AccessPoint_Ssids_Ssid_Dot11V_Config::release_dot11v_bsstransition() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Dot11V.Config.dot11v_bsstransition)
  
  ::ywrapper::BoolValue* temp = dot11v_bsstransition_;
  dot11v_bsstransition_ = NULL;
  return temp;
}
inline ::ywrapper::BoolValue* AccessPoints_AccessPoint_Ssids_Ssid_Dot11V_Config::mutable_dot11v_bsstransition() {
  
  if (dot11v_bsstransition_ == NULL) {
    dot11v_bsstransition_ = new ::ywrapper::BoolValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Dot11V.Config.dot11v_bsstransition)
  return dot11v_bsstransition_;
}
inline void AccessPoints_AccessPoint_Ssids_Ssid_Dot11V_Config::set_allocated_dot11v_bsstransition(::ywrapper::BoolValue* dot11v_bsstransition) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(dot11v_bsstransition_);
  }
  if (dot11v_bsstransition) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      dot11v_bsstransition = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, dot11v_bsstransition, submessage_arena);
    }
    
  } else {
    
  }
  dot11v_bsstransition_ = dot11v_bsstransition;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Dot11V.Config.dot11v_bsstransition)
}

// .ywrapper.BoolValue dot11v_dms = 279296311 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/dot11v/config/dot11v-dms"];
inline bool AccessPoints_AccessPoint_Ssids_Ssid_Dot11V_Config::has_dot11v_dms() const {
  return this != internal_default_instance() && dot11v_dms_ != NULL;
}
inline const ::ywrapper::BoolValue& AccessPoints_AccessPoint_Ssids_Ssid_Dot11V_Config::dot11v_dms() const {
  const ::ywrapper::BoolValue* p = dot11v_dms_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Dot11V.Config.dot11v_dms)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::BoolValue*>(
      &::ywrapper::_BoolValue_default_instance_);
}
inline ::ywrapper::BoolValue* AccessPoints_AccessPoint_Ssids_Ssid_Dot11V_Config::release_dot11v_dms() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Dot11V.Config.dot11v_dms)
  
  ::ywrapper::BoolValue* temp = dot11v_dms_;
  dot11v_dms_ = NULL;
  return temp;
}
inline ::ywrapper::BoolValue* AccessPoints_AccessPoint_Ssids_Ssid_Dot11V_Config::mutable_dot11v_dms() {
  
  if (dot11v_dms_ == NULL) {
    dot11v_dms_ = new ::ywrapper::BoolValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Dot11V.Config.dot11v_dms)
  return dot11v_dms_;
}
inline void AccessPoints_AccessPoint_Ssids_Ssid_Dot11V_Config::set_allocated_dot11v_dms(::ywrapper::BoolValue* dot11v_dms) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(dot11v_dms_);
  }
  if (dot11v_dms) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      dot11v_dms = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, dot11v_dms, submessage_arena);
    }
    
  } else {
    
  }
  dot11v_dms_ = dot11v_dms;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Dot11V.Config.dot11v_dms)
}

// -------------------------------------------------------------------

// AccessPoints_AccessPoint_Ssids_Ssid_Dot11V_State

// .ywrapper.BoolValue dot11v_bssidle = 401777646 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/dot11v/state/dot11v-bssidle"];
inline bool AccessPoints_AccessPoint_Ssids_Ssid_Dot11V_State::has_dot11v_bssidle() const {
  return this != internal_default_instance() && dot11v_bssidle_ != NULL;
}
inline const ::ywrapper::BoolValue& AccessPoints_AccessPoint_Ssids_Ssid_Dot11V_State::dot11v_bssidle() const {
  const ::ywrapper::BoolValue* p = dot11v_bssidle_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Dot11V.State.dot11v_bssidle)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::BoolValue*>(
      &::ywrapper::_BoolValue_default_instance_);
}
inline ::ywrapper::BoolValue* AccessPoints_AccessPoint_Ssids_Ssid_Dot11V_State::release_dot11v_bssidle() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Dot11V.State.dot11v_bssidle)
  
  ::ywrapper::BoolValue* temp = dot11v_bssidle_;
  dot11v_bssidle_ = NULL;
  return temp;
}
inline ::ywrapper::BoolValue* AccessPoints_AccessPoint_Ssids_Ssid_Dot11V_State::mutable_dot11v_bssidle() {
  
  if (dot11v_bssidle_ == NULL) {
    dot11v_bssidle_ = new ::ywrapper::BoolValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Dot11V.State.dot11v_bssidle)
  return dot11v_bssidle_;
}
inline void AccessPoints_AccessPoint_Ssids_Ssid_Dot11V_State::set_allocated_dot11v_bssidle(::ywrapper::BoolValue* dot11v_bssidle) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(dot11v_bssidle_);
  }
  if (dot11v_bssidle) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      dot11v_bssidle = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, dot11v_bssidle, submessage_arena);
    }
    
  } else {
    
  }
  dot11v_bssidle_ = dot11v_bssidle;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Dot11V.State.dot11v_bssidle)
}

// .ywrapper.UintValue dot11v_bssidle_timeout = 457719704 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/dot11v/state/dot11v-bssidle-timeout"];
inline bool AccessPoints_AccessPoint_Ssids_Ssid_Dot11V_State::has_dot11v_bssidle_timeout() const {
  return this != internal_default_instance() && dot11v_bssidle_timeout_ != NULL;
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_Ssids_Ssid_Dot11V_State::dot11v_bssidle_timeout() const {
  const ::ywrapper::UintValue* p = dot11v_bssidle_timeout_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Dot11V.State.dot11v_bssidle_timeout)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Ssids_Ssid_Dot11V_State::release_dot11v_bssidle_timeout() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Dot11V.State.dot11v_bssidle_timeout)
  
  ::ywrapper::UintValue* temp = dot11v_bssidle_timeout_;
  dot11v_bssidle_timeout_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Ssids_Ssid_Dot11V_State::mutable_dot11v_bssidle_timeout() {
  
  if (dot11v_bssidle_timeout_ == NULL) {
    dot11v_bssidle_timeout_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Dot11V.State.dot11v_bssidle_timeout)
  return dot11v_bssidle_timeout_;
}
inline void AccessPoints_AccessPoint_Ssids_Ssid_Dot11V_State::set_allocated_dot11v_bssidle_timeout(::ywrapper::UintValue* dot11v_bssidle_timeout) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(dot11v_bssidle_timeout_);
  }
  if (dot11v_bssidle_timeout) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      dot11v_bssidle_timeout = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, dot11v_bssidle_timeout, submessage_arena);
    }
    
  } else {
    
  }
  dot11v_bssidle_timeout_ = dot11v_bssidle_timeout;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Dot11V.State.dot11v_bssidle_timeout)
}

// .ywrapper.BoolValue dot11v_bsstransition = 122720233 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/dot11v/state/dot11v-bsstransition"];
inline bool AccessPoints_AccessPoint_Ssids_Ssid_Dot11V_State::has_dot11v_bsstransition() const {
  return this != internal_default_instance() && dot11v_bsstransition_ != NULL;
}
inline const ::ywrapper::BoolValue& AccessPoints_AccessPoint_Ssids_Ssid_Dot11V_State::dot11v_bsstransition() const {
  const ::ywrapper::BoolValue* p = dot11v_bsstransition_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Dot11V.State.dot11v_bsstransition)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::BoolValue*>(
      &::ywrapper::_BoolValue_default_instance_);
}
inline ::ywrapper::BoolValue* AccessPoints_AccessPoint_Ssids_Ssid_Dot11V_State::release_dot11v_bsstransition() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Dot11V.State.dot11v_bsstransition)
  
  ::ywrapper::BoolValue* temp = dot11v_bsstransition_;
  dot11v_bsstransition_ = NULL;
  return temp;
}
inline ::ywrapper::BoolValue* AccessPoints_AccessPoint_Ssids_Ssid_Dot11V_State::mutable_dot11v_bsstransition() {
  
  if (dot11v_bsstransition_ == NULL) {
    dot11v_bsstransition_ = new ::ywrapper::BoolValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Dot11V.State.dot11v_bsstransition)
  return dot11v_bsstransition_;
}
inline void AccessPoints_AccessPoint_Ssids_Ssid_Dot11V_State::set_allocated_dot11v_bsstransition(::ywrapper::BoolValue* dot11v_bsstransition) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(dot11v_bsstransition_);
  }
  if (dot11v_bsstransition) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      dot11v_bsstransition = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, dot11v_bsstransition, submessage_arena);
    }
    
  } else {
    
  }
  dot11v_bsstransition_ = dot11v_bsstransition;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Dot11V.State.dot11v_bsstransition)
}

// .ywrapper.BoolValue dot11v_dms = 483158428 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/dot11v/state/dot11v-dms"];
inline bool AccessPoints_AccessPoint_Ssids_Ssid_Dot11V_State::has_dot11v_dms() const {
  return this != internal_default_instance() && dot11v_dms_ != NULL;
}
inline const ::ywrapper::BoolValue& AccessPoints_AccessPoint_Ssids_Ssid_Dot11V_State::dot11v_dms() const {
  const ::ywrapper::BoolValue* p = dot11v_dms_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Dot11V.State.dot11v_dms)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::BoolValue*>(
      &::ywrapper::_BoolValue_default_instance_);
}
inline ::ywrapper::BoolValue* AccessPoints_AccessPoint_Ssids_Ssid_Dot11V_State::release_dot11v_dms() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Dot11V.State.dot11v_dms)
  
  ::ywrapper::BoolValue* temp = dot11v_dms_;
  dot11v_dms_ = NULL;
  return temp;
}
inline ::ywrapper::BoolValue* AccessPoints_AccessPoint_Ssids_Ssid_Dot11V_State::mutable_dot11v_dms() {
  
  if (dot11v_dms_ == NULL) {
    dot11v_dms_ = new ::ywrapper::BoolValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Dot11V.State.dot11v_dms)
  return dot11v_dms_;
}
inline void AccessPoints_AccessPoint_Ssids_Ssid_Dot11V_State::set_allocated_dot11v_dms(::ywrapper::BoolValue* dot11v_dms) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(dot11v_dms_);
  }
  if (dot11v_dms) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      dot11v_dms = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, dot11v_dms, submessage_arena);
    }
    
  } else {
    
  }
  dot11v_dms_ = dot11v_dms;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Dot11V.State.dot11v_dms)
}

// -------------------------------------------------------------------

// AccessPoints_AccessPoint_Ssids_Ssid_Dot11V

// .openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Dot11V.Config config = 394369536 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/dot11v/config"];
inline bool AccessPoints_AccessPoint_Ssids_Ssid_Dot11V::has_config() const {
  return this != internal_default_instance() && config_ != NULL;
}
inline void AccessPoints_AccessPoint_Ssids_Ssid_Dot11V::clear_config() {
  if (GetArenaNoVirtual() == NULL && config_ != NULL) {
    delete config_;
  }
  config_ = NULL;
}
inline const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Dot11V_Config& AccessPoints_AccessPoint_Ssids_Ssid_Dot11V::config() const {
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Dot11V_Config* p = config_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Dot11V.config)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Dot11V_Config*>(
      &::openconfig::openconfig_access_points::_AccessPoints_AccessPoint_Ssids_Ssid_Dot11V_Config_default_instance_);
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Dot11V_Config* AccessPoints_AccessPoint_Ssids_Ssid_Dot11V::release_config() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Dot11V.config)
  
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Dot11V_Config* temp = config_;
  config_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Dot11V_Config* AccessPoints_AccessPoint_Ssids_Ssid_Dot11V::mutable_config() {
  
  if (config_ == NULL) {
    config_ = new ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Dot11V_Config;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Dot11V.config)
  return config_;
}
inline void AccessPoints_AccessPoint_Ssids_Ssid_Dot11V::set_allocated_config(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Dot11V_Config* config) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete config_;
  }
  if (config) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      config = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, config, submessage_arena);
    }
    
  } else {
    
  }
  config_ = config;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Dot11V.config)
}

// .openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Dot11V.State state = 456876793 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/dot11v/state"];
inline bool AccessPoints_AccessPoint_Ssids_Ssid_Dot11V::has_state() const {
  return this != internal_default_instance() && state_ != NULL;
}
inline void AccessPoints_AccessPoint_Ssids_Ssid_Dot11V::clear_state() {
  if (GetArenaNoVirtual() == NULL && state_ != NULL) {
    delete state_;
  }
  state_ = NULL;
}
inline const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Dot11V_State& AccessPoints_AccessPoint_Ssids_Ssid_Dot11V::state() const {
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Dot11V_State* p = state_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Dot11V.state)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Dot11V_State*>(
      &::openconfig::openconfig_access_points::_AccessPoints_AccessPoint_Ssids_Ssid_Dot11V_State_default_instance_);
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Dot11V_State* AccessPoints_AccessPoint_Ssids_Ssid_Dot11V::release_state() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Dot11V.state)
  
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Dot11V_State* temp = state_;
  state_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Dot11V_State* AccessPoints_AccessPoint_Ssids_Ssid_Dot11V::mutable_state() {
  
  if (state_ == NULL) {
    state_ = new ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Dot11V_State;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Dot11V.state)
  return state_;
}
inline void AccessPoints_AccessPoint_Ssids_Ssid_Dot11V::set_allocated_state(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Dot11V_State* state) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete state_;
  }
  if (state) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      state = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, state, submessage_arena);
    }
    
  } else {
    
  }
  state_ = state;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Dot11V.state)
}

// -------------------------------------------------------------------

// AccessPoints_AccessPoint_Ssids_Ssid_Dot1XTimers_Config

// .ywrapper.UintValue blacklist_time = 191265768 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/dot1x-timers/config/blacklist-time"];
inline bool AccessPoints_AccessPoint_Ssids_Ssid_Dot1XTimers_Config::has_blacklist_time() const {
  return this != internal_default_instance() && blacklist_time_ != NULL;
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_Ssids_Ssid_Dot1XTimers_Config::blacklist_time() const {
  const ::ywrapper::UintValue* p = blacklist_time_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Dot1XTimers.Config.blacklist_time)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Ssids_Ssid_Dot1XTimers_Config::release_blacklist_time() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Dot1XTimers.Config.blacklist_time)
  
  ::ywrapper::UintValue* temp = blacklist_time_;
  blacklist_time_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Ssids_Ssid_Dot1XTimers_Config::mutable_blacklist_time() {
  
  if (blacklist_time_ == NULL) {
    blacklist_time_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Dot1XTimers.Config.blacklist_time)
  return blacklist_time_;
}
inline void AccessPoints_AccessPoint_Ssids_Ssid_Dot1XTimers_Config::set_allocated_blacklist_time(::ywrapper::UintValue* blacklist_time) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(blacklist_time_);
  }
  if (blacklist_time) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      blacklist_time = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, blacklist_time, submessage_arena);
    }
    
  } else {
    
  }
  blacklist_time_ = blacklist_time;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Dot1XTimers.Config.blacklist_time)
}

// .ywrapper.UintValue max_auth_failures = 83251860 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/dot1x-timers/config/max-auth-failures"];
inline bool AccessPoints_AccessPoint_Ssids_Ssid_Dot1XTimers_Config::has_max_auth_failures() const {
  return this != internal_default_instance() && max_auth_failures_ != NULL;
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_Ssids_Ssid_Dot1XTimers_Config::max_auth_failures() const {
  const ::ywrapper::UintValue* p = max_auth_failures_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Dot1XTimers.Config.max_auth_failures)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Ssids_Ssid_Dot1XTimers_Config::release_max_auth_failures() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Dot1XTimers.Config.max_auth_failures)
  
  ::ywrapper::UintValue* temp = max_auth_failures_;
  max_auth_failures_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Ssids_Ssid_Dot1XTimers_Config::mutable_max_auth_failures() {
  
  if (max_auth_failures_ == NULL) {
    max_auth_failures_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Dot1XTimers.Config.max_auth_failures)
  return max_auth_failures_;
}
inline void AccessPoints_AccessPoint_Ssids_Ssid_Dot1XTimers_Config::set_allocated_max_auth_failures(::ywrapper::UintValue* max_auth_failures) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(max_auth_failures_);
  }
  if (max_auth_failures) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      max_auth_failures = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, max_auth_failures, submessage_arena);
    }
    
  } else {
    
  }
  max_auth_failures_ = max_auth_failures;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Dot1XTimers.Config.max_auth_failures)
}

// -------------------------------------------------------------------

// AccessPoints_AccessPoint_Ssids_Ssid_Dot1XTimers_State

// .ywrapper.UintValue blacklist_time = 125053003 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/dot1x-timers/state/blacklist-time"];
inline bool AccessPoints_AccessPoint_Ssids_Ssid_Dot1XTimers_State::has_blacklist_time() const {
  return this != internal_default_instance() && blacklist_time_ != NULL;
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_Ssids_Ssid_Dot1XTimers_State::blacklist_time() const {
  const ::ywrapper::UintValue* p = blacklist_time_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Dot1XTimers.State.blacklist_time)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Ssids_Ssid_Dot1XTimers_State::release_blacklist_time() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Dot1XTimers.State.blacklist_time)
  
  ::ywrapper::UintValue* temp = blacklist_time_;
  blacklist_time_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Ssids_Ssid_Dot1XTimers_State::mutable_blacklist_time() {
  
  if (blacklist_time_ == NULL) {
    blacklist_time_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Dot1XTimers.State.blacklist_time)
  return blacklist_time_;
}
inline void AccessPoints_AccessPoint_Ssids_Ssid_Dot1XTimers_State::set_allocated_blacklist_time(::ywrapper::UintValue* blacklist_time) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(blacklist_time_);
  }
  if (blacklist_time) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      blacklist_time = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, blacklist_time, submessage_arena);
    }
    
  } else {
    
  }
  blacklist_time_ = blacklist_time;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Dot1XTimers.State.blacklist_time)
}

// .ywrapper.UintValue max_auth_failures = 359065421 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/dot1x-timers/state/max-auth-failures"];
inline bool AccessPoints_AccessPoint_Ssids_Ssid_Dot1XTimers_State::has_max_auth_failures() const {
  return this != internal_default_instance() && max_auth_failures_ != NULL;
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_Ssids_Ssid_Dot1XTimers_State::max_auth_failures() const {
  const ::ywrapper::UintValue* p = max_auth_failures_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Dot1XTimers.State.max_auth_failures)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Ssids_Ssid_Dot1XTimers_State::release_max_auth_failures() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Dot1XTimers.State.max_auth_failures)
  
  ::ywrapper::UintValue* temp = max_auth_failures_;
  max_auth_failures_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Ssids_Ssid_Dot1XTimers_State::mutable_max_auth_failures() {
  
  if (max_auth_failures_ == NULL) {
    max_auth_failures_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Dot1XTimers.State.max_auth_failures)
  return max_auth_failures_;
}
inline void AccessPoints_AccessPoint_Ssids_Ssid_Dot1XTimers_State::set_allocated_max_auth_failures(::ywrapper::UintValue* max_auth_failures) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(max_auth_failures_);
  }
  if (max_auth_failures) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      max_auth_failures = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, max_auth_failures, submessage_arena);
    }
    
  } else {
    
  }
  max_auth_failures_ = max_auth_failures;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Dot1XTimers.State.max_auth_failures)
}

// -------------------------------------------------------------------

// AccessPoints_AccessPoint_Ssids_Ssid_Dot1XTimers

// .openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Dot1XTimers.Config config = 41791642 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/dot1x-timers/config"];
inline bool AccessPoints_AccessPoint_Ssids_Ssid_Dot1XTimers::has_config() const {
  return this != internal_default_instance() && config_ != NULL;
}
inline void AccessPoints_AccessPoint_Ssids_Ssid_Dot1XTimers::clear_config() {
  if (GetArenaNoVirtual() == NULL && config_ != NULL) {
    delete config_;
  }
  config_ = NULL;
}
inline const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Dot1XTimers_Config& AccessPoints_AccessPoint_Ssids_Ssid_Dot1XTimers::config() const {
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Dot1XTimers_Config* p = config_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Dot1XTimers.config)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Dot1XTimers_Config*>(
      &::openconfig::openconfig_access_points::_AccessPoints_AccessPoint_Ssids_Ssid_Dot1XTimers_Config_default_instance_);
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Dot1XTimers_Config* AccessPoints_AccessPoint_Ssids_Ssid_Dot1XTimers::release_config() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Dot1XTimers.config)
  
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Dot1XTimers_Config* temp = config_;
  config_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Dot1XTimers_Config* AccessPoints_AccessPoint_Ssids_Ssid_Dot1XTimers::mutable_config() {
  
  if (config_ == NULL) {
    config_ = new ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Dot1XTimers_Config;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Dot1XTimers.config)
  return config_;
}
inline void AccessPoints_AccessPoint_Ssids_Ssid_Dot1XTimers::set_allocated_config(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Dot1XTimers_Config* config) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete config_;
  }
  if (config) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      config = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, config, submessage_arena);
    }
    
  } else {
    
  }
  config_ = config;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Dot1XTimers.config)
}

// .openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Dot1XTimers.State state = 264748855 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/dot1x-timers/state"];
inline bool AccessPoints_AccessPoint_Ssids_Ssid_Dot1XTimers::has_state() const {
  return this != internal_default_instance() && state_ != NULL;
}
inline void AccessPoints_AccessPoint_Ssids_Ssid_Dot1XTimers::clear_state() {
  if (GetArenaNoVirtual() == NULL && state_ != NULL) {
    delete state_;
  }
  state_ = NULL;
}
inline const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Dot1XTimers_State& AccessPoints_AccessPoint_Ssids_Ssid_Dot1XTimers::state() const {
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Dot1XTimers_State* p = state_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Dot1XTimers.state)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Dot1XTimers_State*>(
      &::openconfig::openconfig_access_points::_AccessPoints_AccessPoint_Ssids_Ssid_Dot1XTimers_State_default_instance_);
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Dot1XTimers_State* AccessPoints_AccessPoint_Ssids_Ssid_Dot1XTimers::release_state() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Dot1XTimers.state)
  
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Dot1XTimers_State* temp = state_;
  state_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Dot1XTimers_State* AccessPoints_AccessPoint_Ssids_Ssid_Dot1XTimers::mutable_state() {
  
  if (state_ == NULL) {
    state_ = new ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Dot1XTimers_State;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Dot1XTimers.state)
  return state_;
}
inline void AccessPoints_AccessPoint_Ssids_Ssid_Dot1XTimers::set_allocated_state(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Dot1XTimers_State* state) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete state_;
  }
  if (state) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      state = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, state, submessage_arena);
    }
    
  } else {
    
  }
  state_ = state;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Dot1XTimers.state)
}

// -------------------------------------------------------------------

// AccessPoints_AccessPoint_Ssids_Ssid_State

// .ywrapper.BoolValue advertise_apname = 412181604 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/state/advertise-apname"];
inline bool AccessPoints_AccessPoint_Ssids_Ssid_State::has_advertise_apname() const {
  return this != internal_default_instance() && advertise_apname_ != NULL;
}
inline const ::ywrapper::BoolValue& AccessPoints_AccessPoint_Ssids_Ssid_State::advertise_apname() const {
  const ::ywrapper::BoolValue* p = advertise_apname_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.State.advertise_apname)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::BoolValue*>(
      &::ywrapper::_BoolValue_default_instance_);
}
inline ::ywrapper::BoolValue* AccessPoints_AccessPoint_Ssids_Ssid_State::release_advertise_apname() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.State.advertise_apname)
  
  ::ywrapper::BoolValue* temp = advertise_apname_;
  advertise_apname_ = NULL;
  return temp;
}
inline ::ywrapper::BoolValue* AccessPoints_AccessPoint_Ssids_Ssid_State::mutable_advertise_apname() {
  
  if (advertise_apname_ == NULL) {
    advertise_apname_ = new ::ywrapper::BoolValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.State.advertise_apname)
  return advertise_apname_;
}
inline void AccessPoints_AccessPoint_Ssids_Ssid_State::set_allocated_advertise_apname(::ywrapper::BoolValue* advertise_apname) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(advertise_apname_);
  }
  if (advertise_apname) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      advertise_apname = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, advertise_apname, submessage_arena);
    }
    
  } else {
    
  }
  advertise_apname_ = advertise_apname;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.State.advertise_apname)
}

// repeated .openconfig.enums.OpenconfigWifiTypesDATARATE basic_data_rates = 429901571 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/state/basic-data-rates"];
inline int AccessPoints_AccessPoint_Ssids_Ssid_State::basic_data_rates_size() const {
  return basic_data_rates_.size();
}
inline void AccessPoints_AccessPoint_Ssids_Ssid_State::clear_basic_data_rates() {
  basic_data_rates_.Clear();
}
inline ::openconfig::enums::OpenconfigWifiTypesDATARATE AccessPoints_AccessPoint_Ssids_Ssid_State::basic_data_rates(int index) const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.State.basic_data_rates)
  return static_cast< ::openconfig::enums::OpenconfigWifiTypesDATARATE >(basic_data_rates_.Get(index));
}
inline void AccessPoints_AccessPoint_Ssids_Ssid_State::set_basic_data_rates(int index, ::openconfig::enums::OpenconfigWifiTypesDATARATE value) {
  basic_data_rates_.Set(index, value);
  // @@protoc_insertion_point(field_set:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.State.basic_data_rates)
}
inline void AccessPoints_AccessPoint_Ssids_Ssid_State::add_basic_data_rates(::openconfig::enums::OpenconfigWifiTypesDATARATE value) {
  basic_data_rates_.Add(value);
  // @@protoc_insertion_point(field_add:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.State.basic_data_rates)
}
inline const ::google::protobuf::RepeatedField<int>&
AccessPoints_AccessPoint_Ssids_Ssid_State::basic_data_rates() const {
  // @@protoc_insertion_point(field_list:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.State.basic_data_rates)
  return basic_data_rates_;
}
inline ::google::protobuf::RepeatedField<int>*
AccessPoints_AccessPoint_Ssids_Ssid_State::mutable_basic_data_rates() {
  // @@protoc_insertion_point(field_mutable_list:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.State.basic_data_rates)
  return &basic_data_rates_;
}

// .ywrapper.BoolValue broadcast_filter = 133669362 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/state/broadcast-filter"];
inline bool AccessPoints_AccessPoint_Ssids_Ssid_State::has_broadcast_filter() const {
  return this != internal_default_instance() && broadcast_filter_ != NULL;
}
inline const ::ywrapper::BoolValue& AccessPoints_AccessPoint_Ssids_Ssid_State::broadcast_filter() const {
  const ::ywrapper::BoolValue* p = broadcast_filter_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.State.broadcast_filter)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::BoolValue*>(
      &::ywrapper::_BoolValue_default_instance_);
}
inline ::ywrapper::BoolValue* AccessPoints_AccessPoint_Ssids_Ssid_State::release_broadcast_filter() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.State.broadcast_filter)
  
  ::ywrapper::BoolValue* temp = broadcast_filter_;
  broadcast_filter_ = NULL;
  return temp;
}
inline ::ywrapper::BoolValue* AccessPoints_AccessPoint_Ssids_Ssid_State::mutable_broadcast_filter() {
  
  if (broadcast_filter_ == NULL) {
    broadcast_filter_ = new ::ywrapper::BoolValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.State.broadcast_filter)
  return broadcast_filter_;
}
inline void AccessPoints_AccessPoint_Ssids_Ssid_State::set_allocated_broadcast_filter(::ywrapper::BoolValue* broadcast_filter) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(broadcast_filter_);
  }
  if (broadcast_filter) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      broadcast_filter = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, broadcast_filter, submessage_arena);
    }
    
  } else {
    
  }
  broadcast_filter_ = broadcast_filter;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.State.broadcast_filter)
}

// .ywrapper.UintValue bss_channel_utilization = 470396063 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/state/bss-channel-utilization"];
inline bool AccessPoints_AccessPoint_Ssids_Ssid_State::has_bss_channel_utilization() const {
  return this != internal_default_instance() && bss_channel_utilization_ != NULL;
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_Ssids_Ssid_State::bss_channel_utilization() const {
  const ::ywrapper::UintValue* p = bss_channel_utilization_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.State.bss_channel_utilization)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Ssids_Ssid_State::release_bss_channel_utilization() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.State.bss_channel_utilization)
  
  ::ywrapper::UintValue* temp = bss_channel_utilization_;
  bss_channel_utilization_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Ssids_Ssid_State::mutable_bss_channel_utilization() {
  
  if (bss_channel_utilization_ == NULL) {
    bss_channel_utilization_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.State.bss_channel_utilization)
  return bss_channel_utilization_;
}
inline void AccessPoints_AccessPoint_Ssids_Ssid_State::set_allocated_bss_channel_utilization(::ywrapper::UintValue* bss_channel_utilization) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(bss_channel_utilization_);
  }
  if (bss_channel_utilization) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      bss_channel_utilization = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, bss_channel_utilization, submessage_arena);
    }
    
  } else {
    
  }
  bss_channel_utilization_ = bss_channel_utilization;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.State.bss_channel_utilization)
}

// .ywrapper.StringValue bssid = 389927797 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/state/bssid"];
inline bool AccessPoints_AccessPoint_Ssids_Ssid_State::has_bssid() const {
  return this != internal_default_instance() && bssid_ != NULL;
}
inline const ::ywrapper::StringValue& AccessPoints_AccessPoint_Ssids_Ssid_State::bssid() const {
  const ::ywrapper::StringValue* p = bssid_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.State.bssid)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::StringValue*>(
      &::ywrapper::_StringValue_default_instance_);
}
inline ::ywrapper::StringValue* AccessPoints_AccessPoint_Ssids_Ssid_State::release_bssid() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.State.bssid)
  
  ::ywrapper::StringValue* temp = bssid_;
  bssid_ = NULL;
  return temp;
}
inline ::ywrapper::StringValue* AccessPoints_AccessPoint_Ssids_Ssid_State::mutable_bssid() {
  
  if (bssid_ == NULL) {
    bssid_ = new ::ywrapper::StringValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.State.bssid)
  return bssid_;
}
inline void AccessPoints_AccessPoint_Ssids_Ssid_State::set_allocated_bssid(::ywrapper::StringValue* bssid) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(bssid_);
  }
  if (bssid) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      bssid = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, bssid, submessage_arena);
    }
    
  } else {
    
  }
  bssid_ = bssid;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.State.bssid)
}

// .ywrapper.BoolValue csa = 59256861 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/state/csa"];
inline bool AccessPoints_AccessPoint_Ssids_Ssid_State::has_csa() const {
  return this != internal_default_instance() && csa_ != NULL;
}
inline const ::ywrapper::BoolValue& AccessPoints_AccessPoint_Ssids_Ssid_State::csa() const {
  const ::ywrapper::BoolValue* p = csa_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.State.csa)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::BoolValue*>(
      &::ywrapper::_BoolValue_default_instance_);
}
inline ::ywrapper::BoolValue* AccessPoints_AccessPoint_Ssids_Ssid_State::release_csa() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.State.csa)
  
  ::ywrapper::BoolValue* temp = csa_;
  csa_ = NULL;
  return temp;
}
inline ::ywrapper::BoolValue* AccessPoints_AccessPoint_Ssids_Ssid_State::mutable_csa() {
  
  if (csa_ == NULL) {
    csa_ = new ::ywrapper::BoolValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.State.csa)
  return csa_;
}
inline void AccessPoints_AccessPoint_Ssids_Ssid_State::set_allocated_csa(::ywrapper::BoolValue* csa) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(csa_);
  }
  if (csa) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      csa = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, csa, submessage_arena);
    }
    
  } else {
    
  }
  csa_ = csa;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.State.csa)
}

// .ywrapper.BoolValue dhcp_required = 236914407 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/state/dhcp-required"];
inline bool AccessPoints_AccessPoint_Ssids_Ssid_State::has_dhcp_required() const {
  return this != internal_default_instance() && dhcp_required_ != NULL;
}
inline const ::ywrapper::BoolValue& AccessPoints_AccessPoint_Ssids_Ssid_State::dhcp_required() const {
  const ::ywrapper::BoolValue* p = dhcp_required_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.State.dhcp_required)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::BoolValue*>(
      &::ywrapper::_BoolValue_default_instance_);
}
inline ::ywrapper::BoolValue* AccessPoints_AccessPoint_Ssids_Ssid_State::release_dhcp_required() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.State.dhcp_required)
  
  ::ywrapper::BoolValue* temp = dhcp_required_;
  dhcp_required_ = NULL;
  return temp;
}
inline ::ywrapper::BoolValue* AccessPoints_AccessPoint_Ssids_Ssid_State::mutable_dhcp_required() {
  
  if (dhcp_required_ == NULL) {
    dhcp_required_ = new ::ywrapper::BoolValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.State.dhcp_required)
  return dhcp_required_;
}
inline void AccessPoints_AccessPoint_Ssids_Ssid_State::set_allocated_dhcp_required(::ywrapper::BoolValue* dhcp_required) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(dhcp_required_);
  }
  if (dhcp_required) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      dhcp_required = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, dhcp_required, submessage_arena);
    }
    
  } else {
    
  }
  dhcp_required_ = dhcp_required;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.State.dhcp_required)
}

// .ywrapper.BoolValue dot11k = 319747484 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/state/dot11k"];
inline bool AccessPoints_AccessPoint_Ssids_Ssid_State::has_dot11k() const {
  return this != internal_default_instance() && dot11k_ != NULL;
}
inline const ::ywrapper::BoolValue& AccessPoints_AccessPoint_Ssids_Ssid_State::dot11k() const {
  const ::ywrapper::BoolValue* p = dot11k_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.State.dot11k)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::BoolValue*>(
      &::ywrapper::_BoolValue_default_instance_);
}
inline ::ywrapper::BoolValue* AccessPoints_AccessPoint_Ssids_Ssid_State::release_dot11k() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.State.dot11k)
  
  ::ywrapper::BoolValue* temp = dot11k_;
  dot11k_ = NULL;
  return temp;
}
inline ::ywrapper::BoolValue* AccessPoints_AccessPoint_Ssids_Ssid_State::mutable_dot11k() {
  
  if (dot11k_ == NULL) {
    dot11k_ = new ::ywrapper::BoolValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.State.dot11k)
  return dot11k_;
}
inline void AccessPoints_AccessPoint_Ssids_Ssid_State::set_allocated_dot11k(::ywrapper::BoolValue* dot11k) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(dot11k_);
  }
  if (dot11k) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      dot11k = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, dot11k, submessage_arena);
    }
    
  } else {
    
  }
  dot11k_ = dot11k;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.State.dot11k)
}

// .ywrapper.BoolValue dva = 243369577 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/state/dva"];
inline bool AccessPoints_AccessPoint_Ssids_Ssid_State::has_dva() const {
  return this != internal_default_instance() && dva_ != NULL;
}
inline const ::ywrapper::BoolValue& AccessPoints_AccessPoint_Ssids_Ssid_State::dva() const {
  const ::ywrapper::BoolValue* p = dva_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.State.dva)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::BoolValue*>(
      &::ywrapper::_BoolValue_default_instance_);
}
inline ::ywrapper::BoolValue* AccessPoints_AccessPoint_Ssids_Ssid_State::release_dva() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.State.dva)
  
  ::ywrapper::BoolValue* temp = dva_;
  dva_ = NULL;
  return temp;
}
inline ::ywrapper::BoolValue* AccessPoints_AccessPoint_Ssids_Ssid_State::mutable_dva() {
  
  if (dva_ == NULL) {
    dva_ = new ::ywrapper::BoolValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.State.dva)
  return dva_;
}
inline void AccessPoints_AccessPoint_Ssids_Ssid_State::set_allocated_dva(::ywrapper::BoolValue* dva) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(dva_);
  }
  if (dva) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      dva = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, dva, submessage_arena);
    }
    
  } else {
    
  }
  dva_ = dva;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.State.dva)
}

// .ywrapper.BoolValue enabled = 225551097 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/state/enabled"];
inline bool AccessPoints_AccessPoint_Ssids_Ssid_State::has_enabled() const {
  return this != internal_default_instance() && enabled_ != NULL;
}
inline const ::ywrapper::BoolValue& AccessPoints_AccessPoint_Ssids_Ssid_State::enabled() const {
  const ::ywrapper::BoolValue* p = enabled_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.State.enabled)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::BoolValue*>(
      &::ywrapper::_BoolValue_default_instance_);
}
inline ::ywrapper::BoolValue* AccessPoints_AccessPoint_Ssids_Ssid_State::release_enabled() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.State.enabled)
  
  ::ywrapper::BoolValue* temp = enabled_;
  enabled_ = NULL;
  return temp;
}
inline ::ywrapper::BoolValue* AccessPoints_AccessPoint_Ssids_Ssid_State::mutable_enabled() {
  
  if (enabled_ == NULL) {
    enabled_ = new ::ywrapper::BoolValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.State.enabled)
  return enabled_;
}
inline void AccessPoints_AccessPoint_Ssids_Ssid_State::set_allocated_enabled(::ywrapper::BoolValue* enabled) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(enabled_);
  }
  if (enabled) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      enabled = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, enabled, submessage_arena);
    }
    
  } else {
    
  }
  enabled_ = enabled;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.State.enabled)
}

// .ywrapper.UintValue gtk_timeout = 495434912 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/state/gtk-timeout"];
inline bool AccessPoints_AccessPoint_Ssids_Ssid_State::has_gtk_timeout() const {
  return this != internal_default_instance() && gtk_timeout_ != NULL;
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_Ssids_Ssid_State::gtk_timeout() const {
  const ::ywrapper::UintValue* p = gtk_timeout_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.State.gtk_timeout)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Ssids_Ssid_State::release_gtk_timeout() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.State.gtk_timeout)
  
  ::ywrapper::UintValue* temp = gtk_timeout_;
  gtk_timeout_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Ssids_Ssid_State::mutable_gtk_timeout() {
  
  if (gtk_timeout_ == NULL) {
    gtk_timeout_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.State.gtk_timeout)
  return gtk_timeout_;
}
inline void AccessPoints_AccessPoint_Ssids_Ssid_State::set_allocated_gtk_timeout(::ywrapper::UintValue* gtk_timeout) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(gtk_timeout_);
  }
  if (gtk_timeout) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      gtk_timeout = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, gtk_timeout, submessage_arena);
    }
    
  } else {
    
  }
  gtk_timeout_ = gtk_timeout;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.State.gtk_timeout)
}

// .ywrapper.BoolValue hidden = 331176626 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/state/hidden"];
inline bool AccessPoints_AccessPoint_Ssids_Ssid_State::has_hidden() const {
  return this != internal_default_instance() && hidden_ != NULL;
}
inline const ::ywrapper::BoolValue& AccessPoints_AccessPoint_Ssids_Ssid_State::hidden() const {
  const ::ywrapper::BoolValue* p = hidden_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.State.hidden)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::BoolValue*>(
      &::ywrapper::_BoolValue_default_instance_);
}
inline ::ywrapper::BoolValue* AccessPoints_AccessPoint_Ssids_Ssid_State::release_hidden() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.State.hidden)
  
  ::ywrapper::BoolValue* temp = hidden_;
  hidden_ = NULL;
  return temp;
}
inline ::ywrapper::BoolValue* AccessPoints_AccessPoint_Ssids_Ssid_State::mutable_hidden() {
  
  if (hidden_ == NULL) {
    hidden_ = new ::ywrapper::BoolValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.State.hidden)
  return hidden_;
}
inline void AccessPoints_AccessPoint_Ssids_Ssid_State::set_allocated_hidden(::ywrapper::BoolValue* hidden) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(hidden_);
  }
  if (hidden) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      hidden = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, hidden, submessage_arena);
    }
    
  } else {
    
  }
  hidden_ = hidden;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.State.hidden)
}

// .ywrapper.BoolValue ipv6_ndp_filter = 176007639 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/state/ipv6-ndp-filter"];
inline bool AccessPoints_AccessPoint_Ssids_Ssid_State::has_ipv6_ndp_filter() const {
  return this != internal_default_instance() && ipv6_ndp_filter_ != NULL;
}
inline const ::ywrapper::BoolValue& AccessPoints_AccessPoint_Ssids_Ssid_State::ipv6_ndp_filter() const {
  const ::ywrapper::BoolValue* p = ipv6_ndp_filter_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.State.ipv6_ndp_filter)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::BoolValue*>(
      &::ywrapper::_BoolValue_default_instance_);
}
inline ::ywrapper::BoolValue* AccessPoints_AccessPoint_Ssids_Ssid_State::release_ipv6_ndp_filter() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.State.ipv6_ndp_filter)
  
  ::ywrapper::BoolValue* temp = ipv6_ndp_filter_;
  ipv6_ndp_filter_ = NULL;
  return temp;
}
inline ::ywrapper::BoolValue* AccessPoints_AccessPoint_Ssids_Ssid_State::mutable_ipv6_ndp_filter() {
  
  if (ipv6_ndp_filter_ == NULL) {
    ipv6_ndp_filter_ = new ::ywrapper::BoolValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.State.ipv6_ndp_filter)
  return ipv6_ndp_filter_;
}
inline void AccessPoints_AccessPoint_Ssids_Ssid_State::set_allocated_ipv6_ndp_filter(::ywrapper::BoolValue* ipv6_ndp_filter) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(ipv6_ndp_filter_);
  }
  if (ipv6_ndp_filter) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      ipv6_ndp_filter = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, ipv6_ndp_filter, submessage_arena);
    }
    
  } else {
    
  }
  ipv6_ndp_filter_ = ipv6_ndp_filter;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.State.ipv6_ndp_filter)
}

// .ywrapper.UintValue ipv6_ndp_filter_timer = 262242867 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/state/ipv6-ndp-filter-timer"];
inline bool AccessPoints_AccessPoint_Ssids_Ssid_State::has_ipv6_ndp_filter_timer() const {
  return this != internal_default_instance() && ipv6_ndp_filter_timer_ != NULL;
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_Ssids_Ssid_State::ipv6_ndp_filter_timer() const {
  const ::ywrapper::UintValue* p = ipv6_ndp_filter_timer_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.State.ipv6_ndp_filter_timer)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Ssids_Ssid_State::release_ipv6_ndp_filter_timer() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.State.ipv6_ndp_filter_timer)
  
  ::ywrapper::UintValue* temp = ipv6_ndp_filter_timer_;
  ipv6_ndp_filter_timer_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Ssids_Ssid_State::mutable_ipv6_ndp_filter_timer() {
  
  if (ipv6_ndp_filter_timer_ == NULL) {
    ipv6_ndp_filter_timer_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.State.ipv6_ndp_filter_timer)
  return ipv6_ndp_filter_timer_;
}
inline void AccessPoints_AccessPoint_Ssids_Ssid_State::set_allocated_ipv6_ndp_filter_timer(::ywrapper::UintValue* ipv6_ndp_filter_timer) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(ipv6_ndp_filter_timer_);
  }
  if (ipv6_ndp_filter_timer) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      ipv6_ndp_filter_timer = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, ipv6_ndp_filter_timer, submessage_arena);
    }
    
  } else {
    
  }
  ipv6_ndp_filter_timer_ = ipv6_ndp_filter_timer;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.State.ipv6_ndp_filter_timer)
}

// .ywrapper.StringValue mobility_domain = 409101826 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/state/mobility-domain"];
inline bool AccessPoints_AccessPoint_Ssids_Ssid_State::has_mobility_domain() const {
  return this != internal_default_instance() && mobility_domain_ != NULL;
}
inline const ::ywrapper::StringValue& AccessPoints_AccessPoint_Ssids_Ssid_State::mobility_domain() const {
  const ::ywrapper::StringValue* p = mobility_domain_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.State.mobility_domain)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::StringValue*>(
      &::ywrapper::_StringValue_default_instance_);
}
inline ::ywrapper::StringValue* AccessPoints_AccessPoint_Ssids_Ssid_State::release_mobility_domain() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.State.mobility_domain)
  
  ::ywrapper::StringValue* temp = mobility_domain_;
  mobility_domain_ = NULL;
  return temp;
}
inline ::ywrapper::StringValue* AccessPoints_AccessPoint_Ssids_Ssid_State::mutable_mobility_domain() {
  
  if (mobility_domain_ == NULL) {
    mobility_domain_ = new ::ywrapper::StringValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.State.mobility_domain)
  return mobility_domain_;
}
inline void AccessPoints_AccessPoint_Ssids_Ssid_State::set_allocated_mobility_domain(::ywrapper::StringValue* mobility_domain) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(mobility_domain_);
  }
  if (mobility_domain) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      mobility_domain = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, mobility_domain, submessage_arena);
    }
    
  } else {
    
  }
  mobility_domain_ = mobility_domain;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.State.mobility_domain)
}

// .ywrapper.BoolValue multicast_filter = 119570051 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/state/multicast-filter"];
inline bool AccessPoints_AccessPoint_Ssids_Ssid_State::has_multicast_filter() const {
  return this != internal_default_instance() && multicast_filter_ != NULL;
}
inline const ::ywrapper::BoolValue& AccessPoints_AccessPoint_Ssids_Ssid_State::multicast_filter() const {
  const ::ywrapper::BoolValue* p = multicast_filter_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.State.multicast_filter)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::BoolValue*>(
      &::ywrapper::_BoolValue_default_instance_);
}
inline ::ywrapper::BoolValue* AccessPoints_AccessPoint_Ssids_Ssid_State::release_multicast_filter() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.State.multicast_filter)
  
  ::ywrapper::BoolValue* temp = multicast_filter_;
  multicast_filter_ = NULL;
  return temp;
}
inline ::ywrapper::BoolValue* AccessPoints_AccessPoint_Ssids_Ssid_State::mutable_multicast_filter() {
  
  if (multicast_filter_ == NULL) {
    multicast_filter_ = new ::ywrapper::BoolValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.State.multicast_filter)
  return multicast_filter_;
}
inline void AccessPoints_AccessPoint_Ssids_Ssid_State::set_allocated_multicast_filter(::ywrapper::BoolValue* multicast_filter) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(multicast_filter_);
  }
  if (multicast_filter) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      multicast_filter = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, multicast_filter, submessage_arena);
    }
    
  } else {
    
  }
  multicast_filter_ = multicast_filter;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.State.multicast_filter)
}

// .ywrapper.StringValue name = 479156751 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/state/name"];
inline bool AccessPoints_AccessPoint_Ssids_Ssid_State::has_name() const {
  return this != internal_default_instance() && name_ != NULL;
}
inline const ::ywrapper::StringValue& AccessPoints_AccessPoint_Ssids_Ssid_State::name() const {
  const ::ywrapper::StringValue* p = name_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.State.name)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::StringValue*>(
      &::ywrapper::_StringValue_default_instance_);
}
inline ::ywrapper::StringValue* AccessPoints_AccessPoint_Ssids_Ssid_State::release_name() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.State.name)
  
  ::ywrapper::StringValue* temp = name_;
  name_ = NULL;
  return temp;
}
inline ::ywrapper::StringValue* AccessPoints_AccessPoint_Ssids_Ssid_State::mutable_name() {
  
  if (name_ == NULL) {
    name_ = new ::ywrapper::StringValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.State.name)
  return name_;
}
inline void AccessPoints_AccessPoint_Ssids_Ssid_State::set_allocated_name(::ywrapper::StringValue* name) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(name_);
  }
  if (name) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      name = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, name, submessage_arena);
    }
    
  } else {
    
  }
  name_ = name;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.State.name)
}

// .ywrapper.BoolValue okc = 325817691 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/state/okc"];
inline bool AccessPoints_AccessPoint_Ssids_Ssid_State::has_okc() const {
  return this != internal_default_instance() && okc_ != NULL;
}
inline const ::ywrapper::BoolValue& AccessPoints_AccessPoint_Ssids_Ssid_State::okc() const {
  const ::ywrapper::BoolValue* p = okc_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.State.okc)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::BoolValue*>(
      &::ywrapper::_BoolValue_default_instance_);
}
inline ::ywrapper::BoolValue* AccessPoints_AccessPoint_Ssids_Ssid_State::release_okc() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.State.okc)
  
  ::ywrapper::BoolValue* temp = okc_;
  okc_ = NULL;
  return temp;
}
inline ::ywrapper::BoolValue* AccessPoints_AccessPoint_Ssids_Ssid_State::mutable_okc() {
  
  if (okc_ == NULL) {
    okc_ = new ::ywrapper::BoolValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.State.okc)
  return okc_;
}
inline void AccessPoints_AccessPoint_Ssids_Ssid_State::set_allocated_okc(::ywrapper::BoolValue* okc) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(okc_);
  }
  if (okc) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      okc = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, okc, submessage_arena);
    }
    
  } else {
    
  }
  okc_ = okc;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.State.okc)
}

// .openconfig.enums.OpenconfigWifiTypesOPERATINGFREQUENCY operating_frequency = 198036886 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/state/operating-frequency"];
inline void AccessPoints_AccessPoint_Ssids_Ssid_State::clear_operating_frequency() {
  operating_frequency_ = 0;
}
inline ::openconfig::enums::OpenconfigWifiTypesOPERATINGFREQUENCY AccessPoints_AccessPoint_Ssids_Ssid_State::operating_frequency() const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.State.operating_frequency)
  return static_cast< ::openconfig::enums::OpenconfigWifiTypesOPERATINGFREQUENCY >(operating_frequency_);
}
inline void AccessPoints_AccessPoint_Ssids_Ssid_State::set_operating_frequency(::openconfig::enums::OpenconfigWifiTypesOPERATINGFREQUENCY value) {
  
  operating_frequency_ = value;
  // @@protoc_insertion_point(field_set:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.State.operating_frequency)
}

// .openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.State.Opmode opmode = 84890626 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/state/opmode"];
inline void AccessPoints_AccessPoint_Ssids_Ssid_State::clear_opmode() {
  opmode_ = 0;
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_State_Opmode AccessPoints_AccessPoint_Ssids_Ssid_State::opmode() const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.State.opmode)
  return static_cast< ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_State_Opmode >(opmode_);
}
inline void AccessPoints_AccessPoint_Ssids_Ssid_State::set_opmode(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_State_Opmode value) {
  
  opmode_ = value;
  // @@protoc_insertion_point(field_set:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.State.opmode)
}

// .ywrapper.UintValue ptk_timeout = 297425039 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/state/ptk-timeout"];
inline bool AccessPoints_AccessPoint_Ssids_Ssid_State::has_ptk_timeout() const {
  return this != internal_default_instance() && ptk_timeout_ != NULL;
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_Ssids_Ssid_State::ptk_timeout() const {
  const ::ywrapper::UintValue* p = ptk_timeout_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.State.ptk_timeout)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Ssids_Ssid_State::release_ptk_timeout() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.State.ptk_timeout)
  
  ::ywrapper::UintValue* temp = ptk_timeout_;
  ptk_timeout_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Ssids_Ssid_State::mutable_ptk_timeout() {
  
  if (ptk_timeout_ == NULL) {
    ptk_timeout_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.State.ptk_timeout)
  return ptk_timeout_;
}
inline void AccessPoints_AccessPoint_Ssids_Ssid_State::set_allocated_ptk_timeout(::ywrapper::UintValue* ptk_timeout) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(ptk_timeout_);
  }
  if (ptk_timeout) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      ptk_timeout = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, ptk_timeout, submessage_arena);
    }
    
  } else {
    
  }
  ptk_timeout_ = ptk_timeout;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.State.ptk_timeout)
}

// .ywrapper.BoolValue qbss_load = 495740174 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/state/qbss-load"];
inline bool AccessPoints_AccessPoint_Ssids_Ssid_State::has_qbss_load() const {
  return this != internal_default_instance() && qbss_load_ != NULL;
}
inline const ::ywrapper::BoolValue& AccessPoints_AccessPoint_Ssids_Ssid_State::qbss_load() const {
  const ::ywrapper::BoolValue* p = qbss_load_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.State.qbss_load)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::BoolValue*>(
      &::ywrapper::_BoolValue_default_instance_);
}
inline ::ywrapper::BoolValue* AccessPoints_AccessPoint_Ssids_Ssid_State::release_qbss_load() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.State.qbss_load)
  
  ::ywrapper::BoolValue* temp = qbss_load_;
  qbss_load_ = NULL;
  return temp;
}
inline ::ywrapper::BoolValue* AccessPoints_AccessPoint_Ssids_Ssid_State::mutable_qbss_load() {
  
  if (qbss_load_ == NULL) {
    qbss_load_ = new ::ywrapper::BoolValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.State.qbss_load)
  return qbss_load_;
}
inline void AccessPoints_AccessPoint_Ssids_Ssid_State::set_allocated_qbss_load(::ywrapper::BoolValue* qbss_load) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(qbss_load_);
  }
  if (qbss_load) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      qbss_load = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, qbss_load, submessage_arena);
    }
    
  } else {
    
  }
  qbss_load_ = qbss_load;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.State.qbss_load)
}

// .ywrapper.UintValue rx_bss_dot11_channel_utilization = 55829402 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/state/rx-bss-dot11-channel-utilization"];
inline bool AccessPoints_AccessPoint_Ssids_Ssid_State::has_rx_bss_dot11_channel_utilization() const {
  return this != internal_default_instance() && rx_bss_dot11_channel_utilization_ != NULL;
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_Ssids_Ssid_State::rx_bss_dot11_channel_utilization() const {
  const ::ywrapper::UintValue* p = rx_bss_dot11_channel_utilization_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.State.rx_bss_dot11_channel_utilization)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Ssids_Ssid_State::release_rx_bss_dot11_channel_utilization() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.State.rx_bss_dot11_channel_utilization)
  
  ::ywrapper::UintValue* temp = rx_bss_dot11_channel_utilization_;
  rx_bss_dot11_channel_utilization_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Ssids_Ssid_State::mutable_rx_bss_dot11_channel_utilization() {
  
  if (rx_bss_dot11_channel_utilization_ == NULL) {
    rx_bss_dot11_channel_utilization_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.State.rx_bss_dot11_channel_utilization)
  return rx_bss_dot11_channel_utilization_;
}
inline void AccessPoints_AccessPoint_Ssids_Ssid_State::set_allocated_rx_bss_dot11_channel_utilization(::ywrapper::UintValue* rx_bss_dot11_channel_utilization) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(rx_bss_dot11_channel_utilization_);
  }
  if (rx_bss_dot11_channel_utilization) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      rx_bss_dot11_channel_utilization = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, rx_bss_dot11_channel_utilization, submessage_arena);
    }
    
  } else {
    
  }
  rx_bss_dot11_channel_utilization_ = rx_bss_dot11_channel_utilization;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.State.rx_bss_dot11_channel_utilization)
}

// .ywrapper.StringValue server_group = 419194997 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/state/server-group"];
inline bool AccessPoints_AccessPoint_Ssids_Ssid_State::has_server_group() const {
  return this != internal_default_instance() && server_group_ != NULL;
}
inline const ::ywrapper::StringValue& AccessPoints_AccessPoint_Ssids_Ssid_State::server_group() const {
  const ::ywrapper::StringValue* p = server_group_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.State.server_group)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::StringValue*>(
      &::ywrapper::_StringValue_default_instance_);
}
inline ::ywrapper::StringValue* AccessPoints_AccessPoint_Ssids_Ssid_State::release_server_group() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.State.server_group)
  
  ::ywrapper::StringValue* temp = server_group_;
  server_group_ = NULL;
  return temp;
}
inline ::ywrapper::StringValue* AccessPoints_AccessPoint_Ssids_Ssid_State::mutable_server_group() {
  
  if (server_group_ == NULL) {
    server_group_ = new ::ywrapper::StringValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.State.server_group)
  return server_group_;
}
inline void AccessPoints_AccessPoint_Ssids_Ssid_State::set_allocated_server_group(::ywrapper::StringValue* server_group) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(server_group_);
  }
  if (server_group) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      server_group = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, server_group, submessage_arena);
    }
    
  } else {
    
  }
  server_group_ = server_group;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.State.server_group)
}

// .ywrapper.BoolValue station_isolation = 526443173 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/state/station-isolation"];
inline bool AccessPoints_AccessPoint_Ssids_Ssid_State::has_station_isolation() const {
  return this != internal_default_instance() && station_isolation_ != NULL;
}
inline const ::ywrapper::BoolValue& AccessPoints_AccessPoint_Ssids_Ssid_State::station_isolation() const {
  const ::ywrapper::BoolValue* p = station_isolation_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.State.station_isolation)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::BoolValue*>(
      &::ywrapper::_BoolValue_default_instance_);
}
inline ::ywrapper::BoolValue* AccessPoints_AccessPoint_Ssids_Ssid_State::release_station_isolation() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.State.station_isolation)
  
  ::ywrapper::BoolValue* temp = station_isolation_;
  station_isolation_ = NULL;
  return temp;
}
inline ::ywrapper::BoolValue* AccessPoints_AccessPoint_Ssids_Ssid_State::mutable_station_isolation() {
  
  if (station_isolation_ == NULL) {
    station_isolation_ = new ::ywrapper::BoolValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.State.station_isolation)
  return station_isolation_;
}
inline void AccessPoints_AccessPoint_Ssids_Ssid_State::set_allocated_station_isolation(::ywrapper::BoolValue* station_isolation) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(station_isolation_);
  }
  if (station_isolation) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      station_isolation = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, station_isolation, submessage_arena);
    }
    
  } else {
    
  }
  station_isolation_ = station_isolation;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.State.station_isolation)
}

// repeated .openconfig.enums.OpenconfigWifiTypesDATARATE supported_data_rates = 228371723 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/state/supported-data-rates"];
inline int AccessPoints_AccessPoint_Ssids_Ssid_State::supported_data_rates_size() const {
  return supported_data_rates_.size();
}
inline void AccessPoints_AccessPoint_Ssids_Ssid_State::clear_supported_data_rates() {
  supported_data_rates_.Clear();
}
inline ::openconfig::enums::OpenconfigWifiTypesDATARATE AccessPoints_AccessPoint_Ssids_Ssid_State::supported_data_rates(int index) const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.State.supported_data_rates)
  return static_cast< ::openconfig::enums::OpenconfigWifiTypesDATARATE >(supported_data_rates_.Get(index));
}
inline void AccessPoints_AccessPoint_Ssids_Ssid_State::set_supported_data_rates(int index, ::openconfig::enums::OpenconfigWifiTypesDATARATE value) {
  supported_data_rates_.Set(index, value);
  // @@protoc_insertion_point(field_set:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.State.supported_data_rates)
}
inline void AccessPoints_AccessPoint_Ssids_Ssid_State::add_supported_data_rates(::openconfig::enums::OpenconfigWifiTypesDATARATE value) {
  supported_data_rates_.Add(value);
  // @@protoc_insertion_point(field_add:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.State.supported_data_rates)
}
inline const ::google::protobuf::RepeatedField<int>&
AccessPoints_AccessPoint_Ssids_Ssid_State::supported_data_rates() const {
  // @@protoc_insertion_point(field_list:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.State.supported_data_rates)
  return supported_data_rates_;
}
inline ::google::protobuf::RepeatedField<int>*
AccessPoints_AccessPoint_Ssids_Ssid_State::mutable_supported_data_rates() {
  // @@protoc_insertion_point(field_mutable_list:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.State.supported_data_rates)
  return &supported_data_rates_;
}

// .ywrapper.UintValue tx_bss_dot11_channel_utilization = 183037380 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/state/tx-bss-dot11-channel-utilization"];
inline bool AccessPoints_AccessPoint_Ssids_Ssid_State::has_tx_bss_dot11_channel_utilization() const {
  return this != internal_default_instance() && tx_bss_dot11_channel_utilization_ != NULL;
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_Ssids_Ssid_State::tx_bss_dot11_channel_utilization() const {
  const ::ywrapper::UintValue* p = tx_bss_dot11_channel_utilization_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.State.tx_bss_dot11_channel_utilization)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Ssids_Ssid_State::release_tx_bss_dot11_channel_utilization() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.State.tx_bss_dot11_channel_utilization)
  
  ::ywrapper::UintValue* temp = tx_bss_dot11_channel_utilization_;
  tx_bss_dot11_channel_utilization_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Ssids_Ssid_State::mutable_tx_bss_dot11_channel_utilization() {
  
  if (tx_bss_dot11_channel_utilization_ == NULL) {
    tx_bss_dot11_channel_utilization_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.State.tx_bss_dot11_channel_utilization)
  return tx_bss_dot11_channel_utilization_;
}
inline void AccessPoints_AccessPoint_Ssids_Ssid_State::set_allocated_tx_bss_dot11_channel_utilization(::ywrapper::UintValue* tx_bss_dot11_channel_utilization) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(tx_bss_dot11_channel_utilization_);
  }
  if (tx_bss_dot11_channel_utilization) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      tx_bss_dot11_channel_utilization = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, tx_bss_dot11_channel_utilization, submessage_arena);
    }
    
  } else {
    
  }
  tx_bss_dot11_channel_utilization_ = tx_bss_dot11_channel_utilization;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.State.tx_bss_dot11_channel_utilization)
}

// .ywrapper.UintValue vlan_id = 86712261 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/state/vlan-id"];
inline bool AccessPoints_AccessPoint_Ssids_Ssid_State::has_vlan_id() const {
  return this != internal_default_instance() && vlan_id_ != NULL;
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_Ssids_Ssid_State::vlan_id() const {
  const ::ywrapper::UintValue* p = vlan_id_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.State.vlan_id)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Ssids_Ssid_State::release_vlan_id() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.State.vlan_id)
  
  ::ywrapper::UintValue* temp = vlan_id_;
  vlan_id_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Ssids_Ssid_State::mutable_vlan_id() {
  
  if (vlan_id_ == NULL) {
    vlan_id_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.State.vlan_id)
  return vlan_id_;
}
inline void AccessPoints_AccessPoint_Ssids_Ssid_State::set_allocated_vlan_id(::ywrapper::UintValue* vlan_id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(vlan_id_);
  }
  if (vlan_id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      vlan_id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, vlan_id, submessage_arena);
    }
    
  } else {
    
  }
  vlan_id_ = vlan_id;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.State.vlan_id)
}

// .ywrapper.StringValue wpa2_psk = 400666171 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/state/wpa2-psk"];
inline bool AccessPoints_AccessPoint_Ssids_Ssid_State::has_wpa2_psk() const {
  return this != internal_default_instance() && wpa2_psk_ != NULL;
}
inline const ::ywrapper::StringValue& AccessPoints_AccessPoint_Ssids_Ssid_State::wpa2_psk() const {
  const ::ywrapper::StringValue* p = wpa2_psk_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.State.wpa2_psk)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::StringValue*>(
      &::ywrapper::_StringValue_default_instance_);
}
inline ::ywrapper::StringValue* AccessPoints_AccessPoint_Ssids_Ssid_State::release_wpa2_psk() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.State.wpa2_psk)
  
  ::ywrapper::StringValue* temp = wpa2_psk_;
  wpa2_psk_ = NULL;
  return temp;
}
inline ::ywrapper::StringValue* AccessPoints_AccessPoint_Ssids_Ssid_State::mutable_wpa2_psk() {
  
  if (wpa2_psk_ == NULL) {
    wpa2_psk_ = new ::ywrapper::StringValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.State.wpa2_psk)
  return wpa2_psk_;
}
inline void AccessPoints_AccessPoint_Ssids_Ssid_State::set_allocated_wpa2_psk(::ywrapper::StringValue* wpa2_psk) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(wpa2_psk_);
  }
  if (wpa2_psk) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      wpa2_psk = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, wpa2_psk, submessage_arena);
    }
    
  } else {
    
  }
  wpa2_psk_ = wpa2_psk;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.State.wpa2_psk)
}

// -------------------------------------------------------------------

// AccessPoints_AccessPoint_Ssids_Ssid_Wmm_Config

// .ywrapper.BoolValue trust_dscp = 382380892 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/wmm/config/trust-dscp"];
inline bool AccessPoints_AccessPoint_Ssids_Ssid_Wmm_Config::has_trust_dscp() const {
  return this != internal_default_instance() && trust_dscp_ != NULL;
}
inline const ::ywrapper::BoolValue& AccessPoints_AccessPoint_Ssids_Ssid_Wmm_Config::trust_dscp() const {
  const ::ywrapper::BoolValue* p = trust_dscp_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Wmm.Config.trust_dscp)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::BoolValue*>(
      &::ywrapper::_BoolValue_default_instance_);
}
inline ::ywrapper::BoolValue* AccessPoints_AccessPoint_Ssids_Ssid_Wmm_Config::release_trust_dscp() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Wmm.Config.trust_dscp)
  
  ::ywrapper::BoolValue* temp = trust_dscp_;
  trust_dscp_ = NULL;
  return temp;
}
inline ::ywrapper::BoolValue* AccessPoints_AccessPoint_Ssids_Ssid_Wmm_Config::mutable_trust_dscp() {
  
  if (trust_dscp_ == NULL) {
    trust_dscp_ = new ::ywrapper::BoolValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Wmm.Config.trust_dscp)
  return trust_dscp_;
}
inline void AccessPoints_AccessPoint_Ssids_Ssid_Wmm_Config::set_allocated_trust_dscp(::ywrapper::BoolValue* trust_dscp) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(trust_dscp_);
  }
  if (trust_dscp) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      trust_dscp = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, trust_dscp, submessage_arena);
    }
    
  } else {
    
  }
  trust_dscp_ = trust_dscp;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Wmm.Config.trust_dscp)
}

// repeated .ywrapper.UintValue wmm_be_remark = 236406069 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/wmm/config/wmm-be-remark"];
inline int AccessPoints_AccessPoint_Ssids_Ssid_Wmm_Config::wmm_be_remark_size() const {
  return wmm_be_remark_.size();
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_Ssids_Ssid_Wmm_Config::wmm_be_remark(int index) const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Wmm.Config.wmm_be_remark)
  return wmm_be_remark_.Get(index);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Ssids_Ssid_Wmm_Config::mutable_wmm_be_remark(int index) {
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Wmm.Config.wmm_be_remark)
  return wmm_be_remark_.Mutable(index);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Ssids_Ssid_Wmm_Config::add_wmm_be_remark() {
  // @@protoc_insertion_point(field_add:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Wmm.Config.wmm_be_remark)
  return wmm_be_remark_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::ywrapper::UintValue >*
AccessPoints_AccessPoint_Ssids_Ssid_Wmm_Config::mutable_wmm_be_remark() {
  // @@protoc_insertion_point(field_mutable_list:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Wmm.Config.wmm_be_remark)
  return &wmm_be_remark_;
}
inline const ::google::protobuf::RepeatedPtrField< ::ywrapper::UintValue >&
AccessPoints_AccessPoint_Ssids_Ssid_Wmm_Config::wmm_be_remark() const {
  // @@protoc_insertion_point(field_list:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Wmm.Config.wmm_be_remark)
  return wmm_be_remark_;
}

// repeated .ywrapper.UintValue wmm_bk_remark = 117664315 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/wmm/config/wmm-bk-remark"];
inline int AccessPoints_AccessPoint_Ssids_Ssid_Wmm_Config::wmm_bk_remark_size() const {
  return wmm_bk_remark_.size();
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_Ssids_Ssid_Wmm_Config::wmm_bk_remark(int index) const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Wmm.Config.wmm_bk_remark)
  return wmm_bk_remark_.Get(index);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Ssids_Ssid_Wmm_Config::mutable_wmm_bk_remark(int index) {
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Wmm.Config.wmm_bk_remark)
  return wmm_bk_remark_.Mutable(index);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Ssids_Ssid_Wmm_Config::add_wmm_bk_remark() {
  // @@protoc_insertion_point(field_add:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Wmm.Config.wmm_bk_remark)
  return wmm_bk_remark_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::ywrapper::UintValue >*
AccessPoints_AccessPoint_Ssids_Ssid_Wmm_Config::mutable_wmm_bk_remark() {
  // @@protoc_insertion_point(field_mutable_list:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Wmm.Config.wmm_bk_remark)
  return &wmm_bk_remark_;
}
inline const ::google::protobuf::RepeatedPtrField< ::ywrapper::UintValue >&
AccessPoints_AccessPoint_Ssids_Ssid_Wmm_Config::wmm_bk_remark() const {
  // @@protoc_insertion_point(field_list:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Wmm.Config.wmm_bk_remark)
  return wmm_bk_remark_;
}

// repeated .ywrapper.UintValue wmm_vi_remark = 287728309 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/wmm/config/wmm-vi-remark"];
inline int AccessPoints_AccessPoint_Ssids_Ssid_Wmm_Config::wmm_vi_remark_size() const {
  return wmm_vi_remark_.size();
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_Ssids_Ssid_Wmm_Config::wmm_vi_remark(int index) const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Wmm.Config.wmm_vi_remark)
  return wmm_vi_remark_.Get(index);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Ssids_Ssid_Wmm_Config::mutable_wmm_vi_remark(int index) {
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Wmm.Config.wmm_vi_remark)
  return wmm_vi_remark_.Mutable(index);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Ssids_Ssid_Wmm_Config::add_wmm_vi_remark() {
  // @@protoc_insertion_point(field_add:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Wmm.Config.wmm_vi_remark)
  return wmm_vi_remark_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::ywrapper::UintValue >*
AccessPoints_AccessPoint_Ssids_Ssid_Wmm_Config::mutable_wmm_vi_remark() {
  // @@protoc_insertion_point(field_mutable_list:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Wmm.Config.wmm_vi_remark)
  return &wmm_vi_remark_;
}
inline const ::google::protobuf::RepeatedPtrField< ::ywrapper::UintValue >&
AccessPoints_AccessPoint_Ssids_Ssid_Wmm_Config::wmm_vi_remark() const {
  // @@protoc_insertion_point(field_list:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Wmm.Config.wmm_vi_remark)
  return wmm_vi_remark_;
}

// repeated .ywrapper.UintValue wmm_vo_remark = 306763731 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/wmm/config/wmm-vo-remark"];
inline int AccessPoints_AccessPoint_Ssids_Ssid_Wmm_Config::wmm_vo_remark_size() const {
  return wmm_vo_remark_.size();
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_Ssids_Ssid_Wmm_Config::wmm_vo_remark(int index) const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Wmm.Config.wmm_vo_remark)
  return wmm_vo_remark_.Get(index);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Ssids_Ssid_Wmm_Config::mutable_wmm_vo_remark(int index) {
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Wmm.Config.wmm_vo_remark)
  return wmm_vo_remark_.Mutable(index);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Ssids_Ssid_Wmm_Config::add_wmm_vo_remark() {
  // @@protoc_insertion_point(field_add:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Wmm.Config.wmm_vo_remark)
  return wmm_vo_remark_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::ywrapper::UintValue >*
AccessPoints_AccessPoint_Ssids_Ssid_Wmm_Config::mutable_wmm_vo_remark() {
  // @@protoc_insertion_point(field_mutable_list:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Wmm.Config.wmm_vo_remark)
  return &wmm_vo_remark_;
}
inline const ::google::protobuf::RepeatedPtrField< ::ywrapper::UintValue >&
AccessPoints_AccessPoint_Ssids_Ssid_Wmm_Config::wmm_vo_remark() const {
  // @@protoc_insertion_point(field_list:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Wmm.Config.wmm_vo_remark)
  return wmm_vo_remark_;
}

// -------------------------------------------------------------------

// AccessPoints_AccessPoint_Ssids_Ssid_Wmm_State

// .ywrapper.BoolValue trust_dscp = 80790179 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/wmm/state/trust-dscp"];
inline bool AccessPoints_AccessPoint_Ssids_Ssid_Wmm_State::has_trust_dscp() const {
  return this != internal_default_instance() && trust_dscp_ != NULL;
}
inline const ::ywrapper::BoolValue& AccessPoints_AccessPoint_Ssids_Ssid_Wmm_State::trust_dscp() const {
  const ::ywrapper::BoolValue* p = trust_dscp_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Wmm.State.trust_dscp)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::BoolValue*>(
      &::ywrapper::_BoolValue_default_instance_);
}
inline ::ywrapper::BoolValue* AccessPoints_AccessPoint_Ssids_Ssid_Wmm_State::release_trust_dscp() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Wmm.State.trust_dscp)
  
  ::ywrapper::BoolValue* temp = trust_dscp_;
  trust_dscp_ = NULL;
  return temp;
}
inline ::ywrapper::BoolValue* AccessPoints_AccessPoint_Ssids_Ssid_Wmm_State::mutable_trust_dscp() {
  
  if (trust_dscp_ == NULL) {
    trust_dscp_ = new ::ywrapper::BoolValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Wmm.State.trust_dscp)
  return trust_dscp_;
}
inline void AccessPoints_AccessPoint_Ssids_Ssid_Wmm_State::set_allocated_trust_dscp(::ywrapper::BoolValue* trust_dscp) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(trust_dscp_);
  }
  if (trust_dscp) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      trust_dscp = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, trust_dscp, submessage_arena);
    }
    
  } else {
    
  }
  trust_dscp_ = trust_dscp;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Wmm.State.trust_dscp)
}

// repeated .ywrapper.UintValue wmm_be_remark = 330589176 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/wmm/state/wmm-be-remark"];
inline int AccessPoints_AccessPoint_Ssids_Ssid_Wmm_State::wmm_be_remark_size() const {
  return wmm_be_remark_.size();
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_Ssids_Ssid_Wmm_State::wmm_be_remark(int index) const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Wmm.State.wmm_be_remark)
  return wmm_be_remark_.Get(index);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Ssids_Ssid_Wmm_State::mutable_wmm_be_remark(int index) {
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Wmm.State.wmm_be_remark)
  return wmm_be_remark_.Mutable(index);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Ssids_Ssid_Wmm_State::add_wmm_be_remark() {
  // @@protoc_insertion_point(field_add:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Wmm.State.wmm_be_remark)
  return wmm_be_remark_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::ywrapper::UintValue >*
AccessPoints_AccessPoint_Ssids_Ssid_Wmm_State::mutable_wmm_be_remark() {
  // @@protoc_insertion_point(field_mutable_list:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Wmm.State.wmm_be_remark)
  return &wmm_be_remark_;
}
inline const ::google::protobuf::RepeatedPtrField< ::ywrapper::UintValue >&
AccessPoints_AccessPoint_Ssids_Ssid_Wmm_State::wmm_be_remark() const {
  // @@protoc_insertion_point(field_list:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Wmm.State.wmm_be_remark)
  return wmm_be_remark_;
}

// repeated .ywrapper.UintValue wmm_bk_remark = 54639554 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/wmm/state/wmm-bk-remark"];
inline int AccessPoints_AccessPoint_Ssids_Ssid_Wmm_State::wmm_bk_remark_size() const {
  return wmm_bk_remark_.size();
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_Ssids_Ssid_Wmm_State::wmm_bk_remark(int index) const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Wmm.State.wmm_bk_remark)
  return wmm_bk_remark_.Get(index);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Ssids_Ssid_Wmm_State::mutable_wmm_bk_remark(int index) {
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Wmm.State.wmm_bk_remark)
  return wmm_bk_remark_.Mutable(index);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Ssids_Ssid_Wmm_State::add_wmm_bk_remark() {
  // @@protoc_insertion_point(field_add:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Wmm.State.wmm_bk_remark)
  return wmm_bk_remark_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::ywrapper::UintValue >*
AccessPoints_AccessPoint_Ssids_Ssid_Wmm_State::mutable_wmm_bk_remark() {
  // @@protoc_insertion_point(field_mutable_list:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Wmm.State.wmm_bk_remark)
  return &wmm_bk_remark_;
}
inline const ::google::protobuf::RepeatedPtrField< ::ywrapper::UintValue >&
AccessPoints_AccessPoint_Ssids_Ssid_Wmm_State::wmm_bk_remark() const {
  // @@protoc_insertion_point(field_list:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Wmm.State.wmm_bk_remark)
  return wmm_bk_remark_;
}

// repeated .ywrapper.UintValue wmm_vi_remark = 239314016 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/wmm/state/wmm-vi-remark"];
inline int AccessPoints_AccessPoint_Ssids_Ssid_Wmm_State::wmm_vi_remark_size() const {
  return wmm_vi_remark_.size();
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_Ssids_Ssid_Wmm_State::wmm_vi_remark(int index) const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Wmm.State.wmm_vi_remark)
  return wmm_vi_remark_.Get(index);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Ssids_Ssid_Wmm_State::mutable_wmm_vi_remark(int index) {
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Wmm.State.wmm_vi_remark)
  return wmm_vi_remark_.Mutable(index);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Ssids_Ssid_Wmm_State::add_wmm_vi_remark() {
  // @@protoc_insertion_point(field_add:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Wmm.State.wmm_vi_remark)
  return wmm_vi_remark_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::ywrapper::UintValue >*
AccessPoints_AccessPoint_Ssids_Ssid_Wmm_State::mutable_wmm_vi_remark() {
  // @@protoc_insertion_point(field_mutable_list:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Wmm.State.wmm_vi_remark)
  return &wmm_vi_remark_;
}
inline const ::google::protobuf::RepeatedPtrField< ::ywrapper::UintValue >&
AccessPoints_AccessPoint_Ssids_Ssid_Wmm_State::wmm_vi_remark() const {
  // @@protoc_insertion_point(field_list:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Wmm.State.wmm_vi_remark)
  return wmm_vi_remark_;
}

// repeated .ywrapper.UintValue wmm_vo_remark = 442297762 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/wmm/state/wmm-vo-remark"];
inline int AccessPoints_AccessPoint_Ssids_Ssid_Wmm_State::wmm_vo_remark_size() const {
  return wmm_vo_remark_.size();
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_Ssids_Ssid_Wmm_State::wmm_vo_remark(int index) const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Wmm.State.wmm_vo_remark)
  return wmm_vo_remark_.Get(index);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Ssids_Ssid_Wmm_State::mutable_wmm_vo_remark(int index) {
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Wmm.State.wmm_vo_remark)
  return wmm_vo_remark_.Mutable(index);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_Ssids_Ssid_Wmm_State::add_wmm_vo_remark() {
  // @@protoc_insertion_point(field_add:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Wmm.State.wmm_vo_remark)
  return wmm_vo_remark_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::ywrapper::UintValue >*
AccessPoints_AccessPoint_Ssids_Ssid_Wmm_State::mutable_wmm_vo_remark() {
  // @@protoc_insertion_point(field_mutable_list:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Wmm.State.wmm_vo_remark)
  return &wmm_vo_remark_;
}
inline const ::google::protobuf::RepeatedPtrField< ::ywrapper::UintValue >&
AccessPoints_AccessPoint_Ssids_Ssid_Wmm_State::wmm_vo_remark() const {
  // @@protoc_insertion_point(field_list:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Wmm.State.wmm_vo_remark)
  return wmm_vo_remark_;
}

// -------------------------------------------------------------------

// AccessPoints_AccessPoint_Ssids_Ssid_Wmm

// .openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Wmm.Config config = 124087578 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/wmm/config"];
inline bool AccessPoints_AccessPoint_Ssids_Ssid_Wmm::has_config() const {
  return this != internal_default_instance() && config_ != NULL;
}
inline void AccessPoints_AccessPoint_Ssids_Ssid_Wmm::clear_config() {
  if (GetArenaNoVirtual() == NULL && config_ != NULL) {
    delete config_;
  }
  config_ = NULL;
}
inline const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Wmm_Config& AccessPoints_AccessPoint_Ssids_Ssid_Wmm::config() const {
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Wmm_Config* p = config_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Wmm.config)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Wmm_Config*>(
      &::openconfig::openconfig_access_points::_AccessPoints_AccessPoint_Ssids_Ssid_Wmm_Config_default_instance_);
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Wmm_Config* AccessPoints_AccessPoint_Ssids_Ssid_Wmm::release_config() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Wmm.config)
  
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Wmm_Config* temp = config_;
  config_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Wmm_Config* AccessPoints_AccessPoint_Ssids_Ssid_Wmm::mutable_config() {
  
  if (config_ == NULL) {
    config_ = new ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Wmm_Config;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Wmm.config)
  return config_;
}
inline void AccessPoints_AccessPoint_Ssids_Ssid_Wmm::set_allocated_config(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Wmm_Config* config) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete config_;
  }
  if (config) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      config = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, config, submessage_arena);
    }
    
  } else {
    
  }
  config_ = config;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Wmm.config)
}

// .openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Wmm.State state = 338223287 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/wmm/state"];
inline bool AccessPoints_AccessPoint_Ssids_Ssid_Wmm::has_state() const {
  return this != internal_default_instance() && state_ != NULL;
}
inline void AccessPoints_AccessPoint_Ssids_Ssid_Wmm::clear_state() {
  if (GetArenaNoVirtual() == NULL && state_ != NULL) {
    delete state_;
  }
  state_ = NULL;
}
inline const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Wmm_State& AccessPoints_AccessPoint_Ssids_Ssid_Wmm::state() const {
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Wmm_State* p = state_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Wmm.state)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Wmm_State*>(
      &::openconfig::openconfig_access_points::_AccessPoints_AccessPoint_Ssids_Ssid_Wmm_State_default_instance_);
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Wmm_State* AccessPoints_AccessPoint_Ssids_Ssid_Wmm::release_state() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Wmm.state)
  
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Wmm_State* temp = state_;
  state_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Wmm_State* AccessPoints_AccessPoint_Ssids_Ssid_Wmm::mutable_state() {
  
  if (state_ == NULL) {
    state_ = new ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Wmm_State;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Wmm.state)
  return state_;
}
inline void AccessPoints_AccessPoint_Ssids_Ssid_Wmm::set_allocated_state(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Wmm_State* state) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete state_;
  }
  if (state) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      state = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, state, submessage_arena);
    }
    
  } else {
    
  }
  state_ = state;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Wmm.state)
}

// -------------------------------------------------------------------

// AccessPoints_AccessPoint_Ssids_Ssid

// .openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.BandSteering band_steering = 206115007 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/band-steering"];
inline bool AccessPoints_AccessPoint_Ssids_Ssid::has_band_steering() const {
  return this != internal_default_instance() && band_steering_ != NULL;
}
inline void AccessPoints_AccessPoint_Ssids_Ssid::clear_band_steering() {
  if (GetArenaNoVirtual() == NULL && band_steering_ != NULL) {
    delete band_steering_;
  }
  band_steering_ = NULL;
}
inline const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_BandSteering& AccessPoints_AccessPoint_Ssids_Ssid::band_steering() const {
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_BandSteering* p = band_steering_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.band_steering)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_BandSteering*>(
      &::openconfig::openconfig_access_points::_AccessPoints_AccessPoint_Ssids_Ssid_BandSteering_default_instance_);
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_BandSteering* AccessPoints_AccessPoint_Ssids_Ssid::release_band_steering() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.band_steering)
  
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_BandSteering* temp = band_steering_;
  band_steering_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_BandSteering* AccessPoints_AccessPoint_Ssids_Ssid::mutable_band_steering() {
  
  if (band_steering_ == NULL) {
    band_steering_ = new ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_BandSteering;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.band_steering)
  return band_steering_;
}
inline void AccessPoints_AccessPoint_Ssids_Ssid::set_allocated_band_steering(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_BandSteering* band_steering) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete band_steering_;
  }
  if (band_steering) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      band_steering = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, band_steering, submessage_arena);
    }
    
  } else {
    
  }
  band_steering_ = band_steering;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.band_steering)
}

// .openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Clients clients = 9423148 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/clients"];
inline bool AccessPoints_AccessPoint_Ssids_Ssid::has_clients() const {
  return this != internal_default_instance() && clients_ != NULL;
}
inline void AccessPoints_AccessPoint_Ssids_Ssid::clear_clients() {
  if (GetArenaNoVirtual() == NULL && clients_ != NULL) {
    delete clients_;
  }
  clients_ = NULL;
}
inline const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Clients& AccessPoints_AccessPoint_Ssids_Ssid::clients() const {
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Clients* p = clients_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.clients)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Clients*>(
      &::openconfig::openconfig_access_points::_AccessPoints_AccessPoint_Ssids_Ssid_Clients_default_instance_);
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Clients* AccessPoints_AccessPoint_Ssids_Ssid::release_clients() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.clients)
  
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Clients* temp = clients_;
  clients_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Clients* AccessPoints_AccessPoint_Ssids_Ssid::mutable_clients() {
  
  if (clients_ == NULL) {
    clients_ = new ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Clients;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.clients)
  return clients_;
}
inline void AccessPoints_AccessPoint_Ssids_Ssid::set_allocated_clients(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Clients* clients) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete clients_;
  }
  if (clients) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      clients = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, clients, submessage_arena);
    }
    
  } else {
    
  }
  clients_ = clients;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.clients)
}

// .openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Config config = 66897482 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/config"];
inline bool AccessPoints_AccessPoint_Ssids_Ssid::has_config() const {
  return this != internal_default_instance() && config_ != NULL;
}
inline void AccessPoints_AccessPoint_Ssids_Ssid::clear_config() {
  if (GetArenaNoVirtual() == NULL && config_ != NULL) {
    delete config_;
  }
  config_ = NULL;
}
inline const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Config& AccessPoints_AccessPoint_Ssids_Ssid::config() const {
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Config* p = config_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.config)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Config*>(
      &::openconfig::openconfig_access_points::_AccessPoints_AccessPoint_Ssids_Ssid_Config_default_instance_);
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Config* AccessPoints_AccessPoint_Ssids_Ssid::release_config() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.config)
  
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Config* temp = config_;
  config_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Config* AccessPoints_AccessPoint_Ssids_Ssid::mutable_config() {
  
  if (config_ == NULL) {
    config_ = new ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Config;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.config)
  return config_;
}
inline void AccessPoints_AccessPoint_Ssids_Ssid::set_allocated_config(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Config* config) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete config_;
  }
  if (config) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      config = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, config, submessage_arena);
    }
    
  } else {
    
  }
  config_ = config;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.config)
}

// .openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Dot11R dot11r = 235232059 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/dot11r"];
inline bool AccessPoints_AccessPoint_Ssids_Ssid::has_dot11r() const {
  return this != internal_default_instance() && dot11r_ != NULL;
}
inline void AccessPoints_AccessPoint_Ssids_Ssid::clear_dot11r() {
  if (GetArenaNoVirtual() == NULL && dot11r_ != NULL) {
    delete dot11r_;
  }
  dot11r_ = NULL;
}
inline const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Dot11R& AccessPoints_AccessPoint_Ssids_Ssid::dot11r() const {
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Dot11R* p = dot11r_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.dot11r)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Dot11R*>(
      &::openconfig::openconfig_access_points::_AccessPoints_AccessPoint_Ssids_Ssid_Dot11R_default_instance_);
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Dot11R* AccessPoints_AccessPoint_Ssids_Ssid::release_dot11r() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.dot11r)
  
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Dot11R* temp = dot11r_;
  dot11r_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Dot11R* AccessPoints_AccessPoint_Ssids_Ssid::mutable_dot11r() {
  
  if (dot11r_ == NULL) {
    dot11r_ = new ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Dot11R;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.dot11r)
  return dot11r_;
}
inline void AccessPoints_AccessPoint_Ssids_Ssid::set_allocated_dot11r(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Dot11R* dot11r) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete dot11r_;
  }
  if (dot11r) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      dot11r = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, dot11r, submessage_arena);
    }
    
  } else {
    
  }
  dot11r_ = dot11r;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.dot11r)
}

// .openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Dot11V dot11v = 235232063 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/dot11v"];
inline bool AccessPoints_AccessPoint_Ssids_Ssid::has_dot11v() const {
  return this != internal_default_instance() && dot11v_ != NULL;
}
inline void AccessPoints_AccessPoint_Ssids_Ssid::clear_dot11v() {
  if (GetArenaNoVirtual() == NULL && dot11v_ != NULL) {
    delete dot11v_;
  }
  dot11v_ = NULL;
}
inline const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Dot11V& AccessPoints_AccessPoint_Ssids_Ssid::dot11v() const {
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Dot11V* p = dot11v_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.dot11v)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Dot11V*>(
      &::openconfig::openconfig_access_points::_AccessPoints_AccessPoint_Ssids_Ssid_Dot11V_default_instance_);
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Dot11V* AccessPoints_AccessPoint_Ssids_Ssid::release_dot11v() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.dot11v)
  
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Dot11V* temp = dot11v_;
  dot11v_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Dot11V* AccessPoints_AccessPoint_Ssids_Ssid::mutable_dot11v() {
  
  if (dot11v_ == NULL) {
    dot11v_ = new ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Dot11V;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.dot11v)
  return dot11v_;
}
inline void AccessPoints_AccessPoint_Ssids_Ssid::set_allocated_dot11v(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Dot11V* dot11v) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete dot11v_;
  }
  if (dot11v) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      dot11v = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, dot11v, submessage_arena);
    }
    
  } else {
    
  }
  dot11v_ = dot11v;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.dot11v)
}

// .openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Dot1XTimers dot1x_timers = 474480117 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/dot1x-timers"];
inline bool AccessPoints_AccessPoint_Ssids_Ssid::has_dot1x_timers() const {
  return this != internal_default_instance() && dot1x_timers_ != NULL;
}
inline void AccessPoints_AccessPoint_Ssids_Ssid::clear_dot1x_timers() {
  if (GetArenaNoVirtual() == NULL && dot1x_timers_ != NULL) {
    delete dot1x_timers_;
  }
  dot1x_timers_ = NULL;
}
inline const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Dot1XTimers& AccessPoints_AccessPoint_Ssids_Ssid::dot1x_timers() const {
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Dot1XTimers* p = dot1x_timers_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.dot1x_timers)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Dot1XTimers*>(
      &::openconfig::openconfig_access_points::_AccessPoints_AccessPoint_Ssids_Ssid_Dot1XTimers_default_instance_);
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Dot1XTimers* AccessPoints_AccessPoint_Ssids_Ssid::release_dot1x_timers() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.dot1x_timers)
  
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Dot1XTimers* temp = dot1x_timers_;
  dot1x_timers_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Dot1XTimers* AccessPoints_AccessPoint_Ssids_Ssid::mutable_dot1x_timers() {
  
  if (dot1x_timers_ == NULL) {
    dot1x_timers_ = new ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Dot1XTimers;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.dot1x_timers)
  return dot1x_timers_;
}
inline void AccessPoints_AccessPoint_Ssids_Ssid::set_allocated_dot1x_timers(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Dot1XTimers* dot1x_timers) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete dot1x_timers_;
  }
  if (dot1x_timers) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      dot1x_timers = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, dot1x_timers, submessage_arena);
    }
    
  } else {
    
  }
  dot1x_timers_ = dot1x_timers;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.dot1x_timers)
}

// .openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.State state = 314036711 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/state"];
inline bool AccessPoints_AccessPoint_Ssids_Ssid::has_state() const {
  return this != internal_default_instance() && state_ != NULL;
}
inline void AccessPoints_AccessPoint_Ssids_Ssid::clear_state() {
  if (GetArenaNoVirtual() == NULL && state_ != NULL) {
    delete state_;
  }
  state_ = NULL;
}
inline const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_State& AccessPoints_AccessPoint_Ssids_Ssid::state() const {
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_State* p = state_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.state)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_State*>(
      &::openconfig::openconfig_access_points::_AccessPoints_AccessPoint_Ssids_Ssid_State_default_instance_);
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_State* AccessPoints_AccessPoint_Ssids_Ssid::release_state() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.state)
  
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_State* temp = state_;
  state_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_State* AccessPoints_AccessPoint_Ssids_Ssid::mutable_state() {
  
  if (state_ == NULL) {
    state_ = new ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_State;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.state)
  return state_;
}
inline void AccessPoints_AccessPoint_Ssids_Ssid::set_allocated_state(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_State* state) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete state_;
  }
  if (state) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      state = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, state, submessage_arena);
    }
    
  } else {
    
  }
  state_ = state;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.state)
}

// .openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.Wmm wmm = 148999029 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/wmm"];
inline bool AccessPoints_AccessPoint_Ssids_Ssid::has_wmm() const {
  return this != internal_default_instance() && wmm_ != NULL;
}
inline void AccessPoints_AccessPoint_Ssids_Ssid::clear_wmm() {
  if (GetArenaNoVirtual() == NULL && wmm_ != NULL) {
    delete wmm_;
  }
  wmm_ = NULL;
}
inline const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Wmm& AccessPoints_AccessPoint_Ssids_Ssid::wmm() const {
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Wmm* p = wmm_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.wmm)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Wmm*>(
      &::openconfig::openconfig_access_points::_AccessPoints_AccessPoint_Ssids_Ssid_Wmm_default_instance_);
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Wmm* AccessPoints_AccessPoint_Ssids_Ssid::release_wmm() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.wmm)
  
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Wmm* temp = wmm_;
  wmm_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Wmm* AccessPoints_AccessPoint_Ssids_Ssid::mutable_wmm() {
  
  if (wmm_ == NULL) {
    wmm_ = new ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Wmm;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.wmm)
  return wmm_;
}
inline void AccessPoints_AccessPoint_Ssids_Ssid::set_allocated_wmm(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Wmm* wmm) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete wmm_;
  }
  if (wmm) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      wmm = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, wmm, submessage_arena);
    }
    
  } else {
    
  }
  wmm_ = wmm;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid.wmm)
}

// -------------------------------------------------------------------

// AccessPoints_AccessPoint_Ssids_SsidKey

// string name = 1 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid/name"];
inline void AccessPoints_AccessPoint_Ssids_SsidKey::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AccessPoints_AccessPoint_Ssids_SsidKey::name() const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.SsidKey.name)
  return name_.GetNoArena();
}
inline void AccessPoints_AccessPoint_Ssids_SsidKey::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.SsidKey.name)
}
#if LANG_CXX11
inline void AccessPoints_AccessPoint_Ssids_SsidKey::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.SsidKey.name)
}
#endif
inline void AccessPoints_AccessPoint_Ssids_SsidKey::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.SsidKey.name)
}
inline void AccessPoints_AccessPoint_Ssids_SsidKey::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.SsidKey.name)
}
inline ::std::string* AccessPoints_AccessPoint_Ssids_SsidKey::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.SsidKey.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AccessPoints_AccessPoint_Ssids_SsidKey::release_name() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.SsidKey.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AccessPoints_AccessPoint_Ssids_SsidKey::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.SsidKey.name)
}

// .openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.Ssid ssid = 2;
inline bool AccessPoints_AccessPoint_Ssids_SsidKey::has_ssid() const {
  return this != internal_default_instance() && ssid_ != NULL;
}
inline void AccessPoints_AccessPoint_Ssids_SsidKey::clear_ssid() {
  if (GetArenaNoVirtual() == NULL && ssid_ != NULL) {
    delete ssid_;
  }
  ssid_ = NULL;
}
inline const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid& AccessPoints_AccessPoint_Ssids_SsidKey::ssid() const {
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid* p = ssid_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.SsidKey.ssid)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid*>(
      &::openconfig::openconfig_access_points::_AccessPoints_AccessPoint_Ssids_Ssid_default_instance_);
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid* AccessPoints_AccessPoint_Ssids_SsidKey::release_ssid() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.SsidKey.ssid)
  
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid* temp = ssid_;
  ssid_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid* AccessPoints_AccessPoint_Ssids_SsidKey::mutable_ssid() {
  
  if (ssid_ == NULL) {
    ssid_ = new ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.SsidKey.ssid)
  return ssid_;
}
inline void AccessPoints_AccessPoint_Ssids_SsidKey::set_allocated_ssid(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid* ssid) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete ssid_;
  }
  if (ssid) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      ssid = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, ssid, submessage_arena);
    }
    
  } else {
    
  }
  ssid_ = ssid;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.SsidKey.ssid)
}

// -------------------------------------------------------------------

// AccessPoints_AccessPoint_Ssids

// repeated .openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.SsidKey ssid = 25773317 [(.yext.schemapath) = "/access-points/access-point/ssids/ssid"];
inline int AccessPoints_AccessPoint_Ssids::ssid_size() const {
  return ssid_.size();
}
inline void AccessPoints_AccessPoint_Ssids::clear_ssid() {
  ssid_.Clear();
}
inline const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_SsidKey& AccessPoints_AccessPoint_Ssids::ssid(int index) const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.ssid)
  return ssid_.Get(index);
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_SsidKey* AccessPoints_AccessPoint_Ssids::mutable_ssid(int index) {
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.ssid)
  return ssid_.Mutable(index);
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_SsidKey* AccessPoints_AccessPoint_Ssids::add_ssid() {
  // @@protoc_insertion_point(field_add:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.ssid)
  return ssid_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_SsidKey >*
AccessPoints_AccessPoint_Ssids::mutable_ssid() {
  // @@protoc_insertion_point(field_mutable_list:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.ssid)
  return &ssid_;
}
inline const ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_SsidKey >&
AccessPoints_AccessPoint_Ssids::ssid() const {
  // @@protoc_insertion_point(field_list:openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids.ssid)
  return ssid_;
}

// -------------------------------------------------------------------

// AccessPoints_AccessPoint_System_Aaa_Accounting_Config_AccountingMethodUnion

// .openconfig.enums.OpenconfigAaaTypesAAAMETHODTYPE accounting_method_openconfigaaatypesaaamethodtype = 420046428;
inline void AccessPoints_AccessPoint_System_Aaa_Accounting_Config_AccountingMethodUnion::clear_accounting_method_openconfigaaatypesaaamethodtype() {
  accounting_method_openconfigaaatypesaaamethodtype_ = 0;
}
inline ::openconfig::enums::OpenconfigAaaTypesAAAMETHODTYPE AccessPoints_AccessPoint_System_Aaa_Accounting_Config_AccountingMethodUnion::accounting_method_openconfigaaatypesaaamethodtype() const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Accounting.Config.AccountingMethodUnion.accounting_method_openconfigaaatypesaaamethodtype)
  return static_cast< ::openconfig::enums::OpenconfigAaaTypesAAAMETHODTYPE >(accounting_method_openconfigaaatypesaaamethodtype_);
}
inline void AccessPoints_AccessPoint_System_Aaa_Accounting_Config_AccountingMethodUnion::set_accounting_method_openconfigaaatypesaaamethodtype(::openconfig::enums::OpenconfigAaaTypesAAAMETHODTYPE value) {
  
  accounting_method_openconfigaaatypesaaamethodtype_ = value;
  // @@protoc_insertion_point(field_set:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Accounting.Config.AccountingMethodUnion.accounting_method_openconfigaaatypesaaamethodtype)
}

// string accounting_method_string = 29221163;
inline void AccessPoints_AccessPoint_System_Aaa_Accounting_Config_AccountingMethodUnion::clear_accounting_method_string() {
  accounting_method_string_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AccessPoints_AccessPoint_System_Aaa_Accounting_Config_AccountingMethodUnion::accounting_method_string() const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Accounting.Config.AccountingMethodUnion.accounting_method_string)
  return accounting_method_string_.GetNoArena();
}
inline void AccessPoints_AccessPoint_System_Aaa_Accounting_Config_AccountingMethodUnion::set_accounting_method_string(const ::std::string& value) {
  
  accounting_method_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Accounting.Config.AccountingMethodUnion.accounting_method_string)
}
#if LANG_CXX11
inline void AccessPoints_AccessPoint_System_Aaa_Accounting_Config_AccountingMethodUnion::set_accounting_method_string(::std::string&& value) {
  
  accounting_method_string_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Accounting.Config.AccountingMethodUnion.accounting_method_string)
}
#endif
inline void AccessPoints_AccessPoint_System_Aaa_Accounting_Config_AccountingMethodUnion::set_accounting_method_string(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  accounting_method_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Accounting.Config.AccountingMethodUnion.accounting_method_string)
}
inline void AccessPoints_AccessPoint_System_Aaa_Accounting_Config_AccountingMethodUnion::set_accounting_method_string(const char* value, size_t size) {
  
  accounting_method_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Accounting.Config.AccountingMethodUnion.accounting_method_string)
}
inline ::std::string* AccessPoints_AccessPoint_System_Aaa_Accounting_Config_AccountingMethodUnion::mutable_accounting_method_string() {
  
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Accounting.Config.AccountingMethodUnion.accounting_method_string)
  return accounting_method_string_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AccessPoints_AccessPoint_System_Aaa_Accounting_Config_AccountingMethodUnion::release_accounting_method_string() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Accounting.Config.AccountingMethodUnion.accounting_method_string)
  
  return accounting_method_string_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AccessPoints_AccessPoint_System_Aaa_Accounting_Config_AccountingMethodUnion::set_allocated_accounting_method_string(::std::string* accounting_method_string) {
  if (accounting_method_string != NULL) {
    
  } else {
    
  }
  accounting_method_string_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), accounting_method_string);
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Accounting.Config.AccountingMethodUnion.accounting_method_string)
}

// -------------------------------------------------------------------

// AccessPoints_AccessPoint_System_Aaa_Accounting_Config

// repeated .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Accounting.Config.AccountingMethodUnion accounting_method = 89955965 [(.yext.schemapath) = "/access-points/access-point/system/aaa/accounting/config/accounting-method"];
inline int AccessPoints_AccessPoint_System_Aaa_Accounting_Config::accounting_method_size() const {
  return accounting_method_.size();
}
inline void AccessPoints_AccessPoint_System_Aaa_Accounting_Config::clear_accounting_method() {
  accounting_method_.Clear();
}
inline const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Accounting_Config_AccountingMethodUnion& AccessPoints_AccessPoint_System_Aaa_Accounting_Config::accounting_method(int index) const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Accounting.Config.accounting_method)
  return accounting_method_.Get(index);
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Accounting_Config_AccountingMethodUnion* AccessPoints_AccessPoint_System_Aaa_Accounting_Config::mutable_accounting_method(int index) {
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Accounting.Config.accounting_method)
  return accounting_method_.Mutable(index);
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Accounting_Config_AccountingMethodUnion* AccessPoints_AccessPoint_System_Aaa_Accounting_Config::add_accounting_method() {
  // @@protoc_insertion_point(field_add:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Accounting.Config.accounting_method)
  return accounting_method_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Accounting_Config_AccountingMethodUnion >*
AccessPoints_AccessPoint_System_Aaa_Accounting_Config::mutable_accounting_method() {
  // @@protoc_insertion_point(field_mutable_list:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Accounting.Config.accounting_method)
  return &accounting_method_;
}
inline const ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Accounting_Config_AccountingMethodUnion >&
AccessPoints_AccessPoint_System_Aaa_Accounting_Config::accounting_method() const {
  // @@protoc_insertion_point(field_list:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Accounting.Config.accounting_method)
  return accounting_method_;
}

// -------------------------------------------------------------------

// AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event_Config

// .openconfig.enums.OpenconfigAaaTypesAAAACCOUNTINGEVENTTYPE event_type = 170629062 [(.yext.schemapath) = "/access-points/access-point/system/aaa/accounting/events/event/config/event-type"];
inline void AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event_Config::clear_event_type() {
  event_type_ = 0;
}
inline ::openconfig::enums::OpenconfigAaaTypesAAAACCOUNTINGEVENTTYPE AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event_Config::event_type() const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Accounting.Events.Event.Config.event_type)
  return static_cast< ::openconfig::enums::OpenconfigAaaTypesAAAACCOUNTINGEVENTTYPE >(event_type_);
}
inline void AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event_Config::set_event_type(::openconfig::enums::OpenconfigAaaTypesAAAACCOUNTINGEVENTTYPE value) {
  
  event_type_ = value;
  // @@protoc_insertion_point(field_set:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Accounting.Events.Event.Config.event_type)
}

// .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Accounting.Events.Event.Config.Record record = 33835424 [(.yext.schemapath) = "/access-points/access-point/system/aaa/accounting/events/event/config/record"];
inline void AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event_Config::clear_record() {
  record_ = 0;
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event_Config_Record AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event_Config::record() const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Accounting.Events.Event.Config.record)
  return static_cast< ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event_Config_Record >(record_);
}
inline void AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event_Config::set_record(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event_Config_Record value) {
  
  record_ = value;
  // @@protoc_insertion_point(field_set:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Accounting.Events.Event.Config.record)
}

// -------------------------------------------------------------------

// AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event_State

// .openconfig.enums.OpenconfigAaaTypesAAAACCOUNTINGEVENTTYPE event_type = 31161949 [(.yext.schemapath) = "/access-points/access-point/system/aaa/accounting/events/event/state/event-type"];
inline void AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event_State::clear_event_type() {
  event_type_ = 0;
}
inline ::openconfig::enums::OpenconfigAaaTypesAAAACCOUNTINGEVENTTYPE AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event_State::event_type() const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Accounting.Events.Event.State.event_type)
  return static_cast< ::openconfig::enums::OpenconfigAaaTypesAAAACCOUNTINGEVENTTYPE >(event_type_);
}
inline void AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event_State::set_event_type(::openconfig::enums::OpenconfigAaaTypesAAAACCOUNTINGEVENTTYPE value) {
  
  event_type_ = value;
  // @@protoc_insertion_point(field_set:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Accounting.Events.Event.State.event_type)
}

// .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Accounting.Events.Event.State.Record record = 297836839 [(.yext.schemapath) = "/access-points/access-point/system/aaa/accounting/events/event/state/record"];
inline void AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event_State::clear_record() {
  record_ = 0;
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event_State_Record AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event_State::record() const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Accounting.Events.Event.State.record)
  return static_cast< ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event_State_Record >(record_);
}
inline void AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event_State::set_record(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event_State_Record value) {
  
  record_ = value;
  // @@protoc_insertion_point(field_set:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Accounting.Events.Event.State.record)
}

// -------------------------------------------------------------------

// AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event

// .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Accounting.Events.Event.Config config = 200110748 [(.yext.schemapath) = "/access-points/access-point/system/aaa/accounting/events/event/config"];
inline bool AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event::has_config() const {
  return this != internal_default_instance() && config_ != NULL;
}
inline void AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event::clear_config() {
  if (GetArenaNoVirtual() == NULL && config_ != NULL) {
    delete config_;
  }
  config_ = NULL;
}
inline const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event_Config& AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event::config() const {
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event_Config* p = config_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Accounting.Events.Event.config)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event_Config*>(
      &::openconfig::openconfig_access_points::_AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event_Config_default_instance_);
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event_Config* AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event::release_config() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Accounting.Events.Event.config)
  
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event_Config* temp = config_;
  config_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event_Config* AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event::mutable_config() {
  
  if (config_ == NULL) {
    config_ = new ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event_Config;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Accounting.Events.Event.config)
  return config_;
}
inline void AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event::set_allocated_config(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event_Config* config) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete config_;
  }
  if (config) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      config = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, config, submessage_arena);
    }
    
  } else {
    
  }
  config_ = config;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Accounting.Events.Event.config)
}

// .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Accounting.Events.Event.State state = 366286613 [(.yext.schemapath) = "/access-points/access-point/system/aaa/accounting/events/event/state"];
inline bool AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event::has_state() const {
  return this != internal_default_instance() && state_ != NULL;
}
inline void AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event::clear_state() {
  if (GetArenaNoVirtual() == NULL && state_ != NULL) {
    delete state_;
  }
  state_ = NULL;
}
inline const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event_State& AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event::state() const {
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event_State* p = state_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Accounting.Events.Event.state)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event_State*>(
      &::openconfig::openconfig_access_points::_AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event_State_default_instance_);
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event_State* AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event::release_state() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Accounting.Events.Event.state)
  
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event_State* temp = state_;
  state_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event_State* AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event::mutable_state() {
  
  if (state_ == NULL) {
    state_ = new ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event_State;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Accounting.Events.Event.state)
  return state_;
}
inline void AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event::set_allocated_state(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event_State* state) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete state_;
  }
  if (state) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      state = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, state, submessage_arena);
    }
    
  } else {
    
  }
  state_ = state;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Accounting.Events.Event.state)
}

// -------------------------------------------------------------------

// AccessPoints_AccessPoint_System_Aaa_Accounting_Events_EventKey

// .openconfig.enums.OpenconfigAaaTypesAAAACCOUNTINGEVENTTYPE event_type = 1 [(.yext.schemapath) = "/access-points/access-point/system/aaa/accounting/events/event/event-type"];
inline void AccessPoints_AccessPoint_System_Aaa_Accounting_Events_EventKey::clear_event_type() {
  event_type_ = 0;
}
inline ::openconfig::enums::OpenconfigAaaTypesAAAACCOUNTINGEVENTTYPE AccessPoints_AccessPoint_System_Aaa_Accounting_Events_EventKey::event_type() const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Accounting.Events.EventKey.event_type)
  return static_cast< ::openconfig::enums::OpenconfigAaaTypesAAAACCOUNTINGEVENTTYPE >(event_type_);
}
inline void AccessPoints_AccessPoint_System_Aaa_Accounting_Events_EventKey::set_event_type(::openconfig::enums::OpenconfigAaaTypesAAAACCOUNTINGEVENTTYPE value) {
  
  event_type_ = value;
  // @@protoc_insertion_point(field_set:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Accounting.Events.EventKey.event_type)
}

// .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Accounting.Events.Event event = 2;
inline bool AccessPoints_AccessPoint_System_Aaa_Accounting_Events_EventKey::has_event() const {
  return this != internal_default_instance() && event_ != NULL;
}
inline void AccessPoints_AccessPoint_System_Aaa_Accounting_Events_EventKey::clear_event() {
  if (GetArenaNoVirtual() == NULL && event_ != NULL) {
    delete event_;
  }
  event_ = NULL;
}
inline const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event& AccessPoints_AccessPoint_System_Aaa_Accounting_Events_EventKey::event() const {
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event* p = event_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Accounting.Events.EventKey.event)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event*>(
      &::openconfig::openconfig_access_points::_AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event_default_instance_);
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event* AccessPoints_AccessPoint_System_Aaa_Accounting_Events_EventKey::release_event() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Accounting.Events.EventKey.event)
  
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event* temp = event_;
  event_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event* AccessPoints_AccessPoint_System_Aaa_Accounting_Events_EventKey::mutable_event() {
  
  if (event_ == NULL) {
    event_ = new ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Accounting.Events.EventKey.event)
  return event_;
}
inline void AccessPoints_AccessPoint_System_Aaa_Accounting_Events_EventKey::set_allocated_event(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event* event) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete event_;
  }
  if (event) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      event = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, event, submessage_arena);
    }
    
  } else {
    
  }
  event_ = event;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Accounting.Events.EventKey.event)
}

// -------------------------------------------------------------------

// AccessPoints_AccessPoint_System_Aaa_Accounting_Events

// repeated .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Accounting.Events.EventKey event = 443644363 [(.yext.schemapath) = "/access-points/access-point/system/aaa/accounting/events/event"];
inline int AccessPoints_AccessPoint_System_Aaa_Accounting_Events::event_size() const {
  return event_.size();
}
inline void AccessPoints_AccessPoint_System_Aaa_Accounting_Events::clear_event() {
  event_.Clear();
}
inline const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Accounting_Events_EventKey& AccessPoints_AccessPoint_System_Aaa_Accounting_Events::event(int index) const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Accounting.Events.event)
  return event_.Get(index);
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Accounting_Events_EventKey* AccessPoints_AccessPoint_System_Aaa_Accounting_Events::mutable_event(int index) {
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Accounting.Events.event)
  return event_.Mutable(index);
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Accounting_Events_EventKey* AccessPoints_AccessPoint_System_Aaa_Accounting_Events::add_event() {
  // @@protoc_insertion_point(field_add:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Accounting.Events.event)
  return event_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Accounting_Events_EventKey >*
AccessPoints_AccessPoint_System_Aaa_Accounting_Events::mutable_event() {
  // @@protoc_insertion_point(field_mutable_list:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Accounting.Events.event)
  return &event_;
}
inline const ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Accounting_Events_EventKey >&
AccessPoints_AccessPoint_System_Aaa_Accounting_Events::event() const {
  // @@protoc_insertion_point(field_list:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Accounting.Events.event)
  return event_;
}

// -------------------------------------------------------------------

// AccessPoints_AccessPoint_System_Aaa_Accounting_State_AccountingMethodUnion

// .openconfig.enums.OpenconfigAaaTypesAAAMETHODTYPE accounting_method_openconfigaaatypesaaamethodtype = 173595271;
inline void AccessPoints_AccessPoint_System_Aaa_Accounting_State_AccountingMethodUnion::clear_accounting_method_openconfigaaatypesaaamethodtype() {
  accounting_method_openconfigaaatypesaaamethodtype_ = 0;
}
inline ::openconfig::enums::OpenconfigAaaTypesAAAMETHODTYPE AccessPoints_AccessPoint_System_Aaa_Accounting_State_AccountingMethodUnion::accounting_method_openconfigaaatypesaaamethodtype() const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Accounting.State.AccountingMethodUnion.accounting_method_openconfigaaatypesaaamethodtype)
  return static_cast< ::openconfig::enums::OpenconfigAaaTypesAAAMETHODTYPE >(accounting_method_openconfigaaatypesaaamethodtype_);
}
inline void AccessPoints_AccessPoint_System_Aaa_Accounting_State_AccountingMethodUnion::set_accounting_method_openconfigaaatypesaaamethodtype(::openconfig::enums::OpenconfigAaaTypesAAAMETHODTYPE value) {
  
  accounting_method_openconfigaaatypesaaamethodtype_ = value;
  // @@protoc_insertion_point(field_set:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Accounting.State.AccountingMethodUnion.accounting_method_openconfigaaatypesaaamethodtype)
}

// string accounting_method_string = 295262802;
inline void AccessPoints_AccessPoint_System_Aaa_Accounting_State_AccountingMethodUnion::clear_accounting_method_string() {
  accounting_method_string_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AccessPoints_AccessPoint_System_Aaa_Accounting_State_AccountingMethodUnion::accounting_method_string() const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Accounting.State.AccountingMethodUnion.accounting_method_string)
  return accounting_method_string_.GetNoArena();
}
inline void AccessPoints_AccessPoint_System_Aaa_Accounting_State_AccountingMethodUnion::set_accounting_method_string(const ::std::string& value) {
  
  accounting_method_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Accounting.State.AccountingMethodUnion.accounting_method_string)
}
#if LANG_CXX11
inline void AccessPoints_AccessPoint_System_Aaa_Accounting_State_AccountingMethodUnion::set_accounting_method_string(::std::string&& value) {
  
  accounting_method_string_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Accounting.State.AccountingMethodUnion.accounting_method_string)
}
#endif
inline void AccessPoints_AccessPoint_System_Aaa_Accounting_State_AccountingMethodUnion::set_accounting_method_string(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  accounting_method_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Accounting.State.AccountingMethodUnion.accounting_method_string)
}
inline void AccessPoints_AccessPoint_System_Aaa_Accounting_State_AccountingMethodUnion::set_accounting_method_string(const char* value, size_t size) {
  
  accounting_method_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Accounting.State.AccountingMethodUnion.accounting_method_string)
}
inline ::std::string* AccessPoints_AccessPoint_System_Aaa_Accounting_State_AccountingMethodUnion::mutable_accounting_method_string() {
  
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Accounting.State.AccountingMethodUnion.accounting_method_string)
  return accounting_method_string_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AccessPoints_AccessPoint_System_Aaa_Accounting_State_AccountingMethodUnion::release_accounting_method_string() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Accounting.State.AccountingMethodUnion.accounting_method_string)
  
  return accounting_method_string_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AccessPoints_AccessPoint_System_Aaa_Accounting_State_AccountingMethodUnion::set_allocated_accounting_method_string(::std::string* accounting_method_string) {
  if (accounting_method_string != NULL) {
    
  } else {
    
  }
  accounting_method_string_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), accounting_method_string);
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Accounting.State.AccountingMethodUnion.accounting_method_string)
}

// -------------------------------------------------------------------

// AccessPoints_AccessPoint_System_Aaa_Accounting_State

// repeated .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Accounting.State.AccountingMethodUnion accounting_method = 251482186 [(.yext.schemapath) = "/access-points/access-point/system/aaa/accounting/state/accounting-method"];
inline int AccessPoints_AccessPoint_System_Aaa_Accounting_State::accounting_method_size() const {
  return accounting_method_.size();
}
inline void AccessPoints_AccessPoint_System_Aaa_Accounting_State::clear_accounting_method() {
  accounting_method_.Clear();
}
inline const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Accounting_State_AccountingMethodUnion& AccessPoints_AccessPoint_System_Aaa_Accounting_State::accounting_method(int index) const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Accounting.State.accounting_method)
  return accounting_method_.Get(index);
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Accounting_State_AccountingMethodUnion* AccessPoints_AccessPoint_System_Aaa_Accounting_State::mutable_accounting_method(int index) {
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Accounting.State.accounting_method)
  return accounting_method_.Mutable(index);
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Accounting_State_AccountingMethodUnion* AccessPoints_AccessPoint_System_Aaa_Accounting_State::add_accounting_method() {
  // @@protoc_insertion_point(field_add:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Accounting.State.accounting_method)
  return accounting_method_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Accounting_State_AccountingMethodUnion >*
AccessPoints_AccessPoint_System_Aaa_Accounting_State::mutable_accounting_method() {
  // @@protoc_insertion_point(field_mutable_list:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Accounting.State.accounting_method)
  return &accounting_method_;
}
inline const ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Accounting_State_AccountingMethodUnion >&
AccessPoints_AccessPoint_System_Aaa_Accounting_State::accounting_method() const {
  // @@protoc_insertion_point(field_list:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Accounting.State.accounting_method)
  return accounting_method_;
}

// -------------------------------------------------------------------

// AccessPoints_AccessPoint_System_Aaa_Accounting

// .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Accounting.Config config = 132887907 [(.yext.schemapath) = "/access-points/access-point/system/aaa/accounting/config"];
inline bool AccessPoints_AccessPoint_System_Aaa_Accounting::has_config() const {
  return this != internal_default_instance() && config_ != NULL;
}
inline void AccessPoints_AccessPoint_System_Aaa_Accounting::clear_config() {
  if (GetArenaNoVirtual() == NULL && config_ != NULL) {
    delete config_;
  }
  config_ = NULL;
}
inline const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Accounting_Config& AccessPoints_AccessPoint_System_Aaa_Accounting::config() const {
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Accounting_Config* p = config_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Accounting.config)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Accounting_Config*>(
      &::openconfig::openconfig_access_points::_AccessPoints_AccessPoint_System_Aaa_Accounting_Config_default_instance_);
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Accounting_Config* AccessPoints_AccessPoint_System_Aaa_Accounting::release_config() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Accounting.config)
  
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Accounting_Config* temp = config_;
  config_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Accounting_Config* AccessPoints_AccessPoint_System_Aaa_Accounting::mutable_config() {
  
  if (config_ == NULL) {
    config_ = new ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Accounting_Config;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Accounting.config)
  return config_;
}
inline void AccessPoints_AccessPoint_System_Aaa_Accounting::set_allocated_config(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Accounting_Config* config) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete config_;
  }
  if (config) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      config = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, config, submessage_arena);
    }
    
  } else {
    
  }
  config_ = config;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Accounting.config)
}

// .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Accounting.Events events = 93725866 [(.yext.schemapath) = "/access-points/access-point/system/aaa/accounting/events"];
inline bool AccessPoints_AccessPoint_System_Aaa_Accounting::has_events() const {
  return this != internal_default_instance() && events_ != NULL;
}
inline void AccessPoints_AccessPoint_System_Aaa_Accounting::clear_events() {
  if (GetArenaNoVirtual() == NULL && events_ != NULL) {
    delete events_;
  }
  events_ = NULL;
}
inline const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Accounting_Events& AccessPoints_AccessPoint_System_Aaa_Accounting::events() const {
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Accounting_Events* p = events_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Accounting.events)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Accounting_Events*>(
      &::openconfig::openconfig_access_points::_AccessPoints_AccessPoint_System_Aaa_Accounting_Events_default_instance_);
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Accounting_Events* AccessPoints_AccessPoint_System_Aaa_Accounting::release_events() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Accounting.events)
  
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Accounting_Events* temp = events_;
  events_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Accounting_Events* AccessPoints_AccessPoint_System_Aaa_Accounting::mutable_events() {
  
  if (events_ == NULL) {
    events_ = new ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Accounting_Events;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Accounting.events)
  return events_;
}
inline void AccessPoints_AccessPoint_System_Aaa_Accounting::set_allocated_events(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Accounting_Events* events) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete events_;
  }
  if (events) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      events = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, events, submessage_arena);
    }
    
  } else {
    
  }
  events_ = events;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Accounting.events)
}

// .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Accounting.State state = 166257476 [(.yext.schemapath) = "/access-points/access-point/system/aaa/accounting/state"];
inline bool AccessPoints_AccessPoint_System_Aaa_Accounting::has_state() const {
  return this != internal_default_instance() && state_ != NULL;
}
inline void AccessPoints_AccessPoint_System_Aaa_Accounting::clear_state() {
  if (GetArenaNoVirtual() == NULL && state_ != NULL) {
    delete state_;
  }
  state_ = NULL;
}
inline const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Accounting_State& AccessPoints_AccessPoint_System_Aaa_Accounting::state() const {
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Accounting_State* p = state_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Accounting.state)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Accounting_State*>(
      &::openconfig::openconfig_access_points::_AccessPoints_AccessPoint_System_Aaa_Accounting_State_default_instance_);
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Accounting_State* AccessPoints_AccessPoint_System_Aaa_Accounting::release_state() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Accounting.state)
  
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Accounting_State* temp = state_;
  state_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Accounting_State* AccessPoints_AccessPoint_System_Aaa_Accounting::mutable_state() {
  
  if (state_ == NULL) {
    state_ = new ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Accounting_State;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Accounting.state)
  return state_;
}
inline void AccessPoints_AccessPoint_System_Aaa_Accounting::set_allocated_state(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Accounting_State* state) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete state_;
  }
  if (state) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      state = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, state, submessage_arena);
    }
    
  } else {
    
  }
  state_ = state;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Accounting.state)
}

// -------------------------------------------------------------------

// AccessPoints_AccessPoint_System_Aaa_Authentication_AdminUser_Config

// .ywrapper.StringValue admin_password = 518884846 [(.yext.schemapath) = "/access-points/access-point/system/aaa/authentication/admin-user/config/admin-password"];
inline bool AccessPoints_AccessPoint_System_Aaa_Authentication_AdminUser_Config::has_admin_password() const {
  return this != internal_default_instance() && admin_password_ != NULL;
}
inline const ::ywrapper::StringValue& AccessPoints_AccessPoint_System_Aaa_Authentication_AdminUser_Config::admin_password() const {
  const ::ywrapper::StringValue* p = admin_password_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authentication.AdminUser.Config.admin_password)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::StringValue*>(
      &::ywrapper::_StringValue_default_instance_);
}
inline ::ywrapper::StringValue* AccessPoints_AccessPoint_System_Aaa_Authentication_AdminUser_Config::release_admin_password() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authentication.AdminUser.Config.admin_password)
  
  ::ywrapper::StringValue* temp = admin_password_;
  admin_password_ = NULL;
  return temp;
}
inline ::ywrapper::StringValue* AccessPoints_AccessPoint_System_Aaa_Authentication_AdminUser_Config::mutable_admin_password() {
  
  if (admin_password_ == NULL) {
    admin_password_ = new ::ywrapper::StringValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authentication.AdminUser.Config.admin_password)
  return admin_password_;
}
inline void AccessPoints_AccessPoint_System_Aaa_Authentication_AdminUser_Config::set_allocated_admin_password(::ywrapper::StringValue* admin_password) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(admin_password_);
  }
  if (admin_password) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      admin_password = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, admin_password, submessage_arena);
    }
    
  } else {
    
  }
  admin_password_ = admin_password;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authentication.AdminUser.Config.admin_password)
}

// .ywrapper.StringValue admin_password_hashed = 77802616 [(.yext.schemapath) = "/access-points/access-point/system/aaa/authentication/admin-user/config/admin-password-hashed"];
inline bool AccessPoints_AccessPoint_System_Aaa_Authentication_AdminUser_Config::has_admin_password_hashed() const {
  return this != internal_default_instance() && admin_password_hashed_ != NULL;
}
inline const ::ywrapper::StringValue& AccessPoints_AccessPoint_System_Aaa_Authentication_AdminUser_Config::admin_password_hashed() const {
  const ::ywrapper::StringValue* p = admin_password_hashed_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authentication.AdminUser.Config.admin_password_hashed)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::StringValue*>(
      &::ywrapper::_StringValue_default_instance_);
}
inline ::ywrapper::StringValue* AccessPoints_AccessPoint_System_Aaa_Authentication_AdminUser_Config::release_admin_password_hashed() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authentication.AdminUser.Config.admin_password_hashed)
  
  ::ywrapper::StringValue* temp = admin_password_hashed_;
  admin_password_hashed_ = NULL;
  return temp;
}
inline ::ywrapper::StringValue* AccessPoints_AccessPoint_System_Aaa_Authentication_AdminUser_Config::mutable_admin_password_hashed() {
  
  if (admin_password_hashed_ == NULL) {
    admin_password_hashed_ = new ::ywrapper::StringValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authentication.AdminUser.Config.admin_password_hashed)
  return admin_password_hashed_;
}
inline void AccessPoints_AccessPoint_System_Aaa_Authentication_AdminUser_Config::set_allocated_admin_password_hashed(::ywrapper::StringValue* admin_password_hashed) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(admin_password_hashed_);
  }
  if (admin_password_hashed) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      admin_password_hashed = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, admin_password_hashed, submessage_arena);
    }
    
  } else {
    
  }
  admin_password_hashed_ = admin_password_hashed;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authentication.AdminUser.Config.admin_password_hashed)
}

// -------------------------------------------------------------------

// AccessPoints_AccessPoint_System_Aaa_Authentication_AdminUser_State

// .ywrapper.StringValue admin_password = 509711845 [(.yext.schemapath) = "/access-points/access-point/system/aaa/authentication/admin-user/state/admin-password"];
inline bool AccessPoints_AccessPoint_System_Aaa_Authentication_AdminUser_State::has_admin_password() const {
  return this != internal_default_instance() && admin_password_ != NULL;
}
inline const ::ywrapper::StringValue& AccessPoints_AccessPoint_System_Aaa_Authentication_AdminUser_State::admin_password() const {
  const ::ywrapper::StringValue* p = admin_password_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authentication.AdminUser.State.admin_password)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::StringValue*>(
      &::ywrapper::_StringValue_default_instance_);
}
inline ::ywrapper::StringValue* AccessPoints_AccessPoint_System_Aaa_Authentication_AdminUser_State::release_admin_password() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authentication.AdminUser.State.admin_password)
  
  ::ywrapper::StringValue* temp = admin_password_;
  admin_password_ = NULL;
  return temp;
}
inline ::ywrapper::StringValue* AccessPoints_AccessPoint_System_Aaa_Authentication_AdminUser_State::mutable_admin_password() {
  
  if (admin_password_ == NULL) {
    admin_password_ = new ::ywrapper::StringValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authentication.AdminUser.State.admin_password)
  return admin_password_;
}
inline void AccessPoints_AccessPoint_System_Aaa_Authentication_AdminUser_State::set_allocated_admin_password(::ywrapper::StringValue* admin_password) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(admin_password_);
  }
  if (admin_password) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      admin_password = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, admin_password, submessage_arena);
    }
    
  } else {
    
  }
  admin_password_ = admin_password;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authentication.AdminUser.State.admin_password)
}

// .ywrapper.StringValue admin_password_hashed = 329646473 [(.yext.schemapath) = "/access-points/access-point/system/aaa/authentication/admin-user/state/admin-password-hashed"];
inline bool AccessPoints_AccessPoint_System_Aaa_Authentication_AdminUser_State::has_admin_password_hashed() const {
  return this != internal_default_instance() && admin_password_hashed_ != NULL;
}
inline const ::ywrapper::StringValue& AccessPoints_AccessPoint_System_Aaa_Authentication_AdminUser_State::admin_password_hashed() const {
  const ::ywrapper::StringValue* p = admin_password_hashed_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authentication.AdminUser.State.admin_password_hashed)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::StringValue*>(
      &::ywrapper::_StringValue_default_instance_);
}
inline ::ywrapper::StringValue* AccessPoints_AccessPoint_System_Aaa_Authentication_AdminUser_State::release_admin_password_hashed() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authentication.AdminUser.State.admin_password_hashed)
  
  ::ywrapper::StringValue* temp = admin_password_hashed_;
  admin_password_hashed_ = NULL;
  return temp;
}
inline ::ywrapper::StringValue* AccessPoints_AccessPoint_System_Aaa_Authentication_AdminUser_State::mutable_admin_password_hashed() {
  
  if (admin_password_hashed_ == NULL) {
    admin_password_hashed_ = new ::ywrapper::StringValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authentication.AdminUser.State.admin_password_hashed)
  return admin_password_hashed_;
}
inline void AccessPoints_AccessPoint_System_Aaa_Authentication_AdminUser_State::set_allocated_admin_password_hashed(::ywrapper::StringValue* admin_password_hashed) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(admin_password_hashed_);
  }
  if (admin_password_hashed) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      admin_password_hashed = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, admin_password_hashed, submessage_arena);
    }
    
  } else {
    
  }
  admin_password_hashed_ = admin_password_hashed;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authentication.AdminUser.State.admin_password_hashed)
}

// .ywrapper.StringValue admin_username = 160058898 [(.yext.schemapath) = "/access-points/access-point/system/aaa/authentication/admin-user/state/admin-username"];
inline bool AccessPoints_AccessPoint_System_Aaa_Authentication_AdminUser_State::has_admin_username() const {
  return this != internal_default_instance() && admin_username_ != NULL;
}
inline const ::ywrapper::StringValue& AccessPoints_AccessPoint_System_Aaa_Authentication_AdminUser_State::admin_username() const {
  const ::ywrapper::StringValue* p = admin_username_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authentication.AdminUser.State.admin_username)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::StringValue*>(
      &::ywrapper::_StringValue_default_instance_);
}
inline ::ywrapper::StringValue* AccessPoints_AccessPoint_System_Aaa_Authentication_AdminUser_State::release_admin_username() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authentication.AdminUser.State.admin_username)
  
  ::ywrapper::StringValue* temp = admin_username_;
  admin_username_ = NULL;
  return temp;
}
inline ::ywrapper::StringValue* AccessPoints_AccessPoint_System_Aaa_Authentication_AdminUser_State::mutable_admin_username() {
  
  if (admin_username_ == NULL) {
    admin_username_ = new ::ywrapper::StringValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authentication.AdminUser.State.admin_username)
  return admin_username_;
}
inline void AccessPoints_AccessPoint_System_Aaa_Authentication_AdminUser_State::set_allocated_admin_username(::ywrapper::StringValue* admin_username) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(admin_username_);
  }
  if (admin_username) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      admin_username = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, admin_username, submessage_arena);
    }
    
  } else {
    
  }
  admin_username_ = admin_username;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authentication.AdminUser.State.admin_username)
}

// -------------------------------------------------------------------

// AccessPoints_AccessPoint_System_Aaa_Authentication_AdminUser

// .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authentication.AdminUser.Config config = 25796552 [(.yext.schemapath) = "/access-points/access-point/system/aaa/authentication/admin-user/config"];
inline bool AccessPoints_AccessPoint_System_Aaa_Authentication_AdminUser::has_config() const {
  return this != internal_default_instance() && config_ != NULL;
}
inline void AccessPoints_AccessPoint_System_Aaa_Authentication_AdminUser::clear_config() {
  if (GetArenaNoVirtual() == NULL && config_ != NULL) {
    delete config_;
  }
  config_ = NULL;
}
inline const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authentication_AdminUser_Config& AccessPoints_AccessPoint_System_Aaa_Authentication_AdminUser::config() const {
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authentication_AdminUser_Config* p = config_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authentication.AdminUser.config)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authentication_AdminUser_Config*>(
      &::openconfig::openconfig_access_points::_AccessPoints_AccessPoint_System_Aaa_Authentication_AdminUser_Config_default_instance_);
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authentication_AdminUser_Config* AccessPoints_AccessPoint_System_Aaa_Authentication_AdminUser::release_config() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authentication.AdminUser.config)
  
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authentication_AdminUser_Config* temp = config_;
  config_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authentication_AdminUser_Config* AccessPoints_AccessPoint_System_Aaa_Authentication_AdminUser::mutable_config() {
  
  if (config_ == NULL) {
    config_ = new ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authentication_AdminUser_Config;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authentication.AdminUser.config)
  return config_;
}
inline void AccessPoints_AccessPoint_System_Aaa_Authentication_AdminUser::set_allocated_config(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authentication_AdminUser_Config* config) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete config_;
  }
  if (config) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      config = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, config, submessage_arena);
    }
    
  } else {
    
  }
  config_ = config;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authentication.AdminUser.config)
}

// .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authentication.AdminUser.State state = 534560865 [(.yext.schemapath) = "/access-points/access-point/system/aaa/authentication/admin-user/state"];
inline bool AccessPoints_AccessPoint_System_Aaa_Authentication_AdminUser::has_state() const {
  return this != internal_default_instance() && state_ != NULL;
}
inline void AccessPoints_AccessPoint_System_Aaa_Authentication_AdminUser::clear_state() {
  if (GetArenaNoVirtual() == NULL && state_ != NULL) {
    delete state_;
  }
  state_ = NULL;
}
inline const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authentication_AdminUser_State& AccessPoints_AccessPoint_System_Aaa_Authentication_AdminUser::state() const {
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authentication_AdminUser_State* p = state_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authentication.AdminUser.state)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authentication_AdminUser_State*>(
      &::openconfig::openconfig_access_points::_AccessPoints_AccessPoint_System_Aaa_Authentication_AdminUser_State_default_instance_);
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authentication_AdminUser_State* AccessPoints_AccessPoint_System_Aaa_Authentication_AdminUser::release_state() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authentication.AdminUser.state)
  
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authentication_AdminUser_State* temp = state_;
  state_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authentication_AdminUser_State* AccessPoints_AccessPoint_System_Aaa_Authentication_AdminUser::mutable_state() {
  
  if (state_ == NULL) {
    state_ = new ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authentication_AdminUser_State;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authentication.AdminUser.state)
  return state_;
}
inline void AccessPoints_AccessPoint_System_Aaa_Authentication_AdminUser::set_allocated_state(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authentication_AdminUser_State* state) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete state_;
  }
  if (state) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      state = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, state, submessage_arena);
    }
    
  } else {
    
  }
  state_ = state;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authentication.AdminUser.state)
}

// -------------------------------------------------------------------

// AccessPoints_AccessPoint_System_Aaa_Authentication_Config_AuthenticationMethodUnion

// .openconfig.enums.OpenconfigAaaTypesAAAMETHODTYPE authentication_method_openconfigaaatypesaaamethodtype = 260528356;
inline void AccessPoints_AccessPoint_System_Aaa_Authentication_Config_AuthenticationMethodUnion::clear_authentication_method_openconfigaaatypesaaamethodtype() {
  authentication_method_openconfigaaatypesaaamethodtype_ = 0;
}
inline ::openconfig::enums::OpenconfigAaaTypesAAAMETHODTYPE AccessPoints_AccessPoint_System_Aaa_Authentication_Config_AuthenticationMethodUnion::authentication_method_openconfigaaatypesaaamethodtype() const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authentication.Config.AuthenticationMethodUnion.authentication_method_openconfigaaatypesaaamethodtype)
  return static_cast< ::openconfig::enums::OpenconfigAaaTypesAAAMETHODTYPE >(authentication_method_openconfigaaatypesaaamethodtype_);
}
inline void AccessPoints_AccessPoint_System_Aaa_Authentication_Config_AuthenticationMethodUnion::set_authentication_method_openconfigaaatypesaaamethodtype(::openconfig::enums::OpenconfigAaaTypesAAAMETHODTYPE value) {
  
  authentication_method_openconfigaaatypesaaamethodtype_ = value;
  // @@protoc_insertion_point(field_set:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authentication.Config.AuthenticationMethodUnion.authentication_method_openconfigaaatypesaaamethodtype)
}

// string authentication_method_string = 139696963;
inline void AccessPoints_AccessPoint_System_Aaa_Authentication_Config_AuthenticationMethodUnion::clear_authentication_method_string() {
  authentication_method_string_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AccessPoints_AccessPoint_System_Aaa_Authentication_Config_AuthenticationMethodUnion::authentication_method_string() const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authentication.Config.AuthenticationMethodUnion.authentication_method_string)
  return authentication_method_string_.GetNoArena();
}
inline void AccessPoints_AccessPoint_System_Aaa_Authentication_Config_AuthenticationMethodUnion::set_authentication_method_string(const ::std::string& value) {
  
  authentication_method_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authentication.Config.AuthenticationMethodUnion.authentication_method_string)
}
#if LANG_CXX11
inline void AccessPoints_AccessPoint_System_Aaa_Authentication_Config_AuthenticationMethodUnion::set_authentication_method_string(::std::string&& value) {
  
  authentication_method_string_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authentication.Config.AuthenticationMethodUnion.authentication_method_string)
}
#endif
inline void AccessPoints_AccessPoint_System_Aaa_Authentication_Config_AuthenticationMethodUnion::set_authentication_method_string(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  authentication_method_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authentication.Config.AuthenticationMethodUnion.authentication_method_string)
}
inline void AccessPoints_AccessPoint_System_Aaa_Authentication_Config_AuthenticationMethodUnion::set_authentication_method_string(const char* value, size_t size) {
  
  authentication_method_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authentication.Config.AuthenticationMethodUnion.authentication_method_string)
}
inline ::std::string* AccessPoints_AccessPoint_System_Aaa_Authentication_Config_AuthenticationMethodUnion::mutable_authentication_method_string() {
  
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authentication.Config.AuthenticationMethodUnion.authentication_method_string)
  return authentication_method_string_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AccessPoints_AccessPoint_System_Aaa_Authentication_Config_AuthenticationMethodUnion::release_authentication_method_string() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authentication.Config.AuthenticationMethodUnion.authentication_method_string)
  
  return authentication_method_string_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AccessPoints_AccessPoint_System_Aaa_Authentication_Config_AuthenticationMethodUnion::set_allocated_authentication_method_string(::std::string* authentication_method_string) {
  if (authentication_method_string != NULL) {
    
  } else {
    
  }
  authentication_method_string_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), authentication_method_string);
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authentication.Config.AuthenticationMethodUnion.authentication_method_string)
}

// -------------------------------------------------------------------

// AccessPoints_AccessPoint_System_Aaa_Authentication_Config

// repeated .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authentication.Config.AuthenticationMethodUnion authentication_method = 475262069 [(.yext.schemapath) = "/access-points/access-point/system/aaa/authentication/config/authentication-method"];
inline int AccessPoints_AccessPoint_System_Aaa_Authentication_Config::authentication_method_size() const {
  return authentication_method_.size();
}
inline void AccessPoints_AccessPoint_System_Aaa_Authentication_Config::clear_authentication_method() {
  authentication_method_.Clear();
}
inline const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authentication_Config_AuthenticationMethodUnion& AccessPoints_AccessPoint_System_Aaa_Authentication_Config::authentication_method(int index) const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authentication.Config.authentication_method)
  return authentication_method_.Get(index);
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authentication_Config_AuthenticationMethodUnion* AccessPoints_AccessPoint_System_Aaa_Authentication_Config::mutable_authentication_method(int index) {
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authentication.Config.authentication_method)
  return authentication_method_.Mutable(index);
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authentication_Config_AuthenticationMethodUnion* AccessPoints_AccessPoint_System_Aaa_Authentication_Config::add_authentication_method() {
  // @@protoc_insertion_point(field_add:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authentication.Config.authentication_method)
  return authentication_method_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authentication_Config_AuthenticationMethodUnion >*
AccessPoints_AccessPoint_System_Aaa_Authentication_Config::mutable_authentication_method() {
  // @@protoc_insertion_point(field_mutable_list:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authentication.Config.authentication_method)
  return &authentication_method_;
}
inline const ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authentication_Config_AuthenticationMethodUnion >&
AccessPoints_AccessPoint_System_Aaa_Authentication_Config::authentication_method() const {
  // @@protoc_insertion_point(field_list:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authentication.Config.authentication_method)
  return authentication_method_;
}

// -------------------------------------------------------------------

// AccessPoints_AccessPoint_System_Aaa_Authentication_State_AuthenticationMethodUnion

// .openconfig.enums.OpenconfigAaaTypesAAAMETHODTYPE authentication_method_openconfigaaatypesaaamethodtype = 409512449;
inline void AccessPoints_AccessPoint_System_Aaa_Authentication_State_AuthenticationMethodUnion::clear_authentication_method_openconfigaaatypesaaamethodtype() {
  authentication_method_openconfigaaatypesaaamethodtype_ = 0;
}
inline ::openconfig::enums::OpenconfigAaaTypesAAAMETHODTYPE AccessPoints_AccessPoint_System_Aaa_Authentication_State_AuthenticationMethodUnion::authentication_method_openconfigaaatypesaaamethodtype() const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authentication.State.AuthenticationMethodUnion.authentication_method_openconfigaaatypesaaamethodtype)
  return static_cast< ::openconfig::enums::OpenconfigAaaTypesAAAMETHODTYPE >(authentication_method_openconfigaaatypesaaamethodtype_);
}
inline void AccessPoints_AccessPoint_System_Aaa_Authentication_State_AuthenticationMethodUnion::set_authentication_method_openconfigaaatypesaaamethodtype(::openconfig::enums::OpenconfigAaaTypesAAAMETHODTYPE value) {
  
  authentication_method_openconfigaaatypesaaamethodtype_ = value;
  // @@protoc_insertion_point(field_set:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authentication.State.AuthenticationMethodUnion.authentication_method_openconfigaaatypesaaamethodtype)
}

// string authentication_method_string = 106428420;
inline void AccessPoints_AccessPoint_System_Aaa_Authentication_State_AuthenticationMethodUnion::clear_authentication_method_string() {
  authentication_method_string_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AccessPoints_AccessPoint_System_Aaa_Authentication_State_AuthenticationMethodUnion::authentication_method_string() const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authentication.State.AuthenticationMethodUnion.authentication_method_string)
  return authentication_method_string_.GetNoArena();
}
inline void AccessPoints_AccessPoint_System_Aaa_Authentication_State_AuthenticationMethodUnion::set_authentication_method_string(const ::std::string& value) {
  
  authentication_method_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authentication.State.AuthenticationMethodUnion.authentication_method_string)
}
#if LANG_CXX11
inline void AccessPoints_AccessPoint_System_Aaa_Authentication_State_AuthenticationMethodUnion::set_authentication_method_string(::std::string&& value) {
  
  authentication_method_string_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authentication.State.AuthenticationMethodUnion.authentication_method_string)
}
#endif
inline void AccessPoints_AccessPoint_System_Aaa_Authentication_State_AuthenticationMethodUnion::set_authentication_method_string(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  authentication_method_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authentication.State.AuthenticationMethodUnion.authentication_method_string)
}
inline void AccessPoints_AccessPoint_System_Aaa_Authentication_State_AuthenticationMethodUnion::set_authentication_method_string(const char* value, size_t size) {
  
  authentication_method_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authentication.State.AuthenticationMethodUnion.authentication_method_string)
}
inline ::std::string* AccessPoints_AccessPoint_System_Aaa_Authentication_State_AuthenticationMethodUnion::mutable_authentication_method_string() {
  
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authentication.State.AuthenticationMethodUnion.authentication_method_string)
  return authentication_method_string_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AccessPoints_AccessPoint_System_Aaa_Authentication_State_AuthenticationMethodUnion::release_authentication_method_string() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authentication.State.AuthenticationMethodUnion.authentication_method_string)
  
  return authentication_method_string_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AccessPoints_AccessPoint_System_Aaa_Authentication_State_AuthenticationMethodUnion::set_allocated_authentication_method_string(::std::string* authentication_method_string) {
  if (authentication_method_string != NULL) {
    
  } else {
    
  }
  authentication_method_string_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), authentication_method_string);
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authentication.State.AuthenticationMethodUnion.authentication_method_string)
}

// -------------------------------------------------------------------

// AccessPoints_AccessPoint_System_Aaa_Authentication_State

// repeated .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authentication.State.AuthenticationMethodUnion authentication_method = 155400636 [(.yext.schemapath) = "/access-points/access-point/system/aaa/authentication/state/authentication-method"];
inline int AccessPoints_AccessPoint_System_Aaa_Authentication_State::authentication_method_size() const {
  return authentication_method_.size();
}
inline void AccessPoints_AccessPoint_System_Aaa_Authentication_State::clear_authentication_method() {
  authentication_method_.Clear();
}
inline const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authentication_State_AuthenticationMethodUnion& AccessPoints_AccessPoint_System_Aaa_Authentication_State::authentication_method(int index) const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authentication.State.authentication_method)
  return authentication_method_.Get(index);
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authentication_State_AuthenticationMethodUnion* AccessPoints_AccessPoint_System_Aaa_Authentication_State::mutable_authentication_method(int index) {
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authentication.State.authentication_method)
  return authentication_method_.Mutable(index);
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authentication_State_AuthenticationMethodUnion* AccessPoints_AccessPoint_System_Aaa_Authentication_State::add_authentication_method() {
  // @@protoc_insertion_point(field_add:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authentication.State.authentication_method)
  return authentication_method_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authentication_State_AuthenticationMethodUnion >*
AccessPoints_AccessPoint_System_Aaa_Authentication_State::mutable_authentication_method() {
  // @@protoc_insertion_point(field_mutable_list:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authentication.State.authentication_method)
  return &authentication_method_;
}
inline const ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authentication_State_AuthenticationMethodUnion >&
AccessPoints_AccessPoint_System_Aaa_Authentication_State::authentication_method() const {
  // @@protoc_insertion_point(field_list:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authentication.State.authentication_method)
  return authentication_method_;
}

// -------------------------------------------------------------------

// AccessPoints_AccessPoint_System_Aaa_Authentication_Users_User_Config

// .ywrapper.StringValue password = 216967253 [(.yext.schemapath) = "/access-points/access-point/system/aaa/authentication/users/user/config/password"];
inline bool AccessPoints_AccessPoint_System_Aaa_Authentication_Users_User_Config::has_password() const {
  return this != internal_default_instance() && password_ != NULL;
}
inline const ::ywrapper::StringValue& AccessPoints_AccessPoint_System_Aaa_Authentication_Users_User_Config::password() const {
  const ::ywrapper::StringValue* p = password_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authentication.Users.User.Config.password)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::StringValue*>(
      &::ywrapper::_StringValue_default_instance_);
}
inline ::ywrapper::StringValue* AccessPoints_AccessPoint_System_Aaa_Authentication_Users_User_Config::release_password() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authentication.Users.User.Config.password)
  
  ::ywrapper::StringValue* temp = password_;
  password_ = NULL;
  return temp;
}
inline ::ywrapper::StringValue* AccessPoints_AccessPoint_System_Aaa_Authentication_Users_User_Config::mutable_password() {
  
  if (password_ == NULL) {
    password_ = new ::ywrapper::StringValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authentication.Users.User.Config.password)
  return password_;
}
inline void AccessPoints_AccessPoint_System_Aaa_Authentication_Users_User_Config::set_allocated_password(::ywrapper::StringValue* password) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(password_);
  }
  if (password) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      password = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, password, submessage_arena);
    }
    
  } else {
    
  }
  password_ = password;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authentication.Users.User.Config.password)
}

// .ywrapper.StringValue password_hashed = 514123577 [(.yext.schemapath) = "/access-points/access-point/system/aaa/authentication/users/user/config/password-hashed"];
inline bool AccessPoints_AccessPoint_System_Aaa_Authentication_Users_User_Config::has_password_hashed() const {
  return this != internal_default_instance() && password_hashed_ != NULL;
}
inline const ::ywrapper::StringValue& AccessPoints_AccessPoint_System_Aaa_Authentication_Users_User_Config::password_hashed() const {
  const ::ywrapper::StringValue* p = password_hashed_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authentication.Users.User.Config.password_hashed)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::StringValue*>(
      &::ywrapper::_StringValue_default_instance_);
}
inline ::ywrapper::StringValue* AccessPoints_AccessPoint_System_Aaa_Authentication_Users_User_Config::release_password_hashed() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authentication.Users.User.Config.password_hashed)
  
  ::ywrapper::StringValue* temp = password_hashed_;
  password_hashed_ = NULL;
  return temp;
}
inline ::ywrapper::StringValue* AccessPoints_AccessPoint_System_Aaa_Authentication_Users_User_Config::mutable_password_hashed() {
  
  if (password_hashed_ == NULL) {
    password_hashed_ = new ::ywrapper::StringValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authentication.Users.User.Config.password_hashed)
  return password_hashed_;
}
inline void AccessPoints_AccessPoint_System_Aaa_Authentication_Users_User_Config::set_allocated_password_hashed(::ywrapper::StringValue* password_hashed) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(password_hashed_);
  }
  if (password_hashed) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      password_hashed = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, password_hashed, submessage_arena);
    }
    
  } else {
    
  }
  password_hashed_ = password_hashed;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authentication.Users.User.Config.password_hashed)
}

// .openconfig.enums.OpenconfigAaaTypesSYSTEMDEFINEDROLES role_openconfigaaatypessystemdefinedroles = 226065840;
inline bool AccessPoints_AccessPoint_System_Aaa_Authentication_Users_User_Config::has_role_openconfigaaatypessystemdefinedroles() const {
  return role_case() == kRoleOpenconfigaaatypessystemdefinedroles;
}
inline void AccessPoints_AccessPoint_System_Aaa_Authentication_Users_User_Config::set_has_role_openconfigaaatypessystemdefinedroles() {
  _oneof_case_[0] = kRoleOpenconfigaaatypessystemdefinedroles;
}
inline void AccessPoints_AccessPoint_System_Aaa_Authentication_Users_User_Config::clear_role_openconfigaaatypessystemdefinedroles() {
  if (has_role_openconfigaaatypessystemdefinedroles()) {
    role_.role_openconfigaaatypessystemdefinedroles_ = 0;
    clear_has_role();
  }
}
inline ::openconfig::enums::OpenconfigAaaTypesSYSTEMDEFINEDROLES AccessPoints_AccessPoint_System_Aaa_Authentication_Users_User_Config::role_openconfigaaatypessystemdefinedroles() const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authentication.Users.User.Config.role_openconfigaaatypessystemdefinedroles)
  if (has_role_openconfigaaatypessystemdefinedroles()) {
    return static_cast< ::openconfig::enums::OpenconfigAaaTypesSYSTEMDEFINEDROLES >(role_.role_openconfigaaatypessystemdefinedroles_);
  }
  return static_cast< ::openconfig::enums::OpenconfigAaaTypesSYSTEMDEFINEDROLES >(0);
}
inline void AccessPoints_AccessPoint_System_Aaa_Authentication_Users_User_Config::set_role_openconfigaaatypessystemdefinedroles(::openconfig::enums::OpenconfigAaaTypesSYSTEMDEFINEDROLES value) {
  if (!has_role_openconfigaaatypessystemdefinedroles()) {
    clear_role();
    set_has_role_openconfigaaatypessystemdefinedroles();
  }
  role_.role_openconfigaaatypessystemdefinedroles_ = value;
  // @@protoc_insertion_point(field_set:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authentication.Users.User.Config.role_openconfigaaatypessystemdefinedroles)
}

// string role_string = 78412198;
inline bool AccessPoints_AccessPoint_System_Aaa_Authentication_Users_User_Config::has_role_string() const {
  return role_case() == kRoleString;
}
inline void AccessPoints_AccessPoint_System_Aaa_Authentication_Users_User_Config::set_has_role_string() {
  _oneof_case_[0] = kRoleString;
}
inline void AccessPoints_AccessPoint_System_Aaa_Authentication_Users_User_Config::clear_role_string() {
  if (has_role_string()) {
    role_.role_string_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_role();
  }
}
inline const ::std::string& AccessPoints_AccessPoint_System_Aaa_Authentication_Users_User_Config::role_string() const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authentication.Users.User.Config.role_string)
  if (has_role_string()) {
    return role_.role_string_.GetNoArena();
  }
  return *&::google::protobuf::internal::GetEmptyStringAlreadyInited();
}
inline void AccessPoints_AccessPoint_System_Aaa_Authentication_Users_User_Config::set_role_string(const ::std::string& value) {
  // @@protoc_insertion_point(field_set:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authentication.Users.User.Config.role_string)
  if (!has_role_string()) {
    clear_role();
    set_has_role_string();
    role_.role_string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  role_.role_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authentication.Users.User.Config.role_string)
}
#if LANG_CXX11
inline void AccessPoints_AccessPoint_System_Aaa_Authentication_Users_User_Config::set_role_string(::std::string&& value) {
  // @@protoc_insertion_point(field_set:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authentication.Users.User.Config.role_string)
  if (!has_role_string()) {
    clear_role();
    set_has_role_string();
    role_.role_string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  role_.role_string_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authentication.Users.User.Config.role_string)
}
#endif
inline void AccessPoints_AccessPoint_System_Aaa_Authentication_Users_User_Config::set_role_string(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  if (!has_role_string()) {
    clear_role();
    set_has_role_string();
    role_.role_string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  role_.role_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value));
  // @@protoc_insertion_point(field_set_char:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authentication.Users.User.Config.role_string)
}
inline void AccessPoints_AccessPoint_System_Aaa_Authentication_Users_User_Config::set_role_string(const char* value, size_t size) {
  if (!has_role_string()) {
    clear_role();
    set_has_role_string();
    role_.role_string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  role_.role_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authentication.Users.User.Config.role_string)
}
inline ::std::string* AccessPoints_AccessPoint_System_Aaa_Authentication_Users_User_Config::mutable_role_string() {
  if (!has_role_string()) {
    clear_role();
    set_has_role_string();
    role_.role_string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authentication.Users.User.Config.role_string)
  return role_.role_string_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AccessPoints_AccessPoint_System_Aaa_Authentication_Users_User_Config::release_role_string() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authentication.Users.User.Config.role_string)
  if (has_role_string()) {
    clear_has_role();
    return role_.role_string_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  } else {
    return NULL;
  }
}
inline void AccessPoints_AccessPoint_System_Aaa_Authentication_Users_User_Config::set_allocated_role_string(::std::string* role_string) {
  if (!has_role_string()) {
    role_.role_string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  clear_role();
  if (role_string != NULL) {
    set_has_role_string();
    role_.role_string_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        role_string);
  }
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authentication.Users.User.Config.role_string)
}

// .ywrapper.StringValue ssh_key = 527474434 [(.yext.schemapath) = "/access-points/access-point/system/aaa/authentication/users/user/config/ssh-key"];
inline bool AccessPoints_AccessPoint_System_Aaa_Authentication_Users_User_Config::has_ssh_key() const {
  return this != internal_default_instance() && ssh_key_ != NULL;
}
inline const ::ywrapper::StringValue& AccessPoints_AccessPoint_System_Aaa_Authentication_Users_User_Config::ssh_key() const {
  const ::ywrapper::StringValue* p = ssh_key_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authentication.Users.User.Config.ssh_key)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::StringValue*>(
      &::ywrapper::_StringValue_default_instance_);
}
inline ::ywrapper::StringValue* AccessPoints_AccessPoint_System_Aaa_Authentication_Users_User_Config::release_ssh_key() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authentication.Users.User.Config.ssh_key)
  
  ::ywrapper::StringValue* temp = ssh_key_;
  ssh_key_ = NULL;
  return temp;
}
inline ::ywrapper::StringValue* AccessPoints_AccessPoint_System_Aaa_Authentication_Users_User_Config::mutable_ssh_key() {
  
  if (ssh_key_ == NULL) {
    ssh_key_ = new ::ywrapper::StringValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authentication.Users.User.Config.ssh_key)
  return ssh_key_;
}
inline void AccessPoints_AccessPoint_System_Aaa_Authentication_Users_User_Config::set_allocated_ssh_key(::ywrapper::StringValue* ssh_key) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(ssh_key_);
  }
  if (ssh_key) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      ssh_key = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, ssh_key, submessage_arena);
    }
    
  } else {
    
  }
  ssh_key_ = ssh_key;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authentication.Users.User.Config.ssh_key)
}

// .ywrapper.StringValue username = 421473794 [(.yext.schemapath) = "/access-points/access-point/system/aaa/authentication/users/user/config/username"];
inline bool AccessPoints_AccessPoint_System_Aaa_Authentication_Users_User_Config::has_username() const {
  return this != internal_default_instance() && username_ != NULL;
}
inline const ::ywrapper::StringValue& AccessPoints_AccessPoint_System_Aaa_Authentication_Users_User_Config::username() const {
  const ::ywrapper::StringValue* p = username_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authentication.Users.User.Config.username)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::StringValue*>(
      &::ywrapper::_StringValue_default_instance_);
}
inline ::ywrapper::StringValue* AccessPoints_AccessPoint_System_Aaa_Authentication_Users_User_Config::release_username() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authentication.Users.User.Config.username)
  
  ::ywrapper::StringValue* temp = username_;
  username_ = NULL;
  return temp;
}
inline ::ywrapper::StringValue* AccessPoints_AccessPoint_System_Aaa_Authentication_Users_User_Config::mutable_username() {
  
  if (username_ == NULL) {
    username_ = new ::ywrapper::StringValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authentication.Users.User.Config.username)
  return username_;
}
inline void AccessPoints_AccessPoint_System_Aaa_Authentication_Users_User_Config::set_allocated_username(::ywrapper::StringValue* username) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(username_);
  }
  if (username) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      username = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, username, submessage_arena);
    }
    
  } else {
    
  }
  username_ = username;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authentication.Users.User.Config.username)
}

inline bool AccessPoints_AccessPoint_System_Aaa_Authentication_Users_User_Config::has_role() const {
  return role_case() != ROLE_NOT_SET;
}
inline void AccessPoints_AccessPoint_System_Aaa_Authentication_Users_User_Config::clear_has_role() {
  _oneof_case_[0] = ROLE_NOT_SET;
}
inline AccessPoints_AccessPoint_System_Aaa_Authentication_Users_User_Config::RoleCase AccessPoints_AccessPoint_System_Aaa_Authentication_Users_User_Config::role_case() const {
  return AccessPoints_AccessPoint_System_Aaa_Authentication_Users_User_Config::RoleCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// AccessPoints_AccessPoint_System_Aaa_Authentication_Users_User_State

// .ywrapper.StringValue password = 152993100 [(.yext.schemapath) = "/access-points/access-point/system/aaa/authentication/users/user/state/password"];
inline bool AccessPoints_AccessPoint_System_Aaa_Authentication_Users_User_State::has_password() const {
  return this != internal_default_instance() && password_ != NULL;
}
inline const ::ywrapper::StringValue& AccessPoints_AccessPoint_System_Aaa_Authentication_Users_User_State::password() const {
  const ::ywrapper::StringValue* p = password_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authentication.Users.User.State.password)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::StringValue*>(
      &::ywrapper::_StringValue_default_instance_);
}
inline ::ywrapper::StringValue* AccessPoints_AccessPoint_System_Aaa_Authentication_Users_User_State::release_password() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authentication.Users.User.State.password)
  
  ::ywrapper::StringValue* temp = password_;
  password_ = NULL;
  return temp;
}
inline ::ywrapper::StringValue* AccessPoints_AccessPoint_System_Aaa_Authentication_Users_User_State::mutable_password() {
  
  if (password_ == NULL) {
    password_ = new ::ywrapper::StringValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authentication.Users.User.State.password)
  return password_;
}
inline void AccessPoints_AccessPoint_System_Aaa_Authentication_Users_User_State::set_allocated_password(::ywrapper::StringValue* password) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(password_);
  }
  if (password) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      password = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, password, submessage_arena);
    }
    
  } else {
    
  }
  password_ = password;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authentication.Users.User.State.password)
}

// .ywrapper.StringValue password_hashed = 309387054 [(.yext.schemapath) = "/access-points/access-point/system/aaa/authentication/users/user/state/password-hashed"];
inline bool AccessPoints_AccessPoint_System_Aaa_Authentication_Users_User_State::has_password_hashed() const {
  return this != internal_default_instance() && password_hashed_ != NULL;
}
inline const ::ywrapper::StringValue& AccessPoints_AccessPoint_System_Aaa_Authentication_Users_User_State::password_hashed() const {
  const ::ywrapper::StringValue* p = password_hashed_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authentication.Users.User.State.password_hashed)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::StringValue*>(
      &::ywrapper::_StringValue_default_instance_);
}
inline ::ywrapper::StringValue* AccessPoints_AccessPoint_System_Aaa_Authentication_Users_User_State::release_password_hashed() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authentication.Users.User.State.password_hashed)
  
  ::ywrapper::StringValue* temp = password_hashed_;
  password_hashed_ = NULL;
  return temp;
}
inline ::ywrapper::StringValue* AccessPoints_AccessPoint_System_Aaa_Authentication_Users_User_State::mutable_password_hashed() {
  
  if (password_hashed_ == NULL) {
    password_hashed_ = new ::ywrapper::StringValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authentication.Users.User.State.password_hashed)
  return password_hashed_;
}
inline void AccessPoints_AccessPoint_System_Aaa_Authentication_Users_User_State::set_allocated_password_hashed(::ywrapper::StringValue* password_hashed) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(password_hashed_);
  }
  if (password_hashed) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      password_hashed = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, password_hashed, submessage_arena);
    }
    
  } else {
    
  }
  password_hashed_ = password_hashed;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authentication.Users.User.State.password_hashed)
}

// .openconfig.enums.OpenconfigAaaTypesSYSTEMDEFINEDROLES role_openconfigaaatypessystemdefinedroles = 513153959;
inline bool AccessPoints_AccessPoint_System_Aaa_Authentication_Users_User_State::has_role_openconfigaaatypessystemdefinedroles() const {
  return role_case() == kRoleOpenconfigaaatypessystemdefinedroles;
}
inline void AccessPoints_AccessPoint_System_Aaa_Authentication_Users_User_State::set_has_role_openconfigaaatypessystemdefinedroles() {
  _oneof_case_[0] = kRoleOpenconfigaaatypessystemdefinedroles;
}
inline void AccessPoints_AccessPoint_System_Aaa_Authentication_Users_User_State::clear_role_openconfigaaatypessystemdefinedroles() {
  if (has_role_openconfigaaatypessystemdefinedroles()) {
    role_.role_openconfigaaatypessystemdefinedroles_ = 0;
    clear_has_role();
  }
}
inline ::openconfig::enums::OpenconfigAaaTypesSYSTEMDEFINEDROLES AccessPoints_AccessPoint_System_Aaa_Authentication_Users_User_State::role_openconfigaaatypessystemdefinedroles() const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authentication.Users.User.State.role_openconfigaaatypessystemdefinedroles)
  if (has_role_openconfigaaatypessystemdefinedroles()) {
    return static_cast< ::openconfig::enums::OpenconfigAaaTypesSYSTEMDEFINEDROLES >(role_.role_openconfigaaatypessystemdefinedroles_);
  }
  return static_cast< ::openconfig::enums::OpenconfigAaaTypesSYSTEMDEFINEDROLES >(0);
}
inline void AccessPoints_AccessPoint_System_Aaa_Authentication_Users_User_State::set_role_openconfigaaatypessystemdefinedroles(::openconfig::enums::OpenconfigAaaTypesSYSTEMDEFINEDROLES value) {
  if (!has_role_openconfigaaatypessystemdefinedroles()) {
    clear_role();
    set_has_role_openconfigaaatypessystemdefinedroles();
  }
  role_.role_openconfigaaatypessystemdefinedroles_ = value;
  // @@protoc_insertion_point(field_set:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authentication.Users.User.State.role_openconfigaaatypessystemdefinedroles)
}

// string role_string = 142700581;
inline bool AccessPoints_AccessPoint_System_Aaa_Authentication_Users_User_State::has_role_string() const {
  return role_case() == kRoleString;
}
inline void AccessPoints_AccessPoint_System_Aaa_Authentication_Users_User_State::set_has_role_string() {
  _oneof_case_[0] = kRoleString;
}
inline void AccessPoints_AccessPoint_System_Aaa_Authentication_Users_User_State::clear_role_string() {
  if (has_role_string()) {
    role_.role_string_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_role();
  }
}
inline const ::std::string& AccessPoints_AccessPoint_System_Aaa_Authentication_Users_User_State::role_string() const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authentication.Users.User.State.role_string)
  if (has_role_string()) {
    return role_.role_string_.GetNoArena();
  }
  return *&::google::protobuf::internal::GetEmptyStringAlreadyInited();
}
inline void AccessPoints_AccessPoint_System_Aaa_Authentication_Users_User_State::set_role_string(const ::std::string& value) {
  // @@protoc_insertion_point(field_set:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authentication.Users.User.State.role_string)
  if (!has_role_string()) {
    clear_role();
    set_has_role_string();
    role_.role_string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  role_.role_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authentication.Users.User.State.role_string)
}
#if LANG_CXX11
inline void AccessPoints_AccessPoint_System_Aaa_Authentication_Users_User_State::set_role_string(::std::string&& value) {
  // @@protoc_insertion_point(field_set:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authentication.Users.User.State.role_string)
  if (!has_role_string()) {
    clear_role();
    set_has_role_string();
    role_.role_string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  role_.role_string_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authentication.Users.User.State.role_string)
}
#endif
inline void AccessPoints_AccessPoint_System_Aaa_Authentication_Users_User_State::set_role_string(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  if (!has_role_string()) {
    clear_role();
    set_has_role_string();
    role_.role_string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  role_.role_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value));
  // @@protoc_insertion_point(field_set_char:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authentication.Users.User.State.role_string)
}
inline void AccessPoints_AccessPoint_System_Aaa_Authentication_Users_User_State::set_role_string(const char* value, size_t size) {
  if (!has_role_string()) {
    clear_role();
    set_has_role_string();
    role_.role_string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  role_.role_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authentication.Users.User.State.role_string)
}
inline ::std::string* AccessPoints_AccessPoint_System_Aaa_Authentication_Users_User_State::mutable_role_string() {
  if (!has_role_string()) {
    clear_role();
    set_has_role_string();
    role_.role_string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authentication.Users.User.State.role_string)
  return role_.role_string_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AccessPoints_AccessPoint_System_Aaa_Authentication_Users_User_State::release_role_string() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authentication.Users.User.State.role_string)
  if (has_role_string()) {
    clear_has_role();
    return role_.role_string_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  } else {
    return NULL;
  }
}
inline void AccessPoints_AccessPoint_System_Aaa_Authentication_Users_User_State::set_allocated_role_string(::std::string* role_string) {
  if (!has_role_string()) {
    role_.role_string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  clear_role();
  if (role_string != NULL) {
    set_has_role_string();
    role_.role_string_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        role_string);
  }
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authentication.Users.User.State.role_string)
}

// .ywrapper.StringValue ssh_key = 300451941 [(.yext.schemapath) = "/access-points/access-point/system/aaa/authentication/users/user/state/ssh-key"];
inline bool AccessPoints_AccessPoint_System_Aaa_Authentication_Users_User_State::has_ssh_key() const {
  return this != internal_default_instance() && ssh_key_ != NULL;
}
inline const ::ywrapper::StringValue& AccessPoints_AccessPoint_System_Aaa_Authentication_Users_User_State::ssh_key() const {
  const ::ywrapper::StringValue* p = ssh_key_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authentication.Users.User.State.ssh_key)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::StringValue*>(
      &::ywrapper::_StringValue_default_instance_);
}
inline ::ywrapper::StringValue* AccessPoints_AccessPoint_System_Aaa_Authentication_Users_User_State::release_ssh_key() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authentication.Users.User.State.ssh_key)
  
  ::ywrapper::StringValue* temp = ssh_key_;
  ssh_key_ = NULL;
  return temp;
}
inline ::ywrapper::StringValue* AccessPoints_AccessPoint_System_Aaa_Authentication_Users_User_State::mutable_ssh_key() {
  
  if (ssh_key_ == NULL) {
    ssh_key_ = new ::ywrapper::StringValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authentication.Users.User.State.ssh_key)
  return ssh_key_;
}
inline void AccessPoints_AccessPoint_System_Aaa_Authentication_Users_User_State::set_allocated_ssh_key(::ywrapper::StringValue* ssh_key) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(ssh_key_);
  }
  if (ssh_key) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      ssh_key = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, ssh_key, submessage_arena);
    }
    
  } else {
    
  }
  ssh_key_ = ssh_key;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authentication.Users.User.State.ssh_key)
}

// .ywrapper.StringValue username = 463826631 [(.yext.schemapath) = "/access-points/access-point/system/aaa/authentication/users/user/state/username"];
inline bool AccessPoints_AccessPoint_System_Aaa_Authentication_Users_User_State::has_username() const {
  return this != internal_default_instance() && username_ != NULL;
}
inline const ::ywrapper::StringValue& AccessPoints_AccessPoint_System_Aaa_Authentication_Users_User_State::username() const {
  const ::ywrapper::StringValue* p = username_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authentication.Users.User.State.username)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::StringValue*>(
      &::ywrapper::_StringValue_default_instance_);
}
inline ::ywrapper::StringValue* AccessPoints_AccessPoint_System_Aaa_Authentication_Users_User_State::release_username() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authentication.Users.User.State.username)
  
  ::ywrapper::StringValue* temp = username_;
  username_ = NULL;
  return temp;
}
inline ::ywrapper::StringValue* AccessPoints_AccessPoint_System_Aaa_Authentication_Users_User_State::mutable_username() {
  
  if (username_ == NULL) {
    username_ = new ::ywrapper::StringValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authentication.Users.User.State.username)
  return username_;
}
inline void AccessPoints_AccessPoint_System_Aaa_Authentication_Users_User_State::set_allocated_username(::ywrapper::StringValue* username) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(username_);
  }
  if (username) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      username = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, username, submessage_arena);
    }
    
  } else {
    
  }
  username_ = username;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authentication.Users.User.State.username)
}

inline bool AccessPoints_AccessPoint_System_Aaa_Authentication_Users_User_State::has_role() const {
  return role_case() != ROLE_NOT_SET;
}
inline void AccessPoints_AccessPoint_System_Aaa_Authentication_Users_User_State::clear_has_role() {
  _oneof_case_[0] = ROLE_NOT_SET;
}
inline AccessPoints_AccessPoint_System_Aaa_Authentication_Users_User_State::RoleCase AccessPoints_AccessPoint_System_Aaa_Authentication_Users_User_State::role_case() const {
  return AccessPoints_AccessPoint_System_Aaa_Authentication_Users_User_State::RoleCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// AccessPoints_AccessPoint_System_Aaa_Authentication_Users_User

// .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authentication.Users.User.Config config = 313497283 [(.yext.schemapath) = "/access-points/access-point/system/aaa/authentication/users/user/config"];
inline bool AccessPoints_AccessPoint_System_Aaa_Authentication_Users_User::has_config() const {
  return this != internal_default_instance() && config_ != NULL;
}
inline void AccessPoints_AccessPoint_System_Aaa_Authentication_Users_User::clear_config() {
  if (GetArenaNoVirtual() == NULL && config_ != NULL) {
    delete config_;
  }
  config_ = NULL;
}
inline const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authentication_Users_User_Config& AccessPoints_AccessPoint_System_Aaa_Authentication_Users_User::config() const {
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authentication_Users_User_Config* p = config_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authentication.Users.User.config)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authentication_Users_User_Config*>(
      &::openconfig::openconfig_access_points::_AccessPoints_AccessPoint_System_Aaa_Authentication_Users_User_Config_default_instance_);
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authentication_Users_User_Config* AccessPoints_AccessPoint_System_Aaa_Authentication_Users_User::release_config() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authentication.Users.User.config)
  
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authentication_Users_User_Config* temp = config_;
  config_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authentication_Users_User_Config* AccessPoints_AccessPoint_System_Aaa_Authentication_Users_User::mutable_config() {
  
  if (config_ == NULL) {
    config_ = new ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authentication_Users_User_Config;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authentication.Users.User.config)
  return config_;
}
inline void AccessPoints_AccessPoint_System_Aaa_Authentication_Users_User::set_allocated_config(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authentication_Users_User_Config* config) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete config_;
  }
  if (config) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      config = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, config, submessage_arena);
    }
    
  } else {
    
  }
  config_ = config;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authentication.Users.User.config)
}

// .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authentication.Users.User.State state = 376034596 [(.yext.schemapath) = "/access-points/access-point/system/aaa/authentication/users/user/state"];
inline bool AccessPoints_AccessPoint_System_Aaa_Authentication_Users_User::has_state() const {
  return this != internal_default_instance() && state_ != NULL;
}
inline void AccessPoints_AccessPoint_System_Aaa_Authentication_Users_User::clear_state() {
  if (GetArenaNoVirtual() == NULL && state_ != NULL) {
    delete state_;
  }
  state_ = NULL;
}
inline const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authentication_Users_User_State& AccessPoints_AccessPoint_System_Aaa_Authentication_Users_User::state() const {
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authentication_Users_User_State* p = state_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authentication.Users.User.state)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authentication_Users_User_State*>(
      &::openconfig::openconfig_access_points::_AccessPoints_AccessPoint_System_Aaa_Authentication_Users_User_State_default_instance_);
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authentication_Users_User_State* AccessPoints_AccessPoint_System_Aaa_Authentication_Users_User::release_state() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authentication.Users.User.state)
  
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authentication_Users_User_State* temp = state_;
  state_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authentication_Users_User_State* AccessPoints_AccessPoint_System_Aaa_Authentication_Users_User::mutable_state() {
  
  if (state_ == NULL) {
    state_ = new ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authentication_Users_User_State;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authentication.Users.User.state)
  return state_;
}
inline void AccessPoints_AccessPoint_System_Aaa_Authentication_Users_User::set_allocated_state(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authentication_Users_User_State* state) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete state_;
  }
  if (state) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      state = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, state, submessage_arena);
    }
    
  } else {
    
  }
  state_ = state;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authentication.Users.User.state)
}

// -------------------------------------------------------------------

// AccessPoints_AccessPoint_System_Aaa_Authentication_Users_UserKey

// string username = 1 [(.yext.schemapath) = "/access-points/access-point/system/aaa/authentication/users/user/username"];
inline void AccessPoints_AccessPoint_System_Aaa_Authentication_Users_UserKey::clear_username() {
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AccessPoints_AccessPoint_System_Aaa_Authentication_Users_UserKey::username() const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authentication.Users.UserKey.username)
  return username_.GetNoArena();
}
inline void AccessPoints_AccessPoint_System_Aaa_Authentication_Users_UserKey::set_username(const ::std::string& value) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authentication.Users.UserKey.username)
}
#if LANG_CXX11
inline void AccessPoints_AccessPoint_System_Aaa_Authentication_Users_UserKey::set_username(::std::string&& value) {
  
  username_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authentication.Users.UserKey.username)
}
#endif
inline void AccessPoints_AccessPoint_System_Aaa_Authentication_Users_UserKey::set_username(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authentication.Users.UserKey.username)
}
inline void AccessPoints_AccessPoint_System_Aaa_Authentication_Users_UserKey::set_username(const char* value, size_t size) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authentication.Users.UserKey.username)
}
inline ::std::string* AccessPoints_AccessPoint_System_Aaa_Authentication_Users_UserKey::mutable_username() {
  
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authentication.Users.UserKey.username)
  return username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AccessPoints_AccessPoint_System_Aaa_Authentication_Users_UserKey::release_username() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authentication.Users.UserKey.username)
  
  return username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AccessPoints_AccessPoint_System_Aaa_Authentication_Users_UserKey::set_allocated_username(::std::string* username) {
  if (username != NULL) {
    
  } else {
    
  }
  username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authentication.Users.UserKey.username)
}

// .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authentication.Users.User user = 2;
inline bool AccessPoints_AccessPoint_System_Aaa_Authentication_Users_UserKey::has_user() const {
  return this != internal_default_instance() && user_ != NULL;
}
inline void AccessPoints_AccessPoint_System_Aaa_Authentication_Users_UserKey::clear_user() {
  if (GetArenaNoVirtual() == NULL && user_ != NULL) {
    delete user_;
  }
  user_ = NULL;
}
inline const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authentication_Users_User& AccessPoints_AccessPoint_System_Aaa_Authentication_Users_UserKey::user() const {
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authentication_Users_User* p = user_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authentication.Users.UserKey.user)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authentication_Users_User*>(
      &::openconfig::openconfig_access_points::_AccessPoints_AccessPoint_System_Aaa_Authentication_Users_User_default_instance_);
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authentication_Users_User* AccessPoints_AccessPoint_System_Aaa_Authentication_Users_UserKey::release_user() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authentication.Users.UserKey.user)
  
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authentication_Users_User* temp = user_;
  user_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authentication_Users_User* AccessPoints_AccessPoint_System_Aaa_Authentication_Users_UserKey::mutable_user() {
  
  if (user_ == NULL) {
    user_ = new ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authentication_Users_User;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authentication.Users.UserKey.user)
  return user_;
}
inline void AccessPoints_AccessPoint_System_Aaa_Authentication_Users_UserKey::set_allocated_user(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authentication_Users_User* user) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete user_;
  }
  if (user) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      user = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, user, submessage_arena);
    }
    
  } else {
    
  }
  user_ = user;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authentication.Users.UserKey.user)
}

// -------------------------------------------------------------------

// AccessPoints_AccessPoint_System_Aaa_Authentication_Users

// repeated .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authentication.Users.UserKey user = 160115618 [(.yext.schemapath) = "/access-points/access-point/system/aaa/authentication/users/user"];
inline int AccessPoints_AccessPoint_System_Aaa_Authentication_Users::user_size() const {
  return user_.size();
}
inline void AccessPoints_AccessPoint_System_Aaa_Authentication_Users::clear_user() {
  user_.Clear();
}
inline const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authentication_Users_UserKey& AccessPoints_AccessPoint_System_Aaa_Authentication_Users::user(int index) const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authentication.Users.user)
  return user_.Get(index);
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authentication_Users_UserKey* AccessPoints_AccessPoint_System_Aaa_Authentication_Users::mutable_user(int index) {
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authentication.Users.user)
  return user_.Mutable(index);
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authentication_Users_UserKey* AccessPoints_AccessPoint_System_Aaa_Authentication_Users::add_user() {
  // @@protoc_insertion_point(field_add:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authentication.Users.user)
  return user_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authentication_Users_UserKey >*
AccessPoints_AccessPoint_System_Aaa_Authentication_Users::mutable_user() {
  // @@protoc_insertion_point(field_mutable_list:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authentication.Users.user)
  return &user_;
}
inline const ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authentication_Users_UserKey >&
AccessPoints_AccessPoint_System_Aaa_Authentication_Users::user() const {
  // @@protoc_insertion_point(field_list:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authentication.Users.user)
  return user_;
}

// -------------------------------------------------------------------

// AccessPoints_AccessPoint_System_Aaa_Authentication

// .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authentication.AdminUser admin_user = 314899031 [(.yext.schemapath) = "/access-points/access-point/system/aaa/authentication/admin-user"];
inline bool AccessPoints_AccessPoint_System_Aaa_Authentication::has_admin_user() const {
  return this != internal_default_instance() && admin_user_ != NULL;
}
inline void AccessPoints_AccessPoint_System_Aaa_Authentication::clear_admin_user() {
  if (GetArenaNoVirtual() == NULL && admin_user_ != NULL) {
    delete admin_user_;
  }
  admin_user_ = NULL;
}
inline const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authentication_AdminUser& AccessPoints_AccessPoint_System_Aaa_Authentication::admin_user() const {
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authentication_AdminUser* p = admin_user_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authentication.admin_user)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authentication_AdminUser*>(
      &::openconfig::openconfig_access_points::_AccessPoints_AccessPoint_System_Aaa_Authentication_AdminUser_default_instance_);
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authentication_AdminUser* AccessPoints_AccessPoint_System_Aaa_Authentication::release_admin_user() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authentication.admin_user)
  
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authentication_AdminUser* temp = admin_user_;
  admin_user_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authentication_AdminUser* AccessPoints_AccessPoint_System_Aaa_Authentication::mutable_admin_user() {
  
  if (admin_user_ == NULL) {
    admin_user_ = new ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authentication_AdminUser;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authentication.admin_user)
  return admin_user_;
}
inline void AccessPoints_AccessPoint_System_Aaa_Authentication::set_allocated_admin_user(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authentication_AdminUser* admin_user) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete admin_user_;
  }
  if (admin_user) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      admin_user = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, admin_user, submessage_arena);
    }
    
  } else {
    
  }
  admin_user_ = admin_user;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authentication.admin_user)
}

// .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authentication.Config config = 64840486 [(.yext.schemapath) = "/access-points/access-point/system/aaa/authentication/config"];
inline bool AccessPoints_AccessPoint_System_Aaa_Authentication::has_config() const {
  return this != internal_default_instance() && config_ != NULL;
}
inline void AccessPoints_AccessPoint_System_Aaa_Authentication::clear_config() {
  if (GetArenaNoVirtual() == NULL && config_ != NULL) {
    delete config_;
  }
  config_ = NULL;
}
inline const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authentication_Config& AccessPoints_AccessPoint_System_Aaa_Authentication::config() const {
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authentication_Config* p = config_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authentication.config)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authentication_Config*>(
      &::openconfig::openconfig_access_points::_AccessPoints_AccessPoint_System_Aaa_Authentication_Config_default_instance_);
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authentication_Config* AccessPoints_AccessPoint_System_Aaa_Authentication::release_config() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authentication.config)
  
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authentication_Config* temp = config_;
  config_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authentication_Config* AccessPoints_AccessPoint_System_Aaa_Authentication::mutable_config() {
  
  if (config_ == NULL) {
    config_ = new ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authentication_Config;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authentication.config)
  return config_;
}
inline void AccessPoints_AccessPoint_System_Aaa_Authentication::set_allocated_config(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authentication_Config* config) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete config_;
  }
  if (config) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      config = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, config, submessage_arena);
    }
    
  } else {
    
  }
  config_ = config;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authentication.config)
}

// .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authentication.State state = 292309651 [(.yext.schemapath) = "/access-points/access-point/system/aaa/authentication/state"];
inline bool AccessPoints_AccessPoint_System_Aaa_Authentication::has_state() const {
  return this != internal_default_instance() && state_ != NULL;
}
inline void AccessPoints_AccessPoint_System_Aaa_Authentication::clear_state() {
  if (GetArenaNoVirtual() == NULL && state_ != NULL) {
    delete state_;
  }
  state_ = NULL;
}
inline const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authentication_State& AccessPoints_AccessPoint_System_Aaa_Authentication::state() const {
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authentication_State* p = state_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authentication.state)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authentication_State*>(
      &::openconfig::openconfig_access_points::_AccessPoints_AccessPoint_System_Aaa_Authentication_State_default_instance_);
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authentication_State* AccessPoints_AccessPoint_System_Aaa_Authentication::release_state() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authentication.state)
  
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authentication_State* temp = state_;
  state_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authentication_State* AccessPoints_AccessPoint_System_Aaa_Authentication::mutable_state() {
  
  if (state_ == NULL) {
    state_ = new ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authentication_State;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authentication.state)
  return state_;
}
inline void AccessPoints_AccessPoint_System_Aaa_Authentication::set_allocated_state(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authentication_State* state) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete state_;
  }
  if (state) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      state = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, state, submessage_arena);
    }
    
  } else {
    
  }
  state_ = state;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authentication.state)
}

// .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authentication.Users users = 431869828 [(.yext.schemapath) = "/access-points/access-point/system/aaa/authentication/users"];
inline bool AccessPoints_AccessPoint_System_Aaa_Authentication::has_users() const {
  return this != internal_default_instance() && users_ != NULL;
}
inline void AccessPoints_AccessPoint_System_Aaa_Authentication::clear_users() {
  if (GetArenaNoVirtual() == NULL && users_ != NULL) {
    delete users_;
  }
  users_ = NULL;
}
inline const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authentication_Users& AccessPoints_AccessPoint_System_Aaa_Authentication::users() const {
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authentication_Users* p = users_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authentication.users)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authentication_Users*>(
      &::openconfig::openconfig_access_points::_AccessPoints_AccessPoint_System_Aaa_Authentication_Users_default_instance_);
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authentication_Users* AccessPoints_AccessPoint_System_Aaa_Authentication::release_users() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authentication.users)
  
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authentication_Users* temp = users_;
  users_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authentication_Users* AccessPoints_AccessPoint_System_Aaa_Authentication::mutable_users() {
  
  if (users_ == NULL) {
    users_ = new ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authentication_Users;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authentication.users)
  return users_;
}
inline void AccessPoints_AccessPoint_System_Aaa_Authentication::set_allocated_users(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authentication_Users* users) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete users_;
  }
  if (users) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      users = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, users, submessage_arena);
    }
    
  } else {
    
  }
  users_ = users;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authentication.users)
}

// -------------------------------------------------------------------

// AccessPoints_AccessPoint_System_Aaa_Authorization_Config_AuthorizationMethodUnion

// .openconfig.enums.OpenconfigAaaTypesAAAMETHODTYPE authorization_method_openconfigaaatypesaaamethodtype = 146504790;
inline void AccessPoints_AccessPoint_System_Aaa_Authorization_Config_AuthorizationMethodUnion::clear_authorization_method_openconfigaaatypesaaamethodtype() {
  authorization_method_openconfigaaatypesaaamethodtype_ = 0;
}
inline ::openconfig::enums::OpenconfigAaaTypesAAAMETHODTYPE AccessPoints_AccessPoint_System_Aaa_Authorization_Config_AuthorizationMethodUnion::authorization_method_openconfigaaatypesaaamethodtype() const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authorization.Config.AuthorizationMethodUnion.authorization_method_openconfigaaatypesaaamethodtype)
  return static_cast< ::openconfig::enums::OpenconfigAaaTypesAAAMETHODTYPE >(authorization_method_openconfigaaatypesaaamethodtype_);
}
inline void AccessPoints_AccessPoint_System_Aaa_Authorization_Config_AuthorizationMethodUnion::set_authorization_method_openconfigaaatypesaaamethodtype(::openconfig::enums::OpenconfigAaaTypesAAAMETHODTYPE value) {
  
  authorization_method_openconfigaaatypesaaamethodtype_ = value;
  // @@protoc_insertion_point(field_set:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authorization.Config.AuthorizationMethodUnion.authorization_method_openconfigaaatypesaaamethodtype)
}

// string authorization_method_string = 126230445;
inline void AccessPoints_AccessPoint_System_Aaa_Authorization_Config_AuthorizationMethodUnion::clear_authorization_method_string() {
  authorization_method_string_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AccessPoints_AccessPoint_System_Aaa_Authorization_Config_AuthorizationMethodUnion::authorization_method_string() const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authorization.Config.AuthorizationMethodUnion.authorization_method_string)
  return authorization_method_string_.GetNoArena();
}
inline void AccessPoints_AccessPoint_System_Aaa_Authorization_Config_AuthorizationMethodUnion::set_authorization_method_string(const ::std::string& value) {
  
  authorization_method_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authorization.Config.AuthorizationMethodUnion.authorization_method_string)
}
#if LANG_CXX11
inline void AccessPoints_AccessPoint_System_Aaa_Authorization_Config_AuthorizationMethodUnion::set_authorization_method_string(::std::string&& value) {
  
  authorization_method_string_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authorization.Config.AuthorizationMethodUnion.authorization_method_string)
}
#endif
inline void AccessPoints_AccessPoint_System_Aaa_Authorization_Config_AuthorizationMethodUnion::set_authorization_method_string(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  authorization_method_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authorization.Config.AuthorizationMethodUnion.authorization_method_string)
}
inline void AccessPoints_AccessPoint_System_Aaa_Authorization_Config_AuthorizationMethodUnion::set_authorization_method_string(const char* value, size_t size) {
  
  authorization_method_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authorization.Config.AuthorizationMethodUnion.authorization_method_string)
}
inline ::std::string* AccessPoints_AccessPoint_System_Aaa_Authorization_Config_AuthorizationMethodUnion::mutable_authorization_method_string() {
  
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authorization.Config.AuthorizationMethodUnion.authorization_method_string)
  return authorization_method_string_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AccessPoints_AccessPoint_System_Aaa_Authorization_Config_AuthorizationMethodUnion::release_authorization_method_string() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authorization.Config.AuthorizationMethodUnion.authorization_method_string)
  
  return authorization_method_string_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AccessPoints_AccessPoint_System_Aaa_Authorization_Config_AuthorizationMethodUnion::set_allocated_authorization_method_string(::std::string* authorization_method_string) {
  if (authorization_method_string != NULL) {
    
  } else {
    
  }
  authorization_method_string_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), authorization_method_string);
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authorization.Config.AuthorizationMethodUnion.authorization_method_string)
}

// -------------------------------------------------------------------

// AccessPoints_AccessPoint_System_Aaa_Authorization_Config

// repeated .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authorization.Config.AuthorizationMethodUnion authorization_method = 398580847 [(.yext.schemapath) = "/access-points/access-point/system/aaa/authorization/config/authorization-method"];
inline int AccessPoints_AccessPoint_System_Aaa_Authorization_Config::authorization_method_size() const {
  return authorization_method_.size();
}
inline void AccessPoints_AccessPoint_System_Aaa_Authorization_Config::clear_authorization_method() {
  authorization_method_.Clear();
}
inline const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authorization_Config_AuthorizationMethodUnion& AccessPoints_AccessPoint_System_Aaa_Authorization_Config::authorization_method(int index) const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authorization.Config.authorization_method)
  return authorization_method_.Get(index);
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authorization_Config_AuthorizationMethodUnion* AccessPoints_AccessPoint_System_Aaa_Authorization_Config::mutable_authorization_method(int index) {
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authorization.Config.authorization_method)
  return authorization_method_.Mutable(index);
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authorization_Config_AuthorizationMethodUnion* AccessPoints_AccessPoint_System_Aaa_Authorization_Config::add_authorization_method() {
  // @@protoc_insertion_point(field_add:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authorization.Config.authorization_method)
  return authorization_method_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authorization_Config_AuthorizationMethodUnion >*
AccessPoints_AccessPoint_System_Aaa_Authorization_Config::mutable_authorization_method() {
  // @@protoc_insertion_point(field_mutable_list:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authorization.Config.authorization_method)
  return &authorization_method_;
}
inline const ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authorization_Config_AuthorizationMethodUnion >&
AccessPoints_AccessPoint_System_Aaa_Authorization_Config::authorization_method() const {
  // @@protoc_insertion_point(field_list:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authorization.Config.authorization_method)
  return authorization_method_;
}

// -------------------------------------------------------------------

// AccessPoints_AccessPoint_System_Aaa_Authorization_Events_Event_Config

// .openconfig.enums.OpenconfigAaaTypesAAAAUTHORIZATIONEVENTTYPE event_type = 100418984 [(.yext.schemapath) = "/access-points/access-point/system/aaa/authorization/events/event/config/event-type"];
inline void AccessPoints_AccessPoint_System_Aaa_Authorization_Events_Event_Config::clear_event_type() {
  event_type_ = 0;
}
inline ::openconfig::enums::OpenconfigAaaTypesAAAAUTHORIZATIONEVENTTYPE AccessPoints_AccessPoint_System_Aaa_Authorization_Events_Event_Config::event_type() const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authorization.Events.Event.Config.event_type)
  return static_cast< ::openconfig::enums::OpenconfigAaaTypesAAAAUTHORIZATIONEVENTTYPE >(event_type_);
}
inline void AccessPoints_AccessPoint_System_Aaa_Authorization_Events_Event_Config::set_event_type(::openconfig::enums::OpenconfigAaaTypesAAAAUTHORIZATIONEVENTTYPE value) {
  
  event_type_ = value;
  // @@protoc_insertion_point(field_set:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authorization.Events.Event.Config.event_type)
}

// -------------------------------------------------------------------

// AccessPoints_AccessPoint_System_Aaa_Authorization_Events_Event_State

// .openconfig.enums.OpenconfigAaaTypesAAAAUTHORIZATIONEVENTTYPE event_type = 533070691 [(.yext.schemapath) = "/access-points/access-point/system/aaa/authorization/events/event/state/event-type"];
inline void AccessPoints_AccessPoint_System_Aaa_Authorization_Events_Event_State::clear_event_type() {
  event_type_ = 0;
}
inline ::openconfig::enums::OpenconfigAaaTypesAAAAUTHORIZATIONEVENTTYPE AccessPoints_AccessPoint_System_Aaa_Authorization_Events_Event_State::event_type() const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authorization.Events.Event.State.event_type)
  return static_cast< ::openconfig::enums::OpenconfigAaaTypesAAAAUTHORIZATIONEVENTTYPE >(event_type_);
}
inline void AccessPoints_AccessPoint_System_Aaa_Authorization_Events_Event_State::set_event_type(::openconfig::enums::OpenconfigAaaTypesAAAAUTHORIZATIONEVENTTYPE value) {
  
  event_type_ = value;
  // @@protoc_insertion_point(field_set:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authorization.Events.Event.State.event_type)
}

// -------------------------------------------------------------------

// AccessPoints_AccessPoint_System_Aaa_Authorization_Events_Event

// .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authorization.Events.Event.Config config = 149762094 [(.yext.schemapath) = "/access-points/access-point/system/aaa/authorization/events/event/config"];
inline bool AccessPoints_AccessPoint_System_Aaa_Authorization_Events_Event::has_config() const {
  return this != internal_default_instance() && config_ != NULL;
}
inline void AccessPoints_AccessPoint_System_Aaa_Authorization_Events_Event::clear_config() {
  if (GetArenaNoVirtual() == NULL && config_ != NULL) {
    delete config_;
  }
  config_ = NULL;
}
inline const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authorization_Events_Event_Config& AccessPoints_AccessPoint_System_Aaa_Authorization_Events_Event::config() const {
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authorization_Events_Event_Config* p = config_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authorization.Events.Event.config)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authorization_Events_Event_Config*>(
      &::openconfig::openconfig_access_points::_AccessPoints_AccessPoint_System_Aaa_Authorization_Events_Event_Config_default_instance_);
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authorization_Events_Event_Config* AccessPoints_AccessPoint_System_Aaa_Authorization_Events_Event::release_config() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authorization.Events.Event.config)
  
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authorization_Events_Event_Config* temp = config_;
  config_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authorization_Events_Event_Config* AccessPoints_AccessPoint_System_Aaa_Authorization_Events_Event::mutable_config() {
  
  if (config_ == NULL) {
    config_ = new ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authorization_Events_Event_Config;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authorization.Events.Event.config)
  return config_;
}
inline void AccessPoints_AccessPoint_System_Aaa_Authorization_Events_Event::set_allocated_config(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authorization_Events_Event_Config* config) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete config_;
  }
  if (config) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      config = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, config, submessage_arena);
    }
    
  } else {
    
  }
  config_ = config;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authorization.Events.Event.config)
}

// .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authorization.Events.Event.State state = 451291739 [(.yext.schemapath) = "/access-points/access-point/system/aaa/authorization/events/event/state"];
inline bool AccessPoints_AccessPoint_System_Aaa_Authorization_Events_Event::has_state() const {
  return this != internal_default_instance() && state_ != NULL;
}
inline void AccessPoints_AccessPoint_System_Aaa_Authorization_Events_Event::clear_state() {
  if (GetArenaNoVirtual() == NULL && state_ != NULL) {
    delete state_;
  }
  state_ = NULL;
}
inline const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authorization_Events_Event_State& AccessPoints_AccessPoint_System_Aaa_Authorization_Events_Event::state() const {
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authorization_Events_Event_State* p = state_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authorization.Events.Event.state)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authorization_Events_Event_State*>(
      &::openconfig::openconfig_access_points::_AccessPoints_AccessPoint_System_Aaa_Authorization_Events_Event_State_default_instance_);
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authorization_Events_Event_State* AccessPoints_AccessPoint_System_Aaa_Authorization_Events_Event::release_state() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authorization.Events.Event.state)
  
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authorization_Events_Event_State* temp = state_;
  state_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authorization_Events_Event_State* AccessPoints_AccessPoint_System_Aaa_Authorization_Events_Event::mutable_state() {
  
  if (state_ == NULL) {
    state_ = new ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authorization_Events_Event_State;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authorization.Events.Event.state)
  return state_;
}
inline void AccessPoints_AccessPoint_System_Aaa_Authorization_Events_Event::set_allocated_state(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authorization_Events_Event_State* state) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete state_;
  }
  if (state) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      state = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, state, submessage_arena);
    }
    
  } else {
    
  }
  state_ = state;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authorization.Events.Event.state)
}

// -------------------------------------------------------------------

// AccessPoints_AccessPoint_System_Aaa_Authorization_Events_EventKey

// .openconfig.enums.OpenconfigAaaTypesAAAAUTHORIZATIONEVENTTYPE event_type = 1 [(.yext.schemapath) = "/access-points/access-point/system/aaa/authorization/events/event/event-type"];
inline void AccessPoints_AccessPoint_System_Aaa_Authorization_Events_EventKey::clear_event_type() {
  event_type_ = 0;
}
inline ::openconfig::enums::OpenconfigAaaTypesAAAAUTHORIZATIONEVENTTYPE AccessPoints_AccessPoint_System_Aaa_Authorization_Events_EventKey::event_type() const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authorization.Events.EventKey.event_type)
  return static_cast< ::openconfig::enums::OpenconfigAaaTypesAAAAUTHORIZATIONEVENTTYPE >(event_type_);
}
inline void AccessPoints_AccessPoint_System_Aaa_Authorization_Events_EventKey::set_event_type(::openconfig::enums::OpenconfigAaaTypesAAAAUTHORIZATIONEVENTTYPE value) {
  
  event_type_ = value;
  // @@protoc_insertion_point(field_set:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authorization.Events.EventKey.event_type)
}

// .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authorization.Events.Event event = 2;
inline bool AccessPoints_AccessPoint_System_Aaa_Authorization_Events_EventKey::has_event() const {
  return this != internal_default_instance() && event_ != NULL;
}
inline void AccessPoints_AccessPoint_System_Aaa_Authorization_Events_EventKey::clear_event() {
  if (GetArenaNoVirtual() == NULL && event_ != NULL) {
    delete event_;
  }
  event_ = NULL;
}
inline const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authorization_Events_Event& AccessPoints_AccessPoint_System_Aaa_Authorization_Events_EventKey::event() const {
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authorization_Events_Event* p = event_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authorization.Events.EventKey.event)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authorization_Events_Event*>(
      &::openconfig::openconfig_access_points::_AccessPoints_AccessPoint_System_Aaa_Authorization_Events_Event_default_instance_);
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authorization_Events_Event* AccessPoints_AccessPoint_System_Aaa_Authorization_Events_EventKey::release_event() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authorization.Events.EventKey.event)
  
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authorization_Events_Event* temp = event_;
  event_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authorization_Events_Event* AccessPoints_AccessPoint_System_Aaa_Authorization_Events_EventKey::mutable_event() {
  
  if (event_ == NULL) {
    event_ = new ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authorization_Events_Event;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authorization.Events.EventKey.event)
  return event_;
}
inline void AccessPoints_AccessPoint_System_Aaa_Authorization_Events_EventKey::set_allocated_event(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authorization_Events_Event* event) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete event_;
  }
  if (event) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      event = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, event, submessage_arena);
    }
    
  } else {
    
  }
  event_ = event;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authorization.Events.EventKey.event)
}

// -------------------------------------------------------------------

// AccessPoints_AccessPoint_System_Aaa_Authorization_Events

// repeated .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authorization.Events.EventKey event = 156638937 [(.yext.schemapath) = "/access-points/access-point/system/aaa/authorization/events/event"];
inline int AccessPoints_AccessPoint_System_Aaa_Authorization_Events::event_size() const {
  return event_.size();
}
inline void AccessPoints_AccessPoint_System_Aaa_Authorization_Events::clear_event() {
  event_.Clear();
}
inline const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authorization_Events_EventKey& AccessPoints_AccessPoint_System_Aaa_Authorization_Events::event(int index) const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authorization.Events.event)
  return event_.Get(index);
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authorization_Events_EventKey* AccessPoints_AccessPoint_System_Aaa_Authorization_Events::mutable_event(int index) {
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authorization.Events.event)
  return event_.Mutable(index);
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authorization_Events_EventKey* AccessPoints_AccessPoint_System_Aaa_Authorization_Events::add_event() {
  // @@protoc_insertion_point(field_add:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authorization.Events.event)
  return event_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authorization_Events_EventKey >*
AccessPoints_AccessPoint_System_Aaa_Authorization_Events::mutable_event() {
  // @@protoc_insertion_point(field_mutable_list:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authorization.Events.event)
  return &event_;
}
inline const ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authorization_Events_EventKey >&
AccessPoints_AccessPoint_System_Aaa_Authorization_Events::event() const {
  // @@protoc_insertion_point(field_list:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authorization.Events.event)
  return event_;
}

// -------------------------------------------------------------------

// AccessPoints_AccessPoint_System_Aaa_Authorization_State_AuthorizationMethodUnion

// .openconfig.enums.OpenconfigAaaTypesAAAMETHODTYPE authorization_method_openconfigaaatypesaaamethodtype = 168314187;
inline void AccessPoints_AccessPoint_System_Aaa_Authorization_State_AuthorizationMethodUnion::clear_authorization_method_openconfigaaatypesaaamethodtype() {
  authorization_method_openconfigaaatypesaaamethodtype_ = 0;
}
inline ::openconfig::enums::OpenconfigAaaTypesAAAMETHODTYPE AccessPoints_AccessPoint_System_Aaa_Authorization_State_AuthorizationMethodUnion::authorization_method_openconfigaaatypesaaamethodtype() const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authorization.State.AuthorizationMethodUnion.authorization_method_openconfigaaatypesaaamethodtype)
  return static_cast< ::openconfig::enums::OpenconfigAaaTypesAAAMETHODTYPE >(authorization_method_openconfigaaatypesaaamethodtype_);
}
inline void AccessPoints_AccessPoint_System_Aaa_Authorization_State_AuthorizationMethodUnion::set_authorization_method_openconfigaaatypesaaamethodtype(::openconfig::enums::OpenconfigAaaTypesAAAMETHODTYPE value) {
  
  authorization_method_openconfigaaatypesaaamethodtype_ = value;
  // @@protoc_insertion_point(field_set:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authorization.State.AuthorizationMethodUnion.authorization_method_openconfigaaatypesaaamethodtype)
}

// string authorization_method_string = 119170598;
inline void AccessPoints_AccessPoint_System_Aaa_Authorization_State_AuthorizationMethodUnion::clear_authorization_method_string() {
  authorization_method_string_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AccessPoints_AccessPoint_System_Aaa_Authorization_State_AuthorizationMethodUnion::authorization_method_string() const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authorization.State.AuthorizationMethodUnion.authorization_method_string)
  return authorization_method_string_.GetNoArena();
}
inline void AccessPoints_AccessPoint_System_Aaa_Authorization_State_AuthorizationMethodUnion::set_authorization_method_string(const ::std::string& value) {
  
  authorization_method_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authorization.State.AuthorizationMethodUnion.authorization_method_string)
}
#if LANG_CXX11
inline void AccessPoints_AccessPoint_System_Aaa_Authorization_State_AuthorizationMethodUnion::set_authorization_method_string(::std::string&& value) {
  
  authorization_method_string_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authorization.State.AuthorizationMethodUnion.authorization_method_string)
}
#endif
inline void AccessPoints_AccessPoint_System_Aaa_Authorization_State_AuthorizationMethodUnion::set_authorization_method_string(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  authorization_method_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authorization.State.AuthorizationMethodUnion.authorization_method_string)
}
inline void AccessPoints_AccessPoint_System_Aaa_Authorization_State_AuthorizationMethodUnion::set_authorization_method_string(const char* value, size_t size) {
  
  authorization_method_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authorization.State.AuthorizationMethodUnion.authorization_method_string)
}
inline ::std::string* AccessPoints_AccessPoint_System_Aaa_Authorization_State_AuthorizationMethodUnion::mutable_authorization_method_string() {
  
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authorization.State.AuthorizationMethodUnion.authorization_method_string)
  return authorization_method_string_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AccessPoints_AccessPoint_System_Aaa_Authorization_State_AuthorizationMethodUnion::release_authorization_method_string() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authorization.State.AuthorizationMethodUnion.authorization_method_string)
  
  return authorization_method_string_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AccessPoints_AccessPoint_System_Aaa_Authorization_State_AuthorizationMethodUnion::set_allocated_authorization_method_string(::std::string* authorization_method_string) {
  if (authorization_method_string != NULL) {
    
  } else {
    
  }
  authorization_method_string_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), authorization_method_string);
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authorization.State.AuthorizationMethodUnion.authorization_method_string)
}

// -------------------------------------------------------------------

// AccessPoints_AccessPoint_System_Aaa_Authorization_State

// repeated .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authorization.State.AuthorizationMethodUnion authorization_method = 490535254 [(.yext.schemapath) = "/access-points/access-point/system/aaa/authorization/state/authorization-method"];
inline int AccessPoints_AccessPoint_System_Aaa_Authorization_State::authorization_method_size() const {
  return authorization_method_.size();
}
inline void AccessPoints_AccessPoint_System_Aaa_Authorization_State::clear_authorization_method() {
  authorization_method_.Clear();
}
inline const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authorization_State_AuthorizationMethodUnion& AccessPoints_AccessPoint_System_Aaa_Authorization_State::authorization_method(int index) const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authorization.State.authorization_method)
  return authorization_method_.Get(index);
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authorization_State_AuthorizationMethodUnion* AccessPoints_AccessPoint_System_Aaa_Authorization_State::mutable_authorization_method(int index) {
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authorization.State.authorization_method)
  return authorization_method_.Mutable(index);
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authorization_State_AuthorizationMethodUnion* AccessPoints_AccessPoint_System_Aaa_Authorization_State::add_authorization_method() {
  // @@protoc_insertion_point(field_add:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authorization.State.authorization_method)
  return authorization_method_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authorization_State_AuthorizationMethodUnion >*
AccessPoints_AccessPoint_System_Aaa_Authorization_State::mutable_authorization_method() {
  // @@protoc_insertion_point(field_mutable_list:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authorization.State.authorization_method)
  return &authorization_method_;
}
inline const ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authorization_State_AuthorizationMethodUnion >&
AccessPoints_AccessPoint_System_Aaa_Authorization_State::authorization_method() const {
  // @@protoc_insertion_point(field_list:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authorization.State.authorization_method)
  return authorization_method_;
}

// -------------------------------------------------------------------

// AccessPoints_AccessPoint_System_Aaa_Authorization

// .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authorization.Config config = 24305581 [(.yext.schemapath) = "/access-points/access-point/system/aaa/authorization/config"];
inline bool AccessPoints_AccessPoint_System_Aaa_Authorization::has_config() const {
  return this != internal_default_instance() && config_ != NULL;
}
inline void AccessPoints_AccessPoint_System_Aaa_Authorization::clear_config() {
  if (GetArenaNoVirtual() == NULL && config_ != NULL) {
    delete config_;
  }
  config_ = NULL;
}
inline const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authorization_Config& AccessPoints_AccessPoint_System_Aaa_Authorization::config() const {
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authorization_Config* p = config_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authorization.config)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authorization_Config*>(
      &::openconfig::openconfig_access_points::_AccessPoints_AccessPoint_System_Aaa_Authorization_Config_default_instance_);
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authorization_Config* AccessPoints_AccessPoint_System_Aaa_Authorization::release_config() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authorization.config)
  
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authorization_Config* temp = config_;
  config_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authorization_Config* AccessPoints_AccessPoint_System_Aaa_Authorization::mutable_config() {
  
  if (config_ == NULL) {
    config_ = new ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authorization_Config;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authorization.config)
  return config_;
}
inline void AccessPoints_AccessPoint_System_Aaa_Authorization::set_allocated_config(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authorization_Config* config) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete config_;
  }
  if (config) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      config = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, config, submessage_arena);
    }
    
  } else {
    
  }
  config_ = config;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authorization.config)
}

// .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authorization.Events events = 138538492 [(.yext.schemapath) = "/access-points/access-point/system/aaa/authorization/events"];
inline bool AccessPoints_AccessPoint_System_Aaa_Authorization::has_events() const {
  return this != internal_default_instance() && events_ != NULL;
}
inline void AccessPoints_AccessPoint_System_Aaa_Authorization::clear_events() {
  if (GetArenaNoVirtual() == NULL && events_ != NULL) {
    delete events_;
  }
  events_ = NULL;
}
inline const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authorization_Events& AccessPoints_AccessPoint_System_Aaa_Authorization::events() const {
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authorization_Events* p = events_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authorization.events)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authorization_Events*>(
      &::openconfig::openconfig_access_points::_AccessPoints_AccessPoint_System_Aaa_Authorization_Events_default_instance_);
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authorization_Events* AccessPoints_AccessPoint_System_Aaa_Authorization::release_events() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authorization.events)
  
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authorization_Events* temp = events_;
  events_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authorization_Events* AccessPoints_AccessPoint_System_Aaa_Authorization::mutable_events() {
  
  if (events_ == NULL) {
    events_ = new ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authorization_Events;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authorization.events)
  return events_;
}
inline void AccessPoints_AccessPoint_System_Aaa_Authorization::set_allocated_events(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authorization_Events* events) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete events_;
  }
  if (events) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      events = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, events, submessage_arena);
    }
    
  } else {
    
  }
  events_ = events;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authorization.events)
}

// .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authorization.State state = 50349922 [(.yext.schemapath) = "/access-points/access-point/system/aaa/authorization/state"];
inline bool AccessPoints_AccessPoint_System_Aaa_Authorization::has_state() const {
  return this != internal_default_instance() && state_ != NULL;
}
inline void AccessPoints_AccessPoint_System_Aaa_Authorization::clear_state() {
  if (GetArenaNoVirtual() == NULL && state_ != NULL) {
    delete state_;
  }
  state_ = NULL;
}
inline const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authorization_State& AccessPoints_AccessPoint_System_Aaa_Authorization::state() const {
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authorization_State* p = state_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authorization.state)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authorization_State*>(
      &::openconfig::openconfig_access_points::_AccessPoints_AccessPoint_System_Aaa_Authorization_State_default_instance_);
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authorization_State* AccessPoints_AccessPoint_System_Aaa_Authorization::release_state() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authorization.state)
  
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authorization_State* temp = state_;
  state_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authorization_State* AccessPoints_AccessPoint_System_Aaa_Authorization::mutable_state() {
  
  if (state_ == NULL) {
    state_ = new ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authorization_State;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authorization.state)
  return state_;
}
inline void AccessPoints_AccessPoint_System_Aaa_Authorization::set_allocated_state(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authorization_State* state) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete state_;
  }
  if (state) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      state = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, state, submessage_arena);
    }
    
  } else {
    
  }
  state_ = state;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authorization.state)
}

// -------------------------------------------------------------------

// AccessPoints_AccessPoint_System_Aaa_Config

// -------------------------------------------------------------------

// AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Config

// .ywrapper.StringValue name = 296555646 [(.yext.schemapath) = "/access-points/access-point/system/aaa/server-groups/server-group/config/name"];
inline bool AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Config::has_name() const {
  return this != internal_default_instance() && name_ != NULL;
}
inline const ::ywrapper::StringValue& AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Config::name() const {
  const ::ywrapper::StringValue* p = name_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Config.name)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::StringValue*>(
      &::ywrapper::_StringValue_default_instance_);
}
inline ::ywrapper::StringValue* AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Config::release_name() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Config.name)
  
  ::ywrapper::StringValue* temp = name_;
  name_ = NULL;
  return temp;
}
inline ::ywrapper::StringValue* AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Config::mutable_name() {
  
  if (name_ == NULL) {
    name_ = new ::ywrapper::StringValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Config.name)
  return name_;
}
inline void AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Config::set_allocated_name(::ywrapper::StringValue* name) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(name_);
  }
  if (name) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      name = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, name, submessage_arena);
    }
    
  } else {
    
  }
  name_ = name;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Config.name)
}

// .openconfig.enums.OpenconfigAaaTypesAAASERVERTYPE type = 103335891 [(.yext.schemapath) = "/access-points/access-point/system/aaa/server-groups/server-group/config/type"];
inline void AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Config::clear_type() {
  type_ = 0;
}
inline ::openconfig::enums::OpenconfigAaaTypesAAASERVERTYPE AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Config::type() const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Config.type)
  return static_cast< ::openconfig::enums::OpenconfigAaaTypesAAASERVERTYPE >(type_);
}
inline void AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Config::set_type(::openconfig::enums::OpenconfigAaaTypesAAASERVERTYPE value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Config.type)
}

// -------------------------------------------------------------------

// AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Config

// .ywrapper.StringValue address = 188242844 [(.yext.schemapath) = "/access-points/access-point/system/aaa/server-groups/server-group/servers/server/config/address"];
inline bool AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Config::has_address() const {
  return this != internal_default_instance() && address_ != NULL;
}
inline const ::ywrapper::StringValue& AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Config::address() const {
  const ::ywrapper::StringValue* p = address_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Config.address)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::StringValue*>(
      &::ywrapper::_StringValue_default_instance_);
}
inline ::ywrapper::StringValue* AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Config::release_address() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Config.address)
  
  ::ywrapper::StringValue* temp = address_;
  address_ = NULL;
  return temp;
}
inline ::ywrapper::StringValue* AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Config::mutable_address() {
  
  if (address_ == NULL) {
    address_ = new ::ywrapper::StringValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Config.address)
  return address_;
}
inline void AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Config::set_allocated_address(::ywrapper::StringValue* address) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(address_);
  }
  if (address) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      address = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, address, submessage_arena);
    }
    
  } else {
    
  }
  address_ = address;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Config.address)
}

// .ywrapper.StringValue name = 344432501 [(.yext.schemapath) = "/access-points/access-point/system/aaa/server-groups/server-group/servers/server/config/name"];
inline bool AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Config::has_name() const {
  return this != internal_default_instance() && name_ != NULL;
}
inline const ::ywrapper::StringValue& AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Config::name() const {
  const ::ywrapper::StringValue* p = name_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Config.name)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::StringValue*>(
      &::ywrapper::_StringValue_default_instance_);
}
inline ::ywrapper::StringValue* AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Config::release_name() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Config.name)
  
  ::ywrapper::StringValue* temp = name_;
  name_ = NULL;
  return temp;
}
inline ::ywrapper::StringValue* AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Config::mutable_name() {
  
  if (name_ == NULL) {
    name_ = new ::ywrapper::StringValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Config.name)
  return name_;
}
inline void AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Config::set_allocated_name(::ywrapper::StringValue* name) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(name_);
  }
  if (name) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      name = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, name, submessage_arena);
    }
    
  } else {
    
  }
  name_ = name;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Config.name)
}

// .ywrapper.UintValue timeout = 507780629 [(.yext.schemapath) = "/access-points/access-point/system/aaa/server-groups/server-group/servers/server/config/timeout"];
inline bool AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Config::has_timeout() const {
  return this != internal_default_instance() && timeout_ != NULL;
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Config::timeout() const {
  const ::ywrapper::UintValue* p = timeout_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Config.timeout)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Config::release_timeout() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Config.timeout)
  
  ::ywrapper::UintValue* temp = timeout_;
  timeout_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Config::mutable_timeout() {
  
  if (timeout_ == NULL) {
    timeout_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Config.timeout)
  return timeout_;
}
inline void AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Config::set_allocated_timeout(::ywrapper::UintValue* timeout) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(timeout_);
  }
  if (timeout) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      timeout = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, timeout, submessage_arena);
    }
    
  } else {
    
  }
  timeout_ = timeout;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Config.timeout)
}

// -------------------------------------------------------------------

// AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_Config

// .ywrapper.UintValue acct_port = 115672160 [(.yext.schemapath) = "/access-points/access-point/system/aaa/server-groups/server-group/servers/server/radius/config/acct-port"];
inline bool AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_Config::has_acct_port() const {
  return this != internal_default_instance() && acct_port_ != NULL;
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_Config::acct_port() const {
  const ::ywrapper::UintValue* p = acct_port_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Radius.Config.acct_port)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_Config::release_acct_port() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Radius.Config.acct_port)
  
  ::ywrapper::UintValue* temp = acct_port_;
  acct_port_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_Config::mutable_acct_port() {
  
  if (acct_port_ == NULL) {
    acct_port_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Radius.Config.acct_port)
  return acct_port_;
}
inline void AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_Config::set_allocated_acct_port(::ywrapper::UintValue* acct_port) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(acct_port_);
  }
  if (acct_port) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      acct_port = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, acct_port, submessage_arena);
    }
    
  } else {
    
  }
  acct_port_ = acct_port;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Radius.Config.acct_port)
}

// .ywrapper.UintValue auth_port = 16438073 [(.yext.schemapath) = "/access-points/access-point/system/aaa/server-groups/server-group/servers/server/radius/config/auth-port"];
inline bool AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_Config::has_auth_port() const {
  return this != internal_default_instance() && auth_port_ != NULL;
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_Config::auth_port() const {
  const ::ywrapper::UintValue* p = auth_port_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Radius.Config.auth_port)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_Config::release_auth_port() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Radius.Config.auth_port)
  
  ::ywrapper::UintValue* temp = auth_port_;
  auth_port_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_Config::mutable_auth_port() {
  
  if (auth_port_ == NULL) {
    auth_port_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Radius.Config.auth_port)
  return auth_port_;
}
inline void AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_Config::set_allocated_auth_port(::ywrapper::UintValue* auth_port) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(auth_port_);
  }
  if (auth_port) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      auth_port = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, auth_port, submessage_arena);
    }
    
  } else {
    
  }
  auth_port_ = auth_port;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Radius.Config.auth_port)
}

// .ywrapper.UintValue retransmit_attempts = 73522529 [(.yext.schemapath) = "/access-points/access-point/system/aaa/server-groups/server-group/servers/server/radius/config/retransmit-attempts"];
inline bool AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_Config::has_retransmit_attempts() const {
  return this != internal_default_instance() && retransmit_attempts_ != NULL;
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_Config::retransmit_attempts() const {
  const ::ywrapper::UintValue* p = retransmit_attempts_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Radius.Config.retransmit_attempts)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_Config::release_retransmit_attempts() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Radius.Config.retransmit_attempts)
  
  ::ywrapper::UintValue* temp = retransmit_attempts_;
  retransmit_attempts_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_Config::mutable_retransmit_attempts() {
  
  if (retransmit_attempts_ == NULL) {
    retransmit_attempts_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Radius.Config.retransmit_attempts)
  return retransmit_attempts_;
}
inline void AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_Config::set_allocated_retransmit_attempts(::ywrapper::UintValue* retransmit_attempts) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(retransmit_attempts_);
  }
  if (retransmit_attempts) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      retransmit_attempts = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, retransmit_attempts, submessage_arena);
    }
    
  } else {
    
  }
  retransmit_attempts_ = retransmit_attempts;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Radius.Config.retransmit_attempts)
}

// .ywrapper.StringValue secret_key = 287001387 [(.yext.schemapath) = "/access-points/access-point/system/aaa/server-groups/server-group/servers/server/radius/config/secret-key"];
inline bool AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_Config::has_secret_key() const {
  return this != internal_default_instance() && secret_key_ != NULL;
}
inline const ::ywrapper::StringValue& AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_Config::secret_key() const {
  const ::ywrapper::StringValue* p = secret_key_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Radius.Config.secret_key)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::StringValue*>(
      &::ywrapper::_StringValue_default_instance_);
}
inline ::ywrapper::StringValue* AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_Config::release_secret_key() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Radius.Config.secret_key)
  
  ::ywrapper::StringValue* temp = secret_key_;
  secret_key_ = NULL;
  return temp;
}
inline ::ywrapper::StringValue* AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_Config::mutable_secret_key() {
  
  if (secret_key_ == NULL) {
    secret_key_ = new ::ywrapper::StringValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Radius.Config.secret_key)
  return secret_key_;
}
inline void AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_Config::set_allocated_secret_key(::ywrapper::StringValue* secret_key) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(secret_key_);
  }
  if (secret_key) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      secret_key = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, secret_key, submessage_arena);
    }
    
  } else {
    
  }
  secret_key_ = secret_key;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Radius.Config.secret_key)
}

// .ywrapper.StringValue source_address = 531710485 [(.yext.schemapath) = "/access-points/access-point/system/aaa/server-groups/server-group/servers/server/radius/config/source-address"];
inline bool AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_Config::has_source_address() const {
  return this != internal_default_instance() && source_address_ != NULL;
}
inline const ::ywrapper::StringValue& AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_Config::source_address() const {
  const ::ywrapper::StringValue* p = source_address_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Radius.Config.source_address)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::StringValue*>(
      &::ywrapper::_StringValue_default_instance_);
}
inline ::ywrapper::StringValue* AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_Config::release_source_address() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Radius.Config.source_address)
  
  ::ywrapper::StringValue* temp = source_address_;
  source_address_ = NULL;
  return temp;
}
inline ::ywrapper::StringValue* AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_Config::mutable_source_address() {
  
  if (source_address_ == NULL) {
    source_address_ = new ::ywrapper::StringValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Radius.Config.source_address)
  return source_address_;
}
inline void AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_Config::set_allocated_source_address(::ywrapper::StringValue* source_address) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(source_address_);
  }
  if (source_address) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      source_address = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, source_address, submessage_arena);
    }
    
  } else {
    
  }
  source_address_ = source_address;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Radius.Config.source_address)
}

// -------------------------------------------------------------------

// AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State_Counters

// .ywrapper.UintValue access_accepts = 49842154 [(.yext.schemapath) = "/access-points/access-point/system/aaa/server-groups/server-group/servers/server/radius/state/counters/access-accepts"];
inline bool AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State_Counters::has_access_accepts() const {
  return this != internal_default_instance() && access_accepts_ != NULL;
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State_Counters::access_accepts() const {
  const ::ywrapper::UintValue* p = access_accepts_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Radius.State.Counters.access_accepts)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State_Counters::release_access_accepts() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Radius.State.Counters.access_accepts)
  
  ::ywrapper::UintValue* temp = access_accepts_;
  access_accepts_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State_Counters::mutable_access_accepts() {
  
  if (access_accepts_ == NULL) {
    access_accepts_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Radius.State.Counters.access_accepts)
  return access_accepts_;
}
inline void AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State_Counters::set_allocated_access_accepts(::ywrapper::UintValue* access_accepts) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(access_accepts_);
  }
  if (access_accepts) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      access_accepts = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, access_accepts, submessage_arena);
    }
    
  } else {
    
  }
  access_accepts_ = access_accepts;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Radius.State.Counters.access_accepts)
}

// .ywrapper.UintValue access_rejects = 316878341 [(.yext.schemapath) = "/access-points/access-point/system/aaa/server-groups/server-group/servers/server/radius/state/counters/access-rejects"];
inline bool AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State_Counters::has_access_rejects() const {
  return this != internal_default_instance() && access_rejects_ != NULL;
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State_Counters::access_rejects() const {
  const ::ywrapper::UintValue* p = access_rejects_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Radius.State.Counters.access_rejects)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State_Counters::release_access_rejects() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Radius.State.Counters.access_rejects)
  
  ::ywrapper::UintValue* temp = access_rejects_;
  access_rejects_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State_Counters::mutable_access_rejects() {
  
  if (access_rejects_ == NULL) {
    access_rejects_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Radius.State.Counters.access_rejects)
  return access_rejects_;
}
inline void AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State_Counters::set_allocated_access_rejects(::ywrapper::UintValue* access_rejects) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(access_rejects_);
  }
  if (access_rejects) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      access_rejects = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, access_rejects, submessage_arena);
    }
    
  } else {
    
  }
  access_rejects_ = access_rejects;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Radius.State.Counters.access_rejects)
}

// .ywrapper.UintValue retried_access_requests = 208605655 [(.yext.schemapath) = "/access-points/access-point/system/aaa/server-groups/server-group/servers/server/radius/state/counters/retried-access-requests"];
inline bool AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State_Counters::has_retried_access_requests() const {
  return this != internal_default_instance() && retried_access_requests_ != NULL;
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State_Counters::retried_access_requests() const {
  const ::ywrapper::UintValue* p = retried_access_requests_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Radius.State.Counters.retried_access_requests)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State_Counters::release_retried_access_requests() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Radius.State.Counters.retried_access_requests)
  
  ::ywrapper::UintValue* temp = retried_access_requests_;
  retried_access_requests_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State_Counters::mutable_retried_access_requests() {
  
  if (retried_access_requests_ == NULL) {
    retried_access_requests_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Radius.State.Counters.retried_access_requests)
  return retried_access_requests_;
}
inline void AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State_Counters::set_allocated_retried_access_requests(::ywrapper::UintValue* retried_access_requests) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(retried_access_requests_);
  }
  if (retried_access_requests) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      retried_access_requests = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, retried_access_requests, submessage_arena);
    }
    
  } else {
    
  }
  retried_access_requests_ = retried_access_requests;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Radius.State.Counters.retried_access_requests)
}

// .ywrapper.UintValue timeout_access_requests = 160672391 [(.yext.schemapath) = "/access-points/access-point/system/aaa/server-groups/server-group/servers/server/radius/state/counters/timeout-access-requests"];
inline bool AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State_Counters::has_timeout_access_requests() const {
  return this != internal_default_instance() && timeout_access_requests_ != NULL;
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State_Counters::timeout_access_requests() const {
  const ::ywrapper::UintValue* p = timeout_access_requests_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Radius.State.Counters.timeout_access_requests)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State_Counters::release_timeout_access_requests() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Radius.State.Counters.timeout_access_requests)
  
  ::ywrapper::UintValue* temp = timeout_access_requests_;
  timeout_access_requests_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State_Counters::mutable_timeout_access_requests() {
  
  if (timeout_access_requests_ == NULL) {
    timeout_access_requests_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Radius.State.Counters.timeout_access_requests)
  return timeout_access_requests_;
}
inline void AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State_Counters::set_allocated_timeout_access_requests(::ywrapper::UintValue* timeout_access_requests) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(timeout_access_requests_);
  }
  if (timeout_access_requests) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      timeout_access_requests = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, timeout_access_requests, submessage_arena);
    }
    
  } else {
    
  }
  timeout_access_requests_ = timeout_access_requests;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Radius.State.Counters.timeout_access_requests)
}

// -------------------------------------------------------------------

// AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State

// .ywrapper.UintValue acct_port = 66298825 [(.yext.schemapath) = "/access-points/access-point/system/aaa/server-groups/server-group/servers/server/radius/state/acct-port"];
inline bool AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State::has_acct_port() const {
  return this != internal_default_instance() && acct_port_ != NULL;
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State::acct_port() const {
  const ::ywrapper::UintValue* p = acct_port_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Radius.State.acct_port)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State::release_acct_port() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Radius.State.acct_port)
  
  ::ywrapper::UintValue* temp = acct_port_;
  acct_port_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State::mutable_acct_port() {
  
  if (acct_port_ == NULL) {
    acct_port_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Radius.State.acct_port)
  return acct_port_;
}
inline void AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State::set_allocated_acct_port(::ywrapper::UintValue* acct_port) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(acct_port_);
  }
  if (acct_port) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      acct_port = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, acct_port, submessage_arena);
    }
    
  } else {
    
  }
  acct_port_ = acct_port;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Radius.State.acct_port)
}

// .ywrapper.UintValue auth_port = 111419964 [(.yext.schemapath) = "/access-points/access-point/system/aaa/server-groups/server-group/servers/server/radius/state/auth-port"];
inline bool AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State::has_auth_port() const {
  return this != internal_default_instance() && auth_port_ != NULL;
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State::auth_port() const {
  const ::ywrapper::UintValue* p = auth_port_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Radius.State.auth_port)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State::release_auth_port() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Radius.State.auth_port)
  
  ::ywrapper::UintValue* temp = auth_port_;
  auth_port_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State::mutable_auth_port() {
  
  if (auth_port_ == NULL) {
    auth_port_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Radius.State.auth_port)
  return auth_port_;
}
inline void AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State::set_allocated_auth_port(::ywrapper::UintValue* auth_port) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(auth_port_);
  }
  if (auth_port) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      auth_port = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, auth_port, submessage_arena);
    }
    
  } else {
    
  }
  auth_port_ = auth_port;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Radius.State.auth_port)
}

// .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Radius.State.Counters counters = 45048429 [(.yext.schemapath) = "/access-points/access-point/system/aaa/server-groups/server-group/servers/server/radius/state/counters"];
inline bool AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State::has_counters() const {
  return this != internal_default_instance() && counters_ != NULL;
}
inline void AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State::clear_counters() {
  if (GetArenaNoVirtual() == NULL && counters_ != NULL) {
    delete counters_;
  }
  counters_ = NULL;
}
inline const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State_Counters& AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State::counters() const {
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State_Counters* p = counters_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Radius.State.counters)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State_Counters*>(
      &::openconfig::openconfig_access_points::_AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State_Counters_default_instance_);
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State_Counters* AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State::release_counters() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Radius.State.counters)
  
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State_Counters* temp = counters_;
  counters_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State_Counters* AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State::mutable_counters() {
  
  if (counters_ == NULL) {
    counters_ = new ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State_Counters;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Radius.State.counters)
  return counters_;
}
inline void AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State::set_allocated_counters(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State_Counters* counters) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete counters_;
  }
  if (counters) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      counters = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, counters, submessage_arena);
    }
    
  } else {
    
  }
  counters_ = counters;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Radius.State.counters)
}

// .ywrapper.UintValue retransmit_attempts = 487947612 [(.yext.schemapath) = "/access-points/access-point/system/aaa/server-groups/server-group/servers/server/radius/state/retransmit-attempts"];
inline bool AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State::has_retransmit_attempts() const {
  return this != internal_default_instance() && retransmit_attempts_ != NULL;
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State::retransmit_attempts() const {
  const ::ywrapper::UintValue* p = retransmit_attempts_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Radius.State.retransmit_attempts)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State::release_retransmit_attempts() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Radius.State.retransmit_attempts)
  
  ::ywrapper::UintValue* temp = retransmit_attempts_;
  retransmit_attempts_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State::mutable_retransmit_attempts() {
  
  if (retransmit_attempts_ == NULL) {
    retransmit_attempts_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Radius.State.retransmit_attempts)
  return retransmit_attempts_;
}
inline void AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State::set_allocated_retransmit_attempts(::ywrapper::UintValue* retransmit_attempts) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(retransmit_attempts_);
  }
  if (retransmit_attempts) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      retransmit_attempts = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, retransmit_attempts, submessage_arena);
    }
    
  } else {
    
  }
  retransmit_attempts_ = retransmit_attempts;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Radius.State.retransmit_attempts)
}

// .ywrapper.StringValue secret_key = 196524168 [(.yext.schemapath) = "/access-points/access-point/system/aaa/server-groups/server-group/servers/server/radius/state/secret-key"];
inline bool AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State::has_secret_key() const {
  return this != internal_default_instance() && secret_key_ != NULL;
}
inline const ::ywrapper::StringValue& AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State::secret_key() const {
  const ::ywrapper::StringValue* p = secret_key_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Radius.State.secret_key)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::StringValue*>(
      &::ywrapper::_StringValue_default_instance_);
}
inline ::ywrapper::StringValue* AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State::release_secret_key() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Radius.State.secret_key)
  
  ::ywrapper::StringValue* temp = secret_key_;
  secret_key_ = NULL;
  return temp;
}
inline ::ywrapper::StringValue* AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State::mutable_secret_key() {
  
  if (secret_key_ == NULL) {
    secret_key_ = new ::ywrapper::StringValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Radius.State.secret_key)
  return secret_key_;
}
inline void AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State::set_allocated_secret_key(::ywrapper::StringValue* secret_key) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(secret_key_);
  }
  if (secret_key) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      secret_key = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, secret_key, submessage_arena);
    }
    
  } else {
    
  }
  secret_key_ = secret_key;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Radius.State.secret_key)
}

// .ywrapper.StringValue source_address = 488251670 [(.yext.schemapath) = "/access-points/access-point/system/aaa/server-groups/server-group/servers/server/radius/state/source-address"];
inline bool AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State::has_source_address() const {
  return this != internal_default_instance() && source_address_ != NULL;
}
inline const ::ywrapper::StringValue& AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State::source_address() const {
  const ::ywrapper::StringValue* p = source_address_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Radius.State.source_address)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::StringValue*>(
      &::ywrapper::_StringValue_default_instance_);
}
inline ::ywrapper::StringValue* AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State::release_source_address() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Radius.State.source_address)
  
  ::ywrapper::StringValue* temp = source_address_;
  source_address_ = NULL;
  return temp;
}
inline ::ywrapper::StringValue* AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State::mutable_source_address() {
  
  if (source_address_ == NULL) {
    source_address_ = new ::ywrapper::StringValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Radius.State.source_address)
  return source_address_;
}
inline void AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State::set_allocated_source_address(::ywrapper::StringValue* source_address) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(source_address_);
  }
  if (source_address) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      source_address = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, source_address, submessage_arena);
    }
    
  } else {
    
  }
  source_address_ = source_address;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Radius.State.source_address)
}

// -------------------------------------------------------------------

// AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius

// .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Radius.Config config = 388185850 [(.yext.schemapath) = "/access-points/access-point/system/aaa/server-groups/server-group/servers/server/radius/config"];
inline bool AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius::has_config() const {
  return this != internal_default_instance() && config_ != NULL;
}
inline void AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius::clear_config() {
  if (GetArenaNoVirtual() == NULL && config_ != NULL) {
    delete config_;
  }
  config_ = NULL;
}
inline const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_Config& AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius::config() const {
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_Config* p = config_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Radius.config)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_Config*>(
      &::openconfig::openconfig_access_points::_AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_Config_default_instance_);
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_Config* AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius::release_config() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Radius.config)
  
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_Config* temp = config_;
  config_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_Config* AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius::mutable_config() {
  
  if (config_ == NULL) {
    config_ = new ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_Config;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Radius.config)
  return config_;
}
inline void AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius::set_allocated_config(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_Config* config) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete config_;
  }
  if (config) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      config = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, config, submessage_arena);
    }
    
  } else {
    
  }
  config_ = config;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Radius.config)
}

// .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Radius.State state = 388169495 [(.yext.schemapath) = "/access-points/access-point/system/aaa/server-groups/server-group/servers/server/radius/state"];
inline bool AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius::has_state() const {
  return this != internal_default_instance() && state_ != NULL;
}
inline void AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius::clear_state() {
  if (GetArenaNoVirtual() == NULL && state_ != NULL) {
    delete state_;
  }
  state_ = NULL;
}
inline const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State& AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius::state() const {
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State* p = state_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Radius.state)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State*>(
      &::openconfig::openconfig_access_points::_AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State_default_instance_);
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State* AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius::release_state() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Radius.state)
  
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State* temp = state_;
  state_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State* AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius::mutable_state() {
  
  if (state_ == NULL) {
    state_ = new ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Radius.state)
  return state_;
}
inline void AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius::set_allocated_state(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State* state) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete state_;
  }
  if (state) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      state = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, state, submessage_arena);
    }
    
  } else {
    
  }
  state_ = state;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Radius.state)
}

// -------------------------------------------------------------------

// AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_State

// .ywrapper.StringValue address = 49562407 [(.yext.schemapath) = "/access-points/access-point/system/aaa/server-groups/server-group/servers/server/state/address"];
inline bool AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_State::has_address() const {
  return this != internal_default_instance() && address_ != NULL;
}
inline const ::ywrapper::StringValue& AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_State::address() const {
  const ::ywrapper::StringValue* p = address_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Servers.Server.State.address)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::StringValue*>(
      &::ywrapper::_StringValue_default_instance_);
}
inline ::ywrapper::StringValue* AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_State::release_address() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Servers.Server.State.address)
  
  ::ywrapper::StringValue* temp = address_;
  address_ = NULL;
  return temp;
}
inline ::ywrapper::StringValue* AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_State::mutable_address() {
  
  if (address_ == NULL) {
    address_ = new ::ywrapper::StringValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Servers.Server.State.address)
  return address_;
}
inline void AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_State::set_allocated_address(::ywrapper::StringValue* address) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(address_);
  }
  if (address) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      address = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, address, submessage_arena);
    }
    
  } else {
    
  }
  address_ = address;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Servers.Server.State.address)
}

// .ywrapper.UintValue connection_aborts = 101939779 [(.yext.schemapath) = "/access-points/access-point/system/aaa/server-groups/server-group/servers/server/state/connection-aborts"];
inline bool AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_State::has_connection_aborts() const {
  return this != internal_default_instance() && connection_aborts_ != NULL;
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_State::connection_aborts() const {
  const ::ywrapper::UintValue* p = connection_aborts_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Servers.Server.State.connection_aborts)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_State::release_connection_aborts() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Servers.Server.State.connection_aborts)
  
  ::ywrapper::UintValue* temp = connection_aborts_;
  connection_aborts_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_State::mutable_connection_aborts() {
  
  if (connection_aborts_ == NULL) {
    connection_aborts_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Servers.Server.State.connection_aborts)
  return connection_aborts_;
}
inline void AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_State::set_allocated_connection_aborts(::ywrapper::UintValue* connection_aborts) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(connection_aborts_);
  }
  if (connection_aborts) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      connection_aborts = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, connection_aborts, submessage_arena);
    }
    
  } else {
    
  }
  connection_aborts_ = connection_aborts;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Servers.Server.State.connection_aborts)
}

// .ywrapper.UintValue connection_closes = 217614545 [(.yext.schemapath) = "/access-points/access-point/system/aaa/server-groups/server-group/servers/server/state/connection-closes"];
inline bool AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_State::has_connection_closes() const {
  return this != internal_default_instance() && connection_closes_ != NULL;
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_State::connection_closes() const {
  const ::ywrapper::UintValue* p = connection_closes_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Servers.Server.State.connection_closes)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_State::release_connection_closes() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Servers.Server.State.connection_closes)
  
  ::ywrapper::UintValue* temp = connection_closes_;
  connection_closes_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_State::mutable_connection_closes() {
  
  if (connection_closes_ == NULL) {
    connection_closes_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Servers.Server.State.connection_closes)
  return connection_closes_;
}
inline void AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_State::set_allocated_connection_closes(::ywrapper::UintValue* connection_closes) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(connection_closes_);
  }
  if (connection_closes) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      connection_closes = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, connection_closes, submessage_arena);
    }
    
  } else {
    
  }
  connection_closes_ = connection_closes;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Servers.Server.State.connection_closes)
}

// .ywrapper.UintValue connection_failures = 25825311 [(.yext.schemapath) = "/access-points/access-point/system/aaa/server-groups/server-group/servers/server/state/connection-failures"];
inline bool AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_State::has_connection_failures() const {
  return this != internal_default_instance() && connection_failures_ != NULL;
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_State::connection_failures() const {
  const ::ywrapper::UintValue* p = connection_failures_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Servers.Server.State.connection_failures)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_State::release_connection_failures() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Servers.Server.State.connection_failures)
  
  ::ywrapper::UintValue* temp = connection_failures_;
  connection_failures_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_State::mutable_connection_failures() {
  
  if (connection_failures_ == NULL) {
    connection_failures_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Servers.Server.State.connection_failures)
  return connection_failures_;
}
inline void AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_State::set_allocated_connection_failures(::ywrapper::UintValue* connection_failures) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(connection_failures_);
  }
  if (connection_failures) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      connection_failures = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, connection_failures, submessage_arena);
    }
    
  } else {
    
  }
  connection_failures_ = connection_failures;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Servers.Server.State.connection_failures)
}

// .ywrapper.UintValue connection_opens = 304511893 [(.yext.schemapath) = "/access-points/access-point/system/aaa/server-groups/server-group/servers/server/state/connection-opens"];
inline bool AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_State::has_connection_opens() const {
  return this != internal_default_instance() && connection_opens_ != NULL;
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_State::connection_opens() const {
  const ::ywrapper::UintValue* p = connection_opens_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Servers.Server.State.connection_opens)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_State::release_connection_opens() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Servers.Server.State.connection_opens)
  
  ::ywrapper::UintValue* temp = connection_opens_;
  connection_opens_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_State::mutable_connection_opens() {
  
  if (connection_opens_ == NULL) {
    connection_opens_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Servers.Server.State.connection_opens)
  return connection_opens_;
}
inline void AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_State::set_allocated_connection_opens(::ywrapper::UintValue* connection_opens) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(connection_opens_);
  }
  if (connection_opens) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      connection_opens = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, connection_opens, submessage_arena);
    }
    
  } else {
    
  }
  connection_opens_ = connection_opens;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Servers.Server.State.connection_opens)
}

// .ywrapper.UintValue connection_timeouts = 383937474 [(.yext.schemapath) = "/access-points/access-point/system/aaa/server-groups/server-group/servers/server/state/connection-timeouts"];
inline bool AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_State::has_connection_timeouts() const {
  return this != internal_default_instance() && connection_timeouts_ != NULL;
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_State::connection_timeouts() const {
  const ::ywrapper::UintValue* p = connection_timeouts_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Servers.Server.State.connection_timeouts)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_State::release_connection_timeouts() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Servers.Server.State.connection_timeouts)
  
  ::ywrapper::UintValue* temp = connection_timeouts_;
  connection_timeouts_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_State::mutable_connection_timeouts() {
  
  if (connection_timeouts_ == NULL) {
    connection_timeouts_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Servers.Server.State.connection_timeouts)
  return connection_timeouts_;
}
inline void AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_State::set_allocated_connection_timeouts(::ywrapper::UintValue* connection_timeouts) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(connection_timeouts_);
  }
  if (connection_timeouts) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      connection_timeouts = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, connection_timeouts, submessage_arena);
    }
    
  } else {
    
  }
  connection_timeouts_ = connection_timeouts;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Servers.Server.State.connection_timeouts)
}

// .ywrapper.UintValue errors_received = 301845204 [(.yext.schemapath) = "/access-points/access-point/system/aaa/server-groups/server-group/servers/server/state/errors-received"];
inline bool AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_State::has_errors_received() const {
  return this != internal_default_instance() && errors_received_ != NULL;
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_State::errors_received() const {
  const ::ywrapper::UintValue* p = errors_received_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Servers.Server.State.errors_received)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_State::release_errors_received() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Servers.Server.State.errors_received)
  
  ::ywrapper::UintValue* temp = errors_received_;
  errors_received_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_State::mutable_errors_received() {
  
  if (errors_received_ == NULL) {
    errors_received_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Servers.Server.State.errors_received)
  return errors_received_;
}
inline void AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_State::set_allocated_errors_received(::ywrapper::UintValue* errors_received) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(errors_received_);
  }
  if (errors_received) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      errors_received = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, errors_received, submessage_arena);
    }
    
  } else {
    
  }
  errors_received_ = errors_received;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Servers.Server.State.errors_received)
}

// .ywrapper.UintValue messages_received = 65026887 [(.yext.schemapath) = "/access-points/access-point/system/aaa/server-groups/server-group/servers/server/state/messages-received"];
inline bool AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_State::has_messages_received() const {
  return this != internal_default_instance() && messages_received_ != NULL;
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_State::messages_received() const {
  const ::ywrapper::UintValue* p = messages_received_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Servers.Server.State.messages_received)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_State::release_messages_received() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Servers.Server.State.messages_received)
  
  ::ywrapper::UintValue* temp = messages_received_;
  messages_received_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_State::mutable_messages_received() {
  
  if (messages_received_ == NULL) {
    messages_received_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Servers.Server.State.messages_received)
  return messages_received_;
}
inline void AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_State::set_allocated_messages_received(::ywrapper::UintValue* messages_received) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(messages_received_);
  }
  if (messages_received) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      messages_received = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, messages_received, submessage_arena);
    }
    
  } else {
    
  }
  messages_received_ = messages_received;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Servers.Server.State.messages_received)
}

// .ywrapper.UintValue messages_sent = 216615924 [(.yext.schemapath) = "/access-points/access-point/system/aaa/server-groups/server-group/servers/server/state/messages-sent"];
inline bool AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_State::has_messages_sent() const {
  return this != internal_default_instance() && messages_sent_ != NULL;
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_State::messages_sent() const {
  const ::ywrapper::UintValue* p = messages_sent_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Servers.Server.State.messages_sent)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_State::release_messages_sent() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Servers.Server.State.messages_sent)
  
  ::ywrapper::UintValue* temp = messages_sent_;
  messages_sent_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_State::mutable_messages_sent() {
  
  if (messages_sent_ == NULL) {
    messages_sent_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Servers.Server.State.messages_sent)
  return messages_sent_;
}
inline void AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_State::set_allocated_messages_sent(::ywrapper::UintValue* messages_sent) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(messages_sent_);
  }
  if (messages_sent) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      messages_sent = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, messages_sent, submessage_arena);
    }
    
  } else {
    
  }
  messages_sent_ = messages_sent;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Servers.Server.State.messages_sent)
}

// .ywrapper.StringValue name = 340916252 [(.yext.schemapath) = "/access-points/access-point/system/aaa/server-groups/server-group/servers/server/state/name"];
inline bool AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_State::has_name() const {
  return this != internal_default_instance() && name_ != NULL;
}
inline const ::ywrapper::StringValue& AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_State::name() const {
  const ::ywrapper::StringValue* p = name_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Servers.Server.State.name)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::StringValue*>(
      &::ywrapper::_StringValue_default_instance_);
}
inline ::ywrapper::StringValue* AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_State::release_name() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Servers.Server.State.name)
  
  ::ywrapper::StringValue* temp = name_;
  name_ = NULL;
  return temp;
}
inline ::ywrapper::StringValue* AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_State::mutable_name() {
  
  if (name_ == NULL) {
    name_ = new ::ywrapper::StringValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Servers.Server.State.name)
  return name_;
}
inline void AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_State::set_allocated_name(::ywrapper::StringValue* name) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(name_);
  }
  if (name) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      name = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, name, submessage_arena);
    }
    
  } else {
    
  }
  name_ = name;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Servers.Server.State.name)
}

// .ywrapper.UintValue timeout = 242975150 [(.yext.schemapath) = "/access-points/access-point/system/aaa/server-groups/server-group/servers/server/state/timeout"];
inline bool AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_State::has_timeout() const {
  return this != internal_default_instance() && timeout_ != NULL;
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_State::timeout() const {
  const ::ywrapper::UintValue* p = timeout_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Servers.Server.State.timeout)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_State::release_timeout() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Servers.Server.State.timeout)
  
  ::ywrapper::UintValue* temp = timeout_;
  timeout_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_State::mutable_timeout() {
  
  if (timeout_ == NULL) {
    timeout_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Servers.Server.State.timeout)
  return timeout_;
}
inline void AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_State::set_allocated_timeout(::ywrapper::UintValue* timeout) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(timeout_);
  }
  if (timeout) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      timeout = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, timeout, submessage_arena);
    }
    
  } else {
    
  }
  timeout_ = timeout;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Servers.Server.State.timeout)
}

// -------------------------------------------------------------------

// AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_Config

// .ywrapper.UintValue port = 481578045 [(.yext.schemapath) = "/access-points/access-point/system/aaa/server-groups/server-group/servers/server/tacacs/config/port"];
inline bool AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_Config::has_port() const {
  return this != internal_default_instance() && port_ != NULL;
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_Config::port() const {
  const ::ywrapper::UintValue* p = port_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Tacacs.Config.port)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_Config::release_port() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Tacacs.Config.port)
  
  ::ywrapper::UintValue* temp = port_;
  port_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_Config::mutable_port() {
  
  if (port_ == NULL) {
    port_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Tacacs.Config.port)
  return port_;
}
inline void AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_Config::set_allocated_port(::ywrapper::UintValue* port) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(port_);
  }
  if (port) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      port = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, port, submessage_arena);
    }
    
  } else {
    
  }
  port_ = port;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Tacacs.Config.port)
}

// .ywrapper.StringValue secret_key = 96506218 [(.yext.schemapath) = "/access-points/access-point/system/aaa/server-groups/server-group/servers/server/tacacs/config/secret-key"];
inline bool AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_Config::has_secret_key() const {
  return this != internal_default_instance() && secret_key_ != NULL;
}
inline const ::ywrapper::StringValue& AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_Config::secret_key() const {
  const ::ywrapper::StringValue* p = secret_key_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Tacacs.Config.secret_key)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::StringValue*>(
      &::ywrapper::_StringValue_default_instance_);
}
inline ::ywrapper::StringValue* AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_Config::release_secret_key() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Tacacs.Config.secret_key)
  
  ::ywrapper::StringValue* temp = secret_key_;
  secret_key_ = NULL;
  return temp;
}
inline ::ywrapper::StringValue* AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_Config::mutable_secret_key() {
  
  if (secret_key_ == NULL) {
    secret_key_ = new ::ywrapper::StringValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Tacacs.Config.secret_key)
  return secret_key_;
}
inline void AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_Config::set_allocated_secret_key(::ywrapper::StringValue* secret_key) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(secret_key_);
  }
  if (secret_key) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      secret_key = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, secret_key, submessage_arena);
    }
    
  } else {
    
  }
  secret_key_ = secret_key;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Tacacs.Config.secret_key)
}

// .ywrapper.StringValue source_address = 532576068 [(.yext.schemapath) = "/access-points/access-point/system/aaa/server-groups/server-group/servers/server/tacacs/config/source-address"];
inline bool AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_Config::has_source_address() const {
  return this != internal_default_instance() && source_address_ != NULL;
}
inline const ::ywrapper::StringValue& AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_Config::source_address() const {
  const ::ywrapper::StringValue* p = source_address_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Tacacs.Config.source_address)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::StringValue*>(
      &::ywrapper::_StringValue_default_instance_);
}
inline ::ywrapper::StringValue* AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_Config::release_source_address() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Tacacs.Config.source_address)
  
  ::ywrapper::StringValue* temp = source_address_;
  source_address_ = NULL;
  return temp;
}
inline ::ywrapper::StringValue* AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_Config::mutable_source_address() {
  
  if (source_address_ == NULL) {
    source_address_ = new ::ywrapper::StringValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Tacacs.Config.source_address)
  return source_address_;
}
inline void AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_Config::set_allocated_source_address(::ywrapper::StringValue* source_address) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(source_address_);
  }
  if (source_address) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      source_address = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, source_address, submessage_arena);
    }
    
  } else {
    
  }
  source_address_ = source_address;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Tacacs.Config.source_address)
}

// -------------------------------------------------------------------

// AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_State

// .ywrapper.UintValue port = 202052552 [(.yext.schemapath) = "/access-points/access-point/system/aaa/server-groups/server-group/servers/server/tacacs/state/port"];
inline bool AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_State::has_port() const {
  return this != internal_default_instance() && port_ != NULL;
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_State::port() const {
  const ::ywrapper::UintValue* p = port_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Tacacs.State.port)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_State::release_port() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Tacacs.State.port)
  
  ::ywrapper::UintValue* temp = port_;
  port_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_State::mutable_port() {
  
  if (port_ == NULL) {
    port_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Tacacs.State.port)
  return port_;
}
inline void AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_State::set_allocated_port(::ywrapper::UintValue* port) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(port_);
  }
  if (port) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      port = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, port, submessage_arena);
    }
    
  } else {
    
  }
  port_ = port;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Tacacs.State.port)
}

// .ywrapper.StringValue secret_key = 495537223 [(.yext.schemapath) = "/access-points/access-point/system/aaa/server-groups/server-group/servers/server/tacacs/state/secret-key"];
inline bool AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_State::has_secret_key() const {
  return this != internal_default_instance() && secret_key_ != NULL;
}
inline const ::ywrapper::StringValue& AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_State::secret_key() const {
  const ::ywrapper::StringValue* p = secret_key_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Tacacs.State.secret_key)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::StringValue*>(
      &::ywrapper::_StringValue_default_instance_);
}
inline ::ywrapper::StringValue* AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_State::release_secret_key() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Tacacs.State.secret_key)
  
  ::ywrapper::StringValue* temp = secret_key_;
  secret_key_ = NULL;
  return temp;
}
inline ::ywrapper::StringValue* AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_State::mutable_secret_key() {
  
  if (secret_key_ == NULL) {
    secret_key_ = new ::ywrapper::StringValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Tacacs.State.secret_key)
  return secret_key_;
}
inline void AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_State::set_allocated_secret_key(::ywrapper::StringValue* secret_key) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(secret_key_);
  }
  if (secret_key) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      secret_key = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, secret_key, submessage_arena);
    }
    
  } else {
    
  }
  secret_key_ = secret_key;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Tacacs.State.secret_key)
}

// .ywrapper.StringValue source_address = 265865697 [(.yext.schemapath) = "/access-points/access-point/system/aaa/server-groups/server-group/servers/server/tacacs/state/source-address"];
inline bool AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_State::has_source_address() const {
  return this != internal_default_instance() && source_address_ != NULL;
}
inline const ::ywrapper::StringValue& AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_State::source_address() const {
  const ::ywrapper::StringValue* p = source_address_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Tacacs.State.source_address)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::StringValue*>(
      &::ywrapper::_StringValue_default_instance_);
}
inline ::ywrapper::StringValue* AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_State::release_source_address() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Tacacs.State.source_address)
  
  ::ywrapper::StringValue* temp = source_address_;
  source_address_ = NULL;
  return temp;
}
inline ::ywrapper::StringValue* AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_State::mutable_source_address() {
  
  if (source_address_ == NULL) {
    source_address_ = new ::ywrapper::StringValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Tacacs.State.source_address)
  return source_address_;
}
inline void AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_State::set_allocated_source_address(::ywrapper::StringValue* source_address) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(source_address_);
  }
  if (source_address) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      source_address = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, source_address, submessage_arena);
    }
    
  } else {
    
  }
  source_address_ = source_address;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Tacacs.State.source_address)
}

// -------------------------------------------------------------------

// AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs

// .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Tacacs.Config config = 8144329 [(.yext.schemapath) = "/access-points/access-point/system/aaa/server-groups/server-group/servers/server/tacacs/config"];
inline bool AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs::has_config() const {
  return this != internal_default_instance() && config_ != NULL;
}
inline void AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs::clear_config() {
  if (GetArenaNoVirtual() == NULL && config_ != NULL) {
    delete config_;
  }
  config_ = NULL;
}
inline const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_Config& AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs::config() const {
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_Config* p = config_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Tacacs.config)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_Config*>(
      &::openconfig::openconfig_access_points::_AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_Config_default_instance_);
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_Config* AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs::release_config() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Tacacs.config)
  
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_Config* temp = config_;
  config_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_Config* AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs::mutable_config() {
  
  if (config_ == NULL) {
    config_ = new ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_Config;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Tacacs.config)
  return config_;
}
inline void AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs::set_allocated_config(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_Config* config) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete config_;
  }
  if (config) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      config = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, config, submessage_arena);
    }
    
  } else {
    
  }
  config_ = config;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Tacacs.config)
}

// .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Tacacs.State state = 400839454 [(.yext.schemapath) = "/access-points/access-point/system/aaa/server-groups/server-group/servers/server/tacacs/state"];
inline bool AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs::has_state() const {
  return this != internal_default_instance() && state_ != NULL;
}
inline void AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs::clear_state() {
  if (GetArenaNoVirtual() == NULL && state_ != NULL) {
    delete state_;
  }
  state_ = NULL;
}
inline const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_State& AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs::state() const {
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_State* p = state_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Tacacs.state)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_State*>(
      &::openconfig::openconfig_access_points::_AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_State_default_instance_);
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_State* AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs::release_state() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Tacacs.state)
  
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_State* temp = state_;
  state_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_State* AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs::mutable_state() {
  
  if (state_ == NULL) {
    state_ = new ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_State;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Tacacs.state)
  return state_;
}
inline void AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs::set_allocated_state(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_State* state) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete state_;
  }
  if (state) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      state = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, state, submessage_arena);
    }
    
  } else {
    
  }
  state_ = state;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Tacacs.state)
}

// -------------------------------------------------------------------

// AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server

// .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Config config = 407053633 [(.yext.schemapath) = "/access-points/access-point/system/aaa/server-groups/server-group/servers/server/config"];
inline bool AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server::has_config() const {
  return this != internal_default_instance() && config_ != NULL;
}
inline void AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server::clear_config() {
  if (GetArenaNoVirtual() == NULL && config_ != NULL) {
    delete config_;
  }
  config_ = NULL;
}
inline const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Config& AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server::config() const {
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Config* p = config_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Servers.Server.config)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Config*>(
      &::openconfig::openconfig_access_points::_AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Config_default_instance_);
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Config* AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server::release_config() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Servers.Server.config)
  
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Config* temp = config_;
  config_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Config* AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server::mutable_config() {
  
  if (config_ == NULL) {
    config_ = new ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Config;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Servers.Server.config)
  return config_;
}
inline void AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server::set_allocated_config(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Config* config) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete config_;
  }
  if (config) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      config = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, config, submessage_arena);
    }
    
  } else {
    
  }
  config_ = config;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Servers.Server.config)
}

// .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Radius radius = 330901077 [(.yext.schemapath) = "/access-points/access-point/system/aaa/server-groups/server-group/servers/server/radius"];
inline bool AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server::has_radius() const {
  return this != internal_default_instance() && radius_ != NULL;
}
inline void AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server::clear_radius() {
  if (GetArenaNoVirtual() == NULL && radius_ != NULL) {
    delete radius_;
  }
  radius_ = NULL;
}
inline const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius& AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server::radius() const {
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius* p = radius_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Servers.Server.radius)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius*>(
      &::openconfig::openconfig_access_points::_AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_default_instance_);
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius* AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server::release_radius() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Servers.Server.radius)
  
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius* temp = radius_;
  radius_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius* AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server::mutable_radius() {
  
  if (radius_ == NULL) {
    radius_ = new ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Servers.Server.radius)
  return radius_;
}
inline void AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server::set_allocated_radius(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius* radius) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete radius_;
  }
  if (radius) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      radius = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, radius, submessage_arena);
    }
    
  } else {
    
  }
  radius_ = radius;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Servers.Server.radius)
}

// .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Servers.Server.State state = 250100150 [(.yext.schemapath) = "/access-points/access-point/system/aaa/server-groups/server-group/servers/server/state"];
inline bool AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server::has_state() const {
  return this != internal_default_instance() && state_ != NULL;
}
inline void AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server::clear_state() {
  if (GetArenaNoVirtual() == NULL && state_ != NULL) {
    delete state_;
  }
  state_ = NULL;
}
inline const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_State& AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server::state() const {
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_State* p = state_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Servers.Server.state)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_State*>(
      &::openconfig::openconfig_access_points::_AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_State_default_instance_);
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_State* AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server::release_state() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Servers.Server.state)
  
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_State* temp = state_;
  state_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_State* AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server::mutable_state() {
  
  if (state_ == NULL) {
    state_ = new ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_State;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Servers.Server.state)
  return state_;
}
inline void AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server::set_allocated_state(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_State* state) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete state_;
  }
  if (state) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      state = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, state, submessage_arena);
    }
    
  } else {
    
  }
  state_ = state;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Servers.Server.state)
}

// .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Tacacs tacacs = 335333156 [(.yext.schemapath) = "/access-points/access-point/system/aaa/server-groups/server-group/servers/server/tacacs"];
inline bool AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server::has_tacacs() const {
  return this != internal_default_instance() && tacacs_ != NULL;
}
inline void AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server::clear_tacacs() {
  if (GetArenaNoVirtual() == NULL && tacacs_ != NULL) {
    delete tacacs_;
  }
  tacacs_ = NULL;
}
inline const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs& AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server::tacacs() const {
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs* p = tacacs_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Servers.Server.tacacs)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs*>(
      &::openconfig::openconfig_access_points::_AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_default_instance_);
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs* AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server::release_tacacs() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Servers.Server.tacacs)
  
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs* temp = tacacs_;
  tacacs_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs* AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server::mutable_tacacs() {
  
  if (tacacs_ == NULL) {
    tacacs_ = new ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Servers.Server.tacacs)
  return tacacs_;
}
inline void AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server::set_allocated_tacacs(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs* tacacs) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete tacacs_;
  }
  if (tacacs) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      tacacs = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, tacacs, submessage_arena);
    }
    
  } else {
    
  }
  tacacs_ = tacacs;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Servers.Server.tacacs)
}

// -------------------------------------------------------------------

// AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_ServerKey

// string address = 1 [(.yext.schemapath) = "/access-points/access-point/system/aaa/server-groups/server-group/servers/server/address"];
inline void AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_ServerKey::clear_address() {
  address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_ServerKey::address() const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Servers.ServerKey.address)
  return address_.GetNoArena();
}
inline void AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_ServerKey::set_address(const ::std::string& value) {
  
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Servers.ServerKey.address)
}
#if LANG_CXX11
inline void AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_ServerKey::set_address(::std::string&& value) {
  
  address_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Servers.ServerKey.address)
}
#endif
inline void AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_ServerKey::set_address(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Servers.ServerKey.address)
}
inline void AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_ServerKey::set_address(const char* value, size_t size) {
  
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Servers.ServerKey.address)
}
inline ::std::string* AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_ServerKey::mutable_address() {
  
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Servers.ServerKey.address)
  return address_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_ServerKey::release_address() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Servers.ServerKey.address)
  
  return address_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_ServerKey::set_allocated_address(::std::string* address) {
  if (address != NULL) {
    
  } else {
    
  }
  address_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), address);
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Servers.ServerKey.address)
}

// .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Servers.Server server = 2;
inline bool AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_ServerKey::has_server() const {
  return this != internal_default_instance() && server_ != NULL;
}
inline void AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_ServerKey::clear_server() {
  if (GetArenaNoVirtual() == NULL && server_ != NULL) {
    delete server_;
  }
  server_ = NULL;
}
inline const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server& AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_ServerKey::server() const {
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server* p = server_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Servers.ServerKey.server)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server*>(
      &::openconfig::openconfig_access_points::_AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server_default_instance_);
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server* AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_ServerKey::release_server() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Servers.ServerKey.server)
  
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server* temp = server_;
  server_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server* AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_ServerKey::mutable_server() {
  
  if (server_ == NULL) {
    server_ = new ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Servers.ServerKey.server)
  return server_;
}
inline void AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_ServerKey::set_allocated_server(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_Server* server) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete server_;
  }
  if (server) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      server = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, server, submessage_arena);
    }
    
  } else {
    
  }
  server_ = server;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Servers.ServerKey.server)
}

// -------------------------------------------------------------------

// AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers

// repeated .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Servers.ServerKey server = 285625548 [(.yext.schemapath) = "/access-points/access-point/system/aaa/server-groups/server-group/servers/server"];
inline int AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers::server_size() const {
  return server_.size();
}
inline void AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers::clear_server() {
  server_.Clear();
}
inline const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_ServerKey& AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers::server(int index) const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Servers.server)
  return server_.Get(index);
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_ServerKey* AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers::mutable_server(int index) {
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Servers.server)
  return server_.Mutable(index);
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_ServerKey* AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers::add_server() {
  // @@protoc_insertion_point(field_add:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Servers.server)
  return server_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_ServerKey >*
AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers::mutable_server() {
  // @@protoc_insertion_point(field_mutable_list:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Servers.server)
  return &server_;
}
inline const ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_ServerKey >&
AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers::server() const {
  // @@protoc_insertion_point(field_list:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Servers.server)
  return server_;
}

// -------------------------------------------------------------------

// AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_State

// .ywrapper.StringValue name = 383233521 [(.yext.schemapath) = "/access-points/access-point/system/aaa/server-groups/server-group/state/name"];
inline bool AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_State::has_name() const {
  return this != internal_default_instance() && name_ != NULL;
}
inline const ::ywrapper::StringValue& AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_State::name() const {
  const ::ywrapper::StringValue* p = name_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.State.name)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::StringValue*>(
      &::ywrapper::_StringValue_default_instance_);
}
inline ::ywrapper::StringValue* AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_State::release_name() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.State.name)
  
  ::ywrapper::StringValue* temp = name_;
  name_ = NULL;
  return temp;
}
inline ::ywrapper::StringValue* AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_State::mutable_name() {
  
  if (name_ == NULL) {
    name_ = new ::ywrapper::StringValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.State.name)
  return name_;
}
inline void AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_State::set_allocated_name(::ywrapper::StringValue* name) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(name_);
  }
  if (name) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      name = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, name, submessage_arena);
    }
    
  } else {
    
  }
  name_ = name;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.State.name)
}

// .openconfig.enums.OpenconfigAaaTypesAAASERVERTYPE type = 53007000 [(.yext.schemapath) = "/access-points/access-point/system/aaa/server-groups/server-group/state/type"];
inline void AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_State::clear_type() {
  type_ = 0;
}
inline ::openconfig::enums::OpenconfigAaaTypesAAASERVERTYPE AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_State::type() const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.State.type)
  return static_cast< ::openconfig::enums::OpenconfigAaaTypesAAASERVERTYPE >(type_);
}
inline void AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_State::set_type(::openconfig::enums::OpenconfigAaaTypesAAASERVERTYPE value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.State.type)
}

// -------------------------------------------------------------------

// AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup

// .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Config config = 146579996 [(.yext.schemapath) = "/access-points/access-point/system/aaa/server-groups/server-group/config"];
inline bool AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup::has_config() const {
  return this != internal_default_instance() && config_ != NULL;
}
inline void AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup::clear_config() {
  if (GetArenaNoVirtual() == NULL && config_ != NULL) {
    delete config_;
  }
  config_ = NULL;
}
inline const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Config& AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup::config() const {
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Config* p = config_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.config)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Config*>(
      &::openconfig::openconfig_access_points::_AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Config_default_instance_);
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Config* AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup::release_config() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.config)
  
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Config* temp = config_;
  config_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Config* AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup::mutable_config() {
  
  if (config_ == NULL) {
    config_ = new ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Config;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.config)
  return config_;
}
inline void AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup::set_allocated_config(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Config* config) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete config_;
  }
  if (config) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      config = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, config, submessage_arena);
    }
    
  } else {
    
  }
  config_ = config;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.config)
}

// .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.Servers servers = 38152126 [(.yext.schemapath) = "/access-points/access-point/system/aaa/server-groups/server-group/servers"];
inline bool AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup::has_servers() const {
  return this != internal_default_instance() && servers_ != NULL;
}
inline void AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup::clear_servers() {
  if (GetArenaNoVirtual() == NULL && servers_ != NULL) {
    delete servers_;
  }
  servers_ = NULL;
}
inline const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers& AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup::servers() const {
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers* p = servers_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.servers)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers*>(
      &::openconfig::openconfig_access_points::_AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers_default_instance_);
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers* AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup::release_servers() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.servers)
  
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers* temp = servers_;
  servers_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers* AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup::mutable_servers() {
  
  if (servers_ == NULL) {
    servers_ = new ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.servers)
  return servers_;
}
inline void AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup::set_allocated_servers(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_Servers* servers) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete servers_;
  }
  if (servers) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      servers = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, servers, submessage_arena);
    }
    
  } else {
    
  }
  servers_ = servers;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.servers)
}

// .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.State state = 31775125 [(.yext.schemapath) = "/access-points/access-point/system/aaa/server-groups/server-group/state"];
inline bool AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup::has_state() const {
  return this != internal_default_instance() && state_ != NULL;
}
inline void AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup::clear_state() {
  if (GetArenaNoVirtual() == NULL && state_ != NULL) {
    delete state_;
  }
  state_ = NULL;
}
inline const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_State& AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup::state() const {
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_State* p = state_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.state)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_State*>(
      &::openconfig::openconfig_access_points::_AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_State_default_instance_);
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_State* AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup::release_state() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.state)
  
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_State* temp = state_;
  state_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_State* AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup::mutable_state() {
  
  if (state_ == NULL) {
    state_ = new ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_State;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.state)
  return state_;
}
inline void AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup::set_allocated_state(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_State* state) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete state_;
  }
  if (state) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      state = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, state, submessage_arena);
    }
    
  } else {
    
  }
  state_ = state;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup.state)
}

// -------------------------------------------------------------------

// AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroupKey

// string name = 1 [(.yext.schemapath) = "/access-points/access-point/system/aaa/server-groups/server-group/name"];
inline void AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroupKey::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroupKey::name() const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroupKey.name)
  return name_.GetNoArena();
}
inline void AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroupKey::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroupKey.name)
}
#if LANG_CXX11
inline void AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroupKey::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroupKey.name)
}
#endif
inline void AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroupKey::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroupKey.name)
}
inline void AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroupKey::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroupKey.name)
}
inline ::std::string* AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroupKey::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroupKey.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroupKey::release_name() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroupKey.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroupKey::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroupKey.name)
}

// .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroup server_group = 2;
inline bool AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroupKey::has_server_group() const {
  return this != internal_default_instance() && server_group_ != NULL;
}
inline void AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroupKey::clear_server_group() {
  if (GetArenaNoVirtual() == NULL && server_group_ != NULL) {
    delete server_group_;
  }
  server_group_ = NULL;
}
inline const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup& AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroupKey::server_group() const {
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup* p = server_group_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroupKey.server_group)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup*>(
      &::openconfig::openconfig_access_points::_AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup_default_instance_);
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup* AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroupKey::release_server_group() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroupKey.server_group)
  
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup* temp = server_group_;
  server_group_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup* AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroupKey::mutable_server_group() {
  
  if (server_group_ == NULL) {
    server_group_ = new ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroupKey.server_group)
  return server_group_;
}
inline void AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroupKey::set_allocated_server_group(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroup* server_group) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete server_group_;
  }
  if (server_group) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      server_group = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, server_group, submessage_arena);
    }
    
  } else {
    
  }
  server_group_ = server_group;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroupKey.server_group)
}

// -------------------------------------------------------------------

// AccessPoints_AccessPoint_System_Aaa_ServerGroups

// repeated .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.ServerGroupKey server_group = 154202187 [(.yext.schemapath) = "/access-points/access-point/system/aaa/server-groups/server-group"];
inline int AccessPoints_AccessPoint_System_Aaa_ServerGroups::server_group_size() const {
  return server_group_.size();
}
inline void AccessPoints_AccessPoint_System_Aaa_ServerGroups::clear_server_group() {
  server_group_.Clear();
}
inline const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroupKey& AccessPoints_AccessPoint_System_Aaa_ServerGroups::server_group(int index) const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.server_group)
  return server_group_.Get(index);
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroupKey* AccessPoints_AccessPoint_System_Aaa_ServerGroups::mutable_server_group(int index) {
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.server_group)
  return server_group_.Mutable(index);
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroupKey* AccessPoints_AccessPoint_System_Aaa_ServerGroups::add_server_group() {
  // @@protoc_insertion_point(field_add:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.server_group)
  return server_group_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroupKey >*
AccessPoints_AccessPoint_System_Aaa_ServerGroups::mutable_server_group() {
  // @@protoc_insertion_point(field_mutable_list:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.server_group)
  return &server_group_;
}
inline const ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_ServerGroups_ServerGroupKey >&
AccessPoints_AccessPoint_System_Aaa_ServerGroups::server_group() const {
  // @@protoc_insertion_point(field_list:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups.server_group)
  return server_group_;
}

// -------------------------------------------------------------------

// AccessPoints_AccessPoint_System_Aaa_State

// -------------------------------------------------------------------

// AccessPoints_AccessPoint_System_Aaa

// .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Accounting accounting = 395184962 [(.yext.schemapath) = "/access-points/access-point/system/aaa/accounting"];
inline bool AccessPoints_AccessPoint_System_Aaa::has_accounting() const {
  return this != internal_default_instance() && accounting_ != NULL;
}
inline void AccessPoints_AccessPoint_System_Aaa::clear_accounting() {
  if (GetArenaNoVirtual() == NULL && accounting_ != NULL) {
    delete accounting_;
  }
  accounting_ = NULL;
}
inline const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Accounting& AccessPoints_AccessPoint_System_Aaa::accounting() const {
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Accounting* p = accounting_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.accounting)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Accounting*>(
      &::openconfig::openconfig_access_points::_AccessPoints_AccessPoint_System_Aaa_Accounting_default_instance_);
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Accounting* AccessPoints_AccessPoint_System_Aaa::release_accounting() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.accounting)
  
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Accounting* temp = accounting_;
  accounting_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Accounting* AccessPoints_AccessPoint_System_Aaa::mutable_accounting() {
  
  if (accounting_ == NULL) {
    accounting_ = new ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Accounting;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.accounting)
  return accounting_;
}
inline void AccessPoints_AccessPoint_System_Aaa::set_allocated_accounting(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Accounting* accounting) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete accounting_;
  }
  if (accounting) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      accounting = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, accounting, submessage_arena);
    }
    
  } else {
    
  }
  accounting_ = accounting;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.accounting)
}

// .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authentication authentication = 207938209 [(.yext.schemapath) = "/access-points/access-point/system/aaa/authentication"];
inline bool AccessPoints_AccessPoint_System_Aaa::has_authentication() const {
  return this != internal_default_instance() && authentication_ != NULL;
}
inline void AccessPoints_AccessPoint_System_Aaa::clear_authentication() {
  if (GetArenaNoVirtual() == NULL && authentication_ != NULL) {
    delete authentication_;
  }
  authentication_ = NULL;
}
inline const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authentication& AccessPoints_AccessPoint_System_Aaa::authentication() const {
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authentication* p = authentication_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.authentication)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authentication*>(
      &::openconfig::openconfig_access_points::_AccessPoints_AccessPoint_System_Aaa_Authentication_default_instance_);
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authentication* AccessPoints_AccessPoint_System_Aaa::release_authentication() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.authentication)
  
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authentication* temp = authentication_;
  authentication_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authentication* AccessPoints_AccessPoint_System_Aaa::mutable_authentication() {
  
  if (authentication_ == NULL) {
    authentication_ = new ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authentication;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.authentication)
  return authentication_;
}
inline void AccessPoints_AccessPoint_System_Aaa::set_allocated_authentication(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authentication* authentication) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete authentication_;
  }
  if (authentication) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      authentication = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, authentication, submessage_arena);
    }
    
  } else {
    
  }
  authentication_ = authentication;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.authentication)
}

// .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Authorization authorization = 324795208 [(.yext.schemapath) = "/access-points/access-point/system/aaa/authorization"];
inline bool AccessPoints_AccessPoint_System_Aaa::has_authorization() const {
  return this != internal_default_instance() && authorization_ != NULL;
}
inline void AccessPoints_AccessPoint_System_Aaa::clear_authorization() {
  if (GetArenaNoVirtual() == NULL && authorization_ != NULL) {
    delete authorization_;
  }
  authorization_ = NULL;
}
inline const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authorization& AccessPoints_AccessPoint_System_Aaa::authorization() const {
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authorization* p = authorization_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.authorization)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authorization*>(
      &::openconfig::openconfig_access_points::_AccessPoints_AccessPoint_System_Aaa_Authorization_default_instance_);
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authorization* AccessPoints_AccessPoint_System_Aaa::release_authorization() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.authorization)
  
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authorization* temp = authorization_;
  authorization_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authorization* AccessPoints_AccessPoint_System_Aaa::mutable_authorization() {
  
  if (authorization_ == NULL) {
    authorization_ = new ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authorization;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.authorization)
  return authorization_;
}
inline void AccessPoints_AccessPoint_System_Aaa::set_allocated_authorization(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Authorization* authorization) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete authorization_;
  }
  if (authorization) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      authorization = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, authorization, submessage_arena);
    }
    
  } else {
    
  }
  authorization_ = authorization;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.authorization)
}

// .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.Config config = 93673007 [(.yext.schemapath) = "/access-points/access-point/system/aaa/config"];
inline bool AccessPoints_AccessPoint_System_Aaa::has_config() const {
  return this != internal_default_instance() && config_ != NULL;
}
inline void AccessPoints_AccessPoint_System_Aaa::clear_config() {
  if (GetArenaNoVirtual() == NULL && config_ != NULL) {
    delete config_;
  }
  config_ = NULL;
}
inline const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Config& AccessPoints_AccessPoint_System_Aaa::config() const {
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Config* p = config_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.config)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Config*>(
      &::openconfig::openconfig_access_points::_AccessPoints_AccessPoint_System_Aaa_Config_default_instance_);
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Config* AccessPoints_AccessPoint_System_Aaa::release_config() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.config)
  
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Config* temp = config_;
  config_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Config* AccessPoints_AccessPoint_System_Aaa::mutable_config() {
  
  if (config_ == NULL) {
    config_ = new ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Config;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.config)
  return config_;
}
inline void AccessPoints_AccessPoint_System_Aaa::set_allocated_config(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Config* config) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete config_;
  }
  if (config) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      config = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, config, submessage_arena);
    }
    
  } else {
    
  }
  config_ = config;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.config)
}

// .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.ServerGroups server_groups = 493042737 [(.yext.schemapath) = "/access-points/access-point/system/aaa/server-groups"];
inline bool AccessPoints_AccessPoint_System_Aaa::has_server_groups() const {
  return this != internal_default_instance() && server_groups_ != NULL;
}
inline void AccessPoints_AccessPoint_System_Aaa::clear_server_groups() {
  if (GetArenaNoVirtual() == NULL && server_groups_ != NULL) {
    delete server_groups_;
  }
  server_groups_ = NULL;
}
inline const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_ServerGroups& AccessPoints_AccessPoint_System_Aaa::server_groups() const {
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_ServerGroups* p = server_groups_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.server_groups)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_ServerGroups*>(
      &::openconfig::openconfig_access_points::_AccessPoints_AccessPoint_System_Aaa_ServerGroups_default_instance_);
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_ServerGroups* AccessPoints_AccessPoint_System_Aaa::release_server_groups() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.server_groups)
  
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_ServerGroups* temp = server_groups_;
  server_groups_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_ServerGroups* AccessPoints_AccessPoint_System_Aaa::mutable_server_groups() {
  
  if (server_groups_ == NULL) {
    server_groups_ = new ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_ServerGroups;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.server_groups)
  return server_groups_;
}
inline void AccessPoints_AccessPoint_System_Aaa::set_allocated_server_groups(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_ServerGroups* server_groups) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete server_groups_;
  }
  if (server_groups) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      server_groups = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, server_groups, submessage_arena);
    }
    
  } else {
    
  }
  server_groups_ = server_groups;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.server_groups)
}

// .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.State state = 393642400 [(.yext.schemapath) = "/access-points/access-point/system/aaa/state"];
inline bool AccessPoints_AccessPoint_System_Aaa::has_state() const {
  return this != internal_default_instance() && state_ != NULL;
}
inline void AccessPoints_AccessPoint_System_Aaa::clear_state() {
  if (GetArenaNoVirtual() == NULL && state_ != NULL) {
    delete state_;
  }
  state_ = NULL;
}
inline const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_State& AccessPoints_AccessPoint_System_Aaa::state() const {
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_State* p = state_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.state)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_State*>(
      &::openconfig::openconfig_access_points::_AccessPoints_AccessPoint_System_Aaa_State_default_instance_);
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_State* AccessPoints_AccessPoint_System_Aaa::release_state() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.state)
  
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_State* temp = state_;
  state_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_State* AccessPoints_AccessPoint_System_Aaa::mutable_state() {
  
  if (state_ == NULL) {
    state_ = new ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_State;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.state)
  return state_;
}
inline void AccessPoints_AccessPoint_System_Aaa::set_allocated_state(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_State* state) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete state_;
  }
  if (state) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      state = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, state, submessage_arena);
    }
    
  } else {
    
  }
  state_ = state;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa.state)
}

// -------------------------------------------------------------------

// AccessPoints_AccessPoint_System_Alarms_Alarm_Config

// -------------------------------------------------------------------

// AccessPoints_AccessPoint_System_Alarms_Alarm_State

// .ywrapper.StringValue id = 119272615 [(.yext.schemapath) = "/access-points/access-point/system/alarms/alarm/state/id"];
inline bool AccessPoints_AccessPoint_System_Alarms_Alarm_State::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::ywrapper::StringValue& AccessPoints_AccessPoint_System_Alarms_Alarm_State::id() const {
  const ::ywrapper::StringValue* p = id_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Alarms.Alarm.State.id)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::StringValue*>(
      &::ywrapper::_StringValue_default_instance_);
}
inline ::ywrapper::StringValue* AccessPoints_AccessPoint_System_Alarms_Alarm_State::release_id() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Alarms.Alarm.State.id)
  
  ::ywrapper::StringValue* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::ywrapper::StringValue* AccessPoints_AccessPoint_System_Alarms_Alarm_State::mutable_id() {
  
  if (id_ == NULL) {
    id_ = new ::ywrapper::StringValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Alarms.Alarm.State.id)
  return id_;
}
inline void AccessPoints_AccessPoint_System_Alarms_Alarm_State::set_allocated_id(::ywrapper::StringValue* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Alarms.Alarm.State.id)
}

// .ywrapper.StringValue resource = 301853076 [(.yext.schemapath) = "/access-points/access-point/system/alarms/alarm/state/resource"];
inline bool AccessPoints_AccessPoint_System_Alarms_Alarm_State::has_resource() const {
  return this != internal_default_instance() && resource_ != NULL;
}
inline const ::ywrapper::StringValue& AccessPoints_AccessPoint_System_Alarms_Alarm_State::resource() const {
  const ::ywrapper::StringValue* p = resource_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Alarms.Alarm.State.resource)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::StringValue*>(
      &::ywrapper::_StringValue_default_instance_);
}
inline ::ywrapper::StringValue* AccessPoints_AccessPoint_System_Alarms_Alarm_State::release_resource() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Alarms.Alarm.State.resource)
  
  ::ywrapper::StringValue* temp = resource_;
  resource_ = NULL;
  return temp;
}
inline ::ywrapper::StringValue* AccessPoints_AccessPoint_System_Alarms_Alarm_State::mutable_resource() {
  
  if (resource_ == NULL) {
    resource_ = new ::ywrapper::StringValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Alarms.Alarm.State.resource)
  return resource_;
}
inline void AccessPoints_AccessPoint_System_Alarms_Alarm_State::set_allocated_resource(::ywrapper::StringValue* resource) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(resource_);
  }
  if (resource) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      resource = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, resource, submessage_arena);
    }
    
  } else {
    
  }
  resource_ = resource;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Alarms.Alarm.State.resource)
}

// .openconfig.enums.OpenconfigAlarmTypesOPENCONFIGALARMSEVERITY severity = 118081445 [(.yext.schemapath) = "/access-points/access-point/system/alarms/alarm/state/severity"];
inline void AccessPoints_AccessPoint_System_Alarms_Alarm_State::clear_severity() {
  severity_ = 0;
}
inline ::openconfig::enums::OpenconfigAlarmTypesOPENCONFIGALARMSEVERITY AccessPoints_AccessPoint_System_Alarms_Alarm_State::severity() const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Alarms.Alarm.State.severity)
  return static_cast< ::openconfig::enums::OpenconfigAlarmTypesOPENCONFIGALARMSEVERITY >(severity_);
}
inline void AccessPoints_AccessPoint_System_Alarms_Alarm_State::set_severity(::openconfig::enums::OpenconfigAlarmTypesOPENCONFIGALARMSEVERITY value) {
  
  severity_ = value;
  // @@protoc_insertion_point(field_set:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Alarms.Alarm.State.severity)
}

// .ywrapper.StringValue text = 53216517 [(.yext.schemapath) = "/access-points/access-point/system/alarms/alarm/state/text"];
inline bool AccessPoints_AccessPoint_System_Alarms_Alarm_State::has_text() const {
  return this != internal_default_instance() && text_ != NULL;
}
inline const ::ywrapper::StringValue& AccessPoints_AccessPoint_System_Alarms_Alarm_State::text() const {
  const ::ywrapper::StringValue* p = text_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Alarms.Alarm.State.text)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::StringValue*>(
      &::ywrapper::_StringValue_default_instance_);
}
inline ::ywrapper::StringValue* AccessPoints_AccessPoint_System_Alarms_Alarm_State::release_text() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Alarms.Alarm.State.text)
  
  ::ywrapper::StringValue* temp = text_;
  text_ = NULL;
  return temp;
}
inline ::ywrapper::StringValue* AccessPoints_AccessPoint_System_Alarms_Alarm_State::mutable_text() {
  
  if (text_ == NULL) {
    text_ = new ::ywrapper::StringValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Alarms.Alarm.State.text)
  return text_;
}
inline void AccessPoints_AccessPoint_System_Alarms_Alarm_State::set_allocated_text(::ywrapper::StringValue* text) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(text_);
  }
  if (text) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      text = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, text, submessage_arena);
    }
    
  } else {
    
  }
  text_ = text;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Alarms.Alarm.State.text)
}

// .ywrapper.UintValue time_created = 419949028 [(.yext.schemapath) = "/access-points/access-point/system/alarms/alarm/state/time-created"];
inline bool AccessPoints_AccessPoint_System_Alarms_Alarm_State::has_time_created() const {
  return this != internal_default_instance() && time_created_ != NULL;
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_System_Alarms_Alarm_State::time_created() const {
  const ::ywrapper::UintValue* p = time_created_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Alarms.Alarm.State.time_created)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_System_Alarms_Alarm_State::release_time_created() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Alarms.Alarm.State.time_created)
  
  ::ywrapper::UintValue* temp = time_created_;
  time_created_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_System_Alarms_Alarm_State::mutable_time_created() {
  
  if (time_created_ == NULL) {
    time_created_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Alarms.Alarm.State.time_created)
  return time_created_;
}
inline void AccessPoints_AccessPoint_System_Alarms_Alarm_State::set_allocated_time_created(::ywrapper::UintValue* time_created) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(time_created_);
  }
  if (time_created) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      time_created = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, time_created, submessage_arena);
    }
    
  } else {
    
  }
  time_created_ = time_created;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Alarms.Alarm.State.time_created)
}

// .openconfig.enums.OpenconfigAlarmTypesOPENCONFIGALARMTYPEID type_id_openconfigalarmtypesopenconfigalarmtypeid = 237876297;
inline bool AccessPoints_AccessPoint_System_Alarms_Alarm_State::has_type_id_openconfigalarmtypesopenconfigalarmtypeid() const {
  return type_id_case() == kTypeIdOpenconfigalarmtypesopenconfigalarmtypeid;
}
inline void AccessPoints_AccessPoint_System_Alarms_Alarm_State::set_has_type_id_openconfigalarmtypesopenconfigalarmtypeid() {
  _oneof_case_[0] = kTypeIdOpenconfigalarmtypesopenconfigalarmtypeid;
}
inline void AccessPoints_AccessPoint_System_Alarms_Alarm_State::clear_type_id_openconfigalarmtypesopenconfigalarmtypeid() {
  if (has_type_id_openconfigalarmtypesopenconfigalarmtypeid()) {
    type_id_.type_id_openconfigalarmtypesopenconfigalarmtypeid_ = 0;
    clear_has_type_id();
  }
}
inline ::openconfig::enums::OpenconfigAlarmTypesOPENCONFIGALARMTYPEID AccessPoints_AccessPoint_System_Alarms_Alarm_State::type_id_openconfigalarmtypesopenconfigalarmtypeid() const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Alarms.Alarm.State.type_id_openconfigalarmtypesopenconfigalarmtypeid)
  if (has_type_id_openconfigalarmtypesopenconfigalarmtypeid()) {
    return static_cast< ::openconfig::enums::OpenconfigAlarmTypesOPENCONFIGALARMTYPEID >(type_id_.type_id_openconfigalarmtypesopenconfigalarmtypeid_);
  }
  return static_cast< ::openconfig::enums::OpenconfigAlarmTypesOPENCONFIGALARMTYPEID >(0);
}
inline void AccessPoints_AccessPoint_System_Alarms_Alarm_State::set_type_id_openconfigalarmtypesopenconfigalarmtypeid(::openconfig::enums::OpenconfigAlarmTypesOPENCONFIGALARMTYPEID value) {
  if (!has_type_id_openconfigalarmtypesopenconfigalarmtypeid()) {
    clear_type_id();
    set_has_type_id_openconfigalarmtypesopenconfigalarmtypeid();
  }
  type_id_.type_id_openconfigalarmtypesopenconfigalarmtypeid_ = value;
  // @@protoc_insertion_point(field_set:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Alarms.Alarm.State.type_id_openconfigalarmtypesopenconfigalarmtypeid)
}

// string type_id_string = 77451230;
inline bool AccessPoints_AccessPoint_System_Alarms_Alarm_State::has_type_id_string() const {
  return type_id_case() == kTypeIdString;
}
inline void AccessPoints_AccessPoint_System_Alarms_Alarm_State::set_has_type_id_string() {
  _oneof_case_[0] = kTypeIdString;
}
inline void AccessPoints_AccessPoint_System_Alarms_Alarm_State::clear_type_id_string() {
  if (has_type_id_string()) {
    type_id_.type_id_string_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_type_id();
  }
}
inline const ::std::string& AccessPoints_AccessPoint_System_Alarms_Alarm_State::type_id_string() const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Alarms.Alarm.State.type_id_string)
  if (has_type_id_string()) {
    return type_id_.type_id_string_.GetNoArena();
  }
  return *&::google::protobuf::internal::GetEmptyStringAlreadyInited();
}
inline void AccessPoints_AccessPoint_System_Alarms_Alarm_State::set_type_id_string(const ::std::string& value) {
  // @@protoc_insertion_point(field_set:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Alarms.Alarm.State.type_id_string)
  if (!has_type_id_string()) {
    clear_type_id();
    set_has_type_id_string();
    type_id_.type_id_string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  type_id_.type_id_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Alarms.Alarm.State.type_id_string)
}
#if LANG_CXX11
inline void AccessPoints_AccessPoint_System_Alarms_Alarm_State::set_type_id_string(::std::string&& value) {
  // @@protoc_insertion_point(field_set:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Alarms.Alarm.State.type_id_string)
  if (!has_type_id_string()) {
    clear_type_id();
    set_has_type_id_string();
    type_id_.type_id_string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  type_id_.type_id_string_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Alarms.Alarm.State.type_id_string)
}
#endif
inline void AccessPoints_AccessPoint_System_Alarms_Alarm_State::set_type_id_string(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  if (!has_type_id_string()) {
    clear_type_id();
    set_has_type_id_string();
    type_id_.type_id_string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  type_id_.type_id_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value));
  // @@protoc_insertion_point(field_set_char:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Alarms.Alarm.State.type_id_string)
}
inline void AccessPoints_AccessPoint_System_Alarms_Alarm_State::set_type_id_string(const char* value, size_t size) {
  if (!has_type_id_string()) {
    clear_type_id();
    set_has_type_id_string();
    type_id_.type_id_string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  type_id_.type_id_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Alarms.Alarm.State.type_id_string)
}
inline ::std::string* AccessPoints_AccessPoint_System_Alarms_Alarm_State::mutable_type_id_string() {
  if (!has_type_id_string()) {
    clear_type_id();
    set_has_type_id_string();
    type_id_.type_id_string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Alarms.Alarm.State.type_id_string)
  return type_id_.type_id_string_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AccessPoints_AccessPoint_System_Alarms_Alarm_State::release_type_id_string() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Alarms.Alarm.State.type_id_string)
  if (has_type_id_string()) {
    clear_has_type_id();
    return type_id_.type_id_string_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  } else {
    return NULL;
  }
}
inline void AccessPoints_AccessPoint_System_Alarms_Alarm_State::set_allocated_type_id_string(::std::string* type_id_string) {
  if (!has_type_id_string()) {
    type_id_.type_id_string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  clear_type_id();
  if (type_id_string != NULL) {
    set_has_type_id_string();
    type_id_.type_id_string_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        type_id_string);
  }
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Alarms.Alarm.State.type_id_string)
}

inline bool AccessPoints_AccessPoint_System_Alarms_Alarm_State::has_type_id() const {
  return type_id_case() != TYPE_ID_NOT_SET;
}
inline void AccessPoints_AccessPoint_System_Alarms_Alarm_State::clear_has_type_id() {
  _oneof_case_[0] = TYPE_ID_NOT_SET;
}
inline AccessPoints_AccessPoint_System_Alarms_Alarm_State::TypeIdCase AccessPoints_AccessPoint_System_Alarms_Alarm_State::type_id_case() const {
  return AccessPoints_AccessPoint_System_Alarms_Alarm_State::TypeIdCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// AccessPoints_AccessPoint_System_Alarms_Alarm

// .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Alarms.Alarm.Config config = 333970724 [(.yext.schemapath) = "/access-points/access-point/system/alarms/alarm/config"];
inline bool AccessPoints_AccessPoint_System_Alarms_Alarm::has_config() const {
  return this != internal_default_instance() && config_ != NULL;
}
inline void AccessPoints_AccessPoint_System_Alarms_Alarm::clear_config() {
  if (GetArenaNoVirtual() == NULL && config_ != NULL) {
    delete config_;
  }
  config_ = NULL;
}
inline const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Alarms_Alarm_Config& AccessPoints_AccessPoint_System_Alarms_Alarm::config() const {
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Alarms_Alarm_Config* p = config_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Alarms.Alarm.config)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Alarms_Alarm_Config*>(
      &::openconfig::openconfig_access_points::_AccessPoints_AccessPoint_System_Alarms_Alarm_Config_default_instance_);
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Alarms_Alarm_Config* AccessPoints_AccessPoint_System_Alarms_Alarm::release_config() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Alarms.Alarm.config)
  
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Alarms_Alarm_Config* temp = config_;
  config_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Alarms_Alarm_Config* AccessPoints_AccessPoint_System_Alarms_Alarm::mutable_config() {
  
  if (config_ == NULL) {
    config_ = new ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Alarms_Alarm_Config;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Alarms.Alarm.config)
  return config_;
}
inline void AccessPoints_AccessPoint_System_Alarms_Alarm::set_allocated_config(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Alarms_Alarm_Config* config) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete config_;
  }
  if (config) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      config = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, config, submessage_arena);
    }
    
  } else {
    
  }
  config_ = config;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Alarms.Alarm.config)
}

// .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Alarms.Alarm.State state = 208778173 [(.yext.schemapath) = "/access-points/access-point/system/alarms/alarm/state"];
inline bool AccessPoints_AccessPoint_System_Alarms_Alarm::has_state() const {
  return this != internal_default_instance() && state_ != NULL;
}
inline void AccessPoints_AccessPoint_System_Alarms_Alarm::clear_state() {
  if (GetArenaNoVirtual() == NULL && state_ != NULL) {
    delete state_;
  }
  state_ = NULL;
}
inline const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Alarms_Alarm_State& AccessPoints_AccessPoint_System_Alarms_Alarm::state() const {
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Alarms_Alarm_State* p = state_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Alarms.Alarm.state)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Alarms_Alarm_State*>(
      &::openconfig::openconfig_access_points::_AccessPoints_AccessPoint_System_Alarms_Alarm_State_default_instance_);
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Alarms_Alarm_State* AccessPoints_AccessPoint_System_Alarms_Alarm::release_state() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Alarms.Alarm.state)
  
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Alarms_Alarm_State* temp = state_;
  state_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Alarms_Alarm_State* AccessPoints_AccessPoint_System_Alarms_Alarm::mutable_state() {
  
  if (state_ == NULL) {
    state_ = new ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Alarms_Alarm_State;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Alarms.Alarm.state)
  return state_;
}
inline void AccessPoints_AccessPoint_System_Alarms_Alarm::set_allocated_state(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Alarms_Alarm_State* state) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete state_;
  }
  if (state) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      state = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, state, submessage_arena);
    }
    
  } else {
    
  }
  state_ = state;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Alarms.Alarm.state)
}

// -------------------------------------------------------------------

// AccessPoints_AccessPoint_System_Alarms_AlarmKey

// string id = 1 [(.yext.schemapath) = "/access-points/access-point/system/alarms/alarm/id"];
inline void AccessPoints_AccessPoint_System_Alarms_AlarmKey::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AccessPoints_AccessPoint_System_Alarms_AlarmKey::id() const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Alarms.AlarmKey.id)
  return id_.GetNoArena();
}
inline void AccessPoints_AccessPoint_System_Alarms_AlarmKey::set_id(const ::std::string& value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Alarms.AlarmKey.id)
}
#if LANG_CXX11
inline void AccessPoints_AccessPoint_System_Alarms_AlarmKey::set_id(::std::string&& value) {
  
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Alarms.AlarmKey.id)
}
#endif
inline void AccessPoints_AccessPoint_System_Alarms_AlarmKey::set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Alarms.AlarmKey.id)
}
inline void AccessPoints_AccessPoint_System_Alarms_AlarmKey::set_id(const char* value, size_t size) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Alarms.AlarmKey.id)
}
inline ::std::string* AccessPoints_AccessPoint_System_Alarms_AlarmKey::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Alarms.AlarmKey.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AccessPoints_AccessPoint_System_Alarms_AlarmKey::release_id() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Alarms.AlarmKey.id)
  
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AccessPoints_AccessPoint_System_Alarms_AlarmKey::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    
  } else {
    
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Alarms.AlarmKey.id)
}

// .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Alarms.Alarm alarm = 2;
inline bool AccessPoints_AccessPoint_System_Alarms_AlarmKey::has_alarm() const {
  return this != internal_default_instance() && alarm_ != NULL;
}
inline void AccessPoints_AccessPoint_System_Alarms_AlarmKey::clear_alarm() {
  if (GetArenaNoVirtual() == NULL && alarm_ != NULL) {
    delete alarm_;
  }
  alarm_ = NULL;
}
inline const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Alarms_Alarm& AccessPoints_AccessPoint_System_Alarms_AlarmKey::alarm() const {
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Alarms_Alarm* p = alarm_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Alarms.AlarmKey.alarm)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Alarms_Alarm*>(
      &::openconfig::openconfig_access_points::_AccessPoints_AccessPoint_System_Alarms_Alarm_default_instance_);
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Alarms_Alarm* AccessPoints_AccessPoint_System_Alarms_AlarmKey::release_alarm() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Alarms.AlarmKey.alarm)
  
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Alarms_Alarm* temp = alarm_;
  alarm_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Alarms_Alarm* AccessPoints_AccessPoint_System_Alarms_AlarmKey::mutable_alarm() {
  
  if (alarm_ == NULL) {
    alarm_ = new ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Alarms_Alarm;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Alarms.AlarmKey.alarm)
  return alarm_;
}
inline void AccessPoints_AccessPoint_System_Alarms_AlarmKey::set_allocated_alarm(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Alarms_Alarm* alarm) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete alarm_;
  }
  if (alarm) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      alarm = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, alarm, submessage_arena);
    }
    
  } else {
    
  }
  alarm_ = alarm;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Alarms.AlarmKey.alarm)
}

// -------------------------------------------------------------------

// AccessPoints_AccessPoint_System_Alarms

// repeated .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Alarms.AlarmKey alarm = 426633251 [(.yext.schemapath) = "/access-points/access-point/system/alarms/alarm"];
inline int AccessPoints_AccessPoint_System_Alarms::alarm_size() const {
  return alarm_.size();
}
inline void AccessPoints_AccessPoint_System_Alarms::clear_alarm() {
  alarm_.Clear();
}
inline const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Alarms_AlarmKey& AccessPoints_AccessPoint_System_Alarms::alarm(int index) const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Alarms.alarm)
  return alarm_.Get(index);
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Alarms_AlarmKey* AccessPoints_AccessPoint_System_Alarms::mutable_alarm(int index) {
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Alarms.alarm)
  return alarm_.Mutable(index);
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Alarms_AlarmKey* AccessPoints_AccessPoint_System_Alarms::add_alarm() {
  // @@protoc_insertion_point(field_add:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Alarms.alarm)
  return alarm_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Alarms_AlarmKey >*
AccessPoints_AccessPoint_System_Alarms::mutable_alarm() {
  // @@protoc_insertion_point(field_mutable_list:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Alarms.alarm)
  return &alarm_;
}
inline const ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Alarms_AlarmKey >&
AccessPoints_AccessPoint_System_Alarms::alarm() const {
  // @@protoc_insertion_point(field_list:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Alarms.alarm)
  return alarm_;
}

// -------------------------------------------------------------------

// AccessPoints_AccessPoint_System_Clock_Config

// .ywrapper.StringValue timezone_name = 494706602 [(.yext.schemapath) = "/access-points/access-point/system/clock/config/timezone-name"];
inline bool AccessPoints_AccessPoint_System_Clock_Config::has_timezone_name() const {
  return this != internal_default_instance() && timezone_name_ != NULL;
}
inline const ::ywrapper::StringValue& AccessPoints_AccessPoint_System_Clock_Config::timezone_name() const {
  const ::ywrapper::StringValue* p = timezone_name_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Clock.Config.timezone_name)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::StringValue*>(
      &::ywrapper::_StringValue_default_instance_);
}
inline ::ywrapper::StringValue* AccessPoints_AccessPoint_System_Clock_Config::release_timezone_name() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Clock.Config.timezone_name)
  
  ::ywrapper::StringValue* temp = timezone_name_;
  timezone_name_ = NULL;
  return temp;
}
inline ::ywrapper::StringValue* AccessPoints_AccessPoint_System_Clock_Config::mutable_timezone_name() {
  
  if (timezone_name_ == NULL) {
    timezone_name_ = new ::ywrapper::StringValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Clock.Config.timezone_name)
  return timezone_name_;
}
inline void AccessPoints_AccessPoint_System_Clock_Config::set_allocated_timezone_name(::ywrapper::StringValue* timezone_name) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(timezone_name_);
  }
  if (timezone_name) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      timezone_name = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, timezone_name, submessage_arena);
    }
    
  } else {
    
  }
  timezone_name_ = timezone_name;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Clock.Config.timezone_name)
}

// -------------------------------------------------------------------

// AccessPoints_AccessPoint_System_Clock_State

// .ywrapper.StringValue timezone_name = 331890991 [(.yext.schemapath) = "/access-points/access-point/system/clock/state/timezone-name"];
inline bool AccessPoints_AccessPoint_System_Clock_State::has_timezone_name() const {
  return this != internal_default_instance() && timezone_name_ != NULL;
}
inline const ::ywrapper::StringValue& AccessPoints_AccessPoint_System_Clock_State::timezone_name() const {
  const ::ywrapper::StringValue* p = timezone_name_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Clock.State.timezone_name)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::StringValue*>(
      &::ywrapper::_StringValue_default_instance_);
}
inline ::ywrapper::StringValue* AccessPoints_AccessPoint_System_Clock_State::release_timezone_name() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Clock.State.timezone_name)
  
  ::ywrapper::StringValue* temp = timezone_name_;
  timezone_name_ = NULL;
  return temp;
}
inline ::ywrapper::StringValue* AccessPoints_AccessPoint_System_Clock_State::mutable_timezone_name() {
  
  if (timezone_name_ == NULL) {
    timezone_name_ = new ::ywrapper::StringValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Clock.State.timezone_name)
  return timezone_name_;
}
inline void AccessPoints_AccessPoint_System_Clock_State::set_allocated_timezone_name(::ywrapper::StringValue* timezone_name) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(timezone_name_);
  }
  if (timezone_name) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      timezone_name = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, timezone_name, submessage_arena);
    }
    
  } else {
    
  }
  timezone_name_ = timezone_name;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Clock.State.timezone_name)
}

// -------------------------------------------------------------------

// AccessPoints_AccessPoint_System_Clock

// .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Clock.Config config = 291331576 [(.yext.schemapath) = "/access-points/access-point/system/clock/config"];
inline bool AccessPoints_AccessPoint_System_Clock::has_config() const {
  return this != internal_default_instance() && config_ != NULL;
}
inline void AccessPoints_AccessPoint_System_Clock::clear_config() {
  if (GetArenaNoVirtual() == NULL && config_ != NULL) {
    delete config_;
  }
  config_ = NULL;
}
inline const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Clock_Config& AccessPoints_AccessPoint_System_Clock::config() const {
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Clock_Config* p = config_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Clock.config)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Clock_Config*>(
      &::openconfig::openconfig_access_points::_AccessPoints_AccessPoint_System_Clock_Config_default_instance_);
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Clock_Config* AccessPoints_AccessPoint_System_Clock::release_config() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Clock.config)
  
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Clock_Config* temp = config_;
  config_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Clock_Config* AccessPoints_AccessPoint_System_Clock::mutable_config() {
  
  if (config_ == NULL) {
    config_ = new ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Clock_Config;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Clock.config)
  return config_;
}
inline void AccessPoints_AccessPoint_System_Clock::set_allocated_config(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Clock_Config* config) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete config_;
  }
  if (config) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      config = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, config, submessage_arena);
    }
    
  } else {
    
  }
  config_ = config;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Clock.config)
}

// .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Clock.State state = 102347281 [(.yext.schemapath) = "/access-points/access-point/system/clock/state"];
inline bool AccessPoints_AccessPoint_System_Clock::has_state() const {
  return this != internal_default_instance() && state_ != NULL;
}
inline void AccessPoints_AccessPoint_System_Clock::clear_state() {
  if (GetArenaNoVirtual() == NULL && state_ != NULL) {
    delete state_;
  }
  state_ = NULL;
}
inline const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Clock_State& AccessPoints_AccessPoint_System_Clock::state() const {
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Clock_State* p = state_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Clock.state)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Clock_State*>(
      &::openconfig::openconfig_access_points::_AccessPoints_AccessPoint_System_Clock_State_default_instance_);
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Clock_State* AccessPoints_AccessPoint_System_Clock::release_state() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Clock.state)
  
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Clock_State* temp = state_;
  state_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Clock_State* AccessPoints_AccessPoint_System_Clock::mutable_state() {
  
  if (state_ == NULL) {
    state_ = new ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Clock_State;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Clock.state)
  return state_;
}
inline void AccessPoints_AccessPoint_System_Clock::set_allocated_state(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Clock_State* state) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete state_;
  }
  if (state) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      state = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, state, submessage_arena);
    }
    
  } else {
    
  }
  state_ = state;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Clock.state)
}

// -------------------------------------------------------------------

// AccessPoints_AccessPoint_System_Config

// .ywrapper.StringValue domain_name = 341586104 [(.yext.schemapath) = "/access-points/access-point/system/config/domain-name"];
inline bool AccessPoints_AccessPoint_System_Config::has_domain_name() const {
  return this != internal_default_instance() && domain_name_ != NULL;
}
inline const ::ywrapper::StringValue& AccessPoints_AccessPoint_System_Config::domain_name() const {
  const ::ywrapper::StringValue* p = domain_name_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Config.domain_name)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::StringValue*>(
      &::ywrapper::_StringValue_default_instance_);
}
inline ::ywrapper::StringValue* AccessPoints_AccessPoint_System_Config::release_domain_name() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Config.domain_name)
  
  ::ywrapper::StringValue* temp = domain_name_;
  domain_name_ = NULL;
  return temp;
}
inline ::ywrapper::StringValue* AccessPoints_AccessPoint_System_Config::mutable_domain_name() {
  
  if (domain_name_ == NULL) {
    domain_name_ = new ::ywrapper::StringValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Config.domain_name)
  return domain_name_;
}
inline void AccessPoints_AccessPoint_System_Config::set_allocated_domain_name(::ywrapper::StringValue* domain_name) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(domain_name_);
  }
  if (domain_name) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      domain_name = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, domain_name, submessage_arena);
    }
    
  } else {
    
  }
  domain_name_ = domain_name;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Config.domain_name)
}

// .ywrapper.StringValue hostname = 381963539 [(.yext.schemapath) = "/access-points/access-point/system/config/hostname"];
inline bool AccessPoints_AccessPoint_System_Config::has_hostname() const {
  return this != internal_default_instance() && hostname_ != NULL;
}
inline const ::ywrapper::StringValue& AccessPoints_AccessPoint_System_Config::hostname() const {
  const ::ywrapper::StringValue* p = hostname_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Config.hostname)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::StringValue*>(
      &::ywrapper::_StringValue_default_instance_);
}
inline ::ywrapper::StringValue* AccessPoints_AccessPoint_System_Config::release_hostname() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Config.hostname)
  
  ::ywrapper::StringValue* temp = hostname_;
  hostname_ = NULL;
  return temp;
}
inline ::ywrapper::StringValue* AccessPoints_AccessPoint_System_Config::mutable_hostname() {
  
  if (hostname_ == NULL) {
    hostname_ = new ::ywrapper::StringValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Config.hostname)
  return hostname_;
}
inline void AccessPoints_AccessPoint_System_Config::set_allocated_hostname(::ywrapper::StringValue* hostname) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(hostname_);
  }
  if (hostname) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      hostname = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, hostname, submessage_arena);
    }
    
  } else {
    
  }
  hostname_ = hostname;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Config.hostname)
}

// .ywrapper.StringValue login_banner = 277642138 [(.yext.schemapath) = "/access-points/access-point/system/config/login-banner"];
inline bool AccessPoints_AccessPoint_System_Config::has_login_banner() const {
  return this != internal_default_instance() && login_banner_ != NULL;
}
inline const ::ywrapper::StringValue& AccessPoints_AccessPoint_System_Config::login_banner() const {
  const ::ywrapper::StringValue* p = login_banner_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Config.login_banner)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::StringValue*>(
      &::ywrapper::_StringValue_default_instance_);
}
inline ::ywrapper::StringValue* AccessPoints_AccessPoint_System_Config::release_login_banner() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Config.login_banner)
  
  ::ywrapper::StringValue* temp = login_banner_;
  login_banner_ = NULL;
  return temp;
}
inline ::ywrapper::StringValue* AccessPoints_AccessPoint_System_Config::mutable_login_banner() {
  
  if (login_banner_ == NULL) {
    login_banner_ = new ::ywrapper::StringValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Config.login_banner)
  return login_banner_;
}
inline void AccessPoints_AccessPoint_System_Config::set_allocated_login_banner(::ywrapper::StringValue* login_banner) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(login_banner_);
  }
  if (login_banner) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      login_banner = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, login_banner, submessage_arena);
    }
    
  } else {
    
  }
  login_banner_ = login_banner;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Config.login_banner)
}

// .ywrapper.StringValue motd_banner = 468517355 [(.yext.schemapath) = "/access-points/access-point/system/config/motd-banner"];
inline bool AccessPoints_AccessPoint_System_Config::has_motd_banner() const {
  return this != internal_default_instance() && motd_banner_ != NULL;
}
inline const ::ywrapper::StringValue& AccessPoints_AccessPoint_System_Config::motd_banner() const {
  const ::ywrapper::StringValue* p = motd_banner_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Config.motd_banner)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::StringValue*>(
      &::ywrapper::_StringValue_default_instance_);
}
inline ::ywrapper::StringValue* AccessPoints_AccessPoint_System_Config::release_motd_banner() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Config.motd_banner)
  
  ::ywrapper::StringValue* temp = motd_banner_;
  motd_banner_ = NULL;
  return temp;
}
inline ::ywrapper::StringValue* AccessPoints_AccessPoint_System_Config::mutable_motd_banner() {
  
  if (motd_banner_ == NULL) {
    motd_banner_ = new ::ywrapper::StringValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Config.motd_banner)
  return motd_banner_;
}
inline void AccessPoints_AccessPoint_System_Config::set_allocated_motd_banner(::ywrapper::StringValue* motd_banner) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(motd_banner_);
  }
  if (motd_banner) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      motd_banner = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, motd_banner, submessage_arena);
    }
    
  } else {
    
  }
  motd_banner_ = motd_banner;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Config.motd_banner)
}

// -------------------------------------------------------------------

// AccessPoints_AccessPoint_System_Cpus_Cpu_State_HardwareInterrupt

// .ywrapper.UintValue avg = 97156345 [(.yext.schemapath) = "/access-points/access-point/system/cpus/cpu/state/hardware-interrupt/avg"];
inline bool AccessPoints_AccessPoint_System_Cpus_Cpu_State_HardwareInterrupt::has_avg() const {
  return this != internal_default_instance() && avg_ != NULL;
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_System_Cpus_Cpu_State_HardwareInterrupt::avg() const {
  const ::ywrapper::UintValue* p = avg_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.State.HardwareInterrupt.avg)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_System_Cpus_Cpu_State_HardwareInterrupt::release_avg() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.State.HardwareInterrupt.avg)
  
  ::ywrapper::UintValue* temp = avg_;
  avg_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_System_Cpus_Cpu_State_HardwareInterrupt::mutable_avg() {
  
  if (avg_ == NULL) {
    avg_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.State.HardwareInterrupt.avg)
  return avg_;
}
inline void AccessPoints_AccessPoint_System_Cpus_Cpu_State_HardwareInterrupt::set_allocated_avg(::ywrapper::UintValue* avg) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(avg_);
  }
  if (avg) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      avg = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, avg, submessage_arena);
    }
    
  } else {
    
  }
  avg_ = avg;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.State.HardwareInterrupt.avg)
}

// .ywrapper.UintValue instant = 80030710 [(.yext.schemapath) = "/access-points/access-point/system/cpus/cpu/state/hardware-interrupt/instant"];
inline bool AccessPoints_AccessPoint_System_Cpus_Cpu_State_HardwareInterrupt::has_instant() const {
  return this != internal_default_instance() && instant_ != NULL;
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_System_Cpus_Cpu_State_HardwareInterrupt::instant() const {
  const ::ywrapper::UintValue* p = instant_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.State.HardwareInterrupt.instant)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_System_Cpus_Cpu_State_HardwareInterrupt::release_instant() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.State.HardwareInterrupt.instant)
  
  ::ywrapper::UintValue* temp = instant_;
  instant_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_System_Cpus_Cpu_State_HardwareInterrupt::mutable_instant() {
  
  if (instant_ == NULL) {
    instant_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.State.HardwareInterrupt.instant)
  return instant_;
}
inline void AccessPoints_AccessPoint_System_Cpus_Cpu_State_HardwareInterrupt::set_allocated_instant(::ywrapper::UintValue* instant) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(instant_);
  }
  if (instant) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      instant = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, instant, submessage_arena);
    }
    
  } else {
    
  }
  instant_ = instant;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.State.HardwareInterrupt.instant)
}

// .ywrapper.UintValue interval = 209457208 [(.yext.schemapath) = "/access-points/access-point/system/cpus/cpu/state/hardware-interrupt/interval"];
inline bool AccessPoints_AccessPoint_System_Cpus_Cpu_State_HardwareInterrupt::has_interval() const {
  return this != internal_default_instance() && interval_ != NULL;
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_System_Cpus_Cpu_State_HardwareInterrupt::interval() const {
  const ::ywrapper::UintValue* p = interval_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.State.HardwareInterrupt.interval)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_System_Cpus_Cpu_State_HardwareInterrupt::release_interval() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.State.HardwareInterrupt.interval)
  
  ::ywrapper::UintValue* temp = interval_;
  interval_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_System_Cpus_Cpu_State_HardwareInterrupt::mutable_interval() {
  
  if (interval_ == NULL) {
    interval_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.State.HardwareInterrupt.interval)
  return interval_;
}
inline void AccessPoints_AccessPoint_System_Cpus_Cpu_State_HardwareInterrupt::set_allocated_interval(::ywrapper::UintValue* interval) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(interval_);
  }
  if (interval) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      interval = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, interval, submessage_arena);
    }
    
  } else {
    
  }
  interval_ = interval;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.State.HardwareInterrupt.interval)
}

// .ywrapper.UintValue max = 282388627 [(.yext.schemapath) = "/access-points/access-point/system/cpus/cpu/state/hardware-interrupt/max"];
inline bool AccessPoints_AccessPoint_System_Cpus_Cpu_State_HardwareInterrupt::has_max() const {
  return this != internal_default_instance() && max_ != NULL;
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_System_Cpus_Cpu_State_HardwareInterrupt::max() const {
  const ::ywrapper::UintValue* p = max_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.State.HardwareInterrupt.max)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_System_Cpus_Cpu_State_HardwareInterrupt::release_max() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.State.HardwareInterrupt.max)
  
  ::ywrapper::UintValue* temp = max_;
  max_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_System_Cpus_Cpu_State_HardwareInterrupt::mutable_max() {
  
  if (max_ == NULL) {
    max_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.State.HardwareInterrupt.max)
  return max_;
}
inline void AccessPoints_AccessPoint_System_Cpus_Cpu_State_HardwareInterrupt::set_allocated_max(::ywrapper::UintValue* max) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(max_);
  }
  if (max) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      max = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, max, submessage_arena);
    }
    
  } else {
    
  }
  max_ = max;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.State.HardwareInterrupt.max)
}

// .ywrapper.UintValue min = 148167741 [(.yext.schemapath) = "/access-points/access-point/system/cpus/cpu/state/hardware-interrupt/min"];
inline bool AccessPoints_AccessPoint_System_Cpus_Cpu_State_HardwareInterrupt::has_min() const {
  return this != internal_default_instance() && min_ != NULL;
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_System_Cpus_Cpu_State_HardwareInterrupt::min() const {
  const ::ywrapper::UintValue* p = min_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.State.HardwareInterrupt.min)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_System_Cpus_Cpu_State_HardwareInterrupt::release_min() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.State.HardwareInterrupt.min)
  
  ::ywrapper::UintValue* temp = min_;
  min_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_System_Cpus_Cpu_State_HardwareInterrupt::mutable_min() {
  
  if (min_ == NULL) {
    min_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.State.HardwareInterrupt.min)
  return min_;
}
inline void AccessPoints_AccessPoint_System_Cpus_Cpu_State_HardwareInterrupt::set_allocated_min(::ywrapper::UintValue* min) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(min_);
  }
  if (min) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      min = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, min, submessage_arena);
    }
    
  } else {
    
  }
  min_ = min;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.State.HardwareInterrupt.min)
}

// -------------------------------------------------------------------

// AccessPoints_AccessPoint_System_Cpus_Cpu_State_Idle

// .ywrapper.UintValue avg = 403987073 [(.yext.schemapath) = "/access-points/access-point/system/cpus/cpu/state/idle/avg"];
inline bool AccessPoints_AccessPoint_System_Cpus_Cpu_State_Idle::has_avg() const {
  return this != internal_default_instance() && avg_ != NULL;
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_System_Cpus_Cpu_State_Idle::avg() const {
  const ::ywrapper::UintValue* p = avg_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.State.Idle.avg)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_System_Cpus_Cpu_State_Idle::release_avg() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.State.Idle.avg)
  
  ::ywrapper::UintValue* temp = avg_;
  avg_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_System_Cpus_Cpu_State_Idle::mutable_avg() {
  
  if (avg_ == NULL) {
    avg_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.State.Idle.avg)
  return avg_;
}
inline void AccessPoints_AccessPoint_System_Cpus_Cpu_State_Idle::set_allocated_avg(::ywrapper::UintValue* avg) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(avg_);
  }
  if (avg) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      avg = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, avg, submessage_arena);
    }
    
  } else {
    
  }
  avg_ = avg;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.State.Idle.avg)
}

// .ywrapper.UintValue instant = 361046606 [(.yext.schemapath) = "/access-points/access-point/system/cpus/cpu/state/idle/instant"];
inline bool AccessPoints_AccessPoint_System_Cpus_Cpu_State_Idle::has_instant() const {
  return this != internal_default_instance() && instant_ != NULL;
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_System_Cpus_Cpu_State_Idle::instant() const {
  const ::ywrapper::UintValue* p = instant_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.State.Idle.instant)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_System_Cpus_Cpu_State_Idle::release_instant() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.State.Idle.instant)
  
  ::ywrapper::UintValue* temp = instant_;
  instant_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_System_Cpus_Cpu_State_Idle::mutable_instant() {
  
  if (instant_ == NULL) {
    instant_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.State.Idle.instant)
  return instant_;
}
inline void AccessPoints_AccessPoint_System_Cpus_Cpu_State_Idle::set_allocated_instant(::ywrapper::UintValue* instant) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(instant_);
  }
  if (instant) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      instant = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, instant, submessage_arena);
    }
    
  } else {
    
  }
  instant_ = instant;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.State.Idle.instant)
}

// .ywrapper.UintValue interval = 250660256 [(.yext.schemapath) = "/access-points/access-point/system/cpus/cpu/state/idle/interval"];
inline bool AccessPoints_AccessPoint_System_Cpus_Cpu_State_Idle::has_interval() const {
  return this != internal_default_instance() && interval_ != NULL;
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_System_Cpus_Cpu_State_Idle::interval() const {
  const ::ywrapper::UintValue* p = interval_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.State.Idle.interval)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_System_Cpus_Cpu_State_Idle::release_interval() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.State.Idle.interval)
  
  ::ywrapper::UintValue* temp = interval_;
  interval_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_System_Cpus_Cpu_State_Idle::mutable_interval() {
  
  if (interval_ == NULL) {
    interval_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.State.Idle.interval)
  return interval_;
}
inline void AccessPoints_AccessPoint_System_Cpus_Cpu_State_Idle::set_allocated_interval(::ywrapper::UintValue* interval) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(interval_);
  }
  if (interval) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      interval = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, interval, submessage_arena);
    }
    
  } else {
    
  }
  interval_ = interval;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.State.Idle.interval)
}

// .ywrapper.UintValue max = 49698651 [(.yext.schemapath) = "/access-points/access-point/system/cpus/cpu/state/idle/max"];
inline bool AccessPoints_AccessPoint_System_Cpus_Cpu_State_Idle::has_max() const {
  return this != internal_default_instance() && max_ != NULL;
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_System_Cpus_Cpu_State_Idle::max() const {
  const ::ywrapper::UintValue* p = max_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.State.Idle.max)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_System_Cpus_Cpu_State_Idle::release_max() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.State.Idle.max)
  
  ::ywrapper::UintValue* temp = max_;
  max_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_System_Cpus_Cpu_State_Idle::mutable_max() {
  
  if (max_ == NULL) {
    max_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.State.Idle.max)
  return max_;
}
inline void AccessPoints_AccessPoint_System_Cpus_Cpu_State_Idle::set_allocated_max(::ywrapper::UintValue* max) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(max_);
  }
  if (max) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      max = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, max, submessage_arena);
    }
    
  } else {
    
  }
  max_ = max;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.State.Idle.max)
}

// .ywrapper.UintValue min = 183919573 [(.yext.schemapath) = "/access-points/access-point/system/cpus/cpu/state/idle/min"];
inline bool AccessPoints_AccessPoint_System_Cpus_Cpu_State_Idle::has_min() const {
  return this != internal_default_instance() && min_ != NULL;
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_System_Cpus_Cpu_State_Idle::min() const {
  const ::ywrapper::UintValue* p = min_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.State.Idle.min)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_System_Cpus_Cpu_State_Idle::release_min() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.State.Idle.min)
  
  ::ywrapper::UintValue* temp = min_;
  min_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_System_Cpus_Cpu_State_Idle::mutable_min() {
  
  if (min_ == NULL) {
    min_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.State.Idle.min)
  return min_;
}
inline void AccessPoints_AccessPoint_System_Cpus_Cpu_State_Idle::set_allocated_min(::ywrapper::UintValue* min) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(min_);
  }
  if (min) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      min = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, min, submessage_arena);
    }
    
  } else {
    
  }
  min_ = min;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.State.Idle.min)
}

// -------------------------------------------------------------------

// AccessPoints_AccessPoint_System_Cpus_Cpu_State_Kernel

// .ywrapper.UintValue avg = 480781416 [(.yext.schemapath) = "/access-points/access-point/system/cpus/cpu/state/kernel/avg"];
inline bool AccessPoints_AccessPoint_System_Cpus_Cpu_State_Kernel::has_avg() const {
  return this != internal_default_instance() && avg_ != NULL;
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_System_Cpus_Cpu_State_Kernel::avg() const {
  const ::ywrapper::UintValue* p = avg_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.State.Kernel.avg)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_System_Cpus_Cpu_State_Kernel::release_avg() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.State.Kernel.avg)
  
  ::ywrapper::UintValue* temp = avg_;
  avg_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_System_Cpus_Cpu_State_Kernel::mutable_avg() {
  
  if (avg_ == NULL) {
    avg_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.State.Kernel.avg)
  return avg_;
}
inline void AccessPoints_AccessPoint_System_Cpus_Cpu_State_Kernel::set_allocated_avg(::ywrapper::UintValue* avg) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(avg_);
  }
  if (avg) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      avg = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, avg, submessage_arena);
    }
    
  } else {
    
  }
  avg_ = avg;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.State.Kernel.avg)
}

// .ywrapper.UintValue instant = 318309203 [(.yext.schemapath) = "/access-points/access-point/system/cpus/cpu/state/kernel/instant"];
inline bool AccessPoints_AccessPoint_System_Cpus_Cpu_State_Kernel::has_instant() const {
  return this != internal_default_instance() && instant_ != NULL;
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_System_Cpus_Cpu_State_Kernel::instant() const {
  const ::ywrapper::UintValue* p = instant_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.State.Kernel.instant)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_System_Cpus_Cpu_State_Kernel::release_instant() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.State.Kernel.instant)
  
  ::ywrapper::UintValue* temp = instant_;
  instant_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_System_Cpus_Cpu_State_Kernel::mutable_instant() {
  
  if (instant_ == NULL) {
    instant_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.State.Kernel.instant)
  return instant_;
}
inline void AccessPoints_AccessPoint_System_Cpus_Cpu_State_Kernel::set_allocated_instant(::ywrapper::UintValue* instant) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(instant_);
  }
  if (instant) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      instant = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, instant, submessage_arena);
    }
    
  } else {
    
  }
  instant_ = instant;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.State.Kernel.instant)
}

// .ywrapper.UintValue interval = 73455187 [(.yext.schemapath) = "/access-points/access-point/system/cpus/cpu/state/kernel/interval"];
inline bool AccessPoints_AccessPoint_System_Cpus_Cpu_State_Kernel::has_interval() const {
  return this != internal_default_instance() && interval_ != NULL;
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_System_Cpus_Cpu_State_Kernel::interval() const {
  const ::ywrapper::UintValue* p = interval_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.State.Kernel.interval)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_System_Cpus_Cpu_State_Kernel::release_interval() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.State.Kernel.interval)
  
  ::ywrapper::UintValue* temp = interval_;
  interval_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_System_Cpus_Cpu_State_Kernel::mutable_interval() {
  
  if (interval_ == NULL) {
    interval_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.State.Kernel.interval)
  return interval_;
}
inline void AccessPoints_AccessPoint_System_Cpus_Cpu_State_Kernel::set_allocated_interval(::ywrapper::UintValue* interval) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(interval_);
  }
  if (interval) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      interval = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, interval, submessage_arena);
    }
    
  } else {
    
  }
  interval_ = interval;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.State.Kernel.interval)
}

// .ywrapper.UintValue max = 298198954 [(.yext.schemapath) = "/access-points/access-point/system/cpus/cpu/state/kernel/max"];
inline bool AccessPoints_AccessPoint_System_Cpus_Cpu_State_Kernel::has_max() const {
  return this != internal_default_instance() && max_ != NULL;
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_System_Cpus_Cpu_State_Kernel::max() const {
  const ::ywrapper::UintValue* p = max_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.State.Kernel.max)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_System_Cpus_Cpu_State_Kernel::release_max() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.State.Kernel.max)
  
  ::ywrapper::UintValue* temp = max_;
  max_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_System_Cpus_Cpu_State_Kernel::mutable_max() {
  
  if (max_ == NULL) {
    max_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.State.Kernel.max)
  return max_;
}
inline void AccessPoints_AccessPoint_System_Cpus_Cpu_State_Kernel::set_allocated_max(::ywrapper::UintValue* max) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(max_);
  }
  if (max) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      max = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, max, submessage_arena);
    }
    
  } else {
    
  }
  max_ = max;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.State.Kernel.max)
}

// .ywrapper.UintValue min = 432419844 [(.yext.schemapath) = "/access-points/access-point/system/cpus/cpu/state/kernel/min"];
inline bool AccessPoints_AccessPoint_System_Cpus_Cpu_State_Kernel::has_min() const {
  return this != internal_default_instance() && min_ != NULL;
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_System_Cpus_Cpu_State_Kernel::min() const {
  const ::ywrapper::UintValue* p = min_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.State.Kernel.min)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_System_Cpus_Cpu_State_Kernel::release_min() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.State.Kernel.min)
  
  ::ywrapper::UintValue* temp = min_;
  min_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_System_Cpus_Cpu_State_Kernel::mutable_min() {
  
  if (min_ == NULL) {
    min_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.State.Kernel.min)
  return min_;
}
inline void AccessPoints_AccessPoint_System_Cpus_Cpu_State_Kernel::set_allocated_min(::ywrapper::UintValue* min) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(min_);
  }
  if (min) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      min = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, min, submessage_arena);
    }
    
  } else {
    
  }
  min_ = min;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.State.Kernel.min)
}

// -------------------------------------------------------------------

// AccessPoints_AccessPoint_System_Cpus_Cpu_State_Nice

// .ywrapper.UintValue avg = 401379320 [(.yext.schemapath) = "/access-points/access-point/system/cpus/cpu/state/nice/avg"];
inline bool AccessPoints_AccessPoint_System_Cpus_Cpu_State_Nice::has_avg() const {
  return this != internal_default_instance() && avg_ != NULL;
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_System_Cpus_Cpu_State_Nice::avg() const {
  const ::ywrapper::UintValue* p = avg_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.State.Nice.avg)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_System_Cpus_Cpu_State_Nice::release_avg() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.State.Nice.avg)
  
  ::ywrapper::UintValue* temp = avg_;
  avg_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_System_Cpus_Cpu_State_Nice::mutable_avg() {
  
  if (avg_ == NULL) {
    avg_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.State.Nice.avg)
  return avg_;
}
inline void AccessPoints_AccessPoint_System_Cpus_Cpu_State_Nice::set_allocated_avg(::ywrapper::UintValue* avg) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(avg_);
  }
  if (avg) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      avg = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, avg, submessage_arena);
    }
    
  } else {
    
  }
  avg_ = avg;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.State.Nice.avg)
}

// .ywrapper.UintValue instant = 208940195 [(.yext.schemapath) = "/access-points/access-point/system/cpus/cpu/state/nice/instant"];
inline bool AccessPoints_AccessPoint_System_Cpus_Cpu_State_Nice::has_instant() const {
  return this != internal_default_instance() && instant_ != NULL;
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_System_Cpus_Cpu_State_Nice::instant() const {
  const ::ywrapper::UintValue* p = instant_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.State.Nice.instant)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_System_Cpus_Cpu_State_Nice::release_instant() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.State.Nice.instant)
  
  ::ywrapper::UintValue* temp = instant_;
  instant_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_System_Cpus_Cpu_State_Nice::mutable_instant() {
  
  if (instant_ == NULL) {
    instant_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.State.Nice.instant)
  return instant_;
}
inline void AccessPoints_AccessPoint_System_Cpus_Cpu_State_Nice::set_allocated_instant(::ywrapper::UintValue* instant) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(instant_);
  }
  if (instant) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      instant = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, instant, submessage_arena);
    }
    
  } else {
    
  }
  instant_ = instant;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.State.Nice.instant)
}

// .ywrapper.UintValue interval = 334564995 [(.yext.schemapath) = "/access-points/access-point/system/cpus/cpu/state/nice/interval"];
inline bool AccessPoints_AccessPoint_System_Cpus_Cpu_State_Nice::has_interval() const {
  return this != internal_default_instance() && interval_ != NULL;
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_System_Cpus_Cpu_State_Nice::interval() const {
  const ::ywrapper::UintValue* p = interval_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.State.Nice.interval)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_System_Cpus_Cpu_State_Nice::release_interval() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.State.Nice.interval)
  
  ::ywrapper::UintValue* temp = interval_;
  interval_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_System_Cpus_Cpu_State_Nice::mutable_interval() {
  
  if (interval_ == NULL) {
    interval_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.State.Nice.interval)
  return interval_;
}
inline void AccessPoints_AccessPoint_System_Cpus_Cpu_State_Nice::set_allocated_interval(::ywrapper::UintValue* interval) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(interval_);
  }
  if (interval) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      interval = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, interval, submessage_arena);
    }
    
  } else {
    
  }
  interval_ = interval;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.State.Nice.interval)
}

// .ywrapper.UintValue max = 218809786 [(.yext.schemapath) = "/access-points/access-point/system/cpus/cpu/state/nice/max"];
inline bool AccessPoints_AccessPoint_System_Cpus_Cpu_State_Nice::has_max() const {
  return this != internal_default_instance() && max_ != NULL;
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_System_Cpus_Cpu_State_Nice::max() const {
  const ::ywrapper::UintValue* p = max_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.State.Nice.max)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_System_Cpus_Cpu_State_Nice::release_max() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.State.Nice.max)
  
  ::ywrapper::UintValue* temp = max_;
  max_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_System_Cpus_Cpu_State_Nice::mutable_max() {
  
  if (max_ == NULL) {
    max_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.State.Nice.max)
  return max_;
}
inline void AccessPoints_AccessPoint_System_Cpus_Cpu_State_Nice::set_allocated_max(::ywrapper::UintValue* max) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(max_);
  }
  if (max) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      max = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, max, submessage_arena);
    }
    
  } else {
    
  }
  max_ = max;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.State.Nice.max)
}

// .ywrapper.UintValue min = 353030708 [(.yext.schemapath) = "/access-points/access-point/system/cpus/cpu/state/nice/min"];
inline bool AccessPoints_AccessPoint_System_Cpus_Cpu_State_Nice::has_min() const {
  return this != internal_default_instance() && min_ != NULL;
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_System_Cpus_Cpu_State_Nice::min() const {
  const ::ywrapper::UintValue* p = min_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.State.Nice.min)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_System_Cpus_Cpu_State_Nice::release_min() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.State.Nice.min)
  
  ::ywrapper::UintValue* temp = min_;
  min_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_System_Cpus_Cpu_State_Nice::mutable_min() {
  
  if (min_ == NULL) {
    min_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.State.Nice.min)
  return min_;
}
inline void AccessPoints_AccessPoint_System_Cpus_Cpu_State_Nice::set_allocated_min(::ywrapper::UintValue* min) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(min_);
  }
  if (min) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      min = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, min, submessage_arena);
    }
    
  } else {
    
  }
  min_ = min;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.State.Nice.min)
}

// -------------------------------------------------------------------

// AccessPoints_AccessPoint_System_Cpus_Cpu_State_SoftwareInterrupt

// .ywrapper.UintValue avg = 168369250 [(.yext.schemapath) = "/access-points/access-point/system/cpus/cpu/state/software-interrupt/avg"];
inline bool AccessPoints_AccessPoint_System_Cpus_Cpu_State_SoftwareInterrupt::has_avg() const {
  return this != internal_default_instance() && avg_ != NULL;
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_System_Cpus_Cpu_State_SoftwareInterrupt::avg() const {
  const ::ywrapper::UintValue* p = avg_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.State.SoftwareInterrupt.avg)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_System_Cpus_Cpu_State_SoftwareInterrupt::release_avg() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.State.SoftwareInterrupt.avg)
  
  ::ywrapper::UintValue* temp = avg_;
  avg_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_System_Cpus_Cpu_State_SoftwareInterrupt::mutable_avg() {
  
  if (avg_ == NULL) {
    avg_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.State.SoftwareInterrupt.avg)
  return avg_;
}
inline void AccessPoints_AccessPoint_System_Cpus_Cpu_State_SoftwareInterrupt::set_allocated_avg(::ywrapper::UintValue* avg) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(avg_);
  }
  if (avg) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      avg = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, avg, submessage_arena);
    }
    
  } else {
    
  }
  avg_ = avg;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.State.SoftwareInterrupt.avg)
}

// .ywrapper.UintValue instant = 207373649 [(.yext.schemapath) = "/access-points/access-point/system/cpus/cpu/state/software-interrupt/instant"];
inline bool AccessPoints_AccessPoint_System_Cpus_Cpu_State_SoftwareInterrupt::has_instant() const {
  return this != internal_default_instance() && instant_ != NULL;
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_System_Cpus_Cpu_State_SoftwareInterrupt::instant() const {
  const ::ywrapper::UintValue* p = instant_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.State.SoftwareInterrupt.instant)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_System_Cpus_Cpu_State_SoftwareInterrupt::release_instant() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.State.SoftwareInterrupt.instant)
  
  ::ywrapper::UintValue* temp = instant_;
  instant_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_System_Cpus_Cpu_State_SoftwareInterrupt::mutable_instant() {
  
  if (instant_ == NULL) {
    instant_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.State.SoftwareInterrupt.instant)
  return instant_;
}
inline void AccessPoints_AccessPoint_System_Cpus_Cpu_State_SoftwareInterrupt::set_allocated_instant(::ywrapper::UintValue* instant) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(instant_);
  }
  if (instant) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      instant = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, instant, submessage_arena);
    }
    
  } else {
    
  }
  instant_ = instant;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.State.SoftwareInterrupt.instant)
}

// .ywrapper.UintValue interval = 360892741 [(.yext.schemapath) = "/access-points/access-point/system/cpus/cpu/state/software-interrupt/interval"];
inline bool AccessPoints_AccessPoint_System_Cpus_Cpu_State_SoftwareInterrupt::has_interval() const {
  return this != internal_default_instance() && interval_ != NULL;
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_System_Cpus_Cpu_State_SoftwareInterrupt::interval() const {
  const ::ywrapper::UintValue* p = interval_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.State.SoftwareInterrupt.interval)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_System_Cpus_Cpu_State_SoftwareInterrupt::release_interval() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.State.SoftwareInterrupt.interval)
  
  ::ywrapper::UintValue* temp = interval_;
  interval_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_System_Cpus_Cpu_State_SoftwareInterrupt::mutable_interval() {
  
  if (interval_ == NULL) {
    interval_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.State.SoftwareInterrupt.interval)
  return interval_;
}
inline void AccessPoints_AccessPoint_System_Cpus_Cpu_State_SoftwareInterrupt::set_allocated_interval(::ywrapper::UintValue* interval) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(interval_);
  }
  if (interval) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      interval = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, interval, submessage_arena);
    }
    
  } else {
    
  }
  interval_ = interval;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.State.SoftwareInterrupt.interval)
}

// .ywrapper.UintValue max = 452987508 [(.yext.schemapath) = "/access-points/access-point/system/cpus/cpu/state/software-interrupt/max"];
inline bool AccessPoints_AccessPoint_System_Cpus_Cpu_State_SoftwareInterrupt::has_max() const {
  return this != internal_default_instance() && max_ != NULL;
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_System_Cpus_Cpu_State_SoftwareInterrupt::max() const {
  const ::ywrapper::UintValue* p = max_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.State.SoftwareInterrupt.max)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_System_Cpus_Cpu_State_SoftwareInterrupt::release_max() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.State.SoftwareInterrupt.max)
  
  ::ywrapper::UintValue* temp = max_;
  max_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_System_Cpus_Cpu_State_SoftwareInterrupt::mutable_max() {
  
  if (max_ == NULL) {
    max_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.State.SoftwareInterrupt.max)
  return max_;
}
inline void AccessPoints_AccessPoint_System_Cpus_Cpu_State_SoftwareInterrupt::set_allocated_max(::ywrapper::UintValue* max) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(max_);
  }
  if (max) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      max = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, max, submessage_arena);
    }
    
  } else {
    
  }
  max_ = max;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.State.SoftwareInterrupt.max)
}

// .ywrapper.UintValue min = 50337482 [(.yext.schemapath) = "/access-points/access-point/system/cpus/cpu/state/software-interrupt/min"];
inline bool AccessPoints_AccessPoint_System_Cpus_Cpu_State_SoftwareInterrupt::has_min() const {
  return this != internal_default_instance() && min_ != NULL;
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_System_Cpus_Cpu_State_SoftwareInterrupt::min() const {
  const ::ywrapper::UintValue* p = min_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.State.SoftwareInterrupt.min)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_System_Cpus_Cpu_State_SoftwareInterrupt::release_min() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.State.SoftwareInterrupt.min)
  
  ::ywrapper::UintValue* temp = min_;
  min_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_System_Cpus_Cpu_State_SoftwareInterrupt::mutable_min() {
  
  if (min_ == NULL) {
    min_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.State.SoftwareInterrupt.min)
  return min_;
}
inline void AccessPoints_AccessPoint_System_Cpus_Cpu_State_SoftwareInterrupt::set_allocated_min(::ywrapper::UintValue* min) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(min_);
  }
  if (min) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      min = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, min, submessage_arena);
    }
    
  } else {
    
  }
  min_ = min;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.State.SoftwareInterrupt.min)
}

// -------------------------------------------------------------------

// AccessPoints_AccessPoint_System_Cpus_Cpu_State_Total

// .ywrapper.UintValue avg = 521140985 [(.yext.schemapath) = "/access-points/access-point/system/cpus/cpu/state/total/avg"];
inline bool AccessPoints_AccessPoint_System_Cpus_Cpu_State_Total::has_avg() const {
  return this != internal_default_instance() && avg_ != NULL;
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_System_Cpus_Cpu_State_Total::avg() const {
  const ::ywrapper::UintValue* p = avg_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.State.Total.avg)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_System_Cpus_Cpu_State_Total::release_avg() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.State.Total.avg)
  
  ::ywrapper::UintValue* temp = avg_;
  avg_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_System_Cpus_Cpu_State_Total::mutable_avg() {
  
  if (avg_ == NULL) {
    avg_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.State.Total.avg)
  return avg_;
}
inline void AccessPoints_AccessPoint_System_Cpus_Cpu_State_Total::set_allocated_avg(::ywrapper::UintValue* avg) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(avg_);
  }
  if (avg) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      avg = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, avg, submessage_arena);
    }
    
  } else {
    
  }
  avg_ = avg;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.State.Total.avg)
}

// .ywrapper.UintValue instant = 342133238 [(.yext.schemapath) = "/access-points/access-point/system/cpus/cpu/state/total/instant"];
inline bool AccessPoints_AccessPoint_System_Cpus_Cpu_State_Total::has_instant() const {
  return this != internal_default_instance() && instant_ != NULL;
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_System_Cpus_Cpu_State_Total::instant() const {
  const ::ywrapper::UintValue* p = instant_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.State.Total.instant)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_System_Cpus_Cpu_State_Total::release_instant() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.State.Total.instant)
  
  ::ywrapper::UintValue* temp = instant_;
  instant_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_System_Cpus_Cpu_State_Total::mutable_instant() {
  
  if (instant_ == NULL) {
    instant_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.State.Total.instant)
  return instant_;
}
inline void AccessPoints_AccessPoint_System_Cpus_Cpu_State_Total::set_allocated_instant(::ywrapper::UintValue* instant) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(instant_);
  }
  if (instant) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      instant = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, instant, submessage_arena);
    }
    
  } else {
    
  }
  instant_ = instant;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.State.Total.instant)
}

// .ywrapper.UintValue interval = 73206328 [(.yext.schemapath) = "/access-points/access-point/system/cpus/cpu/state/total/interval"];
inline bool AccessPoints_AccessPoint_System_Cpus_Cpu_State_Total::has_interval() const {
  return this != internal_default_instance() && interval_ != NULL;
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_System_Cpus_Cpu_State_Total::interval() const {
  const ::ywrapper::UintValue* p = interval_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.State.Total.interval)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_System_Cpus_Cpu_State_Total::release_interval() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.State.Total.interval)
  
  ::ywrapper::UintValue* temp = interval_;
  interval_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_System_Cpus_Cpu_State_Total::mutable_interval() {
  
  if (interval_ == NULL) {
    interval_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.State.Total.interval)
  return interval_;
}
inline void AccessPoints_AccessPoint_System_Cpus_Cpu_State_Total::set_allocated_interval(::ywrapper::UintValue* interval) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(interval_);
  }
  if (interval) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      interval = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, interval, submessage_arena);
    }
    
  } else {
    
  }
  interval_ = interval;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.State.Total.interval)
}

// .ywrapper.UintValue max = 169502355 [(.yext.schemapath) = "/access-points/access-point/system/cpus/cpu/state/total/max"];
inline bool AccessPoints_AccessPoint_System_Cpus_Cpu_State_Total::has_max() const {
  return this != internal_default_instance() && max_ != NULL;
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_System_Cpus_Cpu_State_Total::max() const {
  const ::ywrapper::UintValue* p = max_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.State.Total.max)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_System_Cpus_Cpu_State_Total::release_max() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.State.Total.max)
  
  ::ywrapper::UintValue* temp = max_;
  max_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_System_Cpus_Cpu_State_Total::mutable_max() {
  
  if (max_ == NULL) {
    max_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.State.Total.max)
  return max_;
}
inline void AccessPoints_AccessPoint_System_Cpus_Cpu_State_Total::set_allocated_max(::ywrapper::UintValue* max) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(max_);
  }
  if (max) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      max = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, max, submessage_arena);
    }
    
  } else {
    
  }
  max_ = max;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.State.Total.max)
}

// .ywrapper.UintValue min = 35281469 [(.yext.schemapath) = "/access-points/access-point/system/cpus/cpu/state/total/min"];
inline bool AccessPoints_AccessPoint_System_Cpus_Cpu_State_Total::has_min() const {
  return this != internal_default_instance() && min_ != NULL;
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_System_Cpus_Cpu_State_Total::min() const {
  const ::ywrapper::UintValue* p = min_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.State.Total.min)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_System_Cpus_Cpu_State_Total::release_min() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.State.Total.min)
  
  ::ywrapper::UintValue* temp = min_;
  min_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_System_Cpus_Cpu_State_Total::mutable_min() {
  
  if (min_ == NULL) {
    min_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.State.Total.min)
  return min_;
}
inline void AccessPoints_AccessPoint_System_Cpus_Cpu_State_Total::set_allocated_min(::ywrapper::UintValue* min) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(min_);
  }
  if (min) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      min = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, min, submessage_arena);
    }
    
  } else {
    
  }
  min_ = min;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.State.Total.min)
}

// -------------------------------------------------------------------

// AccessPoints_AccessPoint_System_Cpus_Cpu_State_User

// .ywrapper.UintValue avg = 117185258 [(.yext.schemapath) = "/access-points/access-point/system/cpus/cpu/state/user/avg"];
inline bool AccessPoints_AccessPoint_System_Cpus_Cpu_State_User::has_avg() const {
  return this != internal_default_instance() && avg_ != NULL;
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_System_Cpus_Cpu_State_User::avg() const {
  const ::ywrapper::UintValue* p = avg_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.State.User.avg)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_System_Cpus_Cpu_State_User::release_avg() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.State.User.avg)
  
  ::ywrapper::UintValue* temp = avg_;
  avg_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_System_Cpus_Cpu_State_User::mutable_avg() {
  
  if (avg_ == NULL) {
    avg_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.State.User.avg)
  return avg_;
}
inline void AccessPoints_AccessPoint_System_Cpus_Cpu_State_User::set_allocated_avg(::ywrapper::UintValue* avg) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(avg_);
  }
  if (avg) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      avg = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, avg, submessage_arena);
    }
    
  } else {
    
  }
  avg_ = avg;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.State.User.avg)
}

// .ywrapper.UintValue instant = 372414825 [(.yext.schemapath) = "/access-points/access-point/system/cpus/cpu/state/user/instant"];
inline bool AccessPoints_AccessPoint_System_Cpus_Cpu_State_User::has_instant() const {
  return this != internal_default_instance() && instant_ != NULL;
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_System_Cpus_Cpu_State_User::instant() const {
  const ::ywrapper::UintValue* p = instant_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.State.User.instant)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_System_Cpus_Cpu_State_User::release_instant() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.State.User.instant)
  
  ::ywrapper::UintValue* temp = instant_;
  instant_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_System_Cpus_Cpu_State_User::mutable_instant() {
  
  if (instant_ == NULL) {
    instant_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.State.User.instant)
  return instant_;
}
inline void AccessPoints_AccessPoint_System_Cpus_Cpu_State_User::set_allocated_instant(::ywrapper::UintValue* instant) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(instant_);
  }
  if (instant) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      instant = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, instant, submessage_arena);
    }
    
  } else {
    
  }
  instant_ = instant;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.State.User.instant)
}

// .ywrapper.UintValue interval = 325729005 [(.yext.schemapath) = "/access-points/access-point/system/cpus/cpu/state/user/interval"];
inline bool AccessPoints_AccessPoint_System_Cpus_Cpu_State_User::has_interval() const {
  return this != internal_default_instance() && interval_ != NULL;
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_System_Cpus_Cpu_State_User::interval() const {
  const ::ywrapper::UintValue* p = interval_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.State.User.interval)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_System_Cpus_Cpu_State_User::release_interval() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.State.User.interval)
  
  ::ywrapper::UintValue* temp = interval_;
  interval_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_System_Cpus_Cpu_State_User::mutable_interval() {
  
  if (interval_ == NULL) {
    interval_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.State.User.interval)
  return interval_;
}
inline void AccessPoints_AccessPoint_System_Cpus_Cpu_State_User::set_allocated_interval(::ywrapper::UintValue* interval) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(interval_);
  }
  if (interval) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      interval = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, interval, submessage_arena);
    }
    
  } else {
    
  }
  interval_ = interval;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.State.User.interval)
}

// .ywrapper.UintValue max = 404363388 [(.yext.schemapath) = "/access-points/access-point/system/cpus/cpu/state/user/max"];
inline bool AccessPoints_AccessPoint_System_Cpus_Cpu_State_User::has_max() const {
  return this != internal_default_instance() && max_ != NULL;
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_System_Cpus_Cpu_State_User::max() const {
  const ::ywrapper::UintValue* p = max_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.State.User.max)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_System_Cpus_Cpu_State_User::release_max() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.State.User.max)
  
  ::ywrapper::UintValue* temp = max_;
  max_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_System_Cpus_Cpu_State_User::mutable_max() {
  
  if (max_ == NULL) {
    max_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.State.User.max)
  return max_;
}
inline void AccessPoints_AccessPoint_System_Cpus_Cpu_State_User::set_allocated_max(::ywrapper::UintValue* max) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(max_);
  }
  if (max) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      max = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, max, submessage_arena);
    }
    
  } else {
    
  }
  max_ = max;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.State.User.max)
}

// .ywrapper.UintValue min = 270142210 [(.yext.schemapath) = "/access-points/access-point/system/cpus/cpu/state/user/min"];
inline bool AccessPoints_AccessPoint_System_Cpus_Cpu_State_User::has_min() const {
  return this != internal_default_instance() && min_ != NULL;
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_System_Cpus_Cpu_State_User::min() const {
  const ::ywrapper::UintValue* p = min_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.State.User.min)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_System_Cpus_Cpu_State_User::release_min() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.State.User.min)
  
  ::ywrapper::UintValue* temp = min_;
  min_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_System_Cpus_Cpu_State_User::mutable_min() {
  
  if (min_ == NULL) {
    min_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.State.User.min)
  return min_;
}
inline void AccessPoints_AccessPoint_System_Cpus_Cpu_State_User::set_allocated_min(::ywrapper::UintValue* min) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(min_);
  }
  if (min) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      min = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, min, submessage_arena);
    }
    
  } else {
    
  }
  min_ = min;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.State.User.min)
}

// -------------------------------------------------------------------

// AccessPoints_AccessPoint_System_Cpus_Cpu_State_Wait

// .ywrapper.UintValue avg = 15474052 [(.yext.schemapath) = "/access-points/access-point/system/cpus/cpu/state/wait/avg"];
inline bool AccessPoints_AccessPoint_System_Cpus_Cpu_State_Wait::has_avg() const {
  return this != internal_default_instance() && avg_ != NULL;
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_System_Cpus_Cpu_State_Wait::avg() const {
  const ::ywrapper::UintValue* p = avg_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.State.Wait.avg)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_System_Cpus_Cpu_State_Wait::release_avg() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.State.Wait.avg)
  
  ::ywrapper::UintValue* temp = avg_;
  avg_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_System_Cpus_Cpu_State_Wait::mutable_avg() {
  
  if (avg_ == NULL) {
    avg_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.State.Wait.avg)
  return avg_;
}
inline void AccessPoints_AccessPoint_System_Cpus_Cpu_State_Wait::set_allocated_avg(::ywrapper::UintValue* avg) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(avg_);
  }
  if (avg) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      avg = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, avg, submessage_arena);
    }
    
  } else {
    
  }
  avg_ = avg;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.State.Wait.avg)
}

// .ywrapper.UintValue instant = 179643359 [(.yext.schemapath) = "/access-points/access-point/system/cpus/cpu/state/wait/instant"];
inline bool AccessPoints_AccessPoint_System_Cpus_Cpu_State_Wait::has_instant() const {
  return this != internal_default_instance() && instant_ != NULL;
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_System_Cpus_Cpu_State_Wait::instant() const {
  const ::ywrapper::UintValue* p = instant_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.State.Wait.instant)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_System_Cpus_Cpu_State_Wait::release_instant() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.State.Wait.instant)
  
  ::ywrapper::UintValue* temp = instant_;
  instant_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_System_Cpus_Cpu_State_Wait::mutable_instant() {
  
  if (instant_ == NULL) {
    instant_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.State.Wait.instant)
  return instant_;
}
inline void AccessPoints_AccessPoint_System_Cpus_Cpu_State_Wait::set_allocated_instant(::ywrapper::UintValue* instant) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(instant_);
  }
  if (instant) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      instant = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, instant, submessage_arena);
    }
    
  } else {
    
  }
  instant_ = instant;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.State.Wait.instant)
}

// .ywrapper.UintValue interval = 101618335 [(.yext.schemapath) = "/access-points/access-point/system/cpus/cpu/state/wait/interval"];
inline bool AccessPoints_AccessPoint_System_Cpus_Cpu_State_Wait::has_interval() const {
  return this != internal_default_instance() && interval_ != NULL;
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_System_Cpus_Cpu_State_Wait::interval() const {
  const ::ywrapper::UintValue* p = interval_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.State.Wait.interval)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_System_Cpus_Cpu_State_Wait::release_interval() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.State.Wait.interval)
  
  ::ywrapper::UintValue* temp = interval_;
  interval_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_System_Cpus_Cpu_State_Wait::mutable_interval() {
  
  if (interval_ == NULL) {
    interval_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.State.Wait.interval)
  return interval_;
}
inline void AccessPoints_AccessPoint_System_Cpus_Cpu_State_Wait::set_allocated_interval(::ywrapper::UintValue* interval) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(interval_);
  }
  if (interval) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      interval = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, interval, submessage_arena);
    }
    
  } else {
    
  }
  interval_ = interval;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.State.Wait.interval)
}

// .ywrapper.UintValue max = 231598750 [(.yext.schemapath) = "/access-points/access-point/system/cpus/cpu/state/wait/max"];
inline bool AccessPoints_AccessPoint_System_Cpus_Cpu_State_Wait::has_max() const {
  return this != internal_default_instance() && max_ != NULL;
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_System_Cpus_Cpu_State_Wait::max() const {
  const ::ywrapper::UintValue* p = max_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.State.Wait.max)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_System_Cpus_Cpu_State_Wait::release_max() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.State.Wait.max)
  
  ::ywrapper::UintValue* temp = max_;
  max_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_System_Cpus_Cpu_State_Wait::mutable_max() {
  
  if (max_ == NULL) {
    max_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.State.Wait.max)
  return max_;
}
inline void AccessPoints_AccessPoint_System_Cpus_Cpu_State_Wait::set_allocated_max(::ywrapper::UintValue* max) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(max_);
  }
  if (max) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      max = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, max, submessage_arena);
    }
    
  } else {
    
  }
  max_ = max;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.State.Wait.max)
}

// .ywrapper.UintValue min = 365819664 [(.yext.schemapath) = "/access-points/access-point/system/cpus/cpu/state/wait/min"];
inline bool AccessPoints_AccessPoint_System_Cpus_Cpu_State_Wait::has_min() const {
  return this != internal_default_instance() && min_ != NULL;
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_System_Cpus_Cpu_State_Wait::min() const {
  const ::ywrapper::UintValue* p = min_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.State.Wait.min)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_System_Cpus_Cpu_State_Wait::release_min() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.State.Wait.min)
  
  ::ywrapper::UintValue* temp = min_;
  min_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_System_Cpus_Cpu_State_Wait::mutable_min() {
  
  if (min_ == NULL) {
    min_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.State.Wait.min)
  return min_;
}
inline void AccessPoints_AccessPoint_System_Cpus_Cpu_State_Wait::set_allocated_min(::ywrapper::UintValue* min) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(min_);
  }
  if (min) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      min = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, min, submessage_arena);
    }
    
  } else {
    
  }
  min_ = min;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.State.Wait.min)
}

// -------------------------------------------------------------------

// AccessPoints_AccessPoint_System_Cpus_Cpu_State

// .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.State.HardwareInterrupt hardware_interrupt = 273227848 [(.yext.schemapath) = "/access-points/access-point/system/cpus/cpu/state/hardware-interrupt"];
inline bool AccessPoints_AccessPoint_System_Cpus_Cpu_State::has_hardware_interrupt() const {
  return this != internal_default_instance() && hardware_interrupt_ != NULL;
}
inline void AccessPoints_AccessPoint_System_Cpus_Cpu_State::clear_hardware_interrupt() {
  if (GetArenaNoVirtual() == NULL && hardware_interrupt_ != NULL) {
    delete hardware_interrupt_;
  }
  hardware_interrupt_ = NULL;
}
inline const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Cpus_Cpu_State_HardwareInterrupt& AccessPoints_AccessPoint_System_Cpus_Cpu_State::hardware_interrupt() const {
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Cpus_Cpu_State_HardwareInterrupt* p = hardware_interrupt_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.State.hardware_interrupt)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Cpus_Cpu_State_HardwareInterrupt*>(
      &::openconfig::openconfig_access_points::_AccessPoints_AccessPoint_System_Cpus_Cpu_State_HardwareInterrupt_default_instance_);
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Cpus_Cpu_State_HardwareInterrupt* AccessPoints_AccessPoint_System_Cpus_Cpu_State::release_hardware_interrupt() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.State.hardware_interrupt)
  
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Cpus_Cpu_State_HardwareInterrupt* temp = hardware_interrupt_;
  hardware_interrupt_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Cpus_Cpu_State_HardwareInterrupt* AccessPoints_AccessPoint_System_Cpus_Cpu_State::mutable_hardware_interrupt() {
  
  if (hardware_interrupt_ == NULL) {
    hardware_interrupt_ = new ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Cpus_Cpu_State_HardwareInterrupt;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.State.hardware_interrupt)
  return hardware_interrupt_;
}
inline void AccessPoints_AccessPoint_System_Cpus_Cpu_State::set_allocated_hardware_interrupt(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Cpus_Cpu_State_HardwareInterrupt* hardware_interrupt) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete hardware_interrupt_;
  }
  if (hardware_interrupt) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      hardware_interrupt = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, hardware_interrupt, submessage_arena);
    }
    
  } else {
    
  }
  hardware_interrupt_ = hardware_interrupt;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.State.hardware_interrupt)
}

// .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.State.Idle idle = 37519840 [(.yext.schemapath) = "/access-points/access-point/system/cpus/cpu/state/idle"];
inline bool AccessPoints_AccessPoint_System_Cpus_Cpu_State::has_idle() const {
  return this != internal_default_instance() && idle_ != NULL;
}
inline void AccessPoints_AccessPoint_System_Cpus_Cpu_State::clear_idle() {
  if (GetArenaNoVirtual() == NULL && idle_ != NULL) {
    delete idle_;
  }
  idle_ = NULL;
}
inline const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Cpus_Cpu_State_Idle& AccessPoints_AccessPoint_System_Cpus_Cpu_State::idle() const {
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Cpus_Cpu_State_Idle* p = idle_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.State.idle)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Cpus_Cpu_State_Idle*>(
      &::openconfig::openconfig_access_points::_AccessPoints_AccessPoint_System_Cpus_Cpu_State_Idle_default_instance_);
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Cpus_Cpu_State_Idle* AccessPoints_AccessPoint_System_Cpus_Cpu_State::release_idle() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.State.idle)
  
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Cpus_Cpu_State_Idle* temp = idle_;
  idle_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Cpus_Cpu_State_Idle* AccessPoints_AccessPoint_System_Cpus_Cpu_State::mutable_idle() {
  
  if (idle_ == NULL) {
    idle_ = new ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Cpus_Cpu_State_Idle;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.State.idle)
  return idle_;
}
inline void AccessPoints_AccessPoint_System_Cpus_Cpu_State::set_allocated_idle(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Cpus_Cpu_State_Idle* idle) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete idle_;
  }
  if (idle) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      idle = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, idle, submessage_arena);
    }
    
  } else {
    
  }
  idle_ = idle;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.State.idle)
}

// .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.State.Index index_index = 4399175;
inline bool AccessPoints_AccessPoint_System_Cpus_Cpu_State::has_index_index() const {
  return index_case() == kIndexIndex;
}
inline void AccessPoints_AccessPoint_System_Cpus_Cpu_State::set_has_index_index() {
  _oneof_case_[0] = kIndexIndex;
}
inline void AccessPoints_AccessPoint_System_Cpus_Cpu_State::clear_index_index() {
  if (has_index_index()) {
    index_.index_index_ = 0;
    clear_has_index();
  }
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Cpus_Cpu_State_Index AccessPoints_AccessPoint_System_Cpus_Cpu_State::index_index() const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.State.index_index)
  if (has_index_index()) {
    return static_cast< ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Cpus_Cpu_State_Index >(index_.index_index_);
  }
  return static_cast< ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Cpus_Cpu_State_Index >(0);
}
inline void AccessPoints_AccessPoint_System_Cpus_Cpu_State::set_index_index(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Cpus_Cpu_State_Index value) {
  if (!has_index_index()) {
    clear_index();
    set_has_index_index();
  }
  index_.index_index_ = value;
  // @@protoc_insertion_point(field_set:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.State.index_index)
}

// uint64 index_uint64 = 217042799;
inline bool AccessPoints_AccessPoint_System_Cpus_Cpu_State::has_index_uint64() const {
  return index_case() == kIndexUint64;
}
inline void AccessPoints_AccessPoint_System_Cpus_Cpu_State::set_has_index_uint64() {
  _oneof_case_[0] = kIndexUint64;
}
inline void AccessPoints_AccessPoint_System_Cpus_Cpu_State::clear_index_uint64() {
  if (has_index_uint64()) {
    index_.index_uint64_ = GOOGLE_ULONGLONG(0);
    clear_has_index();
  }
}
inline ::google::protobuf::uint64 AccessPoints_AccessPoint_System_Cpus_Cpu_State::index_uint64() const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.State.index_uint64)
  if (has_index_uint64()) {
    return index_.index_uint64_;
  }
  return GOOGLE_ULONGLONG(0);
}
inline void AccessPoints_AccessPoint_System_Cpus_Cpu_State::set_index_uint64(::google::protobuf::uint64 value) {
  if (!has_index_uint64()) {
    clear_index();
    set_has_index_uint64();
  }
  index_.index_uint64_ = value;
  // @@protoc_insertion_point(field_set:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.State.index_uint64)
}

// .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.State.Kernel kernel = 363265477 [(.yext.schemapath) = "/access-points/access-point/system/cpus/cpu/state/kernel"];
inline bool AccessPoints_AccessPoint_System_Cpus_Cpu_State::has_kernel() const {
  return this != internal_default_instance() && kernel_ != NULL;
}
inline void AccessPoints_AccessPoint_System_Cpus_Cpu_State::clear_kernel() {
  if (GetArenaNoVirtual() == NULL && kernel_ != NULL) {
    delete kernel_;
  }
  kernel_ = NULL;
}
inline const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Cpus_Cpu_State_Kernel& AccessPoints_AccessPoint_System_Cpus_Cpu_State::kernel() const {
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Cpus_Cpu_State_Kernel* p = kernel_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.State.kernel)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Cpus_Cpu_State_Kernel*>(
      &::openconfig::openconfig_access_points::_AccessPoints_AccessPoint_System_Cpus_Cpu_State_Kernel_default_instance_);
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Cpus_Cpu_State_Kernel* AccessPoints_AccessPoint_System_Cpus_Cpu_State::release_kernel() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.State.kernel)
  
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Cpus_Cpu_State_Kernel* temp = kernel_;
  kernel_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Cpus_Cpu_State_Kernel* AccessPoints_AccessPoint_System_Cpus_Cpu_State::mutable_kernel() {
  
  if (kernel_ == NULL) {
    kernel_ = new ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Cpus_Cpu_State_Kernel;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.State.kernel)
  return kernel_;
}
inline void AccessPoints_AccessPoint_System_Cpus_Cpu_State::set_allocated_kernel(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Cpus_Cpu_State_Kernel* kernel) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete kernel_;
  }
  if (kernel) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      kernel = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, kernel, submessage_arena);
    }
    
  } else {
    
  }
  kernel_ = kernel;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.State.kernel)
}

// .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.State.Nice nice = 417763829 [(.yext.schemapath) = "/access-points/access-point/system/cpus/cpu/state/nice"];
inline bool AccessPoints_AccessPoint_System_Cpus_Cpu_State::has_nice() const {
  return this != internal_default_instance() && nice_ != NULL;
}
inline void AccessPoints_AccessPoint_System_Cpus_Cpu_State::clear_nice() {
  if (GetArenaNoVirtual() == NULL && nice_ != NULL) {
    delete nice_;
  }
  nice_ = NULL;
}
inline const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Cpus_Cpu_State_Nice& AccessPoints_AccessPoint_System_Cpus_Cpu_State::nice() const {
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Cpus_Cpu_State_Nice* p = nice_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.State.nice)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Cpus_Cpu_State_Nice*>(
      &::openconfig::openconfig_access_points::_AccessPoints_AccessPoint_System_Cpus_Cpu_State_Nice_default_instance_);
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Cpus_Cpu_State_Nice* AccessPoints_AccessPoint_System_Cpus_Cpu_State::release_nice() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.State.nice)
  
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Cpus_Cpu_State_Nice* temp = nice_;
  nice_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Cpus_Cpu_State_Nice* AccessPoints_AccessPoint_System_Cpus_Cpu_State::mutable_nice() {
  
  if (nice_ == NULL) {
    nice_ = new ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Cpus_Cpu_State_Nice;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.State.nice)
  return nice_;
}
inline void AccessPoints_AccessPoint_System_Cpus_Cpu_State::set_allocated_nice(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Cpus_Cpu_State_Nice* nice) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete nice_;
  }
  if (nice) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      nice = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, nice, submessage_arena);
    }
    
  } else {
    
  }
  nice_ = nice;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.State.nice)
}

// .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.State.SoftwareInterrupt software_interrupt = 398277371 [(.yext.schemapath) = "/access-points/access-point/system/cpus/cpu/state/software-interrupt"];
inline bool AccessPoints_AccessPoint_System_Cpus_Cpu_State::has_software_interrupt() const {
  return this != internal_default_instance() && software_interrupt_ != NULL;
}
inline void AccessPoints_AccessPoint_System_Cpus_Cpu_State::clear_software_interrupt() {
  if (GetArenaNoVirtual() == NULL && software_interrupt_ != NULL) {
    delete software_interrupt_;
  }
  software_interrupt_ = NULL;
}
inline const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Cpus_Cpu_State_SoftwareInterrupt& AccessPoints_AccessPoint_System_Cpus_Cpu_State::software_interrupt() const {
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Cpus_Cpu_State_SoftwareInterrupt* p = software_interrupt_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.State.software_interrupt)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Cpus_Cpu_State_SoftwareInterrupt*>(
      &::openconfig::openconfig_access_points::_AccessPoints_AccessPoint_System_Cpus_Cpu_State_SoftwareInterrupt_default_instance_);
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Cpus_Cpu_State_SoftwareInterrupt* AccessPoints_AccessPoint_System_Cpus_Cpu_State::release_software_interrupt() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.State.software_interrupt)
  
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Cpus_Cpu_State_SoftwareInterrupt* temp = software_interrupt_;
  software_interrupt_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Cpus_Cpu_State_SoftwareInterrupt* AccessPoints_AccessPoint_System_Cpus_Cpu_State::mutable_software_interrupt() {
  
  if (software_interrupt_ == NULL) {
    software_interrupt_ = new ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Cpus_Cpu_State_SoftwareInterrupt;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.State.software_interrupt)
  return software_interrupt_;
}
inline void AccessPoints_AccessPoint_System_Cpus_Cpu_State::set_allocated_software_interrupt(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Cpus_Cpu_State_SoftwareInterrupt* software_interrupt) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete software_interrupt_;
  }
  if (software_interrupt) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      software_interrupt = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, software_interrupt, submessage_arena);
    }
    
  } else {
    
  }
  software_interrupt_ = software_interrupt;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.State.software_interrupt)
}

// .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.State.Total total = 387104328 [(.yext.schemapath) = "/access-points/access-point/system/cpus/cpu/state/total"];
inline bool AccessPoints_AccessPoint_System_Cpus_Cpu_State::has_total() const {
  return this != internal_default_instance() && total_ != NULL;
}
inline void AccessPoints_AccessPoint_System_Cpus_Cpu_State::clear_total() {
  if (GetArenaNoVirtual() == NULL && total_ != NULL) {
    delete total_;
  }
  total_ = NULL;
}
inline const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Cpus_Cpu_State_Total& AccessPoints_AccessPoint_System_Cpus_Cpu_State::total() const {
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Cpus_Cpu_State_Total* p = total_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.State.total)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Cpus_Cpu_State_Total*>(
      &::openconfig::openconfig_access_points::_AccessPoints_AccessPoint_System_Cpus_Cpu_State_Total_default_instance_);
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Cpus_Cpu_State_Total* AccessPoints_AccessPoint_System_Cpus_Cpu_State::release_total() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.State.total)
  
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Cpus_Cpu_State_Total* temp = total_;
  total_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Cpus_Cpu_State_Total* AccessPoints_AccessPoint_System_Cpus_Cpu_State::mutable_total() {
  
  if (total_ == NULL) {
    total_ = new ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Cpus_Cpu_State_Total;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.State.total)
  return total_;
}
inline void AccessPoints_AccessPoint_System_Cpus_Cpu_State::set_allocated_total(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Cpus_Cpu_State_Total* total) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete total_;
  }
  if (total) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      total = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, total, submessage_arena);
    }
    
  } else {
    
  }
  total_ = total;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.State.total)
}

// .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.State.User user = 8692499 [(.yext.schemapath) = "/access-points/access-point/system/cpus/cpu/state/user"];
inline bool AccessPoints_AccessPoint_System_Cpus_Cpu_State::has_user() const {
  return this != internal_default_instance() && user_ != NULL;
}
inline void AccessPoints_AccessPoint_System_Cpus_Cpu_State::clear_user() {
  if (GetArenaNoVirtual() == NULL && user_ != NULL) {
    delete user_;
  }
  user_ = NULL;
}
inline const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Cpus_Cpu_State_User& AccessPoints_AccessPoint_System_Cpus_Cpu_State::user() const {
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Cpus_Cpu_State_User* p = user_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.State.user)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Cpus_Cpu_State_User*>(
      &::openconfig::openconfig_access_points::_AccessPoints_AccessPoint_System_Cpus_Cpu_State_User_default_instance_);
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Cpus_Cpu_State_User* AccessPoints_AccessPoint_System_Cpus_Cpu_State::release_user() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.State.user)
  
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Cpus_Cpu_State_User* temp = user_;
  user_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Cpus_Cpu_State_User* AccessPoints_AccessPoint_System_Cpus_Cpu_State::mutable_user() {
  
  if (user_ == NULL) {
    user_ = new ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Cpus_Cpu_State_User;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.State.user)
  return user_;
}
inline void AccessPoints_AccessPoint_System_Cpus_Cpu_State::set_allocated_user(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Cpus_Cpu_State_User* user) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete user_;
  }
  if (user) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      user = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, user, submessage_arena);
    }
    
  } else {
    
  }
  user_ = user;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.State.user)
}

// .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.State.Wait wait = 16659161 [(.yext.schemapath) = "/access-points/access-point/system/cpus/cpu/state/wait"];
inline bool AccessPoints_AccessPoint_System_Cpus_Cpu_State::has_wait() const {
  return this != internal_default_instance() && wait_ != NULL;
}
inline void AccessPoints_AccessPoint_System_Cpus_Cpu_State::clear_wait() {
  if (GetArenaNoVirtual() == NULL && wait_ != NULL) {
    delete wait_;
  }
  wait_ = NULL;
}
inline const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Cpus_Cpu_State_Wait& AccessPoints_AccessPoint_System_Cpus_Cpu_State::wait() const {
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Cpus_Cpu_State_Wait* p = wait_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.State.wait)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Cpus_Cpu_State_Wait*>(
      &::openconfig::openconfig_access_points::_AccessPoints_AccessPoint_System_Cpus_Cpu_State_Wait_default_instance_);
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Cpus_Cpu_State_Wait* AccessPoints_AccessPoint_System_Cpus_Cpu_State::release_wait() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.State.wait)
  
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Cpus_Cpu_State_Wait* temp = wait_;
  wait_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Cpus_Cpu_State_Wait* AccessPoints_AccessPoint_System_Cpus_Cpu_State::mutable_wait() {
  
  if (wait_ == NULL) {
    wait_ = new ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Cpus_Cpu_State_Wait;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.State.wait)
  return wait_;
}
inline void AccessPoints_AccessPoint_System_Cpus_Cpu_State::set_allocated_wait(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Cpus_Cpu_State_Wait* wait) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete wait_;
  }
  if (wait) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      wait = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, wait, submessage_arena);
    }
    
  } else {
    
  }
  wait_ = wait;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.State.wait)
}

inline bool AccessPoints_AccessPoint_System_Cpus_Cpu_State::has_index() const {
  return index_case() != INDEX_NOT_SET;
}
inline void AccessPoints_AccessPoint_System_Cpus_Cpu_State::clear_has_index() {
  _oneof_case_[0] = INDEX_NOT_SET;
}
inline AccessPoints_AccessPoint_System_Cpus_Cpu_State::IndexCase AccessPoints_AccessPoint_System_Cpus_Cpu_State::index_case() const {
  return AccessPoints_AccessPoint_System_Cpus_Cpu_State::IndexCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// AccessPoints_AccessPoint_System_Cpus_Cpu

// .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.State state = 23253231 [(.yext.schemapath) = "/access-points/access-point/system/cpus/cpu/state"];
inline bool AccessPoints_AccessPoint_System_Cpus_Cpu::has_state() const {
  return this != internal_default_instance() && state_ != NULL;
}
inline void AccessPoints_AccessPoint_System_Cpus_Cpu::clear_state() {
  if (GetArenaNoVirtual() == NULL && state_ != NULL) {
    delete state_;
  }
  state_ = NULL;
}
inline const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Cpus_Cpu_State& AccessPoints_AccessPoint_System_Cpus_Cpu::state() const {
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Cpus_Cpu_State* p = state_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.state)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Cpus_Cpu_State*>(
      &::openconfig::openconfig_access_points::_AccessPoints_AccessPoint_System_Cpus_Cpu_State_default_instance_);
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Cpus_Cpu_State* AccessPoints_AccessPoint_System_Cpus_Cpu::release_state() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.state)
  
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Cpus_Cpu_State* temp = state_;
  state_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Cpus_Cpu_State* AccessPoints_AccessPoint_System_Cpus_Cpu::mutable_state() {
  
  if (state_ == NULL) {
    state_ = new ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Cpus_Cpu_State;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.state)
  return state_;
}
inline void AccessPoints_AccessPoint_System_Cpus_Cpu::set_allocated_state(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Cpus_Cpu_State* state) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete state_;
  }
  if (state) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      state = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, state, submessage_arena);
    }
    
  } else {
    
  }
  state_ = state;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu.state)
}

// -------------------------------------------------------------------

// AccessPoints_AccessPoint_System_Cpus_CpuKey

// .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.CpuKey.Index index_index = 4399175;
inline bool AccessPoints_AccessPoint_System_Cpus_CpuKey::has_index_index() const {
  return index_case() == kIndexIndex;
}
inline void AccessPoints_AccessPoint_System_Cpus_CpuKey::set_has_index_index() {
  _oneof_case_[0] = kIndexIndex;
}
inline void AccessPoints_AccessPoint_System_Cpus_CpuKey::clear_index_index() {
  if (has_index_index()) {
    index_.index_index_ = 0;
    clear_has_index();
  }
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Cpus_CpuKey_Index AccessPoints_AccessPoint_System_Cpus_CpuKey::index_index() const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.CpuKey.index_index)
  if (has_index_index()) {
    return static_cast< ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Cpus_CpuKey_Index >(index_.index_index_);
  }
  return static_cast< ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Cpus_CpuKey_Index >(0);
}
inline void AccessPoints_AccessPoint_System_Cpus_CpuKey::set_index_index(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Cpus_CpuKey_Index value) {
  if (!has_index_index()) {
    clear_index();
    set_has_index_index();
  }
  index_.index_index_ = value;
  // @@protoc_insertion_point(field_set:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.CpuKey.index_index)
}

// uint64 index_uint64 = 217042799;
inline bool AccessPoints_AccessPoint_System_Cpus_CpuKey::has_index_uint64() const {
  return index_case() == kIndexUint64;
}
inline void AccessPoints_AccessPoint_System_Cpus_CpuKey::set_has_index_uint64() {
  _oneof_case_[0] = kIndexUint64;
}
inline void AccessPoints_AccessPoint_System_Cpus_CpuKey::clear_index_uint64() {
  if (has_index_uint64()) {
    index_.index_uint64_ = GOOGLE_ULONGLONG(0);
    clear_has_index();
  }
}
inline ::google::protobuf::uint64 AccessPoints_AccessPoint_System_Cpus_CpuKey::index_uint64() const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.CpuKey.index_uint64)
  if (has_index_uint64()) {
    return index_.index_uint64_;
  }
  return GOOGLE_ULONGLONG(0);
}
inline void AccessPoints_AccessPoint_System_Cpus_CpuKey::set_index_uint64(::google::protobuf::uint64 value) {
  if (!has_index_uint64()) {
    clear_index();
    set_has_index_uint64();
  }
  index_.index_uint64_ = value;
  // @@protoc_insertion_point(field_set:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.CpuKey.index_uint64)
}

// .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.Cpu cpu = 2;
inline bool AccessPoints_AccessPoint_System_Cpus_CpuKey::has_cpu() const {
  return this != internal_default_instance() && cpu_ != NULL;
}
inline void AccessPoints_AccessPoint_System_Cpus_CpuKey::clear_cpu() {
  if (GetArenaNoVirtual() == NULL && cpu_ != NULL) {
    delete cpu_;
  }
  cpu_ = NULL;
}
inline const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Cpus_Cpu& AccessPoints_AccessPoint_System_Cpus_CpuKey::cpu() const {
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Cpus_Cpu* p = cpu_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.CpuKey.cpu)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Cpus_Cpu*>(
      &::openconfig::openconfig_access_points::_AccessPoints_AccessPoint_System_Cpus_Cpu_default_instance_);
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Cpus_Cpu* AccessPoints_AccessPoint_System_Cpus_CpuKey::release_cpu() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.CpuKey.cpu)
  
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Cpus_Cpu* temp = cpu_;
  cpu_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Cpus_Cpu* AccessPoints_AccessPoint_System_Cpus_CpuKey::mutable_cpu() {
  
  if (cpu_ == NULL) {
    cpu_ = new ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Cpus_Cpu;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.CpuKey.cpu)
  return cpu_;
}
inline void AccessPoints_AccessPoint_System_Cpus_CpuKey::set_allocated_cpu(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Cpus_Cpu* cpu) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete cpu_;
  }
  if (cpu) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      cpu = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, cpu, submessage_arena);
    }
    
  } else {
    
  }
  cpu_ = cpu;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.CpuKey.cpu)
}

inline bool AccessPoints_AccessPoint_System_Cpus_CpuKey::has_index() const {
  return index_case() != INDEX_NOT_SET;
}
inline void AccessPoints_AccessPoint_System_Cpus_CpuKey::clear_has_index() {
  _oneof_case_[0] = INDEX_NOT_SET;
}
inline AccessPoints_AccessPoint_System_Cpus_CpuKey::IndexCase AccessPoints_AccessPoint_System_Cpus_CpuKey::index_case() const {
  return AccessPoints_AccessPoint_System_Cpus_CpuKey::IndexCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// AccessPoints_AccessPoint_System_Cpus

// repeated .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.CpuKey cpu = 233570493 [(.yext.schemapath) = "/access-points/access-point/system/cpus/cpu"];
inline int AccessPoints_AccessPoint_System_Cpus::cpu_size() const {
  return cpu_.size();
}
inline void AccessPoints_AccessPoint_System_Cpus::clear_cpu() {
  cpu_.Clear();
}
inline const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Cpus_CpuKey& AccessPoints_AccessPoint_System_Cpus::cpu(int index) const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.cpu)
  return cpu_.Get(index);
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Cpus_CpuKey* AccessPoints_AccessPoint_System_Cpus::mutable_cpu(int index) {
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.cpu)
  return cpu_.Mutable(index);
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Cpus_CpuKey* AccessPoints_AccessPoint_System_Cpus::add_cpu() {
  // @@protoc_insertion_point(field_add:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.cpu)
  return cpu_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Cpus_CpuKey >*
AccessPoints_AccessPoint_System_Cpus::mutable_cpu() {
  // @@protoc_insertion_point(field_mutable_list:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.cpu)
  return &cpu_;
}
inline const ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Cpus_CpuKey >&
AccessPoints_AccessPoint_System_Cpus::cpu() const {
  // @@protoc_insertion_point(field_list:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus.cpu)
  return cpu_;
}

// -------------------------------------------------------------------

// AccessPoints_AccessPoint_System_Dns_Config

// repeated .ywrapper.StringValue search = 458288600 [(.yext.schemapath) = "/access-points/access-point/system/dns/config/search"];
inline int AccessPoints_AccessPoint_System_Dns_Config::search_size() const {
  return search_.size();
}
inline const ::ywrapper::StringValue& AccessPoints_AccessPoint_System_Dns_Config::search(int index) const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Dns.Config.search)
  return search_.Get(index);
}
inline ::ywrapper::StringValue* AccessPoints_AccessPoint_System_Dns_Config::mutable_search(int index) {
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Dns.Config.search)
  return search_.Mutable(index);
}
inline ::ywrapper::StringValue* AccessPoints_AccessPoint_System_Dns_Config::add_search() {
  // @@protoc_insertion_point(field_add:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Dns.Config.search)
  return search_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::ywrapper::StringValue >*
AccessPoints_AccessPoint_System_Dns_Config::mutable_search() {
  // @@protoc_insertion_point(field_mutable_list:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Dns.Config.search)
  return &search_;
}
inline const ::google::protobuf::RepeatedPtrField< ::ywrapper::StringValue >&
AccessPoints_AccessPoint_System_Dns_Config::search() const {
  // @@protoc_insertion_point(field_list:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Dns.Config.search)
  return search_;
}

// -------------------------------------------------------------------

// AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntry_Config

// repeated .ywrapper.StringValue alias = 336343364 [(.yext.schemapath) = "/access-points/access-point/system/dns/host-entries/host-entry/config/alias"];
inline int AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntry_Config::alias_size() const {
  return alias_.size();
}
inline const ::ywrapper::StringValue& AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntry_Config::alias(int index) const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Dns.HostEntries.HostEntry.Config.alias)
  return alias_.Get(index);
}
inline ::ywrapper::StringValue* AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntry_Config::mutable_alias(int index) {
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Dns.HostEntries.HostEntry.Config.alias)
  return alias_.Mutable(index);
}
inline ::ywrapper::StringValue* AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntry_Config::add_alias() {
  // @@protoc_insertion_point(field_add:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Dns.HostEntries.HostEntry.Config.alias)
  return alias_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::ywrapper::StringValue >*
AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntry_Config::mutable_alias() {
  // @@protoc_insertion_point(field_mutable_list:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Dns.HostEntries.HostEntry.Config.alias)
  return &alias_;
}
inline const ::google::protobuf::RepeatedPtrField< ::ywrapper::StringValue >&
AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntry_Config::alias() const {
  // @@protoc_insertion_point(field_list:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Dns.HostEntries.HostEntry.Config.alias)
  return alias_;
}

// .ywrapper.StringValue hostname = 126930371 [(.yext.schemapath) = "/access-points/access-point/system/dns/host-entries/host-entry/config/hostname"];
inline bool AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntry_Config::has_hostname() const {
  return this != internal_default_instance() && hostname_ != NULL;
}
inline const ::ywrapper::StringValue& AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntry_Config::hostname() const {
  const ::ywrapper::StringValue* p = hostname_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Dns.HostEntries.HostEntry.Config.hostname)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::StringValue*>(
      &::ywrapper::_StringValue_default_instance_);
}
inline ::ywrapper::StringValue* AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntry_Config::release_hostname() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Dns.HostEntries.HostEntry.Config.hostname)
  
  ::ywrapper::StringValue* temp = hostname_;
  hostname_ = NULL;
  return temp;
}
inline ::ywrapper::StringValue* AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntry_Config::mutable_hostname() {
  
  if (hostname_ == NULL) {
    hostname_ = new ::ywrapper::StringValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Dns.HostEntries.HostEntry.Config.hostname)
  return hostname_;
}
inline void AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntry_Config::set_allocated_hostname(::ywrapper::StringValue* hostname) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(hostname_);
  }
  if (hostname) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      hostname = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, hostname, submessage_arena);
    }
    
  } else {
    
  }
  hostname_ = hostname;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Dns.HostEntries.HostEntry.Config.hostname)
}

// repeated .ywrapper.StringValue ipv4_address = 242013126 [(.yext.schemapath) = "/access-points/access-point/system/dns/host-entries/host-entry/config/ipv4-address"];
inline int AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntry_Config::ipv4_address_size() const {
  return ipv4_address_.size();
}
inline const ::ywrapper::StringValue& AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntry_Config::ipv4_address(int index) const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Dns.HostEntries.HostEntry.Config.ipv4_address)
  return ipv4_address_.Get(index);
}
inline ::ywrapper::StringValue* AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntry_Config::mutable_ipv4_address(int index) {
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Dns.HostEntries.HostEntry.Config.ipv4_address)
  return ipv4_address_.Mutable(index);
}
inline ::ywrapper::StringValue* AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntry_Config::add_ipv4_address() {
  // @@protoc_insertion_point(field_add:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Dns.HostEntries.HostEntry.Config.ipv4_address)
  return ipv4_address_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::ywrapper::StringValue >*
AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntry_Config::mutable_ipv4_address() {
  // @@protoc_insertion_point(field_mutable_list:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Dns.HostEntries.HostEntry.Config.ipv4_address)
  return &ipv4_address_;
}
inline const ::google::protobuf::RepeatedPtrField< ::ywrapper::StringValue >&
AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntry_Config::ipv4_address() const {
  // @@protoc_insertion_point(field_list:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Dns.HostEntries.HostEntry.Config.ipv4_address)
  return ipv4_address_;
}

// repeated .ywrapper.StringValue ipv6_address = 224746148 [(.yext.schemapath) = "/access-points/access-point/system/dns/host-entries/host-entry/config/ipv6-address"];
inline int AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntry_Config::ipv6_address_size() const {
  return ipv6_address_.size();
}
inline const ::ywrapper::StringValue& AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntry_Config::ipv6_address(int index) const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Dns.HostEntries.HostEntry.Config.ipv6_address)
  return ipv6_address_.Get(index);
}
inline ::ywrapper::StringValue* AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntry_Config::mutable_ipv6_address(int index) {
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Dns.HostEntries.HostEntry.Config.ipv6_address)
  return ipv6_address_.Mutable(index);
}
inline ::ywrapper::StringValue* AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntry_Config::add_ipv6_address() {
  // @@protoc_insertion_point(field_add:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Dns.HostEntries.HostEntry.Config.ipv6_address)
  return ipv6_address_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::ywrapper::StringValue >*
AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntry_Config::mutable_ipv6_address() {
  // @@protoc_insertion_point(field_mutable_list:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Dns.HostEntries.HostEntry.Config.ipv6_address)
  return &ipv6_address_;
}
inline const ::google::protobuf::RepeatedPtrField< ::ywrapper::StringValue >&
AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntry_Config::ipv6_address() const {
  // @@protoc_insertion_point(field_list:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Dns.HostEntries.HostEntry.Config.ipv6_address)
  return ipv6_address_;
}

// -------------------------------------------------------------------

// AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntry_State

// repeated .ywrapper.StringValue alias = 163727759 [(.yext.schemapath) = "/access-points/access-point/system/dns/host-entries/host-entry/state/alias"];
inline int AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntry_State::alias_size() const {
  return alias_.size();
}
inline const ::ywrapper::StringValue& AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntry_State::alias(int index) const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Dns.HostEntries.HostEntry.State.alias)
  return alias_.Get(index);
}
inline ::ywrapper::StringValue* AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntry_State::mutable_alias(int index) {
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Dns.HostEntries.HostEntry.State.alias)
  return alias_.Mutable(index);
}
inline ::ywrapper::StringValue* AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntry_State::add_alias() {
  // @@protoc_insertion_point(field_add:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Dns.HostEntries.HostEntry.State.alias)
  return alias_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::ywrapper::StringValue >*
AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntry_State::mutable_alias() {
  // @@protoc_insertion_point(field_mutable_list:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Dns.HostEntries.HostEntry.State.alias)
  return &alias_;
}
inline const ::google::protobuf::RepeatedPtrField< ::ywrapper::StringValue >&
AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntry_State::alias() const {
  // @@protoc_insertion_point(field_list:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Dns.HostEntries.HostEntry.State.alias)
  return alias_;
}

// .ywrapper.StringValue hostname = 13351578 [(.yext.schemapath) = "/access-points/access-point/system/dns/host-entries/host-entry/state/hostname"];
inline bool AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntry_State::has_hostname() const {
  return this != internal_default_instance() && hostname_ != NULL;
}
inline const ::ywrapper::StringValue& AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntry_State::hostname() const {
  const ::ywrapper::StringValue* p = hostname_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Dns.HostEntries.HostEntry.State.hostname)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::StringValue*>(
      &::ywrapper::_StringValue_default_instance_);
}
inline ::ywrapper::StringValue* AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntry_State::release_hostname() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Dns.HostEntries.HostEntry.State.hostname)
  
  ::ywrapper::StringValue* temp = hostname_;
  hostname_ = NULL;
  return temp;
}
inline ::ywrapper::StringValue* AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntry_State::mutable_hostname() {
  
  if (hostname_ == NULL) {
    hostname_ = new ::ywrapper::StringValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Dns.HostEntries.HostEntry.State.hostname)
  return hostname_;
}
inline void AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntry_State::set_allocated_hostname(::ywrapper::StringValue* hostname) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(hostname_);
  }
  if (hostname) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      hostname = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, hostname, submessage_arena);
    }
    
  } else {
    
  }
  hostname_ = hostname;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Dns.HostEntries.HostEntry.State.hostname)
}

// repeated .ywrapper.StringValue ipv4_address = 40211623 [(.yext.schemapath) = "/access-points/access-point/system/dns/host-entries/host-entry/state/ipv4-address"];
inline int AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntry_State::ipv4_address_size() const {
  return ipv4_address_.size();
}
inline const ::ywrapper::StringValue& AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntry_State::ipv4_address(int index) const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Dns.HostEntries.HostEntry.State.ipv4_address)
  return ipv4_address_.Get(index);
}
inline ::ywrapper::StringValue* AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntry_State::mutable_ipv4_address(int index) {
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Dns.HostEntries.HostEntry.State.ipv4_address)
  return ipv4_address_.Mutable(index);
}
inline ::ywrapper::StringValue* AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntry_State::add_ipv4_address() {
  // @@protoc_insertion_point(field_add:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Dns.HostEntries.HostEntry.State.ipv4_address)
  return ipv4_address_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::ywrapper::StringValue >*
AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntry_State::mutable_ipv4_address() {
  // @@protoc_insertion_point(field_mutable_list:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Dns.HostEntries.HostEntry.State.ipv4_address)
  return &ipv4_address_;
}
inline const ::google::protobuf::RepeatedPtrField< ::ywrapper::StringValue >&
AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntry_State::ipv4_address() const {
  // @@protoc_insertion_point(field_list:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Dns.HostEntries.HostEntry.State.ipv4_address)
  return ipv4_address_;
}

// repeated .ywrapper.StringValue ipv6_address = 398588917 [(.yext.schemapath) = "/access-points/access-point/system/dns/host-entries/host-entry/state/ipv6-address"];
inline int AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntry_State::ipv6_address_size() const {
  return ipv6_address_.size();
}
inline const ::ywrapper::StringValue& AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntry_State::ipv6_address(int index) const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Dns.HostEntries.HostEntry.State.ipv6_address)
  return ipv6_address_.Get(index);
}
inline ::ywrapper::StringValue* AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntry_State::mutable_ipv6_address(int index) {
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Dns.HostEntries.HostEntry.State.ipv6_address)
  return ipv6_address_.Mutable(index);
}
inline ::ywrapper::StringValue* AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntry_State::add_ipv6_address() {
  // @@protoc_insertion_point(field_add:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Dns.HostEntries.HostEntry.State.ipv6_address)
  return ipv6_address_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::ywrapper::StringValue >*
AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntry_State::mutable_ipv6_address() {
  // @@protoc_insertion_point(field_mutable_list:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Dns.HostEntries.HostEntry.State.ipv6_address)
  return &ipv6_address_;
}
inline const ::google::protobuf::RepeatedPtrField< ::ywrapper::StringValue >&
AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntry_State::ipv6_address() const {
  // @@protoc_insertion_point(field_list:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Dns.HostEntries.HostEntry.State.ipv6_address)
  return ipv6_address_;
}

// -------------------------------------------------------------------

// AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntry

// .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Dns.HostEntries.HostEntry.Config config = 42898997 [(.yext.schemapath) = "/access-points/access-point/system/dns/host-entries/host-entry/config"];
inline bool AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntry::has_config() const {
  return this != internal_default_instance() && config_ != NULL;
}
inline void AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntry::clear_config() {
  if (GetArenaNoVirtual() == NULL && config_ != NULL) {
    delete config_;
  }
  config_ = NULL;
}
inline const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntry_Config& AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntry::config() const {
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntry_Config* p = config_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Dns.HostEntries.HostEntry.config)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntry_Config*>(
      &::openconfig::openconfig_access_points::_AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntry_Config_default_instance_);
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntry_Config* AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntry::release_config() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Dns.HostEntries.HostEntry.config)
  
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntry_Config* temp = config_;
  config_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntry_Config* AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntry::mutable_config() {
  
  if (config_ == NULL) {
    config_ = new ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntry_Config;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Dns.HostEntries.HostEntry.config)
  return config_;
}
inline void AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntry::set_allocated_config(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntry_Config* config) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete config_;
  }
  if (config) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      config = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, config, submessage_arena);
    }
    
  } else {
    
  }
  config_ = config;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Dns.HostEntries.HostEntry.config)
}

// .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Dns.HostEntries.HostEntry.State state = 131102762 [(.yext.schemapath) = "/access-points/access-point/system/dns/host-entries/host-entry/state"];
inline bool AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntry::has_state() const {
  return this != internal_default_instance() && state_ != NULL;
}
inline void AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntry::clear_state() {
  if (GetArenaNoVirtual() == NULL && state_ != NULL) {
    delete state_;
  }
  state_ = NULL;
}
inline const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntry_State& AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntry::state() const {
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntry_State* p = state_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Dns.HostEntries.HostEntry.state)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntry_State*>(
      &::openconfig::openconfig_access_points::_AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntry_State_default_instance_);
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntry_State* AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntry::release_state() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Dns.HostEntries.HostEntry.state)
  
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntry_State* temp = state_;
  state_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntry_State* AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntry::mutable_state() {
  
  if (state_ == NULL) {
    state_ = new ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntry_State;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Dns.HostEntries.HostEntry.state)
  return state_;
}
inline void AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntry::set_allocated_state(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntry_State* state) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete state_;
  }
  if (state) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      state = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, state, submessage_arena);
    }
    
  } else {
    
  }
  state_ = state;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Dns.HostEntries.HostEntry.state)
}

// -------------------------------------------------------------------

// AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntryKey

// string hostname = 1 [(.yext.schemapath) = "/access-points/access-point/system/dns/host-entries/host-entry/hostname"];
inline void AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntryKey::clear_hostname() {
  hostname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntryKey::hostname() const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Dns.HostEntries.HostEntryKey.hostname)
  return hostname_.GetNoArena();
}
inline void AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntryKey::set_hostname(const ::std::string& value) {
  
  hostname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Dns.HostEntries.HostEntryKey.hostname)
}
#if LANG_CXX11
inline void AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntryKey::set_hostname(::std::string&& value) {
  
  hostname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Dns.HostEntries.HostEntryKey.hostname)
}
#endif
inline void AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntryKey::set_hostname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  hostname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Dns.HostEntries.HostEntryKey.hostname)
}
inline void AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntryKey::set_hostname(const char* value, size_t size) {
  
  hostname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Dns.HostEntries.HostEntryKey.hostname)
}
inline ::std::string* AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntryKey::mutable_hostname() {
  
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Dns.HostEntries.HostEntryKey.hostname)
  return hostname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntryKey::release_hostname() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Dns.HostEntries.HostEntryKey.hostname)
  
  return hostname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntryKey::set_allocated_hostname(::std::string* hostname) {
  if (hostname != NULL) {
    
  } else {
    
  }
  hostname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), hostname);
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Dns.HostEntries.HostEntryKey.hostname)
}

// .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Dns.HostEntries.HostEntry host_entry = 2;
inline bool AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntryKey::has_host_entry() const {
  return this != internal_default_instance() && host_entry_ != NULL;
}
inline void AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntryKey::clear_host_entry() {
  if (GetArenaNoVirtual() == NULL && host_entry_ != NULL) {
    delete host_entry_;
  }
  host_entry_ = NULL;
}
inline const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntry& AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntryKey::host_entry() const {
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntry* p = host_entry_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Dns.HostEntries.HostEntryKey.host_entry)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntry*>(
      &::openconfig::openconfig_access_points::_AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntry_default_instance_);
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntry* AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntryKey::release_host_entry() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Dns.HostEntries.HostEntryKey.host_entry)
  
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntry* temp = host_entry_;
  host_entry_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntry* AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntryKey::mutable_host_entry() {
  
  if (host_entry_ == NULL) {
    host_entry_ = new ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntry;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Dns.HostEntries.HostEntryKey.host_entry)
  return host_entry_;
}
inline void AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntryKey::set_allocated_host_entry(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntry* host_entry) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete host_entry_;
  }
  if (host_entry) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      host_entry = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, host_entry, submessage_arena);
    }
    
  } else {
    
  }
  host_entry_ = host_entry;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Dns.HostEntries.HostEntryKey.host_entry)
}

// -------------------------------------------------------------------

// AccessPoints_AccessPoint_System_Dns_HostEntries

// repeated .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Dns.HostEntries.HostEntryKey host_entry = 236493120 [(.yext.schemapath) = "/access-points/access-point/system/dns/host-entries/host-entry"];
inline int AccessPoints_AccessPoint_System_Dns_HostEntries::host_entry_size() const {
  return host_entry_.size();
}
inline void AccessPoints_AccessPoint_System_Dns_HostEntries::clear_host_entry() {
  host_entry_.Clear();
}
inline const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntryKey& AccessPoints_AccessPoint_System_Dns_HostEntries::host_entry(int index) const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Dns.HostEntries.host_entry)
  return host_entry_.Get(index);
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntryKey* AccessPoints_AccessPoint_System_Dns_HostEntries::mutable_host_entry(int index) {
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Dns.HostEntries.host_entry)
  return host_entry_.Mutable(index);
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntryKey* AccessPoints_AccessPoint_System_Dns_HostEntries::add_host_entry() {
  // @@protoc_insertion_point(field_add:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Dns.HostEntries.host_entry)
  return host_entry_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntryKey >*
AccessPoints_AccessPoint_System_Dns_HostEntries::mutable_host_entry() {
  // @@protoc_insertion_point(field_mutable_list:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Dns.HostEntries.host_entry)
  return &host_entry_;
}
inline const ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Dns_HostEntries_HostEntryKey >&
AccessPoints_AccessPoint_System_Dns_HostEntries::host_entry() const {
  // @@protoc_insertion_point(field_list:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Dns.HostEntries.host_entry)
  return host_entry_;
}

// -------------------------------------------------------------------

// AccessPoints_AccessPoint_System_Dns_Servers_Server_Config

// .ywrapper.StringValue address = 499568143 [(.yext.schemapath) = "/access-points/access-point/system/dns/servers/server/config/address"];
inline bool AccessPoints_AccessPoint_System_Dns_Servers_Server_Config::has_address() const {
  return this != internal_default_instance() && address_ != NULL;
}
inline const ::ywrapper::StringValue& AccessPoints_AccessPoint_System_Dns_Servers_Server_Config::address() const {
  const ::ywrapper::StringValue* p = address_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Dns.Servers.Server.Config.address)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::StringValue*>(
      &::ywrapper::_StringValue_default_instance_);
}
inline ::ywrapper::StringValue* AccessPoints_AccessPoint_System_Dns_Servers_Server_Config::release_address() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Dns.Servers.Server.Config.address)
  
  ::ywrapper::StringValue* temp = address_;
  address_ = NULL;
  return temp;
}
inline ::ywrapper::StringValue* AccessPoints_AccessPoint_System_Dns_Servers_Server_Config::mutable_address() {
  
  if (address_ == NULL) {
    address_ = new ::ywrapper::StringValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Dns.Servers.Server.Config.address)
  return address_;
}
inline void AccessPoints_AccessPoint_System_Dns_Servers_Server_Config::set_allocated_address(::ywrapper::StringValue* address) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(address_);
  }
  if (address) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      address = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, address, submessage_arena);
    }
    
  } else {
    
  }
  address_ = address;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Dns.Servers.Server.Config.address)
}

// .ywrapper.UintValue port = 279662040 [(.yext.schemapath) = "/access-points/access-point/system/dns/servers/server/config/port"];
inline bool AccessPoints_AccessPoint_System_Dns_Servers_Server_Config::has_port() const {
  return this != internal_default_instance() && port_ != NULL;
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_System_Dns_Servers_Server_Config::port() const {
  const ::ywrapper::UintValue* p = port_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Dns.Servers.Server.Config.port)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_System_Dns_Servers_Server_Config::release_port() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Dns.Servers.Server.Config.port)
  
  ::ywrapper::UintValue* temp = port_;
  port_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_System_Dns_Servers_Server_Config::mutable_port() {
  
  if (port_ == NULL) {
    port_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Dns.Servers.Server.Config.port)
  return port_;
}
inline void AccessPoints_AccessPoint_System_Dns_Servers_Server_Config::set_allocated_port(::ywrapper::UintValue* port) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(port_);
  }
  if (port) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      port = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, port, submessage_arena);
    }
    
  } else {
    
  }
  port_ = port;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Dns.Servers.Server.Config.port)
}

// -------------------------------------------------------------------

// AccessPoints_AccessPoint_System_Dns_Servers_Server_State

// .ywrapper.StringValue address = 161316790 [(.yext.schemapath) = "/access-points/access-point/system/dns/servers/server/state/address"];
inline bool AccessPoints_AccessPoint_System_Dns_Servers_Server_State::has_address() const {
  return this != internal_default_instance() && address_ != NULL;
}
inline const ::ywrapper::StringValue& AccessPoints_AccessPoint_System_Dns_Servers_Server_State::address() const {
  const ::ywrapper::StringValue* p = address_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Dns.Servers.Server.State.address)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::StringValue*>(
      &::ywrapper::_StringValue_default_instance_);
}
inline ::ywrapper::StringValue* AccessPoints_AccessPoint_System_Dns_Servers_Server_State::release_address() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Dns.Servers.Server.State.address)
  
  ::ywrapper::StringValue* temp = address_;
  address_ = NULL;
  return temp;
}
inline ::ywrapper::StringValue* AccessPoints_AccessPoint_System_Dns_Servers_Server_State::mutable_address() {
  
  if (address_ == NULL) {
    address_ = new ::ywrapper::StringValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Dns.Servers.Server.State.address)
  return address_;
}
inline void AccessPoints_AccessPoint_System_Dns_Servers_Server_State::set_allocated_address(::ywrapper::StringValue* address) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(address_);
  }
  if (address) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      address = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, address, submessage_arena);
    }
    
  } else {
    
  }
  address_ = address;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Dns.Servers.Server.State.address)
}

// .ywrapper.UintValue port = 387479239 [(.yext.schemapath) = "/access-points/access-point/system/dns/servers/server/state/port"];
inline bool AccessPoints_AccessPoint_System_Dns_Servers_Server_State::has_port() const {
  return this != internal_default_instance() && port_ != NULL;
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_System_Dns_Servers_Server_State::port() const {
  const ::ywrapper::UintValue* p = port_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Dns.Servers.Server.State.port)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_System_Dns_Servers_Server_State::release_port() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Dns.Servers.Server.State.port)
  
  ::ywrapper::UintValue* temp = port_;
  port_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_System_Dns_Servers_Server_State::mutable_port() {
  
  if (port_ == NULL) {
    port_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Dns.Servers.Server.State.port)
  return port_;
}
inline void AccessPoints_AccessPoint_System_Dns_Servers_Server_State::set_allocated_port(::ywrapper::UintValue* port) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(port_);
  }
  if (port) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      port = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, port, submessage_arena);
    }
    
  } else {
    
  }
  port_ = port;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Dns.Servers.Server.State.port)
}

// -------------------------------------------------------------------

// AccessPoints_AccessPoint_System_Dns_Servers_Server

// .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Dns.Servers.Server.Config config = 169600110 [(.yext.schemapath) = "/access-points/access-point/system/dns/servers/server/config"];
inline bool AccessPoints_AccessPoint_System_Dns_Servers_Server::has_config() const {
  return this != internal_default_instance() && config_ != NULL;
}
inline void AccessPoints_AccessPoint_System_Dns_Servers_Server::clear_config() {
  if (GetArenaNoVirtual() == NULL && config_ != NULL) {
    delete config_;
  }
  config_ = NULL;
}
inline const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Dns_Servers_Server_Config& AccessPoints_AccessPoint_System_Dns_Servers_Server::config() const {
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Dns_Servers_Server_Config* p = config_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Dns.Servers.Server.config)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Dns_Servers_Server_Config*>(
      &::openconfig::openconfig_access_points::_AccessPoints_AccessPoint_System_Dns_Servers_Server_Config_default_instance_);
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Dns_Servers_Server_Config* AccessPoints_AccessPoint_System_Dns_Servers_Server::release_config() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Dns.Servers.Server.config)
  
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Dns_Servers_Server_Config* temp = config_;
  config_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Dns_Servers_Server_Config* AccessPoints_AccessPoint_System_Dns_Servers_Server::mutable_config() {
  
  if (config_ == NULL) {
    config_ = new ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Dns_Servers_Server_Config;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Dns.Servers.Server.config)
  return config_;
}
inline void AccessPoints_AccessPoint_System_Dns_Servers_Server::set_allocated_config(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Dns_Servers_Server_Config* config) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete config_;
  }
  if (config) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      config = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, config, submessage_arena);
    }
    
  } else {
    
  }
  config_ = config;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Dns.Servers.Server.config)
}

// .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Dns.Servers.Server.State state = 119960475 [(.yext.schemapath) = "/access-points/access-point/system/dns/servers/server/state"];
inline bool AccessPoints_AccessPoint_System_Dns_Servers_Server::has_state() const {
  return this != internal_default_instance() && state_ != NULL;
}
inline void AccessPoints_AccessPoint_System_Dns_Servers_Server::clear_state() {
  if (GetArenaNoVirtual() == NULL && state_ != NULL) {
    delete state_;
  }
  state_ = NULL;
}
inline const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Dns_Servers_Server_State& AccessPoints_AccessPoint_System_Dns_Servers_Server::state() const {
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Dns_Servers_Server_State* p = state_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Dns.Servers.Server.state)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Dns_Servers_Server_State*>(
      &::openconfig::openconfig_access_points::_AccessPoints_AccessPoint_System_Dns_Servers_Server_State_default_instance_);
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Dns_Servers_Server_State* AccessPoints_AccessPoint_System_Dns_Servers_Server::release_state() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Dns.Servers.Server.state)
  
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Dns_Servers_Server_State* temp = state_;
  state_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Dns_Servers_Server_State* AccessPoints_AccessPoint_System_Dns_Servers_Server::mutable_state() {
  
  if (state_ == NULL) {
    state_ = new ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Dns_Servers_Server_State;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Dns.Servers.Server.state)
  return state_;
}
inline void AccessPoints_AccessPoint_System_Dns_Servers_Server::set_allocated_state(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Dns_Servers_Server_State* state) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete state_;
  }
  if (state) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      state = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, state, submessage_arena);
    }
    
  } else {
    
  }
  state_ = state;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Dns.Servers.Server.state)
}

// -------------------------------------------------------------------

// AccessPoints_AccessPoint_System_Dns_Servers_ServerKey

// string address = 1 [(.yext.schemapath) = "/access-points/access-point/system/dns/servers/server/address"];
inline void AccessPoints_AccessPoint_System_Dns_Servers_ServerKey::clear_address() {
  address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AccessPoints_AccessPoint_System_Dns_Servers_ServerKey::address() const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Dns.Servers.ServerKey.address)
  return address_.GetNoArena();
}
inline void AccessPoints_AccessPoint_System_Dns_Servers_ServerKey::set_address(const ::std::string& value) {
  
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Dns.Servers.ServerKey.address)
}
#if LANG_CXX11
inline void AccessPoints_AccessPoint_System_Dns_Servers_ServerKey::set_address(::std::string&& value) {
  
  address_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Dns.Servers.ServerKey.address)
}
#endif
inline void AccessPoints_AccessPoint_System_Dns_Servers_ServerKey::set_address(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Dns.Servers.ServerKey.address)
}
inline void AccessPoints_AccessPoint_System_Dns_Servers_ServerKey::set_address(const char* value, size_t size) {
  
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Dns.Servers.ServerKey.address)
}
inline ::std::string* AccessPoints_AccessPoint_System_Dns_Servers_ServerKey::mutable_address() {
  
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Dns.Servers.ServerKey.address)
  return address_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AccessPoints_AccessPoint_System_Dns_Servers_ServerKey::release_address() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Dns.Servers.ServerKey.address)
  
  return address_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AccessPoints_AccessPoint_System_Dns_Servers_ServerKey::set_allocated_address(::std::string* address) {
  if (address != NULL) {
    
  } else {
    
  }
  address_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), address);
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Dns.Servers.ServerKey.address)
}

// .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Dns.Servers.Server server = 2;
inline bool AccessPoints_AccessPoint_System_Dns_Servers_ServerKey::has_server() const {
  return this != internal_default_instance() && server_ != NULL;
}
inline void AccessPoints_AccessPoint_System_Dns_Servers_ServerKey::clear_server() {
  if (GetArenaNoVirtual() == NULL && server_ != NULL) {
    delete server_;
  }
  server_ = NULL;
}
inline const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Dns_Servers_Server& AccessPoints_AccessPoint_System_Dns_Servers_ServerKey::server() const {
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Dns_Servers_Server* p = server_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Dns.Servers.ServerKey.server)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Dns_Servers_Server*>(
      &::openconfig::openconfig_access_points::_AccessPoints_AccessPoint_System_Dns_Servers_Server_default_instance_);
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Dns_Servers_Server* AccessPoints_AccessPoint_System_Dns_Servers_ServerKey::release_server() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Dns.Servers.ServerKey.server)
  
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Dns_Servers_Server* temp = server_;
  server_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Dns_Servers_Server* AccessPoints_AccessPoint_System_Dns_Servers_ServerKey::mutable_server() {
  
  if (server_ == NULL) {
    server_ = new ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Dns_Servers_Server;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Dns.Servers.ServerKey.server)
  return server_;
}
inline void AccessPoints_AccessPoint_System_Dns_Servers_ServerKey::set_allocated_server(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Dns_Servers_Server* server) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete server_;
  }
  if (server) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      server = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, server, submessage_arena);
    }
    
  } else {
    
  }
  server_ = server;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Dns.Servers.ServerKey.server)
}

// -------------------------------------------------------------------

// AccessPoints_AccessPoint_System_Dns_Servers

// repeated .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Dns.Servers.ServerKey server = 533138329 [(.yext.schemapath) = "/access-points/access-point/system/dns/servers/server"];
inline int AccessPoints_AccessPoint_System_Dns_Servers::server_size() const {
  return server_.size();
}
inline void AccessPoints_AccessPoint_System_Dns_Servers::clear_server() {
  server_.Clear();
}
inline const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Dns_Servers_ServerKey& AccessPoints_AccessPoint_System_Dns_Servers::server(int index) const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Dns.Servers.server)
  return server_.Get(index);
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Dns_Servers_ServerKey* AccessPoints_AccessPoint_System_Dns_Servers::mutable_server(int index) {
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Dns.Servers.server)
  return server_.Mutable(index);
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Dns_Servers_ServerKey* AccessPoints_AccessPoint_System_Dns_Servers::add_server() {
  // @@protoc_insertion_point(field_add:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Dns.Servers.server)
  return server_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Dns_Servers_ServerKey >*
AccessPoints_AccessPoint_System_Dns_Servers::mutable_server() {
  // @@protoc_insertion_point(field_mutable_list:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Dns.Servers.server)
  return &server_;
}
inline const ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Dns_Servers_ServerKey >&
AccessPoints_AccessPoint_System_Dns_Servers::server() const {
  // @@protoc_insertion_point(field_list:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Dns.Servers.server)
  return server_;
}

// -------------------------------------------------------------------

// AccessPoints_AccessPoint_System_Dns_State

// repeated .ywrapper.StringValue search = 307774829 [(.yext.schemapath) = "/access-points/access-point/system/dns/state/search"];
inline int AccessPoints_AccessPoint_System_Dns_State::search_size() const {
  return search_.size();
}
inline const ::ywrapper::StringValue& AccessPoints_AccessPoint_System_Dns_State::search(int index) const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Dns.State.search)
  return search_.Get(index);
}
inline ::ywrapper::StringValue* AccessPoints_AccessPoint_System_Dns_State::mutable_search(int index) {
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Dns.State.search)
  return search_.Mutable(index);
}
inline ::ywrapper::StringValue* AccessPoints_AccessPoint_System_Dns_State::add_search() {
  // @@protoc_insertion_point(field_add:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Dns.State.search)
  return search_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::ywrapper::StringValue >*
AccessPoints_AccessPoint_System_Dns_State::mutable_search() {
  // @@protoc_insertion_point(field_mutable_list:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Dns.State.search)
  return &search_;
}
inline const ::google::protobuf::RepeatedPtrField< ::ywrapper::StringValue >&
AccessPoints_AccessPoint_System_Dns_State::search() const {
  // @@protoc_insertion_point(field_list:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Dns.State.search)
  return search_;
}

// -------------------------------------------------------------------

// AccessPoints_AccessPoint_System_Dns

// .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Dns.Config config = 352454017 [(.yext.schemapath) = "/access-points/access-point/system/dns/config"];
inline bool AccessPoints_AccessPoint_System_Dns::has_config() const {
  return this != internal_default_instance() && config_ != NULL;
}
inline void AccessPoints_AccessPoint_System_Dns::clear_config() {
  if (GetArenaNoVirtual() == NULL && config_ != NULL) {
    delete config_;
  }
  config_ = NULL;
}
inline const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Dns_Config& AccessPoints_AccessPoint_System_Dns::config() const {
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Dns_Config* p = config_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Dns.config)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Dns_Config*>(
      &::openconfig::openconfig_access_points::_AccessPoints_AccessPoint_System_Dns_Config_default_instance_);
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Dns_Config* AccessPoints_AccessPoint_System_Dns::release_config() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Dns.config)
  
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Dns_Config* temp = config_;
  config_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Dns_Config* AccessPoints_AccessPoint_System_Dns::mutable_config() {
  
  if (config_ == NULL) {
    config_ = new ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Dns_Config;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Dns.config)
  return config_;
}
inline void AccessPoints_AccessPoint_System_Dns::set_allocated_config(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Dns_Config* config) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete config_;
  }
  if (config) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      config = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, config, submessage_arena);
    }
    
  } else {
    
  }
  config_ = config;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Dns.config)
}

// .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Dns.HostEntries host_entries = 119095278 [(.yext.schemapath) = "/access-points/access-point/system/dns/host-entries"];
inline bool AccessPoints_AccessPoint_System_Dns::has_host_entries() const {
  return this != internal_default_instance() && host_entries_ != NULL;
}
inline void AccessPoints_AccessPoint_System_Dns::clear_host_entries() {
  if (GetArenaNoVirtual() == NULL && host_entries_ != NULL) {
    delete host_entries_;
  }
  host_entries_ = NULL;
}
inline const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Dns_HostEntries& AccessPoints_AccessPoint_System_Dns::host_entries() const {
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Dns_HostEntries* p = host_entries_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Dns.host_entries)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Dns_HostEntries*>(
      &::openconfig::openconfig_access_points::_AccessPoints_AccessPoint_System_Dns_HostEntries_default_instance_);
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Dns_HostEntries* AccessPoints_AccessPoint_System_Dns::release_host_entries() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Dns.host_entries)
  
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Dns_HostEntries* temp = host_entries_;
  host_entries_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Dns_HostEntries* AccessPoints_AccessPoint_System_Dns::mutable_host_entries() {
  
  if (host_entries_ == NULL) {
    host_entries_ = new ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Dns_HostEntries;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Dns.host_entries)
  return host_entries_;
}
inline void AccessPoints_AccessPoint_System_Dns::set_allocated_host_entries(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Dns_HostEntries* host_entries) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete host_entries_;
  }
  if (host_entries) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      host_entries = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, host_entries, submessage_arena);
    }
    
  } else {
    
  }
  host_entries_ = host_entries;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Dns.host_entries)
}

// .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Dns.Servers servers = 411148645 [(.yext.schemapath) = "/access-points/access-point/system/dns/servers"];
inline bool AccessPoints_AccessPoint_System_Dns::has_servers() const {
  return this != internal_default_instance() && servers_ != NULL;
}
inline void AccessPoints_AccessPoint_System_Dns::clear_servers() {
  if (GetArenaNoVirtual() == NULL && servers_ != NULL) {
    delete servers_;
  }
  servers_ = NULL;
}
inline const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Dns_Servers& AccessPoints_AccessPoint_System_Dns::servers() const {
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Dns_Servers* p = servers_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Dns.servers)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Dns_Servers*>(
      &::openconfig::openconfig_access_points::_AccessPoints_AccessPoint_System_Dns_Servers_default_instance_);
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Dns_Servers* AccessPoints_AccessPoint_System_Dns::release_servers() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Dns.servers)
  
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Dns_Servers* temp = servers_;
  servers_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Dns_Servers* AccessPoints_AccessPoint_System_Dns::mutable_servers() {
  
  if (servers_ == NULL) {
    servers_ = new ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Dns_Servers;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Dns.servers)
  return servers_;
}
inline void AccessPoints_AccessPoint_System_Dns::set_allocated_servers(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Dns_Servers* servers) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete servers_;
  }
  if (servers) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      servers = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, servers, submessage_arena);
    }
    
  } else {
    
  }
  servers_ = servers;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Dns.servers)
}

// .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Dns.State state = 27768566 [(.yext.schemapath) = "/access-points/access-point/system/dns/state"];
inline bool AccessPoints_AccessPoint_System_Dns::has_state() const {
  return this != internal_default_instance() && state_ != NULL;
}
inline void AccessPoints_AccessPoint_System_Dns::clear_state() {
  if (GetArenaNoVirtual() == NULL && state_ != NULL) {
    delete state_;
  }
  state_ = NULL;
}
inline const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Dns_State& AccessPoints_AccessPoint_System_Dns::state() const {
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Dns_State* p = state_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Dns.state)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Dns_State*>(
      &::openconfig::openconfig_access_points::_AccessPoints_AccessPoint_System_Dns_State_default_instance_);
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Dns_State* AccessPoints_AccessPoint_System_Dns::release_state() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Dns.state)
  
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Dns_State* temp = state_;
  state_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Dns_State* AccessPoints_AccessPoint_System_Dns::mutable_state() {
  
  if (state_ == NULL) {
    state_ = new ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Dns_State;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Dns.state)
  return state_;
}
inline void AccessPoints_AccessPoint_System_Dns::set_allocated_state(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Dns_State* state) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete state_;
  }
  if (state) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      state = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, state, submessage_arena);
    }
    
  } else {
    
  }
  state_ = state;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Dns.state)
}

// -------------------------------------------------------------------

// AccessPoints_AccessPoint_System_Logging_Console_Config

// -------------------------------------------------------------------

// AccessPoints_AccessPoint_System_Logging_Console_Selectors_Selector_Config

// .openconfig.enums.OpenconfigSystemLoggingSYSLOGFACILITY facility = 513455526 [(.yext.schemapath) = "/access-points/access-point/system/logging/console/selectors/selector/config/facility"];
inline void AccessPoints_AccessPoint_System_Logging_Console_Selectors_Selector_Config::clear_facility() {
  facility_ = 0;
}
inline ::openconfig::enums::OpenconfigSystemLoggingSYSLOGFACILITY AccessPoints_AccessPoint_System_Logging_Console_Selectors_Selector_Config::facility() const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Logging.Console.Selectors.Selector.Config.facility)
  return static_cast< ::openconfig::enums::OpenconfigSystemLoggingSYSLOGFACILITY >(facility_);
}
inline void AccessPoints_AccessPoint_System_Logging_Console_Selectors_Selector_Config::set_facility(::openconfig::enums::OpenconfigSystemLoggingSYSLOGFACILITY value) {
  
  facility_ = value;
  // @@protoc_insertion_point(field_set:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Logging.Console.Selectors.Selector.Config.facility)
}

// .openconfig.enums.OpenconfigSystemLoggingSyslogSeverity severity = 226450800 [(.yext.schemapath) = "/access-points/access-point/system/logging/console/selectors/selector/config/severity"];
inline void AccessPoints_AccessPoint_System_Logging_Console_Selectors_Selector_Config::clear_severity() {
  severity_ = 0;
}
inline ::openconfig::enums::OpenconfigSystemLoggingSyslogSeverity AccessPoints_AccessPoint_System_Logging_Console_Selectors_Selector_Config::severity() const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Logging.Console.Selectors.Selector.Config.severity)
  return static_cast< ::openconfig::enums::OpenconfigSystemLoggingSyslogSeverity >(severity_);
}
inline void AccessPoints_AccessPoint_System_Logging_Console_Selectors_Selector_Config::set_severity(::openconfig::enums::OpenconfigSystemLoggingSyslogSeverity value) {
  
  severity_ = value;
  // @@protoc_insertion_point(field_set:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Logging.Console.Selectors.Selector.Config.severity)
}

// -------------------------------------------------------------------

// AccessPoints_AccessPoint_System_Logging_Console_Selectors_Selector_State

// .openconfig.enums.OpenconfigSystemLoggingSYSLOGFACILITY facility = 72001549 [(.yext.schemapath) = "/access-points/access-point/system/logging/console/selectors/selector/state/facility"];
inline void AccessPoints_AccessPoint_System_Logging_Console_Selectors_Selector_State::clear_facility() {
  facility_ = 0;
}
inline ::openconfig::enums::OpenconfigSystemLoggingSYSLOGFACILITY AccessPoints_AccessPoint_System_Logging_Console_Selectors_Selector_State::facility() const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Logging.Console.Selectors.Selector.State.facility)
  return static_cast< ::openconfig::enums::OpenconfigSystemLoggingSYSLOGFACILITY >(facility_);
}
inline void AccessPoints_AccessPoint_System_Logging_Console_Selectors_Selector_State::set_facility(::openconfig::enums::OpenconfigSystemLoggingSYSLOGFACILITY value) {
  
  facility_ = value;
  // @@protoc_insertion_point(field_set:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Logging.Console.Selectors.Selector.State.facility)
}

// .openconfig.enums.OpenconfigSystemLoggingSyslogSeverity severity = 37602263 [(.yext.schemapath) = "/access-points/access-point/system/logging/console/selectors/selector/state/severity"];
inline void AccessPoints_AccessPoint_System_Logging_Console_Selectors_Selector_State::clear_severity() {
  severity_ = 0;
}
inline ::openconfig::enums::OpenconfigSystemLoggingSyslogSeverity AccessPoints_AccessPoint_System_Logging_Console_Selectors_Selector_State::severity() const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Logging.Console.Selectors.Selector.State.severity)
  return static_cast< ::openconfig::enums::OpenconfigSystemLoggingSyslogSeverity >(severity_);
}
inline void AccessPoints_AccessPoint_System_Logging_Console_Selectors_Selector_State::set_severity(::openconfig::enums::OpenconfigSystemLoggingSyslogSeverity value) {
  
  severity_ = value;
  // @@protoc_insertion_point(field_set:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Logging.Console.Selectors.Selector.State.severity)
}

// -------------------------------------------------------------------

// AccessPoints_AccessPoint_System_Logging_Console_Selectors_Selector

// .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Logging.Console.Selectors.Selector.Config config = 308166286 [(.yext.schemapath) = "/access-points/access-point/system/logging/console/selectors/selector/config"];
inline bool AccessPoints_AccessPoint_System_Logging_Console_Selectors_Selector::has_config() const {
  return this != internal_default_instance() && config_ != NULL;
}
inline void AccessPoints_AccessPoint_System_Logging_Console_Selectors_Selector::clear_config() {
  if (GetArenaNoVirtual() == NULL && config_ != NULL) {
    delete config_;
  }
  config_ = NULL;
}
inline const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging_Console_Selectors_Selector_Config& AccessPoints_AccessPoint_System_Logging_Console_Selectors_Selector::config() const {
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging_Console_Selectors_Selector_Config* p = config_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Logging.Console.Selectors.Selector.config)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging_Console_Selectors_Selector_Config*>(
      &::openconfig::openconfig_access_points::_AccessPoints_AccessPoint_System_Logging_Console_Selectors_Selector_Config_default_instance_);
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging_Console_Selectors_Selector_Config* AccessPoints_AccessPoint_System_Logging_Console_Selectors_Selector::release_config() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Logging.Console.Selectors.Selector.config)
  
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging_Console_Selectors_Selector_Config* temp = config_;
  config_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging_Console_Selectors_Selector_Config* AccessPoints_AccessPoint_System_Logging_Console_Selectors_Selector::mutable_config() {
  
  if (config_ == NULL) {
    config_ = new ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging_Console_Selectors_Selector_Config;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Logging.Console.Selectors.Selector.config)
  return config_;
}
inline void AccessPoints_AccessPoint_System_Logging_Console_Selectors_Selector::set_allocated_config(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging_Console_Selectors_Selector_Config* config) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete config_;
  }
  if (config) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      config = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, config, submessage_arena);
    }
    
  } else {
    
  }
  config_ = config;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Logging.Console.Selectors.Selector.config)
}

// .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Logging.Console.Selectors.Selector.State state = 133626427 [(.yext.schemapath) = "/access-points/access-point/system/logging/console/selectors/selector/state"];
inline bool AccessPoints_AccessPoint_System_Logging_Console_Selectors_Selector::has_state() const {
  return this != internal_default_instance() && state_ != NULL;
}
inline void AccessPoints_AccessPoint_System_Logging_Console_Selectors_Selector::clear_state() {
  if (GetArenaNoVirtual() == NULL && state_ != NULL) {
    delete state_;
  }
  state_ = NULL;
}
inline const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging_Console_Selectors_Selector_State& AccessPoints_AccessPoint_System_Logging_Console_Selectors_Selector::state() const {
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging_Console_Selectors_Selector_State* p = state_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Logging.Console.Selectors.Selector.state)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging_Console_Selectors_Selector_State*>(
      &::openconfig::openconfig_access_points::_AccessPoints_AccessPoint_System_Logging_Console_Selectors_Selector_State_default_instance_);
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging_Console_Selectors_Selector_State* AccessPoints_AccessPoint_System_Logging_Console_Selectors_Selector::release_state() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Logging.Console.Selectors.Selector.state)
  
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging_Console_Selectors_Selector_State* temp = state_;
  state_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging_Console_Selectors_Selector_State* AccessPoints_AccessPoint_System_Logging_Console_Selectors_Selector::mutable_state() {
  
  if (state_ == NULL) {
    state_ = new ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging_Console_Selectors_Selector_State;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Logging.Console.Selectors.Selector.state)
  return state_;
}
inline void AccessPoints_AccessPoint_System_Logging_Console_Selectors_Selector::set_allocated_state(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging_Console_Selectors_Selector_State* state) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete state_;
  }
  if (state) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      state = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, state, submessage_arena);
    }
    
  } else {
    
  }
  state_ = state;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Logging.Console.Selectors.Selector.state)
}

// -------------------------------------------------------------------

// AccessPoints_AccessPoint_System_Logging_Console_Selectors_SelectorKey

// .openconfig.enums.OpenconfigSystemLoggingSYSLOGFACILITY facility = 1 [(.yext.schemapath) = "/access-points/access-point/system/logging/console/selectors/selector/facility"];
inline void AccessPoints_AccessPoint_System_Logging_Console_Selectors_SelectorKey::clear_facility() {
  facility_ = 0;
}
inline ::openconfig::enums::OpenconfigSystemLoggingSYSLOGFACILITY AccessPoints_AccessPoint_System_Logging_Console_Selectors_SelectorKey::facility() const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Logging.Console.Selectors.SelectorKey.facility)
  return static_cast< ::openconfig::enums::OpenconfigSystemLoggingSYSLOGFACILITY >(facility_);
}
inline void AccessPoints_AccessPoint_System_Logging_Console_Selectors_SelectorKey::set_facility(::openconfig::enums::OpenconfigSystemLoggingSYSLOGFACILITY value) {
  
  facility_ = value;
  // @@protoc_insertion_point(field_set:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Logging.Console.Selectors.SelectorKey.facility)
}

// .openconfig.enums.OpenconfigSystemLoggingSyslogSeverity severity = 2 [(.yext.schemapath) = "/access-points/access-point/system/logging/console/selectors/selector/severity"];
inline void AccessPoints_AccessPoint_System_Logging_Console_Selectors_SelectorKey::clear_severity() {
  severity_ = 0;
}
inline ::openconfig::enums::OpenconfigSystemLoggingSyslogSeverity AccessPoints_AccessPoint_System_Logging_Console_Selectors_SelectorKey::severity() const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Logging.Console.Selectors.SelectorKey.severity)
  return static_cast< ::openconfig::enums::OpenconfigSystemLoggingSyslogSeverity >(severity_);
}
inline void AccessPoints_AccessPoint_System_Logging_Console_Selectors_SelectorKey::set_severity(::openconfig::enums::OpenconfigSystemLoggingSyslogSeverity value) {
  
  severity_ = value;
  // @@protoc_insertion_point(field_set:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Logging.Console.Selectors.SelectorKey.severity)
}

// .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Logging.Console.Selectors.Selector selector = 3;
inline bool AccessPoints_AccessPoint_System_Logging_Console_Selectors_SelectorKey::has_selector() const {
  return this != internal_default_instance() && selector_ != NULL;
}
inline void AccessPoints_AccessPoint_System_Logging_Console_Selectors_SelectorKey::clear_selector() {
  if (GetArenaNoVirtual() == NULL && selector_ != NULL) {
    delete selector_;
  }
  selector_ = NULL;
}
inline const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging_Console_Selectors_Selector& AccessPoints_AccessPoint_System_Logging_Console_Selectors_SelectorKey::selector() const {
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging_Console_Selectors_Selector* p = selector_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Logging.Console.Selectors.SelectorKey.selector)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging_Console_Selectors_Selector*>(
      &::openconfig::openconfig_access_points::_AccessPoints_AccessPoint_System_Logging_Console_Selectors_Selector_default_instance_);
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging_Console_Selectors_Selector* AccessPoints_AccessPoint_System_Logging_Console_Selectors_SelectorKey::release_selector() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Logging.Console.Selectors.SelectorKey.selector)
  
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging_Console_Selectors_Selector* temp = selector_;
  selector_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging_Console_Selectors_Selector* AccessPoints_AccessPoint_System_Logging_Console_Selectors_SelectorKey::mutable_selector() {
  
  if (selector_ == NULL) {
    selector_ = new ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging_Console_Selectors_Selector;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Logging.Console.Selectors.SelectorKey.selector)
  return selector_;
}
inline void AccessPoints_AccessPoint_System_Logging_Console_Selectors_SelectorKey::set_allocated_selector(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging_Console_Selectors_Selector* selector) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete selector_;
  }
  if (selector) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      selector = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, selector, submessage_arena);
    }
    
  } else {
    
  }
  selector_ = selector;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Logging.Console.Selectors.SelectorKey.selector)
}

// -------------------------------------------------------------------

// AccessPoints_AccessPoint_System_Logging_Console_Selectors

// repeated .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Logging.Console.Selectors.SelectorKey selector = 305157817 [(.yext.schemapath) = "/access-points/access-point/system/logging/console/selectors/selector"];
inline int AccessPoints_AccessPoint_System_Logging_Console_Selectors::selector_size() const {
  return selector_.size();
}
inline void AccessPoints_AccessPoint_System_Logging_Console_Selectors::clear_selector() {
  selector_.Clear();
}
inline const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging_Console_Selectors_SelectorKey& AccessPoints_AccessPoint_System_Logging_Console_Selectors::selector(int index) const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Logging.Console.Selectors.selector)
  return selector_.Get(index);
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging_Console_Selectors_SelectorKey* AccessPoints_AccessPoint_System_Logging_Console_Selectors::mutable_selector(int index) {
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Logging.Console.Selectors.selector)
  return selector_.Mutable(index);
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging_Console_Selectors_SelectorKey* AccessPoints_AccessPoint_System_Logging_Console_Selectors::add_selector() {
  // @@protoc_insertion_point(field_add:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Logging.Console.Selectors.selector)
  return selector_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging_Console_Selectors_SelectorKey >*
AccessPoints_AccessPoint_System_Logging_Console_Selectors::mutable_selector() {
  // @@protoc_insertion_point(field_mutable_list:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Logging.Console.Selectors.selector)
  return &selector_;
}
inline const ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging_Console_Selectors_SelectorKey >&
AccessPoints_AccessPoint_System_Logging_Console_Selectors::selector() const {
  // @@protoc_insertion_point(field_list:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Logging.Console.Selectors.selector)
  return selector_;
}

// -------------------------------------------------------------------

// AccessPoints_AccessPoint_System_Logging_Console_State

// -------------------------------------------------------------------

// AccessPoints_AccessPoint_System_Logging_Console

// .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Logging.Console.Config config = 202247349 [(.yext.schemapath) = "/access-points/access-point/system/logging/console/config"];
inline bool AccessPoints_AccessPoint_System_Logging_Console::has_config() const {
  return this != internal_default_instance() && config_ != NULL;
}
inline void AccessPoints_AccessPoint_System_Logging_Console::clear_config() {
  if (GetArenaNoVirtual() == NULL && config_ != NULL) {
    delete config_;
  }
  config_ = NULL;
}
inline const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging_Console_Config& AccessPoints_AccessPoint_System_Logging_Console::config() const {
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging_Console_Config* p = config_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Logging.Console.config)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging_Console_Config*>(
      &::openconfig::openconfig_access_points::_AccessPoints_AccessPoint_System_Logging_Console_Config_default_instance_);
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging_Console_Config* AccessPoints_AccessPoint_System_Logging_Console::release_config() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Logging.Console.config)
  
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging_Console_Config* temp = config_;
  config_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging_Console_Config* AccessPoints_AccessPoint_System_Logging_Console::mutable_config() {
  
  if (config_ == NULL) {
    config_ = new ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging_Console_Config;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Logging.Console.config)
  return config_;
}
inline void AccessPoints_AccessPoint_System_Logging_Console::set_allocated_config(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging_Console_Config* config) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete config_;
  }
  if (config) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      config = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, config, submessage_arena);
    }
    
  } else {
    
  }
  config_ = config;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Logging.Console.config)
}

// .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Logging.Console.Selectors selectors = 247149031 [(.yext.schemapath) = "/access-points/access-point/system/logging/console/selectors"];
inline bool AccessPoints_AccessPoint_System_Logging_Console::has_selectors() const {
  return this != internal_default_instance() && selectors_ != NULL;
}
inline void AccessPoints_AccessPoint_System_Logging_Console::clear_selectors() {
  if (GetArenaNoVirtual() == NULL && selectors_ != NULL) {
    delete selectors_;
  }
  selectors_ = NULL;
}
inline const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging_Console_Selectors& AccessPoints_AccessPoint_System_Logging_Console::selectors() const {
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging_Console_Selectors* p = selectors_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Logging.Console.selectors)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging_Console_Selectors*>(
      &::openconfig::openconfig_access_points::_AccessPoints_AccessPoint_System_Logging_Console_Selectors_default_instance_);
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging_Console_Selectors* AccessPoints_AccessPoint_System_Logging_Console::release_selectors() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Logging.Console.selectors)
  
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging_Console_Selectors* temp = selectors_;
  selectors_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging_Console_Selectors* AccessPoints_AccessPoint_System_Logging_Console::mutable_selectors() {
  
  if (selectors_ == NULL) {
    selectors_ = new ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging_Console_Selectors;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Logging.Console.selectors)
  return selectors_;
}
inline void AccessPoints_AccessPoint_System_Logging_Console::set_allocated_selectors(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging_Console_Selectors* selectors) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete selectors_;
  }
  if (selectors) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      selectors = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, selectors, submessage_arena);
    }
    
  } else {
    
  }
  selectors_ = selectors;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Logging.Console.selectors)
}

// .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Logging.Console.State state = 427243434 [(.yext.schemapath) = "/access-points/access-point/system/logging/console/state"];
inline bool AccessPoints_AccessPoint_System_Logging_Console::has_state() const {
  return this != internal_default_instance() && state_ != NULL;
}
inline void AccessPoints_AccessPoint_System_Logging_Console::clear_state() {
  if (GetArenaNoVirtual() == NULL && state_ != NULL) {
    delete state_;
  }
  state_ = NULL;
}
inline const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging_Console_State& AccessPoints_AccessPoint_System_Logging_Console::state() const {
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging_Console_State* p = state_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Logging.Console.state)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging_Console_State*>(
      &::openconfig::openconfig_access_points::_AccessPoints_AccessPoint_System_Logging_Console_State_default_instance_);
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging_Console_State* AccessPoints_AccessPoint_System_Logging_Console::release_state() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Logging.Console.state)
  
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging_Console_State* temp = state_;
  state_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging_Console_State* AccessPoints_AccessPoint_System_Logging_Console::mutable_state() {
  
  if (state_ == NULL) {
    state_ = new ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging_Console_State;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Logging.Console.state)
  return state_;
}
inline void AccessPoints_AccessPoint_System_Logging_Console::set_allocated_state(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging_Console_State* state) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete state_;
  }
  if (state) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      state = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, state, submessage_arena);
    }
    
  } else {
    
  }
  state_ = state;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Logging.Console.state)
}

// -------------------------------------------------------------------

// AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Config

// .ywrapper.StringValue host = 305442361 [(.yext.schemapath) = "/access-points/access-point/system/logging/remote-servers/remote-server/config/host"];
inline bool AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Config::has_host() const {
  return this != internal_default_instance() && host_ != NULL;
}
inline const ::ywrapper::StringValue& AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Config::host() const {
  const ::ywrapper::StringValue* p = host_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Logging.RemoteServers.RemoteServer.Config.host)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::StringValue*>(
      &::ywrapper::_StringValue_default_instance_);
}
inline ::ywrapper::StringValue* AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Config::release_host() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Logging.RemoteServers.RemoteServer.Config.host)
  
  ::ywrapper::StringValue* temp = host_;
  host_ = NULL;
  return temp;
}
inline ::ywrapper::StringValue* AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Config::mutable_host() {
  
  if (host_ == NULL) {
    host_ = new ::ywrapper::StringValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Logging.RemoteServers.RemoteServer.Config.host)
  return host_;
}
inline void AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Config::set_allocated_host(::ywrapper::StringValue* host) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(host_);
  }
  if (host) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      host = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, host, submessage_arena);
    }
    
  } else {
    
  }
  host_ = host;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Logging.RemoteServers.RemoteServer.Config.host)
}

// .ywrapper.UintValue remote_port = 51833171 [(.yext.schemapath) = "/access-points/access-point/system/logging/remote-servers/remote-server/config/remote-port"];
inline bool AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Config::has_remote_port() const {
  return this != internal_default_instance() && remote_port_ != NULL;
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Config::remote_port() const {
  const ::ywrapper::UintValue* p = remote_port_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Logging.RemoteServers.RemoteServer.Config.remote_port)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Config::release_remote_port() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Logging.RemoteServers.RemoteServer.Config.remote_port)
  
  ::ywrapper::UintValue* temp = remote_port_;
  remote_port_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Config::mutable_remote_port() {
  
  if (remote_port_ == NULL) {
    remote_port_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Logging.RemoteServers.RemoteServer.Config.remote_port)
  return remote_port_;
}
inline void AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Config::set_allocated_remote_port(::ywrapper::UintValue* remote_port) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(remote_port_);
  }
  if (remote_port) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      remote_port = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, remote_port, submessage_arena);
    }
    
  } else {
    
  }
  remote_port_ = remote_port;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Logging.RemoteServers.RemoteServer.Config.remote_port)
}

// .ywrapper.StringValue source_address = 476272171 [(.yext.schemapath) = "/access-points/access-point/system/logging/remote-servers/remote-server/config/source-address"];
inline bool AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Config::has_source_address() const {
  return this != internal_default_instance() && source_address_ != NULL;
}
inline const ::ywrapper::StringValue& AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Config::source_address() const {
  const ::ywrapper::StringValue* p = source_address_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Logging.RemoteServers.RemoteServer.Config.source_address)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::StringValue*>(
      &::ywrapper::_StringValue_default_instance_);
}
inline ::ywrapper::StringValue* AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Config::release_source_address() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Logging.RemoteServers.RemoteServer.Config.source_address)
  
  ::ywrapper::StringValue* temp = source_address_;
  source_address_ = NULL;
  return temp;
}
inline ::ywrapper::StringValue* AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Config::mutable_source_address() {
  
  if (source_address_ == NULL) {
    source_address_ = new ::ywrapper::StringValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Logging.RemoteServers.RemoteServer.Config.source_address)
  return source_address_;
}
inline void AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Config::set_allocated_source_address(::ywrapper::StringValue* source_address) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(source_address_);
  }
  if (source_address) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      source_address = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, source_address, submessage_arena);
    }
    
  } else {
    
  }
  source_address_ = source_address;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Logging.RemoteServers.RemoteServer.Config.source_address)
}

// -------------------------------------------------------------------

// AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors_Selector_Config

// .openconfig.enums.OpenconfigSystemLoggingSYSLOGFACILITY facility = 13663423 [(.yext.schemapath) = "/access-points/access-point/system/logging/remote-servers/remote-server/selectors/selector/config/facility"];
inline void AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors_Selector_Config::clear_facility() {
  facility_ = 0;
}
inline ::openconfig::enums::OpenconfigSystemLoggingSYSLOGFACILITY AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors_Selector_Config::facility() const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Logging.RemoteServers.RemoteServer.Selectors.Selector.Config.facility)
  return static_cast< ::openconfig::enums::OpenconfigSystemLoggingSYSLOGFACILITY >(facility_);
}
inline void AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors_Selector_Config::set_facility(::openconfig::enums::OpenconfigSystemLoggingSYSLOGFACILITY value) {
  
  facility_ = value;
  // @@protoc_insertion_point(field_set:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Logging.RemoteServers.RemoteServer.Selectors.Selector.Config.facility)
}

// .openconfig.enums.OpenconfigSystemLoggingSyslogSeverity severity = 532975005 [(.yext.schemapath) = "/access-points/access-point/system/logging/remote-servers/remote-server/selectors/selector/config/severity"];
inline void AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors_Selector_Config::clear_severity() {
  severity_ = 0;
}
inline ::openconfig::enums::OpenconfigSystemLoggingSyslogSeverity AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors_Selector_Config::severity() const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Logging.RemoteServers.RemoteServer.Selectors.Selector.Config.severity)
  return static_cast< ::openconfig::enums::OpenconfigSystemLoggingSyslogSeverity >(severity_);
}
inline void AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors_Selector_Config::set_severity(::openconfig::enums::OpenconfigSystemLoggingSyslogSeverity value) {
  
  severity_ = value;
  // @@protoc_insertion_point(field_set:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Logging.RemoteServers.RemoteServer.Selectors.Selector.Config.severity)
}

// -------------------------------------------------------------------

// AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors_Selector_State

// .openconfig.enums.OpenconfigSystemLoggingSYSLOGFACILITY facility = 496427258 [(.yext.schemapath) = "/access-points/access-point/system/logging/remote-servers/remote-server/selectors/selector/state/facility"];
inline void AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors_Selector_State::clear_facility() {
  facility_ = 0;
}
inline ::openconfig::enums::OpenconfigSystemLoggingSYSLOGFACILITY AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors_Selector_State::facility() const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Logging.RemoteServers.RemoteServer.Selectors.Selector.State.facility)
  return static_cast< ::openconfig::enums::OpenconfigSystemLoggingSYSLOGFACILITY >(facility_);
}
inline void AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors_Selector_State::set_facility(::openconfig::enums::OpenconfigSystemLoggingSYSLOGFACILITY value) {
  
  facility_ = value;
  // @@protoc_insertion_point(field_set:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Logging.RemoteServers.RemoteServer.Selectors.Selector.State.facility)
}

// .openconfig.enums.OpenconfigSystemLoggingSyslogSeverity severity = 349549580 [(.yext.schemapath) = "/access-points/access-point/system/logging/remote-servers/remote-server/selectors/selector/state/severity"];
inline void AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors_Selector_State::clear_severity() {
  severity_ = 0;
}
inline ::openconfig::enums::OpenconfigSystemLoggingSyslogSeverity AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors_Selector_State::severity() const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Logging.RemoteServers.RemoteServer.Selectors.Selector.State.severity)
  return static_cast< ::openconfig::enums::OpenconfigSystemLoggingSyslogSeverity >(severity_);
}
inline void AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors_Selector_State::set_severity(::openconfig::enums::OpenconfigSystemLoggingSyslogSeverity value) {
  
  severity_ = value;
  // @@protoc_insertion_point(field_set:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Logging.RemoteServers.RemoteServer.Selectors.Selector.State.severity)
}

// -------------------------------------------------------------------

// AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors_Selector

// .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Logging.RemoteServers.RemoteServer.Selectors.Selector.Config config = 317444405 [(.yext.schemapath) = "/access-points/access-point/system/logging/remote-servers/remote-server/selectors/selector/config"];
inline bool AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors_Selector::has_config() const {
  return this != internal_default_instance() && config_ != NULL;
}
inline void AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors_Selector::clear_config() {
  if (GetArenaNoVirtual() == NULL && config_ != NULL) {
    delete config_;
  }
  config_ = NULL;
}
inline const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors_Selector_Config& AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors_Selector::config() const {
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors_Selector_Config* p = config_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Logging.RemoteServers.RemoteServer.Selectors.Selector.config)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors_Selector_Config*>(
      &::openconfig::openconfig_access_points::_AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors_Selector_Config_default_instance_);
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors_Selector_Config* AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors_Selector::release_config() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Logging.RemoteServers.RemoteServer.Selectors.Selector.config)
  
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors_Selector_Config* temp = config_;
  config_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors_Selector_Config* AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors_Selector::mutable_config() {
  
  if (config_ == NULL) {
    config_ = new ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors_Selector_Config;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Logging.RemoteServers.RemoteServer.Selectors.Selector.config)
  return config_;
}
inline void AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors_Selector::set_allocated_config(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors_Selector_Config* config) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete config_;
  }
  if (config) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      config = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, config, submessage_arena);
    }
    
  } else {
    
  }
  config_ = config;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Logging.RemoteServers.RemoteServer.Selectors.Selector.config)
}

// .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Logging.RemoteServers.RemoteServer.Selectors.Selector.State state = 133116202 [(.yext.schemapath) = "/access-points/access-point/system/logging/remote-servers/remote-server/selectors/selector/state"];
inline bool AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors_Selector::has_state() const {
  return this != internal_default_instance() && state_ != NULL;
}
inline void AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors_Selector::clear_state() {
  if (GetArenaNoVirtual() == NULL && state_ != NULL) {
    delete state_;
  }
  state_ = NULL;
}
inline const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors_Selector_State& AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors_Selector::state() const {
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors_Selector_State* p = state_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Logging.RemoteServers.RemoteServer.Selectors.Selector.state)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors_Selector_State*>(
      &::openconfig::openconfig_access_points::_AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors_Selector_State_default_instance_);
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors_Selector_State* AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors_Selector::release_state() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Logging.RemoteServers.RemoteServer.Selectors.Selector.state)
  
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors_Selector_State* temp = state_;
  state_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors_Selector_State* AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors_Selector::mutable_state() {
  
  if (state_ == NULL) {
    state_ = new ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors_Selector_State;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Logging.RemoteServers.RemoteServer.Selectors.Selector.state)
  return state_;
}
inline void AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors_Selector::set_allocated_state(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors_Selector_State* state) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete state_;
  }
  if (state) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      state = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, state, submessage_arena);
    }
    
  } else {
    
  }
  state_ = state;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Logging.RemoteServers.RemoteServer.Selectors.Selector.state)
}

// -------------------------------------------------------------------

// AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors_SelectorKey

// .openconfig.enums.OpenconfigSystemLoggingSYSLOGFACILITY facility = 1 [(.yext.schemapath) = "/access-points/access-point/system/logging/remote-servers/remote-server/selectors/selector/facility"];
inline void AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors_SelectorKey::clear_facility() {
  facility_ = 0;
}
inline ::openconfig::enums::OpenconfigSystemLoggingSYSLOGFACILITY AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors_SelectorKey::facility() const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Logging.RemoteServers.RemoteServer.Selectors.SelectorKey.facility)
  return static_cast< ::openconfig::enums::OpenconfigSystemLoggingSYSLOGFACILITY >(facility_);
}
inline void AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors_SelectorKey::set_facility(::openconfig::enums::OpenconfigSystemLoggingSYSLOGFACILITY value) {
  
  facility_ = value;
  // @@protoc_insertion_point(field_set:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Logging.RemoteServers.RemoteServer.Selectors.SelectorKey.facility)
}

// .openconfig.enums.OpenconfigSystemLoggingSyslogSeverity severity = 2 [(.yext.schemapath) = "/access-points/access-point/system/logging/remote-servers/remote-server/selectors/selector/severity"];
inline void AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors_SelectorKey::clear_severity() {
  severity_ = 0;
}
inline ::openconfig::enums::OpenconfigSystemLoggingSyslogSeverity AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors_SelectorKey::severity() const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Logging.RemoteServers.RemoteServer.Selectors.SelectorKey.severity)
  return static_cast< ::openconfig::enums::OpenconfigSystemLoggingSyslogSeverity >(severity_);
}
inline void AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors_SelectorKey::set_severity(::openconfig::enums::OpenconfigSystemLoggingSyslogSeverity value) {
  
  severity_ = value;
  // @@protoc_insertion_point(field_set:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Logging.RemoteServers.RemoteServer.Selectors.SelectorKey.severity)
}

// .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Logging.RemoteServers.RemoteServer.Selectors.Selector selector = 3;
inline bool AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors_SelectorKey::has_selector() const {
  return this != internal_default_instance() && selector_ != NULL;
}
inline void AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors_SelectorKey::clear_selector() {
  if (GetArenaNoVirtual() == NULL && selector_ != NULL) {
    delete selector_;
  }
  selector_ = NULL;
}
inline const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors_Selector& AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors_SelectorKey::selector() const {
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors_Selector* p = selector_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Logging.RemoteServers.RemoteServer.Selectors.SelectorKey.selector)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors_Selector*>(
      &::openconfig::openconfig_access_points::_AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors_Selector_default_instance_);
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors_Selector* AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors_SelectorKey::release_selector() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Logging.RemoteServers.RemoteServer.Selectors.SelectorKey.selector)
  
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors_Selector* temp = selector_;
  selector_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors_Selector* AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors_SelectorKey::mutable_selector() {
  
  if (selector_ == NULL) {
    selector_ = new ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors_Selector;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Logging.RemoteServers.RemoteServer.Selectors.SelectorKey.selector)
  return selector_;
}
inline void AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors_SelectorKey::set_allocated_selector(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors_Selector* selector) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete selector_;
  }
  if (selector) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      selector = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, selector, submessage_arena);
    }
    
  } else {
    
  }
  selector_ = selector;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Logging.RemoteServers.RemoteServer.Selectors.SelectorKey.selector)
}

// -------------------------------------------------------------------

// AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors

// repeated .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Logging.RemoteServers.RemoteServer.Selectors.SelectorKey selector = 44390976 [(.yext.schemapath) = "/access-points/access-point/system/logging/remote-servers/remote-server/selectors/selector"];
inline int AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors::selector_size() const {
  return selector_.size();
}
inline void AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors::clear_selector() {
  selector_.Clear();
}
inline const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors_SelectorKey& AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors::selector(int index) const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Logging.RemoteServers.RemoteServer.Selectors.selector)
  return selector_.Get(index);
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors_SelectorKey* AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors::mutable_selector(int index) {
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Logging.RemoteServers.RemoteServer.Selectors.selector)
  return selector_.Mutable(index);
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors_SelectorKey* AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors::add_selector() {
  // @@protoc_insertion_point(field_add:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Logging.RemoteServers.RemoteServer.Selectors.selector)
  return selector_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors_SelectorKey >*
AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors::mutable_selector() {
  // @@protoc_insertion_point(field_mutable_list:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Logging.RemoteServers.RemoteServer.Selectors.selector)
  return &selector_;
}
inline const ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors_SelectorKey >&
AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors::selector() const {
  // @@protoc_insertion_point(field_list:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Logging.RemoteServers.RemoteServer.Selectors.selector)
  return selector_;
}

// -------------------------------------------------------------------

// AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_State

// .ywrapper.StringValue host = 185149766 [(.yext.schemapath) = "/access-points/access-point/system/logging/remote-servers/remote-server/state/host"];
inline bool AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_State::has_host() const {
  return this != internal_default_instance() && host_ != NULL;
}
inline const ::ywrapper::StringValue& AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_State::host() const {
  const ::ywrapper::StringValue* p = host_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Logging.RemoteServers.RemoteServer.State.host)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::StringValue*>(
      &::ywrapper::_StringValue_default_instance_);
}
inline ::ywrapper::StringValue* AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_State::release_host() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Logging.RemoteServers.RemoteServer.State.host)
  
  ::ywrapper::StringValue* temp = host_;
  host_ = NULL;
  return temp;
}
inline ::ywrapper::StringValue* AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_State::mutable_host() {
  
  if (host_ == NULL) {
    host_ = new ::ywrapper::StringValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Logging.RemoteServers.RemoteServer.State.host)
  return host_;
}
inline void AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_State::set_allocated_host(::ywrapper::StringValue* host) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(host_);
  }
  if (host) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      host = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, host, submessage_arena);
    }
    
  } else {
    
  }
  host_ = host;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Logging.RemoteServers.RemoteServer.State.host)
}

// .ywrapper.UintValue remote_port = 449301846 [(.yext.schemapath) = "/access-points/access-point/system/logging/remote-servers/remote-server/state/remote-port"];
inline bool AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_State::has_remote_port() const {
  return this != internal_default_instance() && remote_port_ != NULL;
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_State::remote_port() const {
  const ::ywrapper::UintValue* p = remote_port_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Logging.RemoteServers.RemoteServer.State.remote_port)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_State::release_remote_port() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Logging.RemoteServers.RemoteServer.State.remote_port)
  
  ::ywrapper::UintValue* temp = remote_port_;
  remote_port_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_State::mutable_remote_port() {
  
  if (remote_port_ == NULL) {
    remote_port_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Logging.RemoteServers.RemoteServer.State.remote_port)
  return remote_port_;
}
inline void AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_State::set_allocated_remote_port(::ywrapper::UintValue* remote_port) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(remote_port_);
  }
  if (remote_port) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      remote_port = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, remote_port, submessage_arena);
    }
    
  } else {
    
  }
  remote_port_ = remote_port;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Logging.RemoteServers.RemoteServer.State.remote_port)
}

// .ywrapper.StringValue source_address = 248536760 [(.yext.schemapath) = "/access-points/access-point/system/logging/remote-servers/remote-server/state/source-address"];
inline bool AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_State::has_source_address() const {
  return this != internal_default_instance() && source_address_ != NULL;
}
inline const ::ywrapper::StringValue& AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_State::source_address() const {
  const ::ywrapper::StringValue* p = source_address_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Logging.RemoteServers.RemoteServer.State.source_address)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::StringValue*>(
      &::ywrapper::_StringValue_default_instance_);
}
inline ::ywrapper::StringValue* AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_State::release_source_address() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Logging.RemoteServers.RemoteServer.State.source_address)
  
  ::ywrapper::StringValue* temp = source_address_;
  source_address_ = NULL;
  return temp;
}
inline ::ywrapper::StringValue* AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_State::mutable_source_address() {
  
  if (source_address_ == NULL) {
    source_address_ = new ::ywrapper::StringValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Logging.RemoteServers.RemoteServer.State.source_address)
  return source_address_;
}
inline void AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_State::set_allocated_source_address(::ywrapper::StringValue* source_address) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(source_address_);
  }
  if (source_address) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      source_address = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, source_address, submessage_arena);
    }
    
  } else {
    
  }
  source_address_ = source_address;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Logging.RemoteServers.RemoteServer.State.source_address)
}

// -------------------------------------------------------------------

// AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer

// .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Logging.RemoteServers.RemoteServer.Config config = 360797500 [(.yext.schemapath) = "/access-points/access-point/system/logging/remote-servers/remote-server/config"];
inline bool AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer::has_config() const {
  return this != internal_default_instance() && config_ != NULL;
}
inline void AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer::clear_config() {
  if (GetArenaNoVirtual() == NULL && config_ != NULL) {
    delete config_;
  }
  config_ = NULL;
}
inline const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Config& AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer::config() const {
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Config* p = config_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Logging.RemoteServers.RemoteServer.config)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Config*>(
      &::openconfig::openconfig_access_points::_AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Config_default_instance_);
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Config* AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer::release_config() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Logging.RemoteServers.RemoteServer.config)
  
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Config* temp = config_;
  config_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Config* AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer::mutable_config() {
  
  if (config_ == NULL) {
    config_ = new ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Config;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Logging.RemoteServers.RemoteServer.config)
  return config_;
}
inline void AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer::set_allocated_config(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Config* config) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete config_;
  }
  if (config) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      config = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, config, submessage_arena);
    }
    
  } else {
    
  }
  config_ = config;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Logging.RemoteServers.RemoteServer.config)
}

// .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Logging.RemoteServers.RemoteServer.Selectors selectors = 122951308 [(.yext.schemapath) = "/access-points/access-point/system/logging/remote-servers/remote-server/selectors"];
inline bool AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer::has_selectors() const {
  return this != internal_default_instance() && selectors_ != NULL;
}
inline void AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer::clear_selectors() {
  if (GetArenaNoVirtual() == NULL && selectors_ != NULL) {
    delete selectors_;
  }
  selectors_ = NULL;
}
inline const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors& AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer::selectors() const {
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors* p = selectors_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Logging.RemoteServers.RemoteServer.selectors)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors*>(
      &::openconfig::openconfig_access_points::_AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors_default_instance_);
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors* AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer::release_selectors() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Logging.RemoteServers.RemoteServer.selectors)
  
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors* temp = selectors_;
  selectors_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors* AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer::mutable_selectors() {
  
  if (selectors_ == NULL) {
    selectors_ = new ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Logging.RemoteServers.RemoteServer.selectors)
  return selectors_;
}
inline void AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer::set_allocated_selectors(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_Selectors* selectors) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete selectors_;
  }
  if (selectors) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      selectors = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, selectors, submessage_arena);
    }
    
  } else {
    
  }
  selectors_ = selectors;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Logging.RemoteServers.RemoteServer.selectors)
}

// .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Logging.RemoteServers.RemoteServer.State state = 486582325 [(.yext.schemapath) = "/access-points/access-point/system/logging/remote-servers/remote-server/state"];
inline bool AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer::has_state() const {
  return this != internal_default_instance() && state_ != NULL;
}
inline void AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer::clear_state() {
  if (GetArenaNoVirtual() == NULL && state_ != NULL) {
    delete state_;
  }
  state_ = NULL;
}
inline const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_State& AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer::state() const {
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_State* p = state_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Logging.RemoteServers.RemoteServer.state)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_State*>(
      &::openconfig::openconfig_access_points::_AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_State_default_instance_);
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_State* AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer::release_state() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Logging.RemoteServers.RemoteServer.state)
  
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_State* temp = state_;
  state_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_State* AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer::mutable_state() {
  
  if (state_ == NULL) {
    state_ = new ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_State;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Logging.RemoteServers.RemoteServer.state)
  return state_;
}
inline void AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer::set_allocated_state(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_State* state) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete state_;
  }
  if (state) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      state = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, state, submessage_arena);
    }
    
  } else {
    
  }
  state_ = state;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Logging.RemoteServers.RemoteServer.state)
}

// -------------------------------------------------------------------

// AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServerKey

// string host = 1 [(.yext.schemapath) = "/access-points/access-point/system/logging/remote-servers/remote-server/host"];
inline void AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServerKey::clear_host() {
  host_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServerKey::host() const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Logging.RemoteServers.RemoteServerKey.host)
  return host_.GetNoArena();
}
inline void AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServerKey::set_host(const ::std::string& value) {
  
  host_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Logging.RemoteServers.RemoteServerKey.host)
}
#if LANG_CXX11
inline void AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServerKey::set_host(::std::string&& value) {
  
  host_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Logging.RemoteServers.RemoteServerKey.host)
}
#endif
inline void AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServerKey::set_host(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  host_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Logging.RemoteServers.RemoteServerKey.host)
}
inline void AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServerKey::set_host(const char* value, size_t size) {
  
  host_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Logging.RemoteServers.RemoteServerKey.host)
}
inline ::std::string* AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServerKey::mutable_host() {
  
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Logging.RemoteServers.RemoteServerKey.host)
  return host_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServerKey::release_host() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Logging.RemoteServers.RemoteServerKey.host)
  
  return host_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServerKey::set_allocated_host(::std::string* host) {
  if (host != NULL) {
    
  } else {
    
  }
  host_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), host);
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Logging.RemoteServers.RemoteServerKey.host)
}

// .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Logging.RemoteServers.RemoteServer remote_server = 2;
inline bool AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServerKey::has_remote_server() const {
  return this != internal_default_instance() && remote_server_ != NULL;
}
inline void AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServerKey::clear_remote_server() {
  if (GetArenaNoVirtual() == NULL && remote_server_ != NULL) {
    delete remote_server_;
  }
  remote_server_ = NULL;
}
inline const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer& AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServerKey::remote_server() const {
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer* p = remote_server_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Logging.RemoteServers.RemoteServerKey.remote_server)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer*>(
      &::openconfig::openconfig_access_points::_AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer_default_instance_);
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer* AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServerKey::release_remote_server() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Logging.RemoteServers.RemoteServerKey.remote_server)
  
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer* temp = remote_server_;
  remote_server_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer* AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServerKey::mutable_remote_server() {
  
  if (remote_server_ == NULL) {
    remote_server_ = new ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Logging.RemoteServers.RemoteServerKey.remote_server)
  return remote_server_;
}
inline void AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServerKey::set_allocated_remote_server(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServer* remote_server) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete remote_server_;
  }
  if (remote_server) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      remote_server = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, remote_server, submessage_arena);
    }
    
  } else {
    
  }
  remote_server_ = remote_server;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Logging.RemoteServers.RemoteServerKey.remote_server)
}

// -------------------------------------------------------------------

// AccessPoints_AccessPoint_System_Logging_RemoteServers

// repeated .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Logging.RemoteServers.RemoteServerKey remote_server = 140624747 [(.yext.schemapath) = "/access-points/access-point/system/logging/remote-servers/remote-server"];
inline int AccessPoints_AccessPoint_System_Logging_RemoteServers::remote_server_size() const {
  return remote_server_.size();
}
inline void AccessPoints_AccessPoint_System_Logging_RemoteServers::clear_remote_server() {
  remote_server_.Clear();
}
inline const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServerKey& AccessPoints_AccessPoint_System_Logging_RemoteServers::remote_server(int index) const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Logging.RemoteServers.remote_server)
  return remote_server_.Get(index);
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServerKey* AccessPoints_AccessPoint_System_Logging_RemoteServers::mutable_remote_server(int index) {
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Logging.RemoteServers.remote_server)
  return remote_server_.Mutable(index);
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServerKey* AccessPoints_AccessPoint_System_Logging_RemoteServers::add_remote_server() {
  // @@protoc_insertion_point(field_add:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Logging.RemoteServers.remote_server)
  return remote_server_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServerKey >*
AccessPoints_AccessPoint_System_Logging_RemoteServers::mutable_remote_server() {
  // @@protoc_insertion_point(field_mutable_list:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Logging.RemoteServers.remote_server)
  return &remote_server_;
}
inline const ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging_RemoteServers_RemoteServerKey >&
AccessPoints_AccessPoint_System_Logging_RemoteServers::remote_server() const {
  // @@protoc_insertion_point(field_list:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Logging.RemoteServers.remote_server)
  return remote_server_;
}

// -------------------------------------------------------------------

// AccessPoints_AccessPoint_System_Logging

// .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Logging.Console console = 194524352 [(.yext.schemapath) = "/access-points/access-point/system/logging/console"];
inline bool AccessPoints_AccessPoint_System_Logging::has_console() const {
  return this != internal_default_instance() && console_ != NULL;
}
inline void AccessPoints_AccessPoint_System_Logging::clear_console() {
  if (GetArenaNoVirtual() == NULL && console_ != NULL) {
    delete console_;
  }
  console_ = NULL;
}
inline const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging_Console& AccessPoints_AccessPoint_System_Logging::console() const {
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging_Console* p = console_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Logging.console)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging_Console*>(
      &::openconfig::openconfig_access_points::_AccessPoints_AccessPoint_System_Logging_Console_default_instance_);
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging_Console* AccessPoints_AccessPoint_System_Logging::release_console() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Logging.console)
  
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging_Console* temp = console_;
  console_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging_Console* AccessPoints_AccessPoint_System_Logging::mutable_console() {
  
  if (console_ == NULL) {
    console_ = new ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging_Console;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Logging.console)
  return console_;
}
inline void AccessPoints_AccessPoint_System_Logging::set_allocated_console(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging_Console* console) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete console_;
  }
  if (console) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      console = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, console, submessage_arena);
    }
    
  } else {
    
  }
  console_ = console;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Logging.console)
}

// .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Logging.RemoteServers remote_servers = 179471252 [(.yext.schemapath) = "/access-points/access-point/system/logging/remote-servers"];
inline bool AccessPoints_AccessPoint_System_Logging::has_remote_servers() const {
  return this != internal_default_instance() && remote_servers_ != NULL;
}
inline void AccessPoints_AccessPoint_System_Logging::clear_remote_servers() {
  if (GetArenaNoVirtual() == NULL && remote_servers_ != NULL) {
    delete remote_servers_;
  }
  remote_servers_ = NULL;
}
inline const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging_RemoteServers& AccessPoints_AccessPoint_System_Logging::remote_servers() const {
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging_RemoteServers* p = remote_servers_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Logging.remote_servers)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging_RemoteServers*>(
      &::openconfig::openconfig_access_points::_AccessPoints_AccessPoint_System_Logging_RemoteServers_default_instance_);
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging_RemoteServers* AccessPoints_AccessPoint_System_Logging::release_remote_servers() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Logging.remote_servers)
  
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging_RemoteServers* temp = remote_servers_;
  remote_servers_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging_RemoteServers* AccessPoints_AccessPoint_System_Logging::mutable_remote_servers() {
  
  if (remote_servers_ == NULL) {
    remote_servers_ = new ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging_RemoteServers;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Logging.remote_servers)
  return remote_servers_;
}
inline void AccessPoints_AccessPoint_System_Logging::set_allocated_remote_servers(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging_RemoteServers* remote_servers) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete remote_servers_;
  }
  if (remote_servers) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      remote_servers = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, remote_servers, submessage_arena);
    }
    
  } else {
    
  }
  remote_servers_ = remote_servers;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Logging.remote_servers)
}

// -------------------------------------------------------------------

// AccessPoints_AccessPoint_System_Memory_Config

// -------------------------------------------------------------------

// AccessPoints_AccessPoint_System_Memory_State

// .ywrapper.UintValue physical = 26298580 [(.yext.schemapath) = "/access-points/access-point/system/memory/state/physical"];
inline bool AccessPoints_AccessPoint_System_Memory_State::has_physical() const {
  return this != internal_default_instance() && physical_ != NULL;
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_System_Memory_State::physical() const {
  const ::ywrapper::UintValue* p = physical_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Memory.State.physical)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_System_Memory_State::release_physical() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Memory.State.physical)
  
  ::ywrapper::UintValue* temp = physical_;
  physical_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_System_Memory_State::mutable_physical() {
  
  if (physical_ == NULL) {
    physical_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Memory.State.physical)
  return physical_;
}
inline void AccessPoints_AccessPoint_System_Memory_State::set_allocated_physical(::ywrapper::UintValue* physical) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(physical_);
  }
  if (physical) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      physical = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, physical, submessage_arena);
    }
    
  } else {
    
  }
  physical_ = physical;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Memory.State.physical)
}

// .ywrapper.UintValue reserved = 421913059 [(.yext.schemapath) = "/access-points/access-point/system/memory/state/reserved"];
inline bool AccessPoints_AccessPoint_System_Memory_State::has_reserved() const {
  return this != internal_default_instance() && reserved_ != NULL;
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_System_Memory_State::reserved() const {
  const ::ywrapper::UintValue* p = reserved_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Memory.State.reserved)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_System_Memory_State::release_reserved() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Memory.State.reserved)
  
  ::ywrapper::UintValue* temp = reserved_;
  reserved_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_System_Memory_State::mutable_reserved() {
  
  if (reserved_ == NULL) {
    reserved_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Memory.State.reserved)
  return reserved_;
}
inline void AccessPoints_AccessPoint_System_Memory_State::set_allocated_reserved(::ywrapper::UintValue* reserved) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(reserved_);
  }
  if (reserved) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      reserved = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, reserved, submessage_arena);
    }
    
  } else {
    
  }
  reserved_ = reserved;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Memory.State.reserved)
}

// -------------------------------------------------------------------

// AccessPoints_AccessPoint_System_Memory

// .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Memory.Config config = 135107827 [(.yext.schemapath) = "/access-points/access-point/system/memory/config"];
inline bool AccessPoints_AccessPoint_System_Memory::has_config() const {
  return this != internal_default_instance() && config_ != NULL;
}
inline void AccessPoints_AccessPoint_System_Memory::clear_config() {
  if (GetArenaNoVirtual() == NULL && config_ != NULL) {
    delete config_;
  }
  config_ = NULL;
}
inline const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Memory_Config& AccessPoints_AccessPoint_System_Memory::config() const {
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Memory_Config* p = config_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Memory.config)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Memory_Config*>(
      &::openconfig::openconfig_access_points::_AccessPoints_AccessPoint_System_Memory_Config_default_instance_);
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Memory_Config* AccessPoints_AccessPoint_System_Memory::release_config() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Memory.config)
  
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Memory_Config* temp = config_;
  config_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Memory_Config* AccessPoints_AccessPoint_System_Memory::mutable_config() {
  
  if (config_ == NULL) {
    config_ = new ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Memory_Config;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Memory.config)
  return config_;
}
inline void AccessPoints_AccessPoint_System_Memory::set_allocated_config(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Memory_Config* config) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete config_;
  }
  if (config) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      config = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, config, submessage_arena);
    }
    
  } else {
    
  }
  config_ = config;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Memory.config)
}

// .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Memory.State state = 120418132 [(.yext.schemapath) = "/access-points/access-point/system/memory/state"];
inline bool AccessPoints_AccessPoint_System_Memory::has_state() const {
  return this != internal_default_instance() && state_ != NULL;
}
inline void AccessPoints_AccessPoint_System_Memory::clear_state() {
  if (GetArenaNoVirtual() == NULL && state_ != NULL) {
    delete state_;
  }
  state_ = NULL;
}
inline const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Memory_State& AccessPoints_AccessPoint_System_Memory::state() const {
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Memory_State* p = state_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Memory.state)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Memory_State*>(
      &::openconfig::openconfig_access_points::_AccessPoints_AccessPoint_System_Memory_State_default_instance_);
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Memory_State* AccessPoints_AccessPoint_System_Memory::release_state() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Memory.state)
  
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Memory_State* temp = state_;
  state_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Memory_State* AccessPoints_AccessPoint_System_Memory::mutable_state() {
  
  if (state_ == NULL) {
    state_ = new ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Memory_State;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Memory.state)
  return state_;
}
inline void AccessPoints_AccessPoint_System_Memory::set_allocated_state(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Memory_State* state) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete state_;
  }
  if (state) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      state = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, state, submessage_arena);
    }
    
  } else {
    
  }
  state_ = state;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Memory.state)
}

// -------------------------------------------------------------------

// AccessPoints_AccessPoint_System_Ntp_Config

// .ywrapper.BoolValue enable_ntp_auth = 442584302 [(.yext.schemapath) = "/access-points/access-point/system/ntp/config/enable-ntp-auth"];
inline bool AccessPoints_AccessPoint_System_Ntp_Config::has_enable_ntp_auth() const {
  return this != internal_default_instance() && enable_ntp_auth_ != NULL;
}
inline const ::ywrapper::BoolValue& AccessPoints_AccessPoint_System_Ntp_Config::enable_ntp_auth() const {
  const ::ywrapper::BoolValue* p = enable_ntp_auth_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Ntp.Config.enable_ntp_auth)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::BoolValue*>(
      &::ywrapper::_BoolValue_default_instance_);
}
inline ::ywrapper::BoolValue* AccessPoints_AccessPoint_System_Ntp_Config::release_enable_ntp_auth() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Ntp.Config.enable_ntp_auth)
  
  ::ywrapper::BoolValue* temp = enable_ntp_auth_;
  enable_ntp_auth_ = NULL;
  return temp;
}
inline ::ywrapper::BoolValue* AccessPoints_AccessPoint_System_Ntp_Config::mutable_enable_ntp_auth() {
  
  if (enable_ntp_auth_ == NULL) {
    enable_ntp_auth_ = new ::ywrapper::BoolValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Ntp.Config.enable_ntp_auth)
  return enable_ntp_auth_;
}
inline void AccessPoints_AccessPoint_System_Ntp_Config::set_allocated_enable_ntp_auth(::ywrapper::BoolValue* enable_ntp_auth) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(enable_ntp_auth_);
  }
  if (enable_ntp_auth) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      enable_ntp_auth = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, enable_ntp_auth, submessage_arena);
    }
    
  } else {
    
  }
  enable_ntp_auth_ = enable_ntp_auth;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Ntp.Config.enable_ntp_auth)
}

// .ywrapper.BoolValue enabled = 157878698 [(.yext.schemapath) = "/access-points/access-point/system/ntp/config/enabled"];
inline bool AccessPoints_AccessPoint_System_Ntp_Config::has_enabled() const {
  return this != internal_default_instance() && enabled_ != NULL;
}
inline const ::ywrapper::BoolValue& AccessPoints_AccessPoint_System_Ntp_Config::enabled() const {
  const ::ywrapper::BoolValue* p = enabled_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Ntp.Config.enabled)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::BoolValue*>(
      &::ywrapper::_BoolValue_default_instance_);
}
inline ::ywrapper::BoolValue* AccessPoints_AccessPoint_System_Ntp_Config::release_enabled() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Ntp.Config.enabled)
  
  ::ywrapper::BoolValue* temp = enabled_;
  enabled_ = NULL;
  return temp;
}
inline ::ywrapper::BoolValue* AccessPoints_AccessPoint_System_Ntp_Config::mutable_enabled() {
  
  if (enabled_ == NULL) {
    enabled_ = new ::ywrapper::BoolValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Ntp.Config.enabled)
  return enabled_;
}
inline void AccessPoints_AccessPoint_System_Ntp_Config::set_allocated_enabled(::ywrapper::BoolValue* enabled) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(enabled_);
  }
  if (enabled) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      enabled = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, enabled, submessage_arena);
    }
    
  } else {
    
  }
  enabled_ = enabled;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Ntp.Config.enabled)
}

// .ywrapper.StringValue ntp_source_address = 526405384 [(.yext.schemapath) = "/access-points/access-point/system/ntp/config/ntp-source-address"];
inline bool AccessPoints_AccessPoint_System_Ntp_Config::has_ntp_source_address() const {
  return this != internal_default_instance() && ntp_source_address_ != NULL;
}
inline const ::ywrapper::StringValue& AccessPoints_AccessPoint_System_Ntp_Config::ntp_source_address() const {
  const ::ywrapper::StringValue* p = ntp_source_address_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Ntp.Config.ntp_source_address)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::StringValue*>(
      &::ywrapper::_StringValue_default_instance_);
}
inline ::ywrapper::StringValue* AccessPoints_AccessPoint_System_Ntp_Config::release_ntp_source_address() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Ntp.Config.ntp_source_address)
  
  ::ywrapper::StringValue* temp = ntp_source_address_;
  ntp_source_address_ = NULL;
  return temp;
}
inline ::ywrapper::StringValue* AccessPoints_AccessPoint_System_Ntp_Config::mutable_ntp_source_address() {
  
  if (ntp_source_address_ == NULL) {
    ntp_source_address_ = new ::ywrapper::StringValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Ntp.Config.ntp_source_address)
  return ntp_source_address_;
}
inline void AccessPoints_AccessPoint_System_Ntp_Config::set_allocated_ntp_source_address(::ywrapper::StringValue* ntp_source_address) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(ntp_source_address_);
  }
  if (ntp_source_address) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      ntp_source_address = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, ntp_source_address, submessage_arena);
    }
    
  } else {
    
  }
  ntp_source_address_ = ntp_source_address;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Ntp.Config.ntp_source_address)
}

// -------------------------------------------------------------------

// AccessPoints_AccessPoint_System_Ntp_NtpKeys_NtpKey_Config

// .ywrapper.UintValue key_id = 453095733 [(.yext.schemapath) = "/access-points/access-point/system/ntp/ntp-keys/ntp-key/config/key-id"];
inline bool AccessPoints_AccessPoint_System_Ntp_NtpKeys_NtpKey_Config::has_key_id() const {
  return this != internal_default_instance() && key_id_ != NULL;
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_System_Ntp_NtpKeys_NtpKey_Config::key_id() const {
  const ::ywrapper::UintValue* p = key_id_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Ntp.NtpKeys.NtpKey.Config.key_id)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_System_Ntp_NtpKeys_NtpKey_Config::release_key_id() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Ntp.NtpKeys.NtpKey.Config.key_id)
  
  ::ywrapper::UintValue* temp = key_id_;
  key_id_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_System_Ntp_NtpKeys_NtpKey_Config::mutable_key_id() {
  
  if (key_id_ == NULL) {
    key_id_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Ntp.NtpKeys.NtpKey.Config.key_id)
  return key_id_;
}
inline void AccessPoints_AccessPoint_System_Ntp_NtpKeys_NtpKey_Config::set_allocated_key_id(::ywrapper::UintValue* key_id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(key_id_);
  }
  if (key_id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      key_id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, key_id, submessage_arena);
    }
    
  } else {
    
  }
  key_id_ = key_id;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Ntp.NtpKeys.NtpKey.Config.key_id)
}

// .openconfig.enums.OpenconfigSystemNTPAUTHTYPE key_type = 88813766 [(.yext.schemapath) = "/access-points/access-point/system/ntp/ntp-keys/ntp-key/config/key-type"];
inline void AccessPoints_AccessPoint_System_Ntp_NtpKeys_NtpKey_Config::clear_key_type() {
  key_type_ = 0;
}
inline ::openconfig::enums::OpenconfigSystemNTPAUTHTYPE AccessPoints_AccessPoint_System_Ntp_NtpKeys_NtpKey_Config::key_type() const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Ntp.NtpKeys.NtpKey.Config.key_type)
  return static_cast< ::openconfig::enums::OpenconfigSystemNTPAUTHTYPE >(key_type_);
}
inline void AccessPoints_AccessPoint_System_Ntp_NtpKeys_NtpKey_Config::set_key_type(::openconfig::enums::OpenconfigSystemNTPAUTHTYPE value) {
  
  key_type_ = value;
  // @@protoc_insertion_point(field_set:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Ntp.NtpKeys.NtpKey.Config.key_type)
}

// .ywrapper.StringValue key_value = 176946569 [(.yext.schemapath) = "/access-points/access-point/system/ntp/ntp-keys/ntp-key/config/key-value"];
inline bool AccessPoints_AccessPoint_System_Ntp_NtpKeys_NtpKey_Config::has_key_value() const {
  return this != internal_default_instance() && key_value_ != NULL;
}
inline const ::ywrapper::StringValue& AccessPoints_AccessPoint_System_Ntp_NtpKeys_NtpKey_Config::key_value() const {
  const ::ywrapper::StringValue* p = key_value_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Ntp.NtpKeys.NtpKey.Config.key_value)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::StringValue*>(
      &::ywrapper::_StringValue_default_instance_);
}
inline ::ywrapper::StringValue* AccessPoints_AccessPoint_System_Ntp_NtpKeys_NtpKey_Config::release_key_value() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Ntp.NtpKeys.NtpKey.Config.key_value)
  
  ::ywrapper::StringValue* temp = key_value_;
  key_value_ = NULL;
  return temp;
}
inline ::ywrapper::StringValue* AccessPoints_AccessPoint_System_Ntp_NtpKeys_NtpKey_Config::mutable_key_value() {
  
  if (key_value_ == NULL) {
    key_value_ = new ::ywrapper::StringValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Ntp.NtpKeys.NtpKey.Config.key_value)
  return key_value_;
}
inline void AccessPoints_AccessPoint_System_Ntp_NtpKeys_NtpKey_Config::set_allocated_key_value(::ywrapper::StringValue* key_value) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(key_value_);
  }
  if (key_value) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      key_value = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, key_value, submessage_arena);
    }
    
  } else {
    
  }
  key_value_ = key_value;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Ntp.NtpKeys.NtpKey.Config.key_value)
}

// -------------------------------------------------------------------

// AccessPoints_AccessPoint_System_Ntp_NtpKeys_NtpKey_State

// .ywrapper.UintValue key_id = 15852988 [(.yext.schemapath) = "/access-points/access-point/system/ntp/ntp-keys/ntp-key/state/key-id"];
inline bool AccessPoints_AccessPoint_System_Ntp_NtpKeys_NtpKey_State::has_key_id() const {
  return this != internal_default_instance() && key_id_ != NULL;
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_System_Ntp_NtpKeys_NtpKey_State::key_id() const {
  const ::ywrapper::UintValue* p = key_id_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Ntp.NtpKeys.NtpKey.State.key_id)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_System_Ntp_NtpKeys_NtpKey_State::release_key_id() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Ntp.NtpKeys.NtpKey.State.key_id)
  
  ::ywrapper::UintValue* temp = key_id_;
  key_id_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_System_Ntp_NtpKeys_NtpKey_State::mutable_key_id() {
  
  if (key_id_ == NULL) {
    key_id_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Ntp.NtpKeys.NtpKey.State.key_id)
  return key_id_;
}
inline void AccessPoints_AccessPoint_System_Ntp_NtpKeys_NtpKey_State::set_allocated_key_id(::ywrapper::UintValue* key_id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(key_id_);
  }
  if (key_id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      key_id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, key_id, submessage_arena);
    }
    
  } else {
    
  }
  key_id_ = key_id;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Ntp.NtpKeys.NtpKey.State.key_id)
}

// .openconfig.enums.OpenconfigSystemNTPAUTHTYPE key_type = 300551187 [(.yext.schemapath) = "/access-points/access-point/system/ntp/ntp-keys/ntp-key/state/key-type"];
inline void AccessPoints_AccessPoint_System_Ntp_NtpKeys_NtpKey_State::clear_key_type() {
  key_type_ = 0;
}
inline ::openconfig::enums::OpenconfigSystemNTPAUTHTYPE AccessPoints_AccessPoint_System_Ntp_NtpKeys_NtpKey_State::key_type() const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Ntp.NtpKeys.NtpKey.State.key_type)
  return static_cast< ::openconfig::enums::OpenconfigSystemNTPAUTHTYPE >(key_type_);
}
inline void AccessPoints_AccessPoint_System_Ntp_NtpKeys_NtpKey_State::set_key_type(::openconfig::enums::OpenconfigSystemNTPAUTHTYPE value) {
  
  key_type_ = value;
  // @@protoc_insertion_point(field_set:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Ntp.NtpKeys.NtpKey.State.key_type)
}

// .ywrapper.StringValue key_value = 63348218 [(.yext.schemapath) = "/access-points/access-point/system/ntp/ntp-keys/ntp-key/state/key-value"];
inline bool AccessPoints_AccessPoint_System_Ntp_NtpKeys_NtpKey_State::has_key_value() const {
  return this != internal_default_instance() && key_value_ != NULL;
}
inline const ::ywrapper::StringValue& AccessPoints_AccessPoint_System_Ntp_NtpKeys_NtpKey_State::key_value() const {
  const ::ywrapper::StringValue* p = key_value_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Ntp.NtpKeys.NtpKey.State.key_value)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::StringValue*>(
      &::ywrapper::_StringValue_default_instance_);
}
inline ::ywrapper::StringValue* AccessPoints_AccessPoint_System_Ntp_NtpKeys_NtpKey_State::release_key_value() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Ntp.NtpKeys.NtpKey.State.key_value)
  
  ::ywrapper::StringValue* temp = key_value_;
  key_value_ = NULL;
  return temp;
}
inline ::ywrapper::StringValue* AccessPoints_AccessPoint_System_Ntp_NtpKeys_NtpKey_State::mutable_key_value() {
  
  if (key_value_ == NULL) {
    key_value_ = new ::ywrapper::StringValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Ntp.NtpKeys.NtpKey.State.key_value)
  return key_value_;
}
inline void AccessPoints_AccessPoint_System_Ntp_NtpKeys_NtpKey_State::set_allocated_key_value(::ywrapper::StringValue* key_value) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(key_value_);
  }
  if (key_value) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      key_value = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, key_value, submessage_arena);
    }
    
  } else {
    
  }
  key_value_ = key_value;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Ntp.NtpKeys.NtpKey.State.key_value)
}

// -------------------------------------------------------------------

// AccessPoints_AccessPoint_System_Ntp_NtpKeys_NtpKey

// .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Ntp.NtpKeys.NtpKey.Config config = 115789833 [(.yext.schemapath) = "/access-points/access-point/system/ntp/ntp-keys/ntp-key/config"];
inline bool AccessPoints_AccessPoint_System_Ntp_NtpKeys_NtpKey::has_config() const {
  return this != internal_default_instance() && config_ != NULL;
}
inline void AccessPoints_AccessPoint_System_Ntp_NtpKeys_NtpKey::clear_config() {
  if (GetArenaNoVirtual() == NULL && config_ != NULL) {
    delete config_;
  }
  config_ = NULL;
}
inline const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Ntp_NtpKeys_NtpKey_Config& AccessPoints_AccessPoint_System_Ntp_NtpKeys_NtpKey::config() const {
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Ntp_NtpKeys_NtpKey_Config* p = config_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Ntp.NtpKeys.NtpKey.config)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Ntp_NtpKeys_NtpKey_Config*>(
      &::openconfig::openconfig_access_points::_AccessPoints_AccessPoint_System_Ntp_NtpKeys_NtpKey_Config_default_instance_);
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Ntp_NtpKeys_NtpKey_Config* AccessPoints_AccessPoint_System_Ntp_NtpKeys_NtpKey::release_config() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Ntp.NtpKeys.NtpKey.config)
  
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Ntp_NtpKeys_NtpKey_Config* temp = config_;
  config_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Ntp_NtpKeys_NtpKey_Config* AccessPoints_AccessPoint_System_Ntp_NtpKeys_NtpKey::mutable_config() {
  
  if (config_ == NULL) {
    config_ = new ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Ntp_NtpKeys_NtpKey_Config;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Ntp.NtpKeys.NtpKey.config)
  return config_;
}
inline void AccessPoints_AccessPoint_System_Ntp_NtpKeys_NtpKey::set_allocated_config(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Ntp_NtpKeys_NtpKey_Config* config) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete config_;
  }
  if (config) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      config = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, config, submessage_arena);
    }
    
  } else {
    
  }
  config_ = config;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Ntp.NtpKeys.NtpKey.config)
}

// .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Ntp.NtpKeys.NtpKey.State state = 410663006 [(.yext.schemapath) = "/access-points/access-point/system/ntp/ntp-keys/ntp-key/state"];
inline bool AccessPoints_AccessPoint_System_Ntp_NtpKeys_NtpKey::has_state() const {
  return this != internal_default_instance() && state_ != NULL;
}
inline void AccessPoints_AccessPoint_System_Ntp_NtpKeys_NtpKey::clear_state() {
  if (GetArenaNoVirtual() == NULL && state_ != NULL) {
    delete state_;
  }
  state_ = NULL;
}
inline const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Ntp_NtpKeys_NtpKey_State& AccessPoints_AccessPoint_System_Ntp_NtpKeys_NtpKey::state() const {
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Ntp_NtpKeys_NtpKey_State* p = state_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Ntp.NtpKeys.NtpKey.state)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Ntp_NtpKeys_NtpKey_State*>(
      &::openconfig::openconfig_access_points::_AccessPoints_AccessPoint_System_Ntp_NtpKeys_NtpKey_State_default_instance_);
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Ntp_NtpKeys_NtpKey_State* AccessPoints_AccessPoint_System_Ntp_NtpKeys_NtpKey::release_state() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Ntp.NtpKeys.NtpKey.state)
  
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Ntp_NtpKeys_NtpKey_State* temp = state_;
  state_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Ntp_NtpKeys_NtpKey_State* AccessPoints_AccessPoint_System_Ntp_NtpKeys_NtpKey::mutable_state() {
  
  if (state_ == NULL) {
    state_ = new ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Ntp_NtpKeys_NtpKey_State;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Ntp.NtpKeys.NtpKey.state)
  return state_;
}
inline void AccessPoints_AccessPoint_System_Ntp_NtpKeys_NtpKey::set_allocated_state(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Ntp_NtpKeys_NtpKey_State* state) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete state_;
  }
  if (state) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      state = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, state, submessage_arena);
    }
    
  } else {
    
  }
  state_ = state;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Ntp.NtpKeys.NtpKey.state)
}

// -------------------------------------------------------------------

// AccessPoints_AccessPoint_System_Ntp_NtpKeys_NtpKeyKey

// uint64 key_id = 1 [(.yext.schemapath) = "/access-points/access-point/system/ntp/ntp-keys/ntp-key/key-id"];
inline void AccessPoints_AccessPoint_System_Ntp_NtpKeys_NtpKeyKey::clear_key_id() {
  key_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 AccessPoints_AccessPoint_System_Ntp_NtpKeys_NtpKeyKey::key_id() const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Ntp.NtpKeys.NtpKeyKey.key_id)
  return key_id_;
}
inline void AccessPoints_AccessPoint_System_Ntp_NtpKeys_NtpKeyKey::set_key_id(::google::protobuf::uint64 value) {
  
  key_id_ = value;
  // @@protoc_insertion_point(field_set:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Ntp.NtpKeys.NtpKeyKey.key_id)
}

// .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Ntp.NtpKeys.NtpKey ntp_key = 2;
inline bool AccessPoints_AccessPoint_System_Ntp_NtpKeys_NtpKeyKey::has_ntp_key() const {
  return this != internal_default_instance() && ntp_key_ != NULL;
}
inline void AccessPoints_AccessPoint_System_Ntp_NtpKeys_NtpKeyKey::clear_ntp_key() {
  if (GetArenaNoVirtual() == NULL && ntp_key_ != NULL) {
    delete ntp_key_;
  }
  ntp_key_ = NULL;
}
inline const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Ntp_NtpKeys_NtpKey& AccessPoints_AccessPoint_System_Ntp_NtpKeys_NtpKeyKey::ntp_key() const {
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Ntp_NtpKeys_NtpKey* p = ntp_key_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Ntp.NtpKeys.NtpKeyKey.ntp_key)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Ntp_NtpKeys_NtpKey*>(
      &::openconfig::openconfig_access_points::_AccessPoints_AccessPoint_System_Ntp_NtpKeys_NtpKey_default_instance_);
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Ntp_NtpKeys_NtpKey* AccessPoints_AccessPoint_System_Ntp_NtpKeys_NtpKeyKey::release_ntp_key() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Ntp.NtpKeys.NtpKeyKey.ntp_key)
  
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Ntp_NtpKeys_NtpKey* temp = ntp_key_;
  ntp_key_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Ntp_NtpKeys_NtpKey* AccessPoints_AccessPoint_System_Ntp_NtpKeys_NtpKeyKey::mutable_ntp_key() {
  
  if (ntp_key_ == NULL) {
    ntp_key_ = new ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Ntp_NtpKeys_NtpKey;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Ntp.NtpKeys.NtpKeyKey.ntp_key)
  return ntp_key_;
}
inline void AccessPoints_AccessPoint_System_Ntp_NtpKeys_NtpKeyKey::set_allocated_ntp_key(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Ntp_NtpKeys_NtpKey* ntp_key) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete ntp_key_;
  }
  if (ntp_key) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      ntp_key = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, ntp_key, submessage_arena);
    }
    
  } else {
    
  }
  ntp_key_ = ntp_key;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Ntp.NtpKeys.NtpKeyKey.ntp_key)
}

// -------------------------------------------------------------------

// AccessPoints_AccessPoint_System_Ntp_NtpKeys

// repeated .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Ntp.NtpKeys.NtpKeyKey ntp_key = 44804836 [(.yext.schemapath) = "/access-points/access-point/system/ntp/ntp-keys/ntp-key"];
inline int AccessPoints_AccessPoint_System_Ntp_NtpKeys::ntp_key_size() const {
  return ntp_key_.size();
}
inline void AccessPoints_AccessPoint_System_Ntp_NtpKeys::clear_ntp_key() {
  ntp_key_.Clear();
}
inline const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Ntp_NtpKeys_NtpKeyKey& AccessPoints_AccessPoint_System_Ntp_NtpKeys::ntp_key(int index) const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Ntp.NtpKeys.ntp_key)
  return ntp_key_.Get(index);
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Ntp_NtpKeys_NtpKeyKey* AccessPoints_AccessPoint_System_Ntp_NtpKeys::mutable_ntp_key(int index) {
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Ntp.NtpKeys.ntp_key)
  return ntp_key_.Mutable(index);
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Ntp_NtpKeys_NtpKeyKey* AccessPoints_AccessPoint_System_Ntp_NtpKeys::add_ntp_key() {
  // @@protoc_insertion_point(field_add:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Ntp.NtpKeys.ntp_key)
  return ntp_key_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Ntp_NtpKeys_NtpKeyKey >*
AccessPoints_AccessPoint_System_Ntp_NtpKeys::mutable_ntp_key() {
  // @@protoc_insertion_point(field_mutable_list:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Ntp.NtpKeys.ntp_key)
  return &ntp_key_;
}
inline const ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Ntp_NtpKeys_NtpKeyKey >&
AccessPoints_AccessPoint_System_Ntp_NtpKeys::ntp_key() const {
  // @@protoc_insertion_point(field_list:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Ntp.NtpKeys.ntp_key)
  return ntp_key_;
}

// -------------------------------------------------------------------

// AccessPoints_AccessPoint_System_Ntp_Servers_Server_Config

// .ywrapper.StringValue address = 224303264 [(.yext.schemapath) = "/access-points/access-point/system/ntp/servers/server/config/address"];
inline bool AccessPoints_AccessPoint_System_Ntp_Servers_Server_Config::has_address() const {
  return this != internal_default_instance() && address_ != NULL;
}
inline const ::ywrapper::StringValue& AccessPoints_AccessPoint_System_Ntp_Servers_Server_Config::address() const {
  const ::ywrapper::StringValue* p = address_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Ntp.Servers.Server.Config.address)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::StringValue*>(
      &::ywrapper::_StringValue_default_instance_);
}
inline ::ywrapper::StringValue* AccessPoints_AccessPoint_System_Ntp_Servers_Server_Config::release_address() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Ntp.Servers.Server.Config.address)
  
  ::ywrapper::StringValue* temp = address_;
  address_ = NULL;
  return temp;
}
inline ::ywrapper::StringValue* AccessPoints_AccessPoint_System_Ntp_Servers_Server_Config::mutable_address() {
  
  if (address_ == NULL) {
    address_ = new ::ywrapper::StringValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Ntp.Servers.Server.Config.address)
  return address_;
}
inline void AccessPoints_AccessPoint_System_Ntp_Servers_Server_Config::set_allocated_address(::ywrapper::StringValue* address) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(address_);
  }
  if (address) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      address = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, address, submessage_arena);
    }
    
  } else {
    
  }
  address_ = address;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Ntp.Servers.Server.Config.address)
}

// .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Ntp.Servers.Server.Config.AssociationType association_type = 252815986 [(.yext.schemapath) = "/access-points/access-point/system/ntp/servers/server/config/association-type"];
inline void AccessPoints_AccessPoint_System_Ntp_Servers_Server_Config::clear_association_type() {
  association_type_ = 0;
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Ntp_Servers_Server_Config_AssociationType AccessPoints_AccessPoint_System_Ntp_Servers_Server_Config::association_type() const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Ntp.Servers.Server.Config.association_type)
  return static_cast< ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Ntp_Servers_Server_Config_AssociationType >(association_type_);
}
inline void AccessPoints_AccessPoint_System_Ntp_Servers_Server_Config::set_association_type(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Ntp_Servers_Server_Config_AssociationType value) {
  
  association_type_ = value;
  // @@protoc_insertion_point(field_set:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Ntp.Servers.Server.Config.association_type)
}

// .ywrapper.BoolValue iburst = 352581413 [(.yext.schemapath) = "/access-points/access-point/system/ntp/servers/server/config/iburst"];
inline bool AccessPoints_AccessPoint_System_Ntp_Servers_Server_Config::has_iburst() const {
  return this != internal_default_instance() && iburst_ != NULL;
}
inline const ::ywrapper::BoolValue& AccessPoints_AccessPoint_System_Ntp_Servers_Server_Config::iburst() const {
  const ::ywrapper::BoolValue* p = iburst_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Ntp.Servers.Server.Config.iburst)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::BoolValue*>(
      &::ywrapper::_BoolValue_default_instance_);
}
inline ::ywrapper::BoolValue* AccessPoints_AccessPoint_System_Ntp_Servers_Server_Config::release_iburst() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Ntp.Servers.Server.Config.iburst)
  
  ::ywrapper::BoolValue* temp = iburst_;
  iburst_ = NULL;
  return temp;
}
inline ::ywrapper::BoolValue* AccessPoints_AccessPoint_System_Ntp_Servers_Server_Config::mutable_iburst() {
  
  if (iburst_ == NULL) {
    iburst_ = new ::ywrapper::BoolValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Ntp.Servers.Server.Config.iburst)
  return iburst_;
}
inline void AccessPoints_AccessPoint_System_Ntp_Servers_Server_Config::set_allocated_iburst(::ywrapper::BoolValue* iburst) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(iburst_);
  }
  if (iburst) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      iburst = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, iburst, submessage_arena);
    }
    
  } else {
    
  }
  iburst_ = iburst;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Ntp.Servers.Server.Config.iburst)
}

// .ywrapper.UintValue port = 430227705 [(.yext.schemapath) = "/access-points/access-point/system/ntp/servers/server/config/port"];
inline bool AccessPoints_AccessPoint_System_Ntp_Servers_Server_Config::has_port() const {
  return this != internal_default_instance() && port_ != NULL;
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_System_Ntp_Servers_Server_Config::port() const {
  const ::ywrapper::UintValue* p = port_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Ntp.Servers.Server.Config.port)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_System_Ntp_Servers_Server_Config::release_port() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Ntp.Servers.Server.Config.port)
  
  ::ywrapper::UintValue* temp = port_;
  port_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_System_Ntp_Servers_Server_Config::mutable_port() {
  
  if (port_ == NULL) {
    port_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Ntp.Servers.Server.Config.port)
  return port_;
}
inline void AccessPoints_AccessPoint_System_Ntp_Servers_Server_Config::set_allocated_port(::ywrapper::UintValue* port) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(port_);
  }
  if (port) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      port = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, port, submessage_arena);
    }
    
  } else {
    
  }
  port_ = port;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Ntp.Servers.Server.Config.port)
}

// .ywrapper.BoolValue prefer = 300736554 [(.yext.schemapath) = "/access-points/access-point/system/ntp/servers/server/config/prefer"];
inline bool AccessPoints_AccessPoint_System_Ntp_Servers_Server_Config::has_prefer() const {
  return this != internal_default_instance() && prefer_ != NULL;
}
inline const ::ywrapper::BoolValue& AccessPoints_AccessPoint_System_Ntp_Servers_Server_Config::prefer() const {
  const ::ywrapper::BoolValue* p = prefer_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Ntp.Servers.Server.Config.prefer)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::BoolValue*>(
      &::ywrapper::_BoolValue_default_instance_);
}
inline ::ywrapper::BoolValue* AccessPoints_AccessPoint_System_Ntp_Servers_Server_Config::release_prefer() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Ntp.Servers.Server.Config.prefer)
  
  ::ywrapper::BoolValue* temp = prefer_;
  prefer_ = NULL;
  return temp;
}
inline ::ywrapper::BoolValue* AccessPoints_AccessPoint_System_Ntp_Servers_Server_Config::mutable_prefer() {
  
  if (prefer_ == NULL) {
    prefer_ = new ::ywrapper::BoolValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Ntp.Servers.Server.Config.prefer)
  return prefer_;
}
inline void AccessPoints_AccessPoint_System_Ntp_Servers_Server_Config::set_allocated_prefer(::ywrapper::BoolValue* prefer) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(prefer_);
  }
  if (prefer) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      prefer = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, prefer, submessage_arena);
    }
    
  } else {
    
  }
  prefer_ = prefer;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Ntp.Servers.Server.Config.prefer)
}

// .ywrapper.UintValue version = 480763524 [(.yext.schemapath) = "/access-points/access-point/system/ntp/servers/server/config/version"];
inline bool AccessPoints_AccessPoint_System_Ntp_Servers_Server_Config::has_version() const {
  return this != internal_default_instance() && version_ != NULL;
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_System_Ntp_Servers_Server_Config::version() const {
  const ::ywrapper::UintValue* p = version_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Ntp.Servers.Server.Config.version)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_System_Ntp_Servers_Server_Config::release_version() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Ntp.Servers.Server.Config.version)
  
  ::ywrapper::UintValue* temp = version_;
  version_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_System_Ntp_Servers_Server_Config::mutable_version() {
  
  if (version_ == NULL) {
    version_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Ntp.Servers.Server.Config.version)
  return version_;
}
inline void AccessPoints_AccessPoint_System_Ntp_Servers_Server_Config::set_allocated_version(::ywrapper::UintValue* version) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(version_);
  }
  if (version) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      version = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, version, submessage_arena);
    }
    
  } else {
    
  }
  version_ = version;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Ntp.Servers.Server.Config.version)
}

// -------------------------------------------------------------------

// AccessPoints_AccessPoint_System_Ntp_Servers_Server_State

// .ywrapper.StringValue address = 499020619 [(.yext.schemapath) = "/access-points/access-point/system/ntp/servers/server/state/address"];
inline bool AccessPoints_AccessPoint_System_Ntp_Servers_Server_State::has_address() const {
  return this != internal_default_instance() && address_ != NULL;
}
inline const ::ywrapper::StringValue& AccessPoints_AccessPoint_System_Ntp_Servers_Server_State::address() const {
  const ::ywrapper::StringValue* p = address_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Ntp.Servers.Server.State.address)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::StringValue*>(
      &::ywrapper::_StringValue_default_instance_);
}
inline ::ywrapper::StringValue* AccessPoints_AccessPoint_System_Ntp_Servers_Server_State::release_address() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Ntp.Servers.Server.State.address)
  
  ::ywrapper::StringValue* temp = address_;
  address_ = NULL;
  return temp;
}
inline ::ywrapper::StringValue* AccessPoints_AccessPoint_System_Ntp_Servers_Server_State::mutable_address() {
  
  if (address_ == NULL) {
    address_ = new ::ywrapper::StringValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Ntp.Servers.Server.State.address)
  return address_;
}
inline void AccessPoints_AccessPoint_System_Ntp_Servers_Server_State::set_allocated_address(::ywrapper::StringValue* address) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(address_);
  }
  if (address) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      address = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, address, submessage_arena);
    }
    
  } else {
    
  }
  address_ = address;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Ntp.Servers.Server.State.address)
}

// .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Ntp.Servers.Server.State.AssociationType association_type = 235386659 [(.yext.schemapath) = "/access-points/access-point/system/ntp/servers/server/state/association-type"];
inline void AccessPoints_AccessPoint_System_Ntp_Servers_Server_State::clear_association_type() {
  association_type_ = 0;
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Ntp_Servers_Server_State_AssociationType AccessPoints_AccessPoint_System_Ntp_Servers_Server_State::association_type() const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Ntp.Servers.Server.State.association_type)
  return static_cast< ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Ntp_Servers_Server_State_AssociationType >(association_type_);
}
inline void AccessPoints_AccessPoint_System_Ntp_Servers_Server_State::set_association_type(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Ntp_Servers_Server_State_AssociationType value) {
  
  association_type_ = value;
  // @@protoc_insertion_point(field_set:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Ntp.Servers.Server.State.association_type)
}

// .ywrapper.BoolValue iburst = 356088404 [(.yext.schemapath) = "/access-points/access-point/system/ntp/servers/server/state/iburst"];
inline bool AccessPoints_AccessPoint_System_Ntp_Servers_Server_State::has_iburst() const {
  return this != internal_default_instance() && iburst_ != NULL;
}
inline const ::ywrapper::BoolValue& AccessPoints_AccessPoint_System_Ntp_Servers_Server_State::iburst() const {
  const ::ywrapper::BoolValue* p = iburst_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Ntp.Servers.Server.State.iburst)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::BoolValue*>(
      &::ywrapper::_BoolValue_default_instance_);
}
inline ::ywrapper::BoolValue* AccessPoints_AccessPoint_System_Ntp_Servers_Server_State::release_iburst() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Ntp.Servers.Server.State.iburst)
  
  ::ywrapper::BoolValue* temp = iburst_;
  iburst_ = NULL;
  return temp;
}
inline ::ywrapper::BoolValue* AccessPoints_AccessPoint_System_Ntp_Servers_Server_State::mutable_iburst() {
  
  if (iburst_ == NULL) {
    iburst_ = new ::ywrapper::BoolValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Ntp.Servers.Server.State.iburst)
  return iburst_;
}
inline void AccessPoints_AccessPoint_System_Ntp_Servers_Server_State::set_allocated_iburst(::ywrapper::BoolValue* iburst) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(iburst_);
  }
  if (iburst) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      iburst = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, iburst, submessage_arena);
    }
    
  } else {
    
  }
  iburst_ = iburst;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Ntp.Servers.Server.State.iburst)
}

// .ywrapper.UintValue offset = 214307632 [(.yext.schemapath) = "/access-points/access-point/system/ntp/servers/server/state/offset"];
inline bool AccessPoints_AccessPoint_System_Ntp_Servers_Server_State::has_offset() const {
  return this != internal_default_instance() && offset_ != NULL;
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_System_Ntp_Servers_Server_State::offset() const {
  const ::ywrapper::UintValue* p = offset_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Ntp.Servers.Server.State.offset)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_System_Ntp_Servers_Server_State::release_offset() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Ntp.Servers.Server.State.offset)
  
  ::ywrapper::UintValue* temp = offset_;
  offset_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_System_Ntp_Servers_Server_State::mutable_offset() {
  
  if (offset_ == NULL) {
    offset_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Ntp.Servers.Server.State.offset)
  return offset_;
}
inline void AccessPoints_AccessPoint_System_Ntp_Servers_Server_State::set_allocated_offset(::ywrapper::UintValue* offset) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(offset_);
  }
  if (offset) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      offset = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, offset, submessage_arena);
    }
    
  } else {
    
  }
  offset_ = offset;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Ntp.Servers.Server.State.offset)
}

// .ywrapper.UintValue poll_interval = 335447264 [(.yext.schemapath) = "/access-points/access-point/system/ntp/servers/server/state/poll-interval"];
inline bool AccessPoints_AccessPoint_System_Ntp_Servers_Server_State::has_poll_interval() const {
  return this != internal_default_instance() && poll_interval_ != NULL;
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_System_Ntp_Servers_Server_State::poll_interval() const {
  const ::ywrapper::UintValue* p = poll_interval_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Ntp.Servers.Server.State.poll_interval)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_System_Ntp_Servers_Server_State::release_poll_interval() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Ntp.Servers.Server.State.poll_interval)
  
  ::ywrapper::UintValue* temp = poll_interval_;
  poll_interval_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_System_Ntp_Servers_Server_State::mutable_poll_interval() {
  
  if (poll_interval_ == NULL) {
    poll_interval_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Ntp.Servers.Server.State.poll_interval)
  return poll_interval_;
}
inline void AccessPoints_AccessPoint_System_Ntp_Servers_Server_State::set_allocated_poll_interval(::ywrapper::UintValue* poll_interval) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(poll_interval_);
  }
  if (poll_interval) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      poll_interval = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, poll_interval, submessage_arena);
    }
    
  } else {
    
  }
  poll_interval_ = poll_interval;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Ntp.Servers.Server.State.poll_interval)
}

// .ywrapper.UintValue port = 506248948 [(.yext.schemapath) = "/access-points/access-point/system/ntp/servers/server/state/port"];
inline bool AccessPoints_AccessPoint_System_Ntp_Servers_Server_State::has_port() const {
  return this != internal_default_instance() && port_ != NULL;
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_System_Ntp_Servers_Server_State::port() const {
  const ::ywrapper::UintValue* p = port_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Ntp.Servers.Server.State.port)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_System_Ntp_Servers_Server_State::release_port() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Ntp.Servers.Server.State.port)
  
  ::ywrapper::UintValue* temp = port_;
  port_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_System_Ntp_Servers_Server_State::mutable_port() {
  
  if (port_ == NULL) {
    port_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Ntp.Servers.Server.State.port)
  return port_;
}
inline void AccessPoints_AccessPoint_System_Ntp_Servers_Server_State::set_allocated_port(::ywrapper::UintValue* port) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(port_);
  }
  if (port) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      port = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, port, submessage_arena);
    }
    
  } else {
    
  }
  port_ = port;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Ntp.Servers.Server.State.port)
}

// .ywrapper.BoolValue prefer = 163892659 [(.yext.schemapath) = "/access-points/access-point/system/ntp/servers/server/state/prefer"];
inline bool AccessPoints_AccessPoint_System_Ntp_Servers_Server_State::has_prefer() const {
  return this != internal_default_instance() && prefer_ != NULL;
}
inline const ::ywrapper::BoolValue& AccessPoints_AccessPoint_System_Ntp_Servers_Server_State::prefer() const {
  const ::ywrapper::BoolValue* p = prefer_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Ntp.Servers.Server.State.prefer)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::BoolValue*>(
      &::ywrapper::_BoolValue_default_instance_);
}
inline ::ywrapper::BoolValue* AccessPoints_AccessPoint_System_Ntp_Servers_Server_State::release_prefer() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Ntp.Servers.Server.State.prefer)
  
  ::ywrapper::BoolValue* temp = prefer_;
  prefer_ = NULL;
  return temp;
}
inline ::ywrapper::BoolValue* AccessPoints_AccessPoint_System_Ntp_Servers_Server_State::mutable_prefer() {
  
  if (prefer_ == NULL) {
    prefer_ = new ::ywrapper::BoolValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Ntp.Servers.Server.State.prefer)
  return prefer_;
}
inline void AccessPoints_AccessPoint_System_Ntp_Servers_Server_State::set_allocated_prefer(::ywrapper::BoolValue* prefer) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(prefer_);
  }
  if (prefer) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      prefer = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, prefer, submessage_arena);
    }
    
  } else {
    
  }
  prefer_ = prefer;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Ntp.Servers.Server.State.prefer)
}

// .ywrapper.UintValue root_delay = 159513027 [(.yext.schemapath) = "/access-points/access-point/system/ntp/servers/server/state/root-delay"];
inline bool AccessPoints_AccessPoint_System_Ntp_Servers_Server_State::has_root_delay() const {
  return this != internal_default_instance() && root_delay_ != NULL;
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_System_Ntp_Servers_Server_State::root_delay() const {
  const ::ywrapper::UintValue* p = root_delay_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Ntp.Servers.Server.State.root_delay)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_System_Ntp_Servers_Server_State::release_root_delay() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Ntp.Servers.Server.State.root_delay)
  
  ::ywrapper::UintValue* temp = root_delay_;
  root_delay_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_System_Ntp_Servers_Server_State::mutable_root_delay() {
  
  if (root_delay_ == NULL) {
    root_delay_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Ntp.Servers.Server.State.root_delay)
  return root_delay_;
}
inline void AccessPoints_AccessPoint_System_Ntp_Servers_Server_State::set_allocated_root_delay(::ywrapper::UintValue* root_delay) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(root_delay_);
  }
  if (root_delay) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      root_delay = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, root_delay, submessage_arena);
    }
    
  } else {
    
  }
  root_delay_ = root_delay;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Ntp.Servers.Server.State.root_delay)
}

// .ywrapper.UintValue root_dispersion = 483188496 [(.yext.schemapath) = "/access-points/access-point/system/ntp/servers/server/state/root-dispersion"];
inline bool AccessPoints_AccessPoint_System_Ntp_Servers_Server_State::has_root_dispersion() const {
  return this != internal_default_instance() && root_dispersion_ != NULL;
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_System_Ntp_Servers_Server_State::root_dispersion() const {
  const ::ywrapper::UintValue* p = root_dispersion_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Ntp.Servers.Server.State.root_dispersion)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_System_Ntp_Servers_Server_State::release_root_dispersion() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Ntp.Servers.Server.State.root_dispersion)
  
  ::ywrapper::UintValue* temp = root_dispersion_;
  root_dispersion_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_System_Ntp_Servers_Server_State::mutable_root_dispersion() {
  
  if (root_dispersion_ == NULL) {
    root_dispersion_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Ntp.Servers.Server.State.root_dispersion)
  return root_dispersion_;
}
inline void AccessPoints_AccessPoint_System_Ntp_Servers_Server_State::set_allocated_root_dispersion(::ywrapper::UintValue* root_dispersion) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(root_dispersion_);
  }
  if (root_dispersion) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      root_dispersion = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, root_dispersion, submessage_arena);
    }
    
  } else {
    
  }
  root_dispersion_ = root_dispersion;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Ntp.Servers.Server.State.root_dispersion)
}

// .ywrapper.UintValue stratum = 365726179 [(.yext.schemapath) = "/access-points/access-point/system/ntp/servers/server/state/stratum"];
inline bool AccessPoints_AccessPoint_System_Ntp_Servers_Server_State::has_stratum() const {
  return this != internal_default_instance() && stratum_ != NULL;
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_System_Ntp_Servers_Server_State::stratum() const {
  const ::ywrapper::UintValue* p = stratum_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Ntp.Servers.Server.State.stratum)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_System_Ntp_Servers_Server_State::release_stratum() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Ntp.Servers.Server.State.stratum)
  
  ::ywrapper::UintValue* temp = stratum_;
  stratum_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_System_Ntp_Servers_Server_State::mutable_stratum() {
  
  if (stratum_ == NULL) {
    stratum_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Ntp.Servers.Server.State.stratum)
  return stratum_;
}
inline void AccessPoints_AccessPoint_System_Ntp_Servers_Server_State::set_allocated_stratum(::ywrapper::UintValue* stratum) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(stratum_);
  }
  if (stratum) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      stratum = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, stratum, submessage_arena);
    }
    
  } else {
    
  }
  stratum_ = stratum;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Ntp.Servers.Server.State.stratum)
}

// .ywrapper.UintValue version = 461023535 [(.yext.schemapath) = "/access-points/access-point/system/ntp/servers/server/state/version"];
inline bool AccessPoints_AccessPoint_System_Ntp_Servers_Server_State::has_version() const {
  return this != internal_default_instance() && version_ != NULL;
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_System_Ntp_Servers_Server_State::version() const {
  const ::ywrapper::UintValue* p = version_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Ntp.Servers.Server.State.version)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_System_Ntp_Servers_Server_State::release_version() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Ntp.Servers.Server.State.version)
  
  ::ywrapper::UintValue* temp = version_;
  version_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_System_Ntp_Servers_Server_State::mutable_version() {
  
  if (version_ == NULL) {
    version_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Ntp.Servers.Server.State.version)
  return version_;
}
inline void AccessPoints_AccessPoint_System_Ntp_Servers_Server_State::set_allocated_version(::ywrapper::UintValue* version) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(version_);
  }
  if (version) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      version = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, version, submessage_arena);
    }
    
  } else {
    
  }
  version_ = version;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Ntp.Servers.Server.State.version)
}

// -------------------------------------------------------------------

// AccessPoints_AccessPoint_System_Ntp_Servers_Server

// .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Ntp.Servers.Server.Config config = 439340661 [(.yext.schemapath) = "/access-points/access-point/system/ntp/servers/server/config"];
inline bool AccessPoints_AccessPoint_System_Ntp_Servers_Server::has_config() const {
  return this != internal_default_instance() && config_ != NULL;
}
inline void AccessPoints_AccessPoint_System_Ntp_Servers_Server::clear_config() {
  if (GetArenaNoVirtual() == NULL && config_ != NULL) {
    delete config_;
  }
  config_ = NULL;
}
inline const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Ntp_Servers_Server_Config& AccessPoints_AccessPoint_System_Ntp_Servers_Server::config() const {
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Ntp_Servers_Server_Config* p = config_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Ntp.Servers.Server.config)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Ntp_Servers_Server_Config*>(
      &::openconfig::openconfig_access_points::_AccessPoints_AccessPoint_System_Ntp_Servers_Server_Config_default_instance_);
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Ntp_Servers_Server_Config* AccessPoints_AccessPoint_System_Ntp_Servers_Server::release_config() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Ntp.Servers.Server.config)
  
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Ntp_Servers_Server_Config* temp = config_;
  config_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Ntp_Servers_Server_Config* AccessPoints_AccessPoint_System_Ntp_Servers_Server::mutable_config() {
  
  if (config_ == NULL) {
    config_ = new ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Ntp_Servers_Server_Config;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Ntp.Servers.Server.config)
  return config_;
}
inline void AccessPoints_AccessPoint_System_Ntp_Servers_Server::set_allocated_config(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Ntp_Servers_Server_Config* config) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete config_;
  }
  if (config) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      config = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, config, submessage_arena);
    }
    
  } else {
    
  }
  config_ = config;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Ntp.Servers.Server.config)
}

// .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Ntp.Servers.Server.State state = 37501290 [(.yext.schemapath) = "/access-points/access-point/system/ntp/servers/server/state"];
inline bool AccessPoints_AccessPoint_System_Ntp_Servers_Server::has_state() const {
  return this != internal_default_instance() && state_ != NULL;
}
inline void AccessPoints_AccessPoint_System_Ntp_Servers_Server::clear_state() {
  if (GetArenaNoVirtual() == NULL && state_ != NULL) {
    delete state_;
  }
  state_ = NULL;
}
inline const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Ntp_Servers_Server_State& AccessPoints_AccessPoint_System_Ntp_Servers_Server::state() const {
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Ntp_Servers_Server_State* p = state_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Ntp.Servers.Server.state)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Ntp_Servers_Server_State*>(
      &::openconfig::openconfig_access_points::_AccessPoints_AccessPoint_System_Ntp_Servers_Server_State_default_instance_);
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Ntp_Servers_Server_State* AccessPoints_AccessPoint_System_Ntp_Servers_Server::release_state() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Ntp.Servers.Server.state)
  
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Ntp_Servers_Server_State* temp = state_;
  state_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Ntp_Servers_Server_State* AccessPoints_AccessPoint_System_Ntp_Servers_Server::mutable_state() {
  
  if (state_ == NULL) {
    state_ = new ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Ntp_Servers_Server_State;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Ntp.Servers.Server.state)
  return state_;
}
inline void AccessPoints_AccessPoint_System_Ntp_Servers_Server::set_allocated_state(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Ntp_Servers_Server_State* state) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete state_;
  }
  if (state) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      state = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, state, submessage_arena);
    }
    
  } else {
    
  }
  state_ = state;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Ntp.Servers.Server.state)
}

// -------------------------------------------------------------------

// AccessPoints_AccessPoint_System_Ntp_Servers_ServerKey

// string address = 1 [(.yext.schemapath) = "/access-points/access-point/system/ntp/servers/server/address"];
inline void AccessPoints_AccessPoint_System_Ntp_Servers_ServerKey::clear_address() {
  address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AccessPoints_AccessPoint_System_Ntp_Servers_ServerKey::address() const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Ntp.Servers.ServerKey.address)
  return address_.GetNoArena();
}
inline void AccessPoints_AccessPoint_System_Ntp_Servers_ServerKey::set_address(const ::std::string& value) {
  
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Ntp.Servers.ServerKey.address)
}
#if LANG_CXX11
inline void AccessPoints_AccessPoint_System_Ntp_Servers_ServerKey::set_address(::std::string&& value) {
  
  address_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Ntp.Servers.ServerKey.address)
}
#endif
inline void AccessPoints_AccessPoint_System_Ntp_Servers_ServerKey::set_address(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Ntp.Servers.ServerKey.address)
}
inline void AccessPoints_AccessPoint_System_Ntp_Servers_ServerKey::set_address(const char* value, size_t size) {
  
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Ntp.Servers.ServerKey.address)
}
inline ::std::string* AccessPoints_AccessPoint_System_Ntp_Servers_ServerKey::mutable_address() {
  
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Ntp.Servers.ServerKey.address)
  return address_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AccessPoints_AccessPoint_System_Ntp_Servers_ServerKey::release_address() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Ntp.Servers.ServerKey.address)
  
  return address_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AccessPoints_AccessPoint_System_Ntp_Servers_ServerKey::set_allocated_address(::std::string* address) {
  if (address != NULL) {
    
  } else {
    
  }
  address_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), address);
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Ntp.Servers.ServerKey.address)
}

// .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Ntp.Servers.Server server = 2;
inline bool AccessPoints_AccessPoint_System_Ntp_Servers_ServerKey::has_server() const {
  return this != internal_default_instance() && server_ != NULL;
}
inline void AccessPoints_AccessPoint_System_Ntp_Servers_ServerKey::clear_server() {
  if (GetArenaNoVirtual() == NULL && server_ != NULL) {
    delete server_;
  }
  server_ = NULL;
}
inline const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Ntp_Servers_Server& AccessPoints_AccessPoint_System_Ntp_Servers_ServerKey::server() const {
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Ntp_Servers_Server* p = server_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Ntp.Servers.ServerKey.server)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Ntp_Servers_Server*>(
      &::openconfig::openconfig_access_points::_AccessPoints_AccessPoint_System_Ntp_Servers_Server_default_instance_);
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Ntp_Servers_Server* AccessPoints_AccessPoint_System_Ntp_Servers_ServerKey::release_server() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Ntp.Servers.ServerKey.server)
  
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Ntp_Servers_Server* temp = server_;
  server_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Ntp_Servers_Server* AccessPoints_AccessPoint_System_Ntp_Servers_ServerKey::mutable_server() {
  
  if (server_ == NULL) {
    server_ = new ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Ntp_Servers_Server;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Ntp.Servers.ServerKey.server)
  return server_;
}
inline void AccessPoints_AccessPoint_System_Ntp_Servers_ServerKey::set_allocated_server(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Ntp_Servers_Server* server) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete server_;
  }
  if (server) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      server = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, server, submessage_arena);
    }
    
  } else {
    
  }
  server_ = server;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Ntp.Servers.ServerKey.server)
}

// -------------------------------------------------------------------

// AccessPoints_AccessPoint_System_Ntp_Servers

// repeated .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Ntp.Servers.ServerKey server = 521877760 [(.yext.schemapath) = "/access-points/access-point/system/ntp/servers/server"];
inline int AccessPoints_AccessPoint_System_Ntp_Servers::server_size() const {
  return server_.size();
}
inline void AccessPoints_AccessPoint_System_Ntp_Servers::clear_server() {
  server_.Clear();
}
inline const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Ntp_Servers_ServerKey& AccessPoints_AccessPoint_System_Ntp_Servers::server(int index) const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Ntp.Servers.server)
  return server_.Get(index);
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Ntp_Servers_ServerKey* AccessPoints_AccessPoint_System_Ntp_Servers::mutable_server(int index) {
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Ntp.Servers.server)
  return server_.Mutable(index);
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Ntp_Servers_ServerKey* AccessPoints_AccessPoint_System_Ntp_Servers::add_server() {
  // @@protoc_insertion_point(field_add:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Ntp.Servers.server)
  return server_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Ntp_Servers_ServerKey >*
AccessPoints_AccessPoint_System_Ntp_Servers::mutable_server() {
  // @@protoc_insertion_point(field_mutable_list:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Ntp.Servers.server)
  return &server_;
}
inline const ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Ntp_Servers_ServerKey >&
AccessPoints_AccessPoint_System_Ntp_Servers::server() const {
  // @@protoc_insertion_point(field_list:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Ntp.Servers.server)
  return server_;
}

// -------------------------------------------------------------------

// AccessPoints_AccessPoint_System_Ntp_State

// .ywrapper.UintValue auth_mismatch = 508665811 [(.yext.schemapath) = "/access-points/access-point/system/ntp/state/auth-mismatch"];
inline bool AccessPoints_AccessPoint_System_Ntp_State::has_auth_mismatch() const {
  return this != internal_default_instance() && auth_mismatch_ != NULL;
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_System_Ntp_State::auth_mismatch() const {
  const ::ywrapper::UintValue* p = auth_mismatch_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Ntp.State.auth_mismatch)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_System_Ntp_State::release_auth_mismatch() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Ntp.State.auth_mismatch)
  
  ::ywrapper::UintValue* temp = auth_mismatch_;
  auth_mismatch_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_System_Ntp_State::mutable_auth_mismatch() {
  
  if (auth_mismatch_ == NULL) {
    auth_mismatch_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Ntp.State.auth_mismatch)
  return auth_mismatch_;
}
inline void AccessPoints_AccessPoint_System_Ntp_State::set_allocated_auth_mismatch(::ywrapper::UintValue* auth_mismatch) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(auth_mismatch_);
  }
  if (auth_mismatch) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      auth_mismatch = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, auth_mismatch, submessage_arena);
    }
    
  } else {
    
  }
  auth_mismatch_ = auth_mismatch;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Ntp.State.auth_mismatch)
}

// .ywrapper.BoolValue enable_ntp_auth = 434836227 [(.yext.schemapath) = "/access-points/access-point/system/ntp/state/enable-ntp-auth"];
inline bool AccessPoints_AccessPoint_System_Ntp_State::has_enable_ntp_auth() const {
  return this != internal_default_instance() && enable_ntp_auth_ != NULL;
}
inline const ::ywrapper::BoolValue& AccessPoints_AccessPoint_System_Ntp_State::enable_ntp_auth() const {
  const ::ywrapper::BoolValue* p = enable_ntp_auth_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Ntp.State.enable_ntp_auth)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::BoolValue*>(
      &::ywrapper::_BoolValue_default_instance_);
}
inline ::ywrapper::BoolValue* AccessPoints_AccessPoint_System_Ntp_State::release_enable_ntp_auth() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Ntp.State.enable_ntp_auth)
  
  ::ywrapper::BoolValue* temp = enable_ntp_auth_;
  enable_ntp_auth_ = NULL;
  return temp;
}
inline ::ywrapper::BoolValue* AccessPoints_AccessPoint_System_Ntp_State::mutable_enable_ntp_auth() {
  
  if (enable_ntp_auth_ == NULL) {
    enable_ntp_auth_ = new ::ywrapper::BoolValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Ntp.State.enable_ntp_auth)
  return enable_ntp_auth_;
}
inline void AccessPoints_AccessPoint_System_Ntp_State::set_allocated_enable_ntp_auth(::ywrapper::BoolValue* enable_ntp_auth) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(enable_ntp_auth_);
  }
  if (enable_ntp_auth) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      enable_ntp_auth = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, enable_ntp_auth, submessage_arena);
    }
    
  } else {
    
  }
  enable_ntp_auth_ = enable_ntp_auth;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Ntp.State.enable_ntp_auth)
}

// .ywrapper.BoolValue enabled = 210230727 [(.yext.schemapath) = "/access-points/access-point/system/ntp/state/enabled"];
inline bool AccessPoints_AccessPoint_System_Ntp_State::has_enabled() const {
  return this != internal_default_instance() && enabled_ != NULL;
}
inline const ::ywrapper::BoolValue& AccessPoints_AccessPoint_System_Ntp_State::enabled() const {
  const ::ywrapper::BoolValue* p = enabled_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Ntp.State.enabled)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::BoolValue*>(
      &::ywrapper::_BoolValue_default_instance_);
}
inline ::ywrapper::BoolValue* AccessPoints_AccessPoint_System_Ntp_State::release_enabled() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Ntp.State.enabled)
  
  ::ywrapper::BoolValue* temp = enabled_;
  enabled_ = NULL;
  return temp;
}
inline ::ywrapper::BoolValue* AccessPoints_AccessPoint_System_Ntp_State::mutable_enabled() {
  
  if (enabled_ == NULL) {
    enabled_ = new ::ywrapper::BoolValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Ntp.State.enabled)
  return enabled_;
}
inline void AccessPoints_AccessPoint_System_Ntp_State::set_allocated_enabled(::ywrapper::BoolValue* enabled) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(enabled_);
  }
  if (enabled) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      enabled = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, enabled, submessage_arena);
    }
    
  } else {
    
  }
  enabled_ = enabled;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Ntp.State.enabled)
}

// .ywrapper.StringValue ntp_source_address = 81223679 [(.yext.schemapath) = "/access-points/access-point/system/ntp/state/ntp-source-address"];
inline bool AccessPoints_AccessPoint_System_Ntp_State::has_ntp_source_address() const {
  return this != internal_default_instance() && ntp_source_address_ != NULL;
}
inline const ::ywrapper::StringValue& AccessPoints_AccessPoint_System_Ntp_State::ntp_source_address() const {
  const ::ywrapper::StringValue* p = ntp_source_address_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Ntp.State.ntp_source_address)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::StringValue*>(
      &::ywrapper::_StringValue_default_instance_);
}
inline ::ywrapper::StringValue* AccessPoints_AccessPoint_System_Ntp_State::release_ntp_source_address() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Ntp.State.ntp_source_address)
  
  ::ywrapper::StringValue* temp = ntp_source_address_;
  ntp_source_address_ = NULL;
  return temp;
}
inline ::ywrapper::StringValue* AccessPoints_AccessPoint_System_Ntp_State::mutable_ntp_source_address() {
  
  if (ntp_source_address_ == NULL) {
    ntp_source_address_ = new ::ywrapper::StringValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Ntp.State.ntp_source_address)
  return ntp_source_address_;
}
inline void AccessPoints_AccessPoint_System_Ntp_State::set_allocated_ntp_source_address(::ywrapper::StringValue* ntp_source_address) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(ntp_source_address_);
  }
  if (ntp_source_address) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      ntp_source_address = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, ntp_source_address, submessage_arena);
    }
    
  } else {
    
  }
  ntp_source_address_ = ntp_source_address;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Ntp.State.ntp_source_address)
}

// -------------------------------------------------------------------

// AccessPoints_AccessPoint_System_Ntp

// .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Ntp.Config config = 193793528 [(.yext.schemapath) = "/access-points/access-point/system/ntp/config"];
inline bool AccessPoints_AccessPoint_System_Ntp::has_config() const {
  return this != internal_default_instance() && config_ != NULL;
}
inline void AccessPoints_AccessPoint_System_Ntp::clear_config() {
  if (GetArenaNoVirtual() == NULL && config_ != NULL) {
    delete config_;
  }
  config_ = NULL;
}
inline const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Ntp_Config& AccessPoints_AccessPoint_System_Ntp::config() const {
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Ntp_Config* p = config_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Ntp.config)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Ntp_Config*>(
      &::openconfig::openconfig_access_points::_AccessPoints_AccessPoint_System_Ntp_Config_default_instance_);
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Ntp_Config* AccessPoints_AccessPoint_System_Ntp::release_config() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Ntp.config)
  
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Ntp_Config* temp = config_;
  config_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Ntp_Config* AccessPoints_AccessPoint_System_Ntp::mutable_config() {
  
  if (config_ == NULL) {
    config_ = new ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Ntp_Config;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Ntp.config)
  return config_;
}
inline void AccessPoints_AccessPoint_System_Ntp::set_allocated_config(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Ntp_Config* config) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete config_;
  }
  if (config) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      config = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, config, submessage_arena);
    }
    
  } else {
    
  }
  config_ = config;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Ntp.config)
}

// .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Ntp.NtpKeys ntp_keys = 156599249 [(.yext.schemapath) = "/access-points/access-point/system/ntp/ntp-keys"];
inline bool AccessPoints_AccessPoint_System_Ntp::has_ntp_keys() const {
  return this != internal_default_instance() && ntp_keys_ != NULL;
}
inline void AccessPoints_AccessPoint_System_Ntp::clear_ntp_keys() {
  if (GetArenaNoVirtual() == NULL && ntp_keys_ != NULL) {
    delete ntp_keys_;
  }
  ntp_keys_ = NULL;
}
inline const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Ntp_NtpKeys& AccessPoints_AccessPoint_System_Ntp::ntp_keys() const {
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Ntp_NtpKeys* p = ntp_keys_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Ntp.ntp_keys)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Ntp_NtpKeys*>(
      &::openconfig::openconfig_access_points::_AccessPoints_AccessPoint_System_Ntp_NtpKeys_default_instance_);
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Ntp_NtpKeys* AccessPoints_AccessPoint_System_Ntp::release_ntp_keys() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Ntp.ntp_keys)
  
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Ntp_NtpKeys* temp = ntp_keys_;
  ntp_keys_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Ntp_NtpKeys* AccessPoints_AccessPoint_System_Ntp::mutable_ntp_keys() {
  
  if (ntp_keys_ == NULL) {
    ntp_keys_ = new ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Ntp_NtpKeys;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Ntp.ntp_keys)
  return ntp_keys_;
}
inline void AccessPoints_AccessPoint_System_Ntp::set_allocated_ntp_keys(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Ntp_NtpKeys* ntp_keys) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete ntp_keys_;
  }
  if (ntp_keys) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      ntp_keys = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, ntp_keys, submessage_arena);
    }
    
  } else {
    
  }
  ntp_keys_ = ntp_keys;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Ntp.ntp_keys)
}

// .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Ntp.Servers servers = 328283498 [(.yext.schemapath) = "/access-points/access-point/system/ntp/servers"];
inline bool AccessPoints_AccessPoint_System_Ntp::has_servers() const {
  return this != internal_default_instance() && servers_ != NULL;
}
inline void AccessPoints_AccessPoint_System_Ntp::clear_servers() {
  if (GetArenaNoVirtual() == NULL && servers_ != NULL) {
    delete servers_;
  }
  servers_ = NULL;
}
inline const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Ntp_Servers& AccessPoints_AccessPoint_System_Ntp::servers() const {
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Ntp_Servers* p = servers_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Ntp.servers)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Ntp_Servers*>(
      &::openconfig::openconfig_access_points::_AccessPoints_AccessPoint_System_Ntp_Servers_default_instance_);
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Ntp_Servers* AccessPoints_AccessPoint_System_Ntp::release_servers() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Ntp.servers)
  
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Ntp_Servers* temp = servers_;
  servers_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Ntp_Servers* AccessPoints_AccessPoint_System_Ntp::mutable_servers() {
  
  if (servers_ == NULL) {
    servers_ = new ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Ntp_Servers;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Ntp.servers)
  return servers_;
}
inline void AccessPoints_AccessPoint_System_Ntp::set_allocated_servers(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Ntp_Servers* servers) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete servers_;
  }
  if (servers) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      servers = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, servers, submessage_arena);
    }
    
  } else {
    
  }
  servers_ = servers;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Ntp.servers)
}

// .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Ntp.State state = 196690449 [(.yext.schemapath) = "/access-points/access-point/system/ntp/state"];
inline bool AccessPoints_AccessPoint_System_Ntp::has_state() const {
  return this != internal_default_instance() && state_ != NULL;
}
inline void AccessPoints_AccessPoint_System_Ntp::clear_state() {
  if (GetArenaNoVirtual() == NULL && state_ != NULL) {
    delete state_;
  }
  state_ = NULL;
}
inline const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Ntp_State& AccessPoints_AccessPoint_System_Ntp::state() const {
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Ntp_State* p = state_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Ntp.state)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Ntp_State*>(
      &::openconfig::openconfig_access_points::_AccessPoints_AccessPoint_System_Ntp_State_default_instance_);
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Ntp_State* AccessPoints_AccessPoint_System_Ntp::release_state() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Ntp.state)
  
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Ntp_State* temp = state_;
  state_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Ntp_State* AccessPoints_AccessPoint_System_Ntp::mutable_state() {
  
  if (state_ == NULL) {
    state_ = new ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Ntp_State;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Ntp.state)
  return state_;
}
inline void AccessPoints_AccessPoint_System_Ntp::set_allocated_state(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Ntp_State* state) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete state_;
  }
  if (state) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      state = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, state, submessage_arena);
    }
    
  } else {
    
  }
  state_ = state;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Ntp.state)
}

// -------------------------------------------------------------------

// AccessPoints_AccessPoint_System_Processes_Process_State

// repeated .ywrapper.StringValue args = 277927366 [(.yext.schemapath) = "/access-points/access-point/system/processes/process/state/args"];
inline int AccessPoints_AccessPoint_System_Processes_Process_State::args_size() const {
  return args_.size();
}
inline const ::ywrapper::StringValue& AccessPoints_AccessPoint_System_Processes_Process_State::args(int index) const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Processes.Process.State.args)
  return args_.Get(index);
}
inline ::ywrapper::StringValue* AccessPoints_AccessPoint_System_Processes_Process_State::mutable_args(int index) {
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Processes.Process.State.args)
  return args_.Mutable(index);
}
inline ::ywrapper::StringValue* AccessPoints_AccessPoint_System_Processes_Process_State::add_args() {
  // @@protoc_insertion_point(field_add:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Processes.Process.State.args)
  return args_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::ywrapper::StringValue >*
AccessPoints_AccessPoint_System_Processes_Process_State::mutable_args() {
  // @@protoc_insertion_point(field_mutable_list:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Processes.Process.State.args)
  return &args_;
}
inline const ::google::protobuf::RepeatedPtrField< ::ywrapper::StringValue >&
AccessPoints_AccessPoint_System_Processes_Process_State::args() const {
  // @@protoc_insertion_point(field_list:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Processes.Process.State.args)
  return args_;
}

// .ywrapper.UintValue cpu_usage_system = 5543219 [(.yext.schemapath) = "/access-points/access-point/system/processes/process/state/cpu-usage-system"];
inline bool AccessPoints_AccessPoint_System_Processes_Process_State::has_cpu_usage_system() const {
  return this != internal_default_instance() && cpu_usage_system_ != NULL;
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_System_Processes_Process_State::cpu_usage_system() const {
  const ::ywrapper::UintValue* p = cpu_usage_system_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Processes.Process.State.cpu_usage_system)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_System_Processes_Process_State::release_cpu_usage_system() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Processes.Process.State.cpu_usage_system)
  
  ::ywrapper::UintValue* temp = cpu_usage_system_;
  cpu_usage_system_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_System_Processes_Process_State::mutable_cpu_usage_system() {
  
  if (cpu_usage_system_ == NULL) {
    cpu_usage_system_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Processes.Process.State.cpu_usage_system)
  return cpu_usage_system_;
}
inline void AccessPoints_AccessPoint_System_Processes_Process_State::set_allocated_cpu_usage_system(::ywrapper::UintValue* cpu_usage_system) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(cpu_usage_system_);
  }
  if (cpu_usage_system) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      cpu_usage_system = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, cpu_usage_system, submessage_arena);
    }
    
  } else {
    
  }
  cpu_usage_system_ = cpu_usage_system;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Processes.Process.State.cpu_usage_system)
}

// .ywrapper.UintValue cpu_usage_user = 125748105 [(.yext.schemapath) = "/access-points/access-point/system/processes/process/state/cpu-usage-user"];
inline bool AccessPoints_AccessPoint_System_Processes_Process_State::has_cpu_usage_user() const {
  return this != internal_default_instance() && cpu_usage_user_ != NULL;
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_System_Processes_Process_State::cpu_usage_user() const {
  const ::ywrapper::UintValue* p = cpu_usage_user_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Processes.Process.State.cpu_usage_user)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_System_Processes_Process_State::release_cpu_usage_user() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Processes.Process.State.cpu_usage_user)
  
  ::ywrapper::UintValue* temp = cpu_usage_user_;
  cpu_usage_user_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_System_Processes_Process_State::mutable_cpu_usage_user() {
  
  if (cpu_usage_user_ == NULL) {
    cpu_usage_user_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Processes.Process.State.cpu_usage_user)
  return cpu_usage_user_;
}
inline void AccessPoints_AccessPoint_System_Processes_Process_State::set_allocated_cpu_usage_user(::ywrapper::UintValue* cpu_usage_user) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(cpu_usage_user_);
  }
  if (cpu_usage_user) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      cpu_usage_user = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, cpu_usage_user, submessage_arena);
    }
    
  } else {
    
  }
  cpu_usage_user_ = cpu_usage_user;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Processes.Process.State.cpu_usage_user)
}

// .ywrapper.UintValue cpu_utilization = 532305938 [(.yext.schemapath) = "/access-points/access-point/system/processes/process/state/cpu-utilization"];
inline bool AccessPoints_AccessPoint_System_Processes_Process_State::has_cpu_utilization() const {
  return this != internal_default_instance() && cpu_utilization_ != NULL;
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_System_Processes_Process_State::cpu_utilization() const {
  const ::ywrapper::UintValue* p = cpu_utilization_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Processes.Process.State.cpu_utilization)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_System_Processes_Process_State::release_cpu_utilization() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Processes.Process.State.cpu_utilization)
  
  ::ywrapper::UintValue* temp = cpu_utilization_;
  cpu_utilization_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_System_Processes_Process_State::mutable_cpu_utilization() {
  
  if (cpu_utilization_ == NULL) {
    cpu_utilization_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Processes.Process.State.cpu_utilization)
  return cpu_utilization_;
}
inline void AccessPoints_AccessPoint_System_Processes_Process_State::set_allocated_cpu_utilization(::ywrapper::UintValue* cpu_utilization) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(cpu_utilization_);
  }
  if (cpu_utilization) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      cpu_utilization = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, cpu_utilization, submessage_arena);
    }
    
  } else {
    
  }
  cpu_utilization_ = cpu_utilization;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Processes.Process.State.cpu_utilization)
}

// .ywrapper.UintValue memory_usage = 213458786 [(.yext.schemapath) = "/access-points/access-point/system/processes/process/state/memory-usage"];
inline bool AccessPoints_AccessPoint_System_Processes_Process_State::has_memory_usage() const {
  return this != internal_default_instance() && memory_usage_ != NULL;
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_System_Processes_Process_State::memory_usage() const {
  const ::ywrapper::UintValue* p = memory_usage_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Processes.Process.State.memory_usage)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_System_Processes_Process_State::release_memory_usage() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Processes.Process.State.memory_usage)
  
  ::ywrapper::UintValue* temp = memory_usage_;
  memory_usage_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_System_Processes_Process_State::mutable_memory_usage() {
  
  if (memory_usage_ == NULL) {
    memory_usage_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Processes.Process.State.memory_usage)
  return memory_usage_;
}
inline void AccessPoints_AccessPoint_System_Processes_Process_State::set_allocated_memory_usage(::ywrapper::UintValue* memory_usage) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(memory_usage_);
  }
  if (memory_usage) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      memory_usage = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, memory_usage, submessage_arena);
    }
    
  } else {
    
  }
  memory_usage_ = memory_usage;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Processes.Process.State.memory_usage)
}

// .ywrapper.UintValue memory_utilization = 349225347 [(.yext.schemapath) = "/access-points/access-point/system/processes/process/state/memory-utilization"];
inline bool AccessPoints_AccessPoint_System_Processes_Process_State::has_memory_utilization() const {
  return this != internal_default_instance() && memory_utilization_ != NULL;
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_System_Processes_Process_State::memory_utilization() const {
  const ::ywrapper::UintValue* p = memory_utilization_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Processes.Process.State.memory_utilization)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_System_Processes_Process_State::release_memory_utilization() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Processes.Process.State.memory_utilization)
  
  ::ywrapper::UintValue* temp = memory_utilization_;
  memory_utilization_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_System_Processes_Process_State::mutable_memory_utilization() {
  
  if (memory_utilization_ == NULL) {
    memory_utilization_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Processes.Process.State.memory_utilization)
  return memory_utilization_;
}
inline void AccessPoints_AccessPoint_System_Processes_Process_State::set_allocated_memory_utilization(::ywrapper::UintValue* memory_utilization) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(memory_utilization_);
  }
  if (memory_utilization) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      memory_utilization = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, memory_utilization, submessage_arena);
    }
    
  } else {
    
  }
  memory_utilization_ = memory_utilization;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Processes.Process.State.memory_utilization)
}

// .ywrapper.StringValue name = 8483324 [(.yext.schemapath) = "/access-points/access-point/system/processes/process/state/name"];
inline bool AccessPoints_AccessPoint_System_Processes_Process_State::has_name() const {
  return this != internal_default_instance() && name_ != NULL;
}
inline const ::ywrapper::StringValue& AccessPoints_AccessPoint_System_Processes_Process_State::name() const {
  const ::ywrapper::StringValue* p = name_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Processes.Process.State.name)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::StringValue*>(
      &::ywrapper::_StringValue_default_instance_);
}
inline ::ywrapper::StringValue* AccessPoints_AccessPoint_System_Processes_Process_State::release_name() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Processes.Process.State.name)
  
  ::ywrapper::StringValue* temp = name_;
  name_ = NULL;
  return temp;
}
inline ::ywrapper::StringValue* AccessPoints_AccessPoint_System_Processes_Process_State::mutable_name() {
  
  if (name_ == NULL) {
    name_ = new ::ywrapper::StringValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Processes.Process.State.name)
  return name_;
}
inline void AccessPoints_AccessPoint_System_Processes_Process_State::set_allocated_name(::ywrapper::StringValue* name) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(name_);
  }
  if (name) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      name = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, name, submessage_arena);
    }
    
  } else {
    
  }
  name_ = name;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Processes.Process.State.name)
}

// .ywrapper.UintValue pid = 312256224 [(.yext.schemapath) = "/access-points/access-point/system/processes/process/state/pid"];
inline bool AccessPoints_AccessPoint_System_Processes_Process_State::has_pid() const {
  return this != internal_default_instance() && pid_ != NULL;
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_System_Processes_Process_State::pid() const {
  const ::ywrapper::UintValue* p = pid_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Processes.Process.State.pid)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_System_Processes_Process_State::release_pid() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Processes.Process.State.pid)
  
  ::ywrapper::UintValue* temp = pid_;
  pid_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_System_Processes_Process_State::mutable_pid() {
  
  if (pid_ == NULL) {
    pid_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Processes.Process.State.pid)
  return pid_;
}
inline void AccessPoints_AccessPoint_System_Processes_Process_State::set_allocated_pid(::ywrapper::UintValue* pid) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(pid_);
  }
  if (pid) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      pid = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, pid, submessage_arena);
    }
    
  } else {
    
  }
  pid_ = pid;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Processes.Process.State.pid)
}

// .ywrapper.UintValue start_time = 299610995 [(.yext.schemapath) = "/access-points/access-point/system/processes/process/state/start-time"];
inline bool AccessPoints_AccessPoint_System_Processes_Process_State::has_start_time() const {
  return this != internal_default_instance() && start_time_ != NULL;
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_System_Processes_Process_State::start_time() const {
  const ::ywrapper::UintValue* p = start_time_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Processes.Process.State.start_time)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_System_Processes_Process_State::release_start_time() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Processes.Process.State.start_time)
  
  ::ywrapper::UintValue* temp = start_time_;
  start_time_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_System_Processes_Process_State::mutable_start_time() {
  
  if (start_time_ == NULL) {
    start_time_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Processes.Process.State.start_time)
  return start_time_;
}
inline void AccessPoints_AccessPoint_System_Processes_Process_State::set_allocated_start_time(::ywrapper::UintValue* start_time) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(start_time_);
  }
  if (start_time) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      start_time = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, start_time, submessage_arena);
    }
    
  } else {
    
  }
  start_time_ = start_time;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Processes.Process.State.start_time)
}

// .ywrapper.UintValue uptime = 151923281 [(.yext.schemapath) = "/access-points/access-point/system/processes/process/state/uptime"];
inline bool AccessPoints_AccessPoint_System_Processes_Process_State::has_uptime() const {
  return this != internal_default_instance() && uptime_ != NULL;
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_System_Processes_Process_State::uptime() const {
  const ::ywrapper::UintValue* p = uptime_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Processes.Process.State.uptime)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_System_Processes_Process_State::release_uptime() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Processes.Process.State.uptime)
  
  ::ywrapper::UintValue* temp = uptime_;
  uptime_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_System_Processes_Process_State::mutable_uptime() {
  
  if (uptime_ == NULL) {
    uptime_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Processes.Process.State.uptime)
  return uptime_;
}
inline void AccessPoints_AccessPoint_System_Processes_Process_State::set_allocated_uptime(::ywrapper::UintValue* uptime) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(uptime_);
  }
  if (uptime) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      uptime = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, uptime, submessage_arena);
    }
    
  } else {
    
  }
  uptime_ = uptime;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Processes.Process.State.uptime)
}

// -------------------------------------------------------------------

// AccessPoints_AccessPoint_System_Processes_Process

// .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Processes.Process.State state = 305863702 [(.yext.schemapath) = "/access-points/access-point/system/processes/process/state"];
inline bool AccessPoints_AccessPoint_System_Processes_Process::has_state() const {
  return this != internal_default_instance() && state_ != NULL;
}
inline void AccessPoints_AccessPoint_System_Processes_Process::clear_state() {
  if (GetArenaNoVirtual() == NULL && state_ != NULL) {
    delete state_;
  }
  state_ = NULL;
}
inline const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Processes_Process_State& AccessPoints_AccessPoint_System_Processes_Process::state() const {
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Processes_Process_State* p = state_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Processes.Process.state)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Processes_Process_State*>(
      &::openconfig::openconfig_access_points::_AccessPoints_AccessPoint_System_Processes_Process_State_default_instance_);
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Processes_Process_State* AccessPoints_AccessPoint_System_Processes_Process::release_state() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Processes.Process.state)
  
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Processes_Process_State* temp = state_;
  state_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Processes_Process_State* AccessPoints_AccessPoint_System_Processes_Process::mutable_state() {
  
  if (state_ == NULL) {
    state_ = new ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Processes_Process_State;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Processes.Process.state)
  return state_;
}
inline void AccessPoints_AccessPoint_System_Processes_Process::set_allocated_state(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Processes_Process_State* state) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete state_;
  }
  if (state) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      state = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, state, submessage_arena);
    }
    
  } else {
    
  }
  state_ = state;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Processes.Process.state)
}

// -------------------------------------------------------------------

// AccessPoints_AccessPoint_System_Processes_ProcessKey

// uint64 pid = 1 [(.yext.schemapath) = "/access-points/access-point/system/processes/process/pid"];
inline void AccessPoints_AccessPoint_System_Processes_ProcessKey::clear_pid() {
  pid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 AccessPoints_AccessPoint_System_Processes_ProcessKey::pid() const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Processes.ProcessKey.pid)
  return pid_;
}
inline void AccessPoints_AccessPoint_System_Processes_ProcessKey::set_pid(::google::protobuf::uint64 value) {
  
  pid_ = value;
  // @@protoc_insertion_point(field_set:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Processes.ProcessKey.pid)
}

// .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Processes.Process process = 2;
inline bool AccessPoints_AccessPoint_System_Processes_ProcessKey::has_process() const {
  return this != internal_default_instance() && process_ != NULL;
}
inline void AccessPoints_AccessPoint_System_Processes_ProcessKey::clear_process() {
  if (GetArenaNoVirtual() == NULL && process_ != NULL) {
    delete process_;
  }
  process_ = NULL;
}
inline const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Processes_Process& AccessPoints_AccessPoint_System_Processes_ProcessKey::process() const {
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Processes_Process* p = process_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Processes.ProcessKey.process)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Processes_Process*>(
      &::openconfig::openconfig_access_points::_AccessPoints_AccessPoint_System_Processes_Process_default_instance_);
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Processes_Process* AccessPoints_AccessPoint_System_Processes_ProcessKey::release_process() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Processes.ProcessKey.process)
  
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Processes_Process* temp = process_;
  process_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Processes_Process* AccessPoints_AccessPoint_System_Processes_ProcessKey::mutable_process() {
  
  if (process_ == NULL) {
    process_ = new ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Processes_Process;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Processes.ProcessKey.process)
  return process_;
}
inline void AccessPoints_AccessPoint_System_Processes_ProcessKey::set_allocated_process(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Processes_Process* process) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete process_;
  }
  if (process) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      process = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, process, submessage_arena);
    }
    
  } else {
    
  }
  process_ = process;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Processes.ProcessKey.process)
}

// -------------------------------------------------------------------

// AccessPoints_AccessPoint_System_Processes

// repeated .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Processes.ProcessKey process = 209967788 [(.yext.schemapath) = "/access-points/access-point/system/processes/process"];
inline int AccessPoints_AccessPoint_System_Processes::process_size() const {
  return process_.size();
}
inline void AccessPoints_AccessPoint_System_Processes::clear_process() {
  process_.Clear();
}
inline const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Processes_ProcessKey& AccessPoints_AccessPoint_System_Processes::process(int index) const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Processes.process)
  return process_.Get(index);
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Processes_ProcessKey* AccessPoints_AccessPoint_System_Processes::mutable_process(int index) {
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Processes.process)
  return process_.Mutable(index);
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Processes_ProcessKey* AccessPoints_AccessPoint_System_Processes::add_process() {
  // @@protoc_insertion_point(field_add:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Processes.process)
  return process_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Processes_ProcessKey >*
AccessPoints_AccessPoint_System_Processes::mutable_process() {
  // @@protoc_insertion_point(field_mutable_list:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Processes.process)
  return &process_;
}
inline const ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Processes_ProcessKey >&
AccessPoints_AccessPoint_System_Processes::process() const {
  // @@protoc_insertion_point(field_list:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Processes.process)
  return process_;
}

// -------------------------------------------------------------------

// AccessPoints_AccessPoint_System_SshServer_Config

// .ywrapper.BoolValue enable = 66718020 [(.yext.schemapath) = "/access-points/access-point/system/ssh-server/config/enable"];
inline bool AccessPoints_AccessPoint_System_SshServer_Config::has_enable() const {
  return this != internal_default_instance() && enable_ != NULL;
}
inline const ::ywrapper::BoolValue& AccessPoints_AccessPoint_System_SshServer_Config::enable() const {
  const ::ywrapper::BoolValue* p = enable_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.SshServer.Config.enable)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::BoolValue*>(
      &::ywrapper::_BoolValue_default_instance_);
}
inline ::ywrapper::BoolValue* AccessPoints_AccessPoint_System_SshServer_Config::release_enable() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.SshServer.Config.enable)
  
  ::ywrapper::BoolValue* temp = enable_;
  enable_ = NULL;
  return temp;
}
inline ::ywrapper::BoolValue* AccessPoints_AccessPoint_System_SshServer_Config::mutable_enable() {
  
  if (enable_ == NULL) {
    enable_ = new ::ywrapper::BoolValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.SshServer.Config.enable)
  return enable_;
}
inline void AccessPoints_AccessPoint_System_SshServer_Config::set_allocated_enable(::ywrapper::BoolValue* enable) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(enable_);
  }
  if (enable) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      enable = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, enable, submessage_arena);
    }
    
  } else {
    
  }
  enable_ = enable;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.SshServer.Config.enable)
}

// .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.SshServer.Config.ProtocolVersion protocol_version = 430598902 [(.yext.schemapath) = "/access-points/access-point/system/ssh-server/config/protocol-version"];
inline void AccessPoints_AccessPoint_System_SshServer_Config::clear_protocol_version() {
  protocol_version_ = 0;
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_SshServer_Config_ProtocolVersion AccessPoints_AccessPoint_System_SshServer_Config::protocol_version() const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.SshServer.Config.protocol_version)
  return static_cast< ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_SshServer_Config_ProtocolVersion >(protocol_version_);
}
inline void AccessPoints_AccessPoint_System_SshServer_Config::set_protocol_version(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_SshServer_Config_ProtocolVersion value) {
  
  protocol_version_ = value;
  // @@protoc_insertion_point(field_set:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.SshServer.Config.protocol_version)
}

// .ywrapper.UintValue rate_limit = 135095061 [(.yext.schemapath) = "/access-points/access-point/system/ssh-server/config/rate-limit"];
inline bool AccessPoints_AccessPoint_System_SshServer_Config::has_rate_limit() const {
  return this != internal_default_instance() && rate_limit_ != NULL;
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_System_SshServer_Config::rate_limit() const {
  const ::ywrapper::UintValue* p = rate_limit_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.SshServer.Config.rate_limit)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_System_SshServer_Config::release_rate_limit() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.SshServer.Config.rate_limit)
  
  ::ywrapper::UintValue* temp = rate_limit_;
  rate_limit_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_System_SshServer_Config::mutable_rate_limit() {
  
  if (rate_limit_ == NULL) {
    rate_limit_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.SshServer.Config.rate_limit)
  return rate_limit_;
}
inline void AccessPoints_AccessPoint_System_SshServer_Config::set_allocated_rate_limit(::ywrapper::UintValue* rate_limit) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(rate_limit_);
  }
  if (rate_limit) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      rate_limit = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, rate_limit, submessage_arena);
    }
    
  } else {
    
  }
  rate_limit_ = rate_limit;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.SshServer.Config.rate_limit)
}

// .ywrapper.UintValue session_limit = 249309649 [(.yext.schemapath) = "/access-points/access-point/system/ssh-server/config/session-limit"];
inline bool AccessPoints_AccessPoint_System_SshServer_Config::has_session_limit() const {
  return this != internal_default_instance() && session_limit_ != NULL;
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_System_SshServer_Config::session_limit() const {
  const ::ywrapper::UintValue* p = session_limit_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.SshServer.Config.session_limit)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_System_SshServer_Config::release_session_limit() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.SshServer.Config.session_limit)
  
  ::ywrapper::UintValue* temp = session_limit_;
  session_limit_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_System_SshServer_Config::mutable_session_limit() {
  
  if (session_limit_ == NULL) {
    session_limit_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.SshServer.Config.session_limit)
  return session_limit_;
}
inline void AccessPoints_AccessPoint_System_SshServer_Config::set_allocated_session_limit(::ywrapper::UintValue* session_limit) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(session_limit_);
  }
  if (session_limit) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      session_limit = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, session_limit, submessage_arena);
    }
    
  } else {
    
  }
  session_limit_ = session_limit;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.SshServer.Config.session_limit)
}

// .ywrapper.UintValue timeout = 167632282 [(.yext.schemapath) = "/access-points/access-point/system/ssh-server/config/timeout"];
inline bool AccessPoints_AccessPoint_System_SshServer_Config::has_timeout() const {
  return this != internal_default_instance() && timeout_ != NULL;
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_System_SshServer_Config::timeout() const {
  const ::ywrapper::UintValue* p = timeout_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.SshServer.Config.timeout)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_System_SshServer_Config::release_timeout() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.SshServer.Config.timeout)
  
  ::ywrapper::UintValue* temp = timeout_;
  timeout_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_System_SshServer_Config::mutable_timeout() {
  
  if (timeout_ == NULL) {
    timeout_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.SshServer.Config.timeout)
  return timeout_;
}
inline void AccessPoints_AccessPoint_System_SshServer_Config::set_allocated_timeout(::ywrapper::UintValue* timeout) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(timeout_);
  }
  if (timeout) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      timeout = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, timeout, submessage_arena);
    }
    
  } else {
    
  }
  timeout_ = timeout;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.SshServer.Config.timeout)
}

// -------------------------------------------------------------------

// AccessPoints_AccessPoint_System_SshServer_State

// .ywrapper.BoolValue enable = 263756495 [(.yext.schemapath) = "/access-points/access-point/system/ssh-server/state/enable"];
inline bool AccessPoints_AccessPoint_System_SshServer_State::has_enable() const {
  return this != internal_default_instance() && enable_ != NULL;
}
inline const ::ywrapper::BoolValue& AccessPoints_AccessPoint_System_SshServer_State::enable() const {
  const ::ywrapper::BoolValue* p = enable_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.SshServer.State.enable)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::BoolValue*>(
      &::ywrapper::_BoolValue_default_instance_);
}
inline ::ywrapper::BoolValue* AccessPoints_AccessPoint_System_SshServer_State::release_enable() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.SshServer.State.enable)
  
  ::ywrapper::BoolValue* temp = enable_;
  enable_ = NULL;
  return temp;
}
inline ::ywrapper::BoolValue* AccessPoints_AccessPoint_System_SshServer_State::mutable_enable() {
  
  if (enable_ == NULL) {
    enable_ = new ::ywrapper::BoolValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.SshServer.State.enable)
  return enable_;
}
inline void AccessPoints_AccessPoint_System_SshServer_State::set_allocated_enable(::ywrapper::BoolValue* enable) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(enable_);
  }
  if (enable) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      enable = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, enable, submessage_arena);
    }
    
  } else {
    
  }
  enable_ = enable;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.SshServer.State.enable)
}

// .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.SshServer.State.ProtocolVersion protocol_version = 30232905 [(.yext.schemapath) = "/access-points/access-point/system/ssh-server/state/protocol-version"];
inline void AccessPoints_AccessPoint_System_SshServer_State::clear_protocol_version() {
  protocol_version_ = 0;
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_SshServer_State_ProtocolVersion AccessPoints_AccessPoint_System_SshServer_State::protocol_version() const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.SshServer.State.protocol_version)
  return static_cast< ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_SshServer_State_ProtocolVersion >(protocol_version_);
}
inline void AccessPoints_AccessPoint_System_SshServer_State::set_protocol_version(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_SshServer_State_ProtocolVersion value) {
  
  protocol_version_ = value;
  // @@protoc_insertion_point(field_set:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.SshServer.State.protocol_version)
}

// .ywrapper.UintValue rate_limit = 363549802 [(.yext.schemapath) = "/access-points/access-point/system/ssh-server/state/rate-limit"];
inline bool AccessPoints_AccessPoint_System_SshServer_State::has_rate_limit() const {
  return this != internal_default_instance() && rate_limit_ != NULL;
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_System_SshServer_State::rate_limit() const {
  const ::ywrapper::UintValue* p = rate_limit_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.SshServer.State.rate_limit)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_System_SshServer_State::release_rate_limit() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.SshServer.State.rate_limit)
  
  ::ywrapper::UintValue* temp = rate_limit_;
  rate_limit_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_System_SshServer_State::mutable_rate_limit() {
  
  if (rate_limit_ == NULL) {
    rate_limit_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.SshServer.State.rate_limit)
  return rate_limit_;
}
inline void AccessPoints_AccessPoint_System_SshServer_State::set_allocated_rate_limit(::ywrapper::UintValue* rate_limit) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(rate_limit_);
  }
  if (rate_limit) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      rate_limit = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, rate_limit, submessage_arena);
    }
    
  } else {
    
  }
  rate_limit_ = rate_limit;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.SshServer.State.rate_limit)
}

// .ywrapper.UintValue session_limit = 273640868 [(.yext.schemapath) = "/access-points/access-point/system/ssh-server/state/session-limit"];
inline bool AccessPoints_AccessPoint_System_SshServer_State::has_session_limit() const {
  return this != internal_default_instance() && session_limit_ != NULL;
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_System_SshServer_State::session_limit() const {
  const ::ywrapper::UintValue* p = session_limit_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.SshServer.State.session_limit)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_System_SshServer_State::release_session_limit() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.SshServer.State.session_limit)
  
  ::ywrapper::UintValue* temp = session_limit_;
  session_limit_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_System_SshServer_State::mutable_session_limit() {
  
  if (session_limit_ == NULL) {
    session_limit_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.SshServer.State.session_limit)
  return session_limit_;
}
inline void AccessPoints_AccessPoint_System_SshServer_State::set_allocated_session_limit(::ywrapper::UintValue* session_limit) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(session_limit_);
  }
  if (session_limit) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      session_limit = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, session_limit, submessage_arena);
    }
    
  } else {
    
  }
  session_limit_ = session_limit;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.SshServer.State.session_limit)
}

// .ywrapper.UintValue timeout = 189306899 [(.yext.schemapath) = "/access-points/access-point/system/ssh-server/state/timeout"];
inline bool AccessPoints_AccessPoint_System_SshServer_State::has_timeout() const {
  return this != internal_default_instance() && timeout_ != NULL;
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_System_SshServer_State::timeout() const {
  const ::ywrapper::UintValue* p = timeout_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.SshServer.State.timeout)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_System_SshServer_State::release_timeout() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.SshServer.State.timeout)
  
  ::ywrapper::UintValue* temp = timeout_;
  timeout_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_System_SshServer_State::mutable_timeout() {
  
  if (timeout_ == NULL) {
    timeout_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.SshServer.State.timeout)
  return timeout_;
}
inline void AccessPoints_AccessPoint_System_SshServer_State::set_allocated_timeout(::ywrapper::UintValue* timeout) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(timeout_);
  }
  if (timeout) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      timeout = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, timeout, submessage_arena);
    }
    
  } else {
    
  }
  timeout_ = timeout;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.SshServer.State.timeout)
}

// -------------------------------------------------------------------

// AccessPoints_AccessPoint_System_SshServer

// .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.SshServer.Config config = 143078026 [(.yext.schemapath) = "/access-points/access-point/system/ssh-server/config"];
inline bool AccessPoints_AccessPoint_System_SshServer::has_config() const {
  return this != internal_default_instance() && config_ != NULL;
}
inline void AccessPoints_AccessPoint_System_SshServer::clear_config() {
  if (GetArenaNoVirtual() == NULL && config_ != NULL) {
    delete config_;
  }
  config_ = NULL;
}
inline const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_SshServer_Config& AccessPoints_AccessPoint_System_SshServer::config() const {
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_SshServer_Config* p = config_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.SshServer.config)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_SshServer_Config*>(
      &::openconfig::openconfig_access_points::_AccessPoints_AccessPoint_System_SshServer_Config_default_instance_);
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_SshServer_Config* AccessPoints_AccessPoint_System_SshServer::release_config() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.SshServer.config)
  
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_SshServer_Config* temp = config_;
  config_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_SshServer_Config* AccessPoints_AccessPoint_System_SshServer::mutable_config() {
  
  if (config_ == NULL) {
    config_ = new ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_SshServer_Config;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.SshServer.config)
  return config_;
}
inline void AccessPoints_AccessPoint_System_SshServer::set_allocated_config(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_SshServer_Config* config) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete config_;
  }
  if (config) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      config = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, config, submessage_arena);
    }
    
  } else {
    
  }
  config_ = config;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.SshServer.config)
}

// .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.SshServer.State state = 322762023 [(.yext.schemapath) = "/access-points/access-point/system/ssh-server/state"];
inline bool AccessPoints_AccessPoint_System_SshServer::has_state() const {
  return this != internal_default_instance() && state_ != NULL;
}
inline void AccessPoints_AccessPoint_System_SshServer::clear_state() {
  if (GetArenaNoVirtual() == NULL && state_ != NULL) {
    delete state_;
  }
  state_ = NULL;
}
inline const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_SshServer_State& AccessPoints_AccessPoint_System_SshServer::state() const {
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_SshServer_State* p = state_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.SshServer.state)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_SshServer_State*>(
      &::openconfig::openconfig_access_points::_AccessPoints_AccessPoint_System_SshServer_State_default_instance_);
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_SshServer_State* AccessPoints_AccessPoint_System_SshServer::release_state() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.SshServer.state)
  
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_SshServer_State* temp = state_;
  state_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_SshServer_State* AccessPoints_AccessPoint_System_SshServer::mutable_state() {
  
  if (state_ == NULL) {
    state_ = new ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_SshServer_State;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.SshServer.state)
  return state_;
}
inline void AccessPoints_AccessPoint_System_SshServer::set_allocated_state(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_SshServer_State* state) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete state_;
  }
  if (state) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      state = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, state, submessage_arena);
    }
    
  } else {
    
  }
  state_ = state;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.SshServer.state)
}

// -------------------------------------------------------------------

// AccessPoints_AccessPoint_System_State

// .ywrapper.UintValue boot_time = 307549397 [(.yext.schemapath) = "/access-points/access-point/system/state/boot-time"];
inline bool AccessPoints_AccessPoint_System_State::has_boot_time() const {
  return this != internal_default_instance() && boot_time_ != NULL;
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_System_State::boot_time() const {
  const ::ywrapper::UintValue* p = boot_time_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.State.boot_time)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_System_State::release_boot_time() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.State.boot_time)
  
  ::ywrapper::UintValue* temp = boot_time_;
  boot_time_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_System_State::mutable_boot_time() {
  
  if (boot_time_ == NULL) {
    boot_time_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.State.boot_time)
  return boot_time_;
}
inline void AccessPoints_AccessPoint_System_State::set_allocated_boot_time(::ywrapper::UintValue* boot_time) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(boot_time_);
  }
  if (boot_time) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      boot_time = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, boot_time, submessage_arena);
    }
    
  } else {
    
  }
  boot_time_ = boot_time;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.State.boot_time)
}

// .ywrapper.StringValue current_datetime = 8121154 [(.yext.schemapath) = "/access-points/access-point/system/state/current-datetime"];
inline bool AccessPoints_AccessPoint_System_State::has_current_datetime() const {
  return this != internal_default_instance() && current_datetime_ != NULL;
}
inline const ::ywrapper::StringValue& AccessPoints_AccessPoint_System_State::current_datetime() const {
  const ::ywrapper::StringValue* p = current_datetime_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.State.current_datetime)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::StringValue*>(
      &::ywrapper::_StringValue_default_instance_);
}
inline ::ywrapper::StringValue* AccessPoints_AccessPoint_System_State::release_current_datetime() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.State.current_datetime)
  
  ::ywrapper::StringValue* temp = current_datetime_;
  current_datetime_ = NULL;
  return temp;
}
inline ::ywrapper::StringValue* AccessPoints_AccessPoint_System_State::mutable_current_datetime() {
  
  if (current_datetime_ == NULL) {
    current_datetime_ = new ::ywrapper::StringValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.State.current_datetime)
  return current_datetime_;
}
inline void AccessPoints_AccessPoint_System_State::set_allocated_current_datetime(::ywrapper::StringValue* current_datetime) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(current_datetime_);
  }
  if (current_datetime) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      current_datetime = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, current_datetime, submessage_arena);
    }
    
  } else {
    
  }
  current_datetime_ = current_datetime;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.State.current_datetime)
}

// .ywrapper.StringValue domain_name = 344996527 [(.yext.schemapath) = "/access-points/access-point/system/state/domain-name"];
inline bool AccessPoints_AccessPoint_System_State::has_domain_name() const {
  return this != internal_default_instance() && domain_name_ != NULL;
}
inline const ::ywrapper::StringValue& AccessPoints_AccessPoint_System_State::domain_name() const {
  const ::ywrapper::StringValue* p = domain_name_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.State.domain_name)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::StringValue*>(
      &::ywrapper::_StringValue_default_instance_);
}
inline ::ywrapper::StringValue* AccessPoints_AccessPoint_System_State::release_domain_name() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.State.domain_name)
  
  ::ywrapper::StringValue* temp = domain_name_;
  domain_name_ = NULL;
  return temp;
}
inline ::ywrapper::StringValue* AccessPoints_AccessPoint_System_State::mutable_domain_name() {
  
  if (domain_name_ == NULL) {
    domain_name_ = new ::ywrapper::StringValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.State.domain_name)
  return domain_name_;
}
inline void AccessPoints_AccessPoint_System_State::set_allocated_domain_name(::ywrapper::StringValue* domain_name) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(domain_name_);
  }
  if (domain_name) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      domain_name = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, domain_name, submessage_arena);
    }
    
  } else {
    
  }
  domain_name_ = domain_name;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.State.domain_name)
}

// .ywrapper.StringValue hostname = 317134122 [(.yext.schemapath) = "/access-points/access-point/system/state/hostname"];
inline bool AccessPoints_AccessPoint_System_State::has_hostname() const {
  return this != internal_default_instance() && hostname_ != NULL;
}
inline const ::ywrapper::StringValue& AccessPoints_AccessPoint_System_State::hostname() const {
  const ::ywrapper::StringValue* p = hostname_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.State.hostname)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::StringValue*>(
      &::ywrapper::_StringValue_default_instance_);
}
inline ::ywrapper::StringValue* AccessPoints_AccessPoint_System_State::release_hostname() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.State.hostname)
  
  ::ywrapper::StringValue* temp = hostname_;
  hostname_ = NULL;
  return temp;
}
inline ::ywrapper::StringValue* AccessPoints_AccessPoint_System_State::mutable_hostname() {
  
  if (hostname_ == NULL) {
    hostname_ = new ::ywrapper::StringValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.State.hostname)
  return hostname_;
}
inline void AccessPoints_AccessPoint_System_State::set_allocated_hostname(::ywrapper::StringValue* hostname) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(hostname_);
  }
  if (hostname) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      hostname = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, hostname, submessage_arena);
    }
    
  } else {
    
  }
  hostname_ = hostname;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.State.hostname)
}

// .ywrapper.StringValue login_banner = 455717739 [(.yext.schemapath) = "/access-points/access-point/system/state/login-banner"];
inline bool AccessPoints_AccessPoint_System_State::has_login_banner() const {
  return this != internal_default_instance() && login_banner_ != NULL;
}
inline const ::ywrapper::StringValue& AccessPoints_AccessPoint_System_State::login_banner() const {
  const ::ywrapper::StringValue* p = login_banner_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.State.login_banner)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::StringValue*>(
      &::ywrapper::_StringValue_default_instance_);
}
inline ::ywrapper::StringValue* AccessPoints_AccessPoint_System_State::release_login_banner() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.State.login_banner)
  
  ::ywrapper::StringValue* temp = login_banner_;
  login_banner_ = NULL;
  return temp;
}
inline ::ywrapper::StringValue* AccessPoints_AccessPoint_System_State::mutable_login_banner() {
  
  if (login_banner_ == NULL) {
    login_banner_ = new ::ywrapper::StringValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.State.login_banner)
  return login_banner_;
}
inline void AccessPoints_AccessPoint_System_State::set_allocated_login_banner(::ywrapper::StringValue* login_banner) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(login_banner_);
  }
  if (login_banner) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      login_banner = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, login_banner, submessage_arena);
    }
    
  } else {
    
  }
  login_banner_ = login_banner;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.State.login_banner)
}

// .ywrapper.StringValue motd_banner = 505008348 [(.yext.schemapath) = "/access-points/access-point/system/state/motd-banner"];
inline bool AccessPoints_AccessPoint_System_State::has_motd_banner() const {
  return this != internal_default_instance() && motd_banner_ != NULL;
}
inline const ::ywrapper::StringValue& AccessPoints_AccessPoint_System_State::motd_banner() const {
  const ::ywrapper::StringValue* p = motd_banner_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.State.motd_banner)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::StringValue*>(
      &::ywrapper::_StringValue_default_instance_);
}
inline ::ywrapper::StringValue* AccessPoints_AccessPoint_System_State::release_motd_banner() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.State.motd_banner)
  
  ::ywrapper::StringValue* temp = motd_banner_;
  motd_banner_ = NULL;
  return temp;
}
inline ::ywrapper::StringValue* AccessPoints_AccessPoint_System_State::mutable_motd_banner() {
  
  if (motd_banner_ == NULL) {
    motd_banner_ = new ::ywrapper::StringValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.State.motd_banner)
  return motd_banner_;
}
inline void AccessPoints_AccessPoint_System_State::set_allocated_motd_banner(::ywrapper::StringValue* motd_banner) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(motd_banner_);
  }
  if (motd_banner) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      motd_banner = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, motd_banner, submessage_arena);
    }
    
  } else {
    
  }
  motd_banner_ = motd_banner;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.State.motd_banner)
}

// -------------------------------------------------------------------

// AccessPoints_AccessPoint_System_TelnetServer_Config

// .ywrapper.BoolValue enable = 110507488 [(.yext.schemapath) = "/access-points/access-point/system/telnet-server/config/enable"];
inline bool AccessPoints_AccessPoint_System_TelnetServer_Config::has_enable() const {
  return this != internal_default_instance() && enable_ != NULL;
}
inline const ::ywrapper::BoolValue& AccessPoints_AccessPoint_System_TelnetServer_Config::enable() const {
  const ::ywrapper::BoolValue* p = enable_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.TelnetServer.Config.enable)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::BoolValue*>(
      &::ywrapper::_BoolValue_default_instance_);
}
inline ::ywrapper::BoolValue* AccessPoints_AccessPoint_System_TelnetServer_Config::release_enable() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.TelnetServer.Config.enable)
  
  ::ywrapper::BoolValue* temp = enable_;
  enable_ = NULL;
  return temp;
}
inline ::ywrapper::BoolValue* AccessPoints_AccessPoint_System_TelnetServer_Config::mutable_enable() {
  
  if (enable_ == NULL) {
    enable_ = new ::ywrapper::BoolValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.TelnetServer.Config.enable)
  return enable_;
}
inline void AccessPoints_AccessPoint_System_TelnetServer_Config::set_allocated_enable(::ywrapper::BoolValue* enable) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(enable_);
  }
  if (enable) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      enable = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, enable, submessage_arena);
    }
    
  } else {
    
  }
  enable_ = enable;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.TelnetServer.Config.enable)
}

// .ywrapper.UintValue rate_limit = 285478145 [(.yext.schemapath) = "/access-points/access-point/system/telnet-server/config/rate-limit"];
inline bool AccessPoints_AccessPoint_System_TelnetServer_Config::has_rate_limit() const {
  return this != internal_default_instance() && rate_limit_ != NULL;
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_System_TelnetServer_Config::rate_limit() const {
  const ::ywrapper::UintValue* p = rate_limit_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.TelnetServer.Config.rate_limit)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_System_TelnetServer_Config::release_rate_limit() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.TelnetServer.Config.rate_limit)
  
  ::ywrapper::UintValue* temp = rate_limit_;
  rate_limit_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_System_TelnetServer_Config::mutable_rate_limit() {
  
  if (rate_limit_ == NULL) {
    rate_limit_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.TelnetServer.Config.rate_limit)
  return rate_limit_;
}
inline void AccessPoints_AccessPoint_System_TelnetServer_Config::set_allocated_rate_limit(::ywrapper::UintValue* rate_limit) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(rate_limit_);
  }
  if (rate_limit) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      rate_limit = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, rate_limit, submessage_arena);
    }
    
  } else {
    
  }
  rate_limit_ = rate_limit;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.TelnetServer.Config.rate_limit)
}

// .ywrapper.UintValue session_limit = 363906317 [(.yext.schemapath) = "/access-points/access-point/system/telnet-server/config/session-limit"];
inline bool AccessPoints_AccessPoint_System_TelnetServer_Config::has_session_limit() const {
  return this != internal_default_instance() && session_limit_ != NULL;
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_System_TelnetServer_Config::session_limit() const {
  const ::ywrapper::UintValue* p = session_limit_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.TelnetServer.Config.session_limit)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_System_TelnetServer_Config::release_session_limit() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.TelnetServer.Config.session_limit)
  
  ::ywrapper::UintValue* temp = session_limit_;
  session_limit_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_System_TelnetServer_Config::mutable_session_limit() {
  
  if (session_limit_ == NULL) {
    session_limit_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.TelnetServer.Config.session_limit)
  return session_limit_;
}
inline void AccessPoints_AccessPoint_System_TelnetServer_Config::set_allocated_session_limit(::ywrapper::UintValue* session_limit) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(session_limit_);
  }
  if (session_limit) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      session_limit = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, session_limit, submessage_arena);
    }
    
  } else {
    
  }
  session_limit_ = session_limit;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.TelnetServer.Config.session_limit)
}

// .ywrapper.UintValue timeout = 439984974 [(.yext.schemapath) = "/access-points/access-point/system/telnet-server/config/timeout"];
inline bool AccessPoints_AccessPoint_System_TelnetServer_Config::has_timeout() const {
  return this != internal_default_instance() && timeout_ != NULL;
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_System_TelnetServer_Config::timeout() const {
  const ::ywrapper::UintValue* p = timeout_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.TelnetServer.Config.timeout)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_System_TelnetServer_Config::release_timeout() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.TelnetServer.Config.timeout)
  
  ::ywrapper::UintValue* temp = timeout_;
  timeout_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_System_TelnetServer_Config::mutable_timeout() {
  
  if (timeout_ == NULL) {
    timeout_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.TelnetServer.Config.timeout)
  return timeout_;
}
inline void AccessPoints_AccessPoint_System_TelnetServer_Config::set_allocated_timeout(::ywrapper::UintValue* timeout) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(timeout_);
  }
  if (timeout) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      timeout = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, timeout, submessage_arena);
    }
    
  } else {
    
  }
  timeout_ = timeout;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.TelnetServer.Config.timeout)
}

// -------------------------------------------------------------------

// AccessPoints_AccessPoint_System_TelnetServer_State

// .ywrapper.BoolValue enable = 107151659 [(.yext.schemapath) = "/access-points/access-point/system/telnet-server/state/enable"];
inline bool AccessPoints_AccessPoint_System_TelnetServer_State::has_enable() const {
  return this != internal_default_instance() && enable_ != NULL;
}
inline const ::ywrapper::BoolValue& AccessPoints_AccessPoint_System_TelnetServer_State::enable() const {
  const ::ywrapper::BoolValue* p = enable_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.TelnetServer.State.enable)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::BoolValue*>(
      &::ywrapper::_BoolValue_default_instance_);
}
inline ::ywrapper::BoolValue* AccessPoints_AccessPoint_System_TelnetServer_State::release_enable() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.TelnetServer.State.enable)
  
  ::ywrapper::BoolValue* temp = enable_;
  enable_ = NULL;
  return temp;
}
inline ::ywrapper::BoolValue* AccessPoints_AccessPoint_System_TelnetServer_State::mutable_enable() {
  
  if (enable_ == NULL) {
    enable_ = new ::ywrapper::BoolValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.TelnetServer.State.enable)
  return enable_;
}
inline void AccessPoints_AccessPoint_System_TelnetServer_State::set_allocated_enable(::ywrapper::BoolValue* enable) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(enable_);
  }
  if (enable) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      enable = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, enable, submessage_arena);
    }
    
  } else {
    
  }
  enable_ = enable;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.TelnetServer.State.enable)
}

// .ywrapper.UintValue rate_limit = 256816598 [(.yext.schemapath) = "/access-points/access-point/system/telnet-server/state/rate-limit"];
inline bool AccessPoints_AccessPoint_System_TelnetServer_State::has_rate_limit() const {
  return this != internal_default_instance() && rate_limit_ != NULL;
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_System_TelnetServer_State::rate_limit() const {
  const ::ywrapper::UintValue* p = rate_limit_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.TelnetServer.State.rate_limit)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_System_TelnetServer_State::release_rate_limit() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.TelnetServer.State.rate_limit)
  
  ::ywrapper::UintValue* temp = rate_limit_;
  rate_limit_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_System_TelnetServer_State::mutable_rate_limit() {
  
  if (rate_limit_ == NULL) {
    rate_limit_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.TelnetServer.State.rate_limit)
  return rate_limit_;
}
inline void AccessPoints_AccessPoint_System_TelnetServer_State::set_allocated_rate_limit(::ywrapper::UintValue* rate_limit) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(rate_limit_);
  }
  if (rate_limit) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      rate_limit = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, rate_limit, submessage_arena);
    }
    
  } else {
    
  }
  rate_limit_ = rate_limit;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.TelnetServer.State.rate_limit)
}

// .ywrapper.UintValue session_limit = 522907056 [(.yext.schemapath) = "/access-points/access-point/system/telnet-server/state/session-limit"];
inline bool AccessPoints_AccessPoint_System_TelnetServer_State::has_session_limit() const {
  return this != internal_default_instance() && session_limit_ != NULL;
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_System_TelnetServer_State::session_limit() const {
  const ::ywrapper::UintValue* p = session_limit_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.TelnetServer.State.session_limit)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_System_TelnetServer_State::release_session_limit() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.TelnetServer.State.session_limit)
  
  ::ywrapper::UintValue* temp = session_limit_;
  session_limit_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_System_TelnetServer_State::mutable_session_limit() {
  
  if (session_limit_ == NULL) {
    session_limit_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.TelnetServer.State.session_limit)
  return session_limit_;
}
inline void AccessPoints_AccessPoint_System_TelnetServer_State::set_allocated_session_limit(::ywrapper::UintValue* session_limit) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(session_limit_);
  }
  if (session_limit) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      session_limit = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, session_limit, submessage_arena);
    }
    
  } else {
    
  }
  session_limit_ = session_limit;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.TelnetServer.State.session_limit)
}

// .ywrapper.UintValue timeout = 378958423 [(.yext.schemapath) = "/access-points/access-point/system/telnet-server/state/timeout"];
inline bool AccessPoints_AccessPoint_System_TelnetServer_State::has_timeout() const {
  return this != internal_default_instance() && timeout_ != NULL;
}
inline const ::ywrapper::UintValue& AccessPoints_AccessPoint_System_TelnetServer_State::timeout() const {
  const ::ywrapper::UintValue* p = timeout_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.TelnetServer.State.timeout)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_System_TelnetServer_State::release_timeout() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.TelnetServer.State.timeout)
  
  ::ywrapper::UintValue* temp = timeout_;
  timeout_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* AccessPoints_AccessPoint_System_TelnetServer_State::mutable_timeout() {
  
  if (timeout_ == NULL) {
    timeout_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.TelnetServer.State.timeout)
  return timeout_;
}
inline void AccessPoints_AccessPoint_System_TelnetServer_State::set_allocated_timeout(::ywrapper::UintValue* timeout) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(timeout_);
  }
  if (timeout) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      timeout = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, timeout, submessage_arena);
    }
    
  } else {
    
  }
  timeout_ = timeout;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.TelnetServer.State.timeout)
}

// -------------------------------------------------------------------

// AccessPoints_AccessPoint_System_TelnetServer

// .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.TelnetServer.Config config = 533189078 [(.yext.schemapath) = "/access-points/access-point/system/telnet-server/config"];
inline bool AccessPoints_AccessPoint_System_TelnetServer::has_config() const {
  return this != internal_default_instance() && config_ != NULL;
}
inline void AccessPoints_AccessPoint_System_TelnetServer::clear_config() {
  if (GetArenaNoVirtual() == NULL && config_ != NULL) {
    delete config_;
  }
  config_ = NULL;
}
inline const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_TelnetServer_Config& AccessPoints_AccessPoint_System_TelnetServer::config() const {
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_TelnetServer_Config* p = config_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.TelnetServer.config)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_TelnetServer_Config*>(
      &::openconfig::openconfig_access_points::_AccessPoints_AccessPoint_System_TelnetServer_Config_default_instance_);
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_TelnetServer_Config* AccessPoints_AccessPoint_System_TelnetServer::release_config() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.TelnetServer.config)
  
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_TelnetServer_Config* temp = config_;
  config_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_TelnetServer_Config* AccessPoints_AccessPoint_System_TelnetServer::mutable_config() {
  
  if (config_ == NULL) {
    config_ = new ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_TelnetServer_Config;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.TelnetServer.config)
  return config_;
}
inline void AccessPoints_AccessPoint_System_TelnetServer::set_allocated_config(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_TelnetServer_Config* config) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete config_;
  }
  if (config) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      config = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, config, submessage_arena);
    }
    
  } else {
    
  }
  config_ = config;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.TelnetServer.config)
}

// .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.TelnetServer.State state = 389693315 [(.yext.schemapath) = "/access-points/access-point/system/telnet-server/state"];
inline bool AccessPoints_AccessPoint_System_TelnetServer::has_state() const {
  return this != internal_default_instance() && state_ != NULL;
}
inline void AccessPoints_AccessPoint_System_TelnetServer::clear_state() {
  if (GetArenaNoVirtual() == NULL && state_ != NULL) {
    delete state_;
  }
  state_ = NULL;
}
inline const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_TelnetServer_State& AccessPoints_AccessPoint_System_TelnetServer::state() const {
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_TelnetServer_State* p = state_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.TelnetServer.state)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_TelnetServer_State*>(
      &::openconfig::openconfig_access_points::_AccessPoints_AccessPoint_System_TelnetServer_State_default_instance_);
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_TelnetServer_State* AccessPoints_AccessPoint_System_TelnetServer::release_state() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.TelnetServer.state)
  
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_TelnetServer_State* temp = state_;
  state_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_TelnetServer_State* AccessPoints_AccessPoint_System_TelnetServer::mutable_state() {
  
  if (state_ == NULL) {
    state_ = new ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_TelnetServer_State;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.TelnetServer.state)
  return state_;
}
inline void AccessPoints_AccessPoint_System_TelnetServer::set_allocated_state(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_TelnetServer_State* state) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete state_;
  }
  if (state) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      state = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, state, submessage_arena);
    }
    
  } else {
    
  }
  state_ = state;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.TelnetServer.state)
}

// -------------------------------------------------------------------

// AccessPoints_AccessPoint_System

// .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Aaa aaa = 310301406 [(.yext.schemapath) = "/access-points/access-point/system/aaa"];
inline bool AccessPoints_AccessPoint_System::has_aaa() const {
  return this != internal_default_instance() && aaa_ != NULL;
}
inline void AccessPoints_AccessPoint_System::clear_aaa() {
  if (GetArenaNoVirtual() == NULL && aaa_ != NULL) {
    delete aaa_;
  }
  aaa_ = NULL;
}
inline const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa& AccessPoints_AccessPoint_System::aaa() const {
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa* p = aaa_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.aaa)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa*>(
      &::openconfig::openconfig_access_points::_AccessPoints_AccessPoint_System_Aaa_default_instance_);
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa* AccessPoints_AccessPoint_System::release_aaa() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.aaa)
  
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa* temp = aaa_;
  aaa_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa* AccessPoints_AccessPoint_System::mutable_aaa() {
  
  if (aaa_ == NULL) {
    aaa_ = new ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.aaa)
  return aaa_;
}
inline void AccessPoints_AccessPoint_System::set_allocated_aaa(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa* aaa) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete aaa_;
  }
  if (aaa) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      aaa = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, aaa, submessage_arena);
    }
    
  } else {
    
  }
  aaa_ = aaa;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.aaa)
}

// .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Alarms alarms = 428484193 [(.yext.schemapath) = "/access-points/access-point/system/alarms"];
inline bool AccessPoints_AccessPoint_System::has_alarms() const {
  return this != internal_default_instance() && alarms_ != NULL;
}
inline void AccessPoints_AccessPoint_System::clear_alarms() {
  if (GetArenaNoVirtual() == NULL && alarms_ != NULL) {
    delete alarms_;
  }
  alarms_ = NULL;
}
inline const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Alarms& AccessPoints_AccessPoint_System::alarms() const {
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Alarms* p = alarms_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.alarms)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Alarms*>(
      &::openconfig::openconfig_access_points::_AccessPoints_AccessPoint_System_Alarms_default_instance_);
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Alarms* AccessPoints_AccessPoint_System::release_alarms() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.alarms)
  
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Alarms* temp = alarms_;
  alarms_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Alarms* AccessPoints_AccessPoint_System::mutable_alarms() {
  
  if (alarms_ == NULL) {
    alarms_ = new ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Alarms;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.alarms)
  return alarms_;
}
inline void AccessPoints_AccessPoint_System::set_allocated_alarms(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Alarms* alarms) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete alarms_;
  }
  if (alarms) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      alarms = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, alarms, submessage_arena);
    }
    
  } else {
    
  }
  alarms_ = alarms;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.alarms)
}

// .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Clock clock = 273230439 [(.yext.schemapath) = "/access-points/access-point/system/clock"];
inline bool AccessPoints_AccessPoint_System::has_clock() const {
  return this != internal_default_instance() && clock_ != NULL;
}
inline void AccessPoints_AccessPoint_System::clear_clock() {
  if (GetArenaNoVirtual() == NULL && clock_ != NULL) {
    delete clock_;
  }
  clock_ = NULL;
}
inline const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Clock& AccessPoints_AccessPoint_System::clock() const {
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Clock* p = clock_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.clock)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Clock*>(
      &::openconfig::openconfig_access_points::_AccessPoints_AccessPoint_System_Clock_default_instance_);
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Clock* AccessPoints_AccessPoint_System::release_clock() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.clock)
  
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Clock* temp = clock_;
  clock_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Clock* AccessPoints_AccessPoint_System::mutable_clock() {
  
  if (clock_ == NULL) {
    clock_ = new ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Clock;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.clock)
  return clock_;
}
inline void AccessPoints_AccessPoint_System::set_allocated_clock(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Clock* clock) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete clock_;
  }
  if (clock) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      clock = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, clock, submessage_arena);
    }
    
  } else {
    
  }
  clock_ = clock;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.clock)
}

// .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Config config = 154349349 [(.yext.schemapath) = "/access-points/access-point/system/config"];
inline bool AccessPoints_AccessPoint_System::has_config() const {
  return this != internal_default_instance() && config_ != NULL;
}
inline void AccessPoints_AccessPoint_System::clear_config() {
  if (GetArenaNoVirtual() == NULL && config_ != NULL) {
    delete config_;
  }
  config_ = NULL;
}
inline const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Config& AccessPoints_AccessPoint_System::config() const {
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Config* p = config_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.config)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Config*>(
      &::openconfig::openconfig_access_points::_AccessPoints_AccessPoint_System_Config_default_instance_);
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Config* AccessPoints_AccessPoint_System::release_config() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.config)
  
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Config* temp = config_;
  config_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Config* AccessPoints_AccessPoint_System::mutable_config() {
  
  if (config_ == NULL) {
    config_ = new ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Config;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.config)
  return config_;
}
inline void AccessPoints_AccessPoint_System::set_allocated_config(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Config* config) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete config_;
  }
  if (config) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      config = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, config, submessage_arena);
    }
    
  } else {
    
  }
  config_ = config;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.config)
}

// .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Cpus cpus = 16333042 [(.yext.schemapath) = "/access-points/access-point/system/cpus"];
inline bool AccessPoints_AccessPoint_System::has_cpus() const {
  return this != internal_default_instance() && cpus_ != NULL;
}
inline void AccessPoints_AccessPoint_System::clear_cpus() {
  if (GetArenaNoVirtual() == NULL && cpus_ != NULL) {
    delete cpus_;
  }
  cpus_ = NULL;
}
inline const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Cpus& AccessPoints_AccessPoint_System::cpus() const {
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Cpus* p = cpus_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.cpus)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Cpus*>(
      &::openconfig::openconfig_access_points::_AccessPoints_AccessPoint_System_Cpus_default_instance_);
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Cpus* AccessPoints_AccessPoint_System::release_cpus() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.cpus)
  
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Cpus* temp = cpus_;
  cpus_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Cpus* AccessPoints_AccessPoint_System::mutable_cpus() {
  
  if (cpus_ == NULL) {
    cpus_ = new ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Cpus;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.cpus)
  return cpus_;
}
inline void AccessPoints_AccessPoint_System::set_allocated_cpus(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Cpus* cpus) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete cpus_;
  }
  if (cpus) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      cpus = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, cpus, submessage_arena);
    }
    
  } else {
    
  }
  cpus_ = cpus;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.cpus)
}

// .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Dns dns = 427303308 [(.yext.schemapath) = "/access-points/access-point/system/dns"];
inline bool AccessPoints_AccessPoint_System::has_dns() const {
  return this != internal_default_instance() && dns_ != NULL;
}
inline void AccessPoints_AccessPoint_System::clear_dns() {
  if (GetArenaNoVirtual() == NULL && dns_ != NULL) {
    delete dns_;
  }
  dns_ = NULL;
}
inline const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Dns& AccessPoints_AccessPoint_System::dns() const {
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Dns* p = dns_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.dns)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Dns*>(
      &::openconfig::openconfig_access_points::_AccessPoints_AccessPoint_System_Dns_default_instance_);
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Dns* AccessPoints_AccessPoint_System::release_dns() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.dns)
  
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Dns* temp = dns_;
  dns_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Dns* AccessPoints_AccessPoint_System::mutable_dns() {
  
  if (dns_ == NULL) {
    dns_ = new ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Dns;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.dns)
  return dns_;
}
inline void AccessPoints_AccessPoint_System::set_allocated_dns(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Dns* dns) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete dns_;
  }
  if (dns) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      dns = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, dns, submessage_arena);
    }
    
  } else {
    
  }
  dns_ = dns;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.dns)
}

// .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Logging logging = 310453074 [(.yext.schemapath) = "/access-points/access-point/system/logging"];
inline bool AccessPoints_AccessPoint_System::has_logging() const {
  return this != internal_default_instance() && logging_ != NULL;
}
inline void AccessPoints_AccessPoint_System::clear_logging() {
  if (GetArenaNoVirtual() == NULL && logging_ != NULL) {
    delete logging_;
  }
  logging_ = NULL;
}
inline const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging& AccessPoints_AccessPoint_System::logging() const {
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging* p = logging_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.logging)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging*>(
      &::openconfig::openconfig_access_points::_AccessPoints_AccessPoint_System_Logging_default_instance_);
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging* AccessPoints_AccessPoint_System::release_logging() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.logging)
  
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging* temp = logging_;
  logging_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging* AccessPoints_AccessPoint_System::mutable_logging() {
  
  if (logging_ == NULL) {
    logging_ = new ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.logging)
  return logging_;
}
inline void AccessPoints_AccessPoint_System::set_allocated_logging(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Logging* logging) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete logging_;
  }
  if (logging) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      logging = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, logging, submessage_arena);
    }
    
  } else {
    
  }
  logging_ = logging;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.logging)
}

// .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Memory memory = 162584754 [(.yext.schemapath) = "/access-points/access-point/system/memory"];
inline bool AccessPoints_AccessPoint_System::has_memory() const {
  return this != internal_default_instance() && memory_ != NULL;
}
inline void AccessPoints_AccessPoint_System::clear_memory() {
  if (GetArenaNoVirtual() == NULL && memory_ != NULL) {
    delete memory_;
  }
  memory_ = NULL;
}
inline const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Memory& AccessPoints_AccessPoint_System::memory() const {
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Memory* p = memory_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.memory)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Memory*>(
      &::openconfig::openconfig_access_points::_AccessPoints_AccessPoint_System_Memory_default_instance_);
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Memory* AccessPoints_AccessPoint_System::release_memory() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.memory)
  
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Memory* temp = memory_;
  memory_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Memory* AccessPoints_AccessPoint_System::mutable_memory() {
  
  if (memory_ == NULL) {
    memory_ = new ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Memory;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.memory)
  return memory_;
}
inline void AccessPoints_AccessPoint_System::set_allocated_memory(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Memory* memory) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete memory_;
  }
  if (memory) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      memory = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, memory, submessage_arena);
    }
    
  } else {
    
  }
  memory_ = memory;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.memory)
}

// .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Ntp ntp = 258554471 [(.yext.schemapath) = "/access-points/access-point/system/ntp"];
inline bool AccessPoints_AccessPoint_System::has_ntp() const {
  return this != internal_default_instance() && ntp_ != NULL;
}
inline void AccessPoints_AccessPoint_System::clear_ntp() {
  if (GetArenaNoVirtual() == NULL && ntp_ != NULL) {
    delete ntp_;
  }
  ntp_ = NULL;
}
inline const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Ntp& AccessPoints_AccessPoint_System::ntp() const {
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Ntp* p = ntp_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.ntp)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Ntp*>(
      &::openconfig::openconfig_access_points::_AccessPoints_AccessPoint_System_Ntp_default_instance_);
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Ntp* AccessPoints_AccessPoint_System::release_ntp() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.ntp)
  
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Ntp* temp = ntp_;
  ntp_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Ntp* AccessPoints_AccessPoint_System::mutable_ntp() {
  
  if (ntp_ == NULL) {
    ntp_ = new ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Ntp;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.ntp)
  return ntp_;
}
inline void AccessPoints_AccessPoint_System::set_allocated_ntp(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Ntp* ntp) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete ntp_;
  }
  if (ntp) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      ntp = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, ntp, submessage_arena);
    }
    
  } else {
    
  }
  ntp_ = ntp;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.ntp)
}

// .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.Processes processes = 376522710 [(.yext.schemapath) = "/access-points/access-point/system/processes"];
inline bool AccessPoints_AccessPoint_System::has_processes() const {
  return this != internal_default_instance() && processes_ != NULL;
}
inline void AccessPoints_AccessPoint_System::clear_processes() {
  if (GetArenaNoVirtual() == NULL && processes_ != NULL) {
    delete processes_;
  }
  processes_ = NULL;
}
inline const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Processes& AccessPoints_AccessPoint_System::processes() const {
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Processes* p = processes_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.processes)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Processes*>(
      &::openconfig::openconfig_access_points::_AccessPoints_AccessPoint_System_Processes_default_instance_);
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Processes* AccessPoints_AccessPoint_System::release_processes() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.processes)
  
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Processes* temp = processes_;
  processes_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Processes* AccessPoints_AccessPoint_System::mutable_processes() {
  
  if (processes_ == NULL) {
    processes_ = new ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Processes;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.processes)
  return processes_;
}
inline void AccessPoints_AccessPoint_System::set_allocated_processes(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Processes* processes) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete processes_;
  }
  if (processes) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      processes = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, processes, submessage_arena);
    }
    
  } else {
    
  }
  processes_ = processes;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.processes)
}

// .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.SshServer ssh_server = 92192453 [(.yext.schemapath) = "/access-points/access-point/system/ssh-server"];
inline bool AccessPoints_AccessPoint_System::has_ssh_server() const {
  return this != internal_default_instance() && ssh_server_ != NULL;
}
inline void AccessPoints_AccessPoint_System::clear_ssh_server() {
  if (GetArenaNoVirtual() == NULL && ssh_server_ != NULL) {
    delete ssh_server_;
  }
  ssh_server_ = NULL;
}
inline const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_SshServer& AccessPoints_AccessPoint_System::ssh_server() const {
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_SshServer* p = ssh_server_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.ssh_server)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_SshServer*>(
      &::openconfig::openconfig_access_points::_AccessPoints_AccessPoint_System_SshServer_default_instance_);
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_SshServer* AccessPoints_AccessPoint_System::release_ssh_server() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.ssh_server)
  
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_SshServer* temp = ssh_server_;
  ssh_server_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_SshServer* AccessPoints_AccessPoint_System::mutable_ssh_server() {
  
  if (ssh_server_ == NULL) {
    ssh_server_ = new ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_SshServer;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.ssh_server)
  return ssh_server_;
}
inline void AccessPoints_AccessPoint_System::set_allocated_ssh_server(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_SshServer* ssh_server) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete ssh_server_;
  }
  if (ssh_server) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      ssh_server = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, ssh_server, submessage_arena);
    }
    
  } else {
    
  }
  ssh_server_ = ssh_server;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.ssh_server)
}

// .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.State state = 84065178 [(.yext.schemapath) = "/access-points/access-point/system/state"];
inline bool AccessPoints_AccessPoint_System::has_state() const {
  return this != internal_default_instance() && state_ != NULL;
}
inline void AccessPoints_AccessPoint_System::clear_state() {
  if (GetArenaNoVirtual() == NULL && state_ != NULL) {
    delete state_;
  }
  state_ = NULL;
}
inline const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_State& AccessPoints_AccessPoint_System::state() const {
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_State* p = state_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.state)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_State*>(
      &::openconfig::openconfig_access_points::_AccessPoints_AccessPoint_System_State_default_instance_);
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_State* AccessPoints_AccessPoint_System::release_state() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.state)
  
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_State* temp = state_;
  state_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_State* AccessPoints_AccessPoint_System::mutable_state() {
  
  if (state_ == NULL) {
    state_ = new ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_State;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.state)
  return state_;
}
inline void AccessPoints_AccessPoint_System::set_allocated_state(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_State* state) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete state_;
  }
  if (state) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      state = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, state, submessage_arena);
    }
    
  } else {
    
  }
  state_ = state;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.state)
}

// .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.TelnetServer telnet_server = 151243057 [(.yext.schemapath) = "/access-points/access-point/system/telnet-server"];
inline bool AccessPoints_AccessPoint_System::has_telnet_server() const {
  return this != internal_default_instance() && telnet_server_ != NULL;
}
inline void AccessPoints_AccessPoint_System::clear_telnet_server() {
  if (GetArenaNoVirtual() == NULL && telnet_server_ != NULL) {
    delete telnet_server_;
  }
  telnet_server_ = NULL;
}
inline const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_TelnetServer& AccessPoints_AccessPoint_System::telnet_server() const {
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_TelnetServer* p = telnet_server_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.telnet_server)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_TelnetServer*>(
      &::openconfig::openconfig_access_points::_AccessPoints_AccessPoint_System_TelnetServer_default_instance_);
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_TelnetServer* AccessPoints_AccessPoint_System::release_telnet_server() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.telnet_server)
  
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_TelnetServer* temp = telnet_server_;
  telnet_server_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_TelnetServer* AccessPoints_AccessPoint_System::mutable_telnet_server() {
  
  if (telnet_server_ == NULL) {
    telnet_server_ = new ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_TelnetServer;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.telnet_server)
  return telnet_server_;
}
inline void AccessPoints_AccessPoint_System::set_allocated_telnet_server(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_TelnetServer* telnet_server) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete telnet_server_;
  }
  if (telnet_server) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      telnet_server = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, telnet_server, submessage_arena);
    }
    
  } else {
    
  }
  telnet_server_ = telnet_server;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.System.telnet_server)
}

// -------------------------------------------------------------------

// AccessPoints_AccessPoint

// .openconfig.openconfig_access_points.AccessPoints.AccessPoint.AssignedApManagers assigned_ap_managers = 478163348 [(.yext.schemapath) = "/access-points/access-point/assigned-ap-managers"];
inline bool AccessPoints_AccessPoint::has_assigned_ap_managers() const {
  return this != internal_default_instance() && assigned_ap_managers_ != NULL;
}
inline void AccessPoints_AccessPoint::clear_assigned_ap_managers() {
  if (GetArenaNoVirtual() == NULL && assigned_ap_managers_ != NULL) {
    delete assigned_ap_managers_;
  }
  assigned_ap_managers_ = NULL;
}
inline const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_AssignedApManagers& AccessPoints_AccessPoint::assigned_ap_managers() const {
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_AssignedApManagers* p = assigned_ap_managers_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.assigned_ap_managers)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_AssignedApManagers*>(
      &::openconfig::openconfig_access_points::_AccessPoints_AccessPoint_AssignedApManagers_default_instance_);
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_AssignedApManagers* AccessPoints_AccessPoint::release_assigned_ap_managers() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.assigned_ap_managers)
  
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_AssignedApManagers* temp = assigned_ap_managers_;
  assigned_ap_managers_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_AssignedApManagers* AccessPoints_AccessPoint::mutable_assigned_ap_managers() {
  
  if (assigned_ap_managers_ == NULL) {
    assigned_ap_managers_ = new ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_AssignedApManagers;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.assigned_ap_managers)
  return assigned_ap_managers_;
}
inline void AccessPoints_AccessPoint::set_allocated_assigned_ap_managers(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_AssignedApManagers* assigned_ap_managers) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete assigned_ap_managers_;
  }
  if (assigned_ap_managers) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      assigned_ap_managers = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, assigned_ap_managers, submessage_arena);
    }
    
  } else {
    
  }
  assigned_ap_managers_ = assigned_ap_managers;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.assigned_ap_managers)
}

// .openconfig.openconfig_access_points.AccessPoints.AccessPoint.Bssids bssids = 241067193 [(.yext.schemapath) = "/access-points/access-point/bssids"];
inline bool AccessPoints_AccessPoint::has_bssids() const {
  return this != internal_default_instance() && bssids_ != NULL;
}
inline void AccessPoints_AccessPoint::clear_bssids() {
  if (GetArenaNoVirtual() == NULL && bssids_ != NULL) {
    delete bssids_;
  }
  bssids_ = NULL;
}
inline const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Bssids& AccessPoints_AccessPoint::bssids() const {
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Bssids* p = bssids_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.bssids)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Bssids*>(
      &::openconfig::openconfig_access_points::_AccessPoints_AccessPoint_Bssids_default_instance_);
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Bssids* AccessPoints_AccessPoint::release_bssids() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.bssids)
  
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Bssids* temp = bssids_;
  bssids_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Bssids* AccessPoints_AccessPoint::mutable_bssids() {
  
  if (bssids_ == NULL) {
    bssids_ = new ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Bssids;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.bssids)
  return bssids_;
}
inline void AccessPoints_AccessPoint::set_allocated_bssids(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Bssids* bssids) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete bssids_;
  }
  if (bssids) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      bssids = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, bssids, submessage_arena);
    }
    
  } else {
    
  }
  bssids_ = bssids;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.bssids)
}

// .openconfig.openconfig_access_points.AccessPoints.AccessPoint.Radios radios = 276746939 [(.yext.schemapath) = "/access-points/access-point/radios"];
inline bool AccessPoints_AccessPoint::has_radios() const {
  return this != internal_default_instance() && radios_ != NULL;
}
inline void AccessPoints_AccessPoint::clear_radios() {
  if (GetArenaNoVirtual() == NULL && radios_ != NULL) {
    delete radios_;
  }
  radios_ = NULL;
}
inline const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Radios& AccessPoints_AccessPoint::radios() const {
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Radios* p = radios_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.radios)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Radios*>(
      &::openconfig::openconfig_access_points::_AccessPoints_AccessPoint_Radios_default_instance_);
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Radios* AccessPoints_AccessPoint::release_radios() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.radios)
  
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Radios* temp = radios_;
  radios_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Radios* AccessPoints_AccessPoint::mutable_radios() {
  
  if (radios_ == NULL) {
    radios_ = new ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Radios;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.radios)
  return radios_;
}
inline void AccessPoints_AccessPoint::set_allocated_radios(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Radios* radios) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete radios_;
  }
  if (radios) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      radios = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, radios, submessage_arena);
    }
    
  } else {
    
  }
  radios_ = radios;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.radios)
}

// .openconfig.openconfig_access_points.AccessPoints.AccessPoint.Ssids ssids = 318993297 [(.yext.schemapath) = "/access-points/access-point/ssids"];
inline bool AccessPoints_AccessPoint::has_ssids() const {
  return this != internal_default_instance() && ssids_ != NULL;
}
inline void AccessPoints_AccessPoint::clear_ssids() {
  if (GetArenaNoVirtual() == NULL && ssids_ != NULL) {
    delete ssids_;
  }
  ssids_ = NULL;
}
inline const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids& AccessPoints_AccessPoint::ssids() const {
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids* p = ssids_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.ssids)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids*>(
      &::openconfig::openconfig_access_points::_AccessPoints_AccessPoint_Ssids_default_instance_);
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids* AccessPoints_AccessPoint::release_ssids() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.ssids)
  
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids* temp = ssids_;
  ssids_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids* AccessPoints_AccessPoint::mutable_ssids() {
  
  if (ssids_ == NULL) {
    ssids_ = new ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.ssids)
  return ssids_;
}
inline void AccessPoints_AccessPoint::set_allocated_ssids(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids* ssids) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete ssids_;
  }
  if (ssids) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      ssids = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, ssids, submessage_arena);
    }
    
  } else {
    
  }
  ssids_ = ssids;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.ssids)
}

// .openconfig.openconfig_access_points.AccessPoints.AccessPoint.System system = 118923792 [(.yext.schemapath) = "/access-points/access-point/system"];
inline bool AccessPoints_AccessPoint::has_system() const {
  return this != internal_default_instance() && system_ != NULL;
}
inline void AccessPoints_AccessPoint::clear_system() {
  if (GetArenaNoVirtual() == NULL && system_ != NULL) {
    delete system_;
  }
  system_ = NULL;
}
inline const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System& AccessPoints_AccessPoint::system() const {
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System* p = system_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPoint.system)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System*>(
      &::openconfig::openconfig_access_points::_AccessPoints_AccessPoint_System_default_instance_);
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System* AccessPoints_AccessPoint::release_system() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPoint.system)
  
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System* temp = system_;
  system_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System* AccessPoints_AccessPoint::mutable_system() {
  
  if (system_ == NULL) {
    system_ = new ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPoint.system)
  return system_;
}
inline void AccessPoints_AccessPoint::set_allocated_system(::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System* system) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete system_;
  }
  if (system) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      system = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, system, submessage_arena);
    }
    
  } else {
    
  }
  system_ = system;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPoint.system)
}

// -------------------------------------------------------------------

// AccessPoints_AccessPointKey

// string hostname = 1 [(.yext.schemapath) = "/access-points/access-point/hostname"];
inline void AccessPoints_AccessPointKey::clear_hostname() {
  hostname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AccessPoints_AccessPointKey::hostname() const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPointKey.hostname)
  return hostname_.GetNoArena();
}
inline void AccessPoints_AccessPointKey::set_hostname(const ::std::string& value) {
  
  hostname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:openconfig.openconfig_access_points.AccessPoints.AccessPointKey.hostname)
}
#if LANG_CXX11
inline void AccessPoints_AccessPointKey::set_hostname(::std::string&& value) {
  
  hostname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:openconfig.openconfig_access_points.AccessPoints.AccessPointKey.hostname)
}
#endif
inline void AccessPoints_AccessPointKey::set_hostname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  hostname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:openconfig.openconfig_access_points.AccessPoints.AccessPointKey.hostname)
}
inline void AccessPoints_AccessPointKey::set_hostname(const char* value, size_t size) {
  
  hostname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:openconfig.openconfig_access_points.AccessPoints.AccessPointKey.hostname)
}
inline ::std::string* AccessPoints_AccessPointKey::mutable_hostname() {
  
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPointKey.hostname)
  return hostname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AccessPoints_AccessPointKey::release_hostname() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPointKey.hostname)
  
  return hostname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AccessPoints_AccessPointKey::set_allocated_hostname(::std::string* hostname) {
  if (hostname != NULL) {
    
  } else {
    
  }
  hostname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), hostname);
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPointKey.hostname)
}

// .openconfig.openconfig_access_points.AccessPoints.AccessPoint access_point = 2;
inline bool AccessPoints_AccessPointKey::has_access_point() const {
  return this != internal_default_instance() && access_point_ != NULL;
}
inline void AccessPoints_AccessPointKey::clear_access_point() {
  if (GetArenaNoVirtual() == NULL && access_point_ != NULL) {
    delete access_point_;
  }
  access_point_ = NULL;
}
inline const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint& AccessPoints_AccessPointKey::access_point() const {
  const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint* p = access_point_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.AccessPointKey.access_point)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_access_points::AccessPoints_AccessPoint*>(
      &::openconfig::openconfig_access_points::_AccessPoints_AccessPoint_default_instance_);
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint* AccessPoints_AccessPointKey::release_access_point() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_access_points.AccessPoints.AccessPointKey.access_point)
  
  ::openconfig::openconfig_access_points::AccessPoints_AccessPoint* temp = access_point_;
  access_point_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPoint* AccessPoints_AccessPointKey::mutable_access_point() {
  
  if (access_point_ == NULL) {
    access_point_ = new ::openconfig::openconfig_access_points::AccessPoints_AccessPoint;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.AccessPointKey.access_point)
  return access_point_;
}
inline void AccessPoints_AccessPointKey::set_allocated_access_point(::openconfig::openconfig_access_points::AccessPoints_AccessPoint* access_point) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete access_point_;
  }
  if (access_point) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      access_point = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, access_point, submessage_arena);
    }
    
  } else {
    
  }
  access_point_ = access_point;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_access_points.AccessPoints.AccessPointKey.access_point)
}

// -------------------------------------------------------------------

// AccessPoints

// repeated .openconfig.openconfig_access_points.AccessPoints.AccessPointKey access_point = 107793100 [(.yext.schemapath) = "/access-points/access-point"];
inline int AccessPoints::access_point_size() const {
  return access_point_.size();
}
inline void AccessPoints::clear_access_point() {
  access_point_.Clear();
}
inline const ::openconfig::openconfig_access_points::AccessPoints_AccessPointKey& AccessPoints::access_point(int index) const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_access_points.AccessPoints.access_point)
  return access_point_.Get(index);
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPointKey* AccessPoints::mutable_access_point(int index) {
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_access_points.AccessPoints.access_point)
  return access_point_.Mutable(index);
}
inline ::openconfig::openconfig_access_points::AccessPoints_AccessPointKey* AccessPoints::add_access_point() {
  // @@protoc_insertion_point(field_add:openconfig.openconfig_access_points.AccessPoints.access_point)
  return access_point_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_access_points::AccessPoints_AccessPointKey >*
AccessPoints::mutable_access_point() {
  // @@protoc_insertion_point(field_mutable_list:openconfig.openconfig_access_points.AccessPoints.access_point)
  return &access_point_;
}
inline const ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_access_points::AccessPoints_AccessPointKey >&
AccessPoints::access_point() const {
  // @@protoc_insertion_point(field_list:openconfig.openconfig_access_points.AccessPoints.access_point)
  return access_point_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace openconfig_access_points
}  // namespace openconfig

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientRf_State_ConnectionMode> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientRf_State_ConnectionMode>() {
  return ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Clients_Client_ClientRf_State_ConnectionMode_descriptor();
}
template <> struct is_proto_enum< ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Config_Opmode> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Config_Opmode>() {
  return ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Config_Opmode_descriptor();
}
template <> struct is_proto_enum< ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Dot11R_Config_Dot11RMethod> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Dot11R_Config_Dot11RMethod>() {
  return ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Dot11R_Config_Dot11RMethod_descriptor();
}
template <> struct is_proto_enum< ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Dot11R_State_Dot11RMethod> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Dot11R_State_Dot11RMethod>() {
  return ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_Dot11R_State_Dot11RMethod_descriptor();
}
template <> struct is_proto_enum< ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_State_Opmode> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_State_Opmode>() {
  return ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_Ssids_Ssid_State_Opmode_descriptor();
}
template <> struct is_proto_enum< ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event_Config_Record> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event_Config_Record>() {
  return ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event_Config_Record_descriptor();
}
template <> struct is_proto_enum< ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event_State_Record> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event_State_Record>() {
  return ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Aaa_Accounting_Events_Event_State_Record_descriptor();
}
template <> struct is_proto_enum< ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Cpus_Cpu_State_Index> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Cpus_Cpu_State_Index>() {
  return ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Cpus_Cpu_State_Index_descriptor();
}
template <> struct is_proto_enum< ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Cpus_CpuKey_Index> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Cpus_CpuKey_Index>() {
  return ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Cpus_CpuKey_Index_descriptor();
}
template <> struct is_proto_enum< ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Ntp_Servers_Server_Config_AssociationType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Ntp_Servers_Server_Config_AssociationType>() {
  return ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Ntp_Servers_Server_Config_AssociationType_descriptor();
}
template <> struct is_proto_enum< ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Ntp_Servers_Server_State_AssociationType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Ntp_Servers_Server_State_AssociationType>() {
  return ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_Ntp_Servers_Server_State_AssociationType_descriptor();
}
template <> struct is_proto_enum< ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_SshServer_Config_ProtocolVersion> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_SshServer_Config_ProtocolVersion>() {
  return ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_SshServer_Config_ProtocolVersion_descriptor();
}
template <> struct is_proto_enum< ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_SshServer_State_ProtocolVersion> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_SshServer_State_ProtocolVersion>() {
  return ::openconfig::openconfig_access_points::AccessPoints_AccessPoint_System_SshServer_State_ProtocolVersion_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_openconfig_2fopenconfig_5faccess_5fpoints_2fopenconfig_5faccess_5fpoints_2eproto__INCLUDED
