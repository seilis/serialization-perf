// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: openconfig/openconfig_wavelength_router/openconfig_wavelength_router.proto

#include "openconfig/openconfig_wavelength_router/openconfig_wavelength_router.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace openconfig {
namespace openconfig_wavelength_router {
class WavelengthRouter_MediaChannels_Channel_ConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<WavelengthRouter_MediaChannels_Channel_Config>
      _instance;
} _WavelengthRouter_MediaChannels_Channel_Config_default_instance_;
class WavelengthRouter_MediaChannels_Channel_Dest_ConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<WavelengthRouter_MediaChannels_Channel_Dest_Config>
      _instance;
} _WavelengthRouter_MediaChannels_Channel_Dest_Config_default_instance_;
class WavelengthRouter_MediaChannels_Channel_Dest_StateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<WavelengthRouter_MediaChannels_Channel_Dest_State>
      _instance;
} _WavelengthRouter_MediaChannels_Channel_Dest_State_default_instance_;
class WavelengthRouter_MediaChannels_Channel_DestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<WavelengthRouter_MediaChannels_Channel_Dest>
      _instance;
} _WavelengthRouter_MediaChannels_Channel_Dest_default_instance_;
class WavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValue_ConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<WavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValue_Config>
      _instance;
} _WavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValue_Config_default_instance_;
class WavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValue_StateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<WavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValue_State>
      _instance;
} _WavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValue_State_default_instance_;
class WavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValueDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<WavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValue>
      _instance;
} _WavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValue_default_instance_;
class WavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValueKeyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<WavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValueKey>
      _instance;
} _WavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValueKey_default_instance_;
class WavelengthRouter_MediaChannels_Channel_PsdDistributionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<WavelengthRouter_MediaChannels_Channel_PsdDistribution>
      _instance;
} _WavelengthRouter_MediaChannels_Channel_PsdDistribution_default_instance_;
class WavelengthRouter_MediaChannels_Channel_Source_ConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<WavelengthRouter_MediaChannels_Channel_Source_Config>
      _instance;
} _WavelengthRouter_MediaChannels_Channel_Source_Config_default_instance_;
class WavelengthRouter_MediaChannels_Channel_Source_StateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<WavelengthRouter_MediaChannels_Channel_Source_State>
      _instance;
} _WavelengthRouter_MediaChannels_Channel_Source_State_default_instance_;
class WavelengthRouter_MediaChannels_Channel_SourceDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<WavelengthRouter_MediaChannels_Channel_Source>
      _instance;
} _WavelengthRouter_MediaChannels_Channel_Source_default_instance_;
class WavelengthRouter_MediaChannels_Channel_StateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<WavelengthRouter_MediaChannels_Channel_State>
      _instance;
} _WavelengthRouter_MediaChannels_Channel_State_default_instance_;
class WavelengthRouter_MediaChannels_ChannelDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<WavelengthRouter_MediaChannels_Channel>
      _instance;
} _WavelengthRouter_MediaChannels_Channel_default_instance_;
class WavelengthRouter_MediaChannels_ChannelKeyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<WavelengthRouter_MediaChannels_ChannelKey>
      _instance;
} _WavelengthRouter_MediaChannels_ChannelKey_default_instance_;
class WavelengthRouter_MediaChannelsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<WavelengthRouter_MediaChannels>
      _instance;
} _WavelengthRouter_MediaChannels_default_instance_;
class WavelengthRouterDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<WavelengthRouter>
      _instance;
} _WavelengthRouter_default_instance_;
}  // namespace openconfig_wavelength_router
}  // namespace openconfig
namespace protobuf_openconfig_2fopenconfig_5fwavelength_5frouter_2fopenconfig_5fwavelength_5frouter_2eproto {
void InitDefaultsWavelengthRouter_MediaChannels_Channel_ConfigImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsUintValue();
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsStringValue();
  {
    void* ptr = &::openconfig::openconfig_wavelength_router::_WavelengthRouter_MediaChannels_Channel_Config_default_instance_;
    new (ptr) ::openconfig::openconfig_wavelength_router::WavelengthRouter_MediaChannels_Channel_Config();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_wavelength_router::WavelengthRouter_MediaChannels_Channel_Config::InitAsDefaultInstance();
}

void InitDefaultsWavelengthRouter_MediaChannels_Channel_Config() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsWavelengthRouter_MediaChannels_Channel_ConfigImpl);
}

void InitDefaultsWavelengthRouter_MediaChannels_Channel_Dest_ConfigImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsStringValue();
  {
    void* ptr = &::openconfig::openconfig_wavelength_router::_WavelengthRouter_MediaChannels_Channel_Dest_Config_default_instance_;
    new (ptr) ::openconfig::openconfig_wavelength_router::WavelengthRouter_MediaChannels_Channel_Dest_Config();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_wavelength_router::WavelengthRouter_MediaChannels_Channel_Dest_Config::InitAsDefaultInstance();
}

void InitDefaultsWavelengthRouter_MediaChannels_Channel_Dest_Config() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsWavelengthRouter_MediaChannels_Channel_Dest_ConfigImpl);
}

void InitDefaultsWavelengthRouter_MediaChannels_Channel_Dest_StateImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsStringValue();
  {
    void* ptr = &::openconfig::openconfig_wavelength_router::_WavelengthRouter_MediaChannels_Channel_Dest_State_default_instance_;
    new (ptr) ::openconfig::openconfig_wavelength_router::WavelengthRouter_MediaChannels_Channel_Dest_State();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_wavelength_router::WavelengthRouter_MediaChannels_Channel_Dest_State::InitAsDefaultInstance();
}

void InitDefaultsWavelengthRouter_MediaChannels_Channel_Dest_State() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsWavelengthRouter_MediaChannels_Channel_Dest_StateImpl);
}

void InitDefaultsWavelengthRouter_MediaChannels_Channel_DestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_openconfig_2fopenconfig_5fwavelength_5frouter_2fopenconfig_5fwavelength_5frouter_2eproto::InitDefaultsWavelengthRouter_MediaChannels_Channel_Dest_Config();
  protobuf_openconfig_2fopenconfig_5fwavelength_5frouter_2fopenconfig_5fwavelength_5frouter_2eproto::InitDefaultsWavelengthRouter_MediaChannels_Channel_Dest_State();
  {
    void* ptr = &::openconfig::openconfig_wavelength_router::_WavelengthRouter_MediaChannels_Channel_Dest_default_instance_;
    new (ptr) ::openconfig::openconfig_wavelength_router::WavelengthRouter_MediaChannels_Channel_Dest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_wavelength_router::WavelengthRouter_MediaChannels_Channel_Dest::InitAsDefaultInstance();
}

void InitDefaultsWavelengthRouter_MediaChannels_Channel_Dest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsWavelengthRouter_MediaChannels_Channel_DestImpl);
}

void InitDefaultsWavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValue_ConfigImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsUintValue();
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsBytesValue();
  {
    void* ptr = &::openconfig::openconfig_wavelength_router::_WavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValue_Config_default_instance_;
    new (ptr) ::openconfig::openconfig_wavelength_router::WavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValue_Config();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_wavelength_router::WavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValue_Config::InitAsDefaultInstance();
}

void InitDefaultsWavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValue_Config() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsWavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValue_ConfigImpl);
}

void InitDefaultsWavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValue_StateImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsUintValue();
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsBytesValue();
  {
    void* ptr = &::openconfig::openconfig_wavelength_router::_WavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValue_State_default_instance_;
    new (ptr) ::openconfig::openconfig_wavelength_router::WavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValue_State();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_wavelength_router::WavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValue_State::InitAsDefaultInstance();
}

void InitDefaultsWavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValue_State() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsWavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValue_StateImpl);
}

void InitDefaultsWavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValueImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_openconfig_2fopenconfig_5fwavelength_5frouter_2fopenconfig_5fwavelength_5frouter_2eproto::InitDefaultsWavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValue_Config();
  protobuf_openconfig_2fopenconfig_5fwavelength_5frouter_2fopenconfig_5fwavelength_5frouter_2eproto::InitDefaultsWavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValue_State();
  {
    void* ptr = &::openconfig::openconfig_wavelength_router::_WavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValue_default_instance_;
    new (ptr) ::openconfig::openconfig_wavelength_router::WavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValue();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_wavelength_router::WavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValue::InitAsDefaultInstance();
}

void InitDefaultsWavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValue() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsWavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValueImpl);
}

void InitDefaultsWavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValueKeyImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_openconfig_2fopenconfig_5fwavelength_5frouter_2fopenconfig_5fwavelength_5frouter_2eproto::InitDefaultsWavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValue();
  {
    void* ptr = &::openconfig::openconfig_wavelength_router::_WavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValueKey_default_instance_;
    new (ptr) ::openconfig::openconfig_wavelength_router::WavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValueKey();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_wavelength_router::WavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValueKey::InitAsDefaultInstance();
}

void InitDefaultsWavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValueKey() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsWavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValueKeyImpl);
}

void InitDefaultsWavelengthRouter_MediaChannels_Channel_PsdDistributionImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_openconfig_2fopenconfig_5fwavelength_5frouter_2fopenconfig_5fwavelength_5frouter_2eproto::InitDefaultsWavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValueKey();
  {
    void* ptr = &::openconfig::openconfig_wavelength_router::_WavelengthRouter_MediaChannels_Channel_PsdDistribution_default_instance_;
    new (ptr) ::openconfig::openconfig_wavelength_router::WavelengthRouter_MediaChannels_Channel_PsdDistribution();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_wavelength_router::WavelengthRouter_MediaChannels_Channel_PsdDistribution::InitAsDefaultInstance();
}

void InitDefaultsWavelengthRouter_MediaChannels_Channel_PsdDistribution() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsWavelengthRouter_MediaChannels_Channel_PsdDistributionImpl);
}

void InitDefaultsWavelengthRouter_MediaChannels_Channel_Source_ConfigImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsStringValue();
  {
    void* ptr = &::openconfig::openconfig_wavelength_router::_WavelengthRouter_MediaChannels_Channel_Source_Config_default_instance_;
    new (ptr) ::openconfig::openconfig_wavelength_router::WavelengthRouter_MediaChannels_Channel_Source_Config();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_wavelength_router::WavelengthRouter_MediaChannels_Channel_Source_Config::InitAsDefaultInstance();
}

void InitDefaultsWavelengthRouter_MediaChannels_Channel_Source_Config() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsWavelengthRouter_MediaChannels_Channel_Source_ConfigImpl);
}

void InitDefaultsWavelengthRouter_MediaChannels_Channel_Source_StateImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsStringValue();
  {
    void* ptr = &::openconfig::openconfig_wavelength_router::_WavelengthRouter_MediaChannels_Channel_Source_State_default_instance_;
    new (ptr) ::openconfig::openconfig_wavelength_router::WavelengthRouter_MediaChannels_Channel_Source_State();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_wavelength_router::WavelengthRouter_MediaChannels_Channel_Source_State::InitAsDefaultInstance();
}

void InitDefaultsWavelengthRouter_MediaChannels_Channel_Source_State() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsWavelengthRouter_MediaChannels_Channel_Source_StateImpl);
}

void InitDefaultsWavelengthRouter_MediaChannels_Channel_SourceImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_openconfig_2fopenconfig_5fwavelength_5frouter_2fopenconfig_5fwavelength_5frouter_2eproto::InitDefaultsWavelengthRouter_MediaChannels_Channel_Source_Config();
  protobuf_openconfig_2fopenconfig_5fwavelength_5frouter_2fopenconfig_5fwavelength_5frouter_2eproto::InitDefaultsWavelengthRouter_MediaChannels_Channel_Source_State();
  {
    void* ptr = &::openconfig::openconfig_wavelength_router::_WavelengthRouter_MediaChannels_Channel_Source_default_instance_;
    new (ptr) ::openconfig::openconfig_wavelength_router::WavelengthRouter_MediaChannels_Channel_Source();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_wavelength_router::WavelengthRouter_MediaChannels_Channel_Source::InitAsDefaultInstance();
}

void InitDefaultsWavelengthRouter_MediaChannels_Channel_Source() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsWavelengthRouter_MediaChannels_Channel_SourceImpl);
}

void InitDefaultsWavelengthRouter_MediaChannels_Channel_StateImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsUintValue();
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsStringValue();
  {
    void* ptr = &::openconfig::openconfig_wavelength_router::_WavelengthRouter_MediaChannels_Channel_State_default_instance_;
    new (ptr) ::openconfig::openconfig_wavelength_router::WavelengthRouter_MediaChannels_Channel_State();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_wavelength_router::WavelengthRouter_MediaChannels_Channel_State::InitAsDefaultInstance();
}

void InitDefaultsWavelengthRouter_MediaChannels_Channel_State() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsWavelengthRouter_MediaChannels_Channel_StateImpl);
}

void InitDefaultsWavelengthRouter_MediaChannels_ChannelImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_openconfig_2fopenconfig_5fwavelength_5frouter_2fopenconfig_5fwavelength_5frouter_2eproto::InitDefaultsWavelengthRouter_MediaChannels_Channel_Config();
  protobuf_openconfig_2fopenconfig_5fwavelength_5frouter_2fopenconfig_5fwavelength_5frouter_2eproto::InitDefaultsWavelengthRouter_MediaChannels_Channel_Dest();
  protobuf_openconfig_2fopenconfig_5fwavelength_5frouter_2fopenconfig_5fwavelength_5frouter_2eproto::InitDefaultsWavelengthRouter_MediaChannels_Channel_PsdDistribution();
  protobuf_openconfig_2fopenconfig_5fwavelength_5frouter_2fopenconfig_5fwavelength_5frouter_2eproto::InitDefaultsWavelengthRouter_MediaChannels_Channel_Source();
  protobuf_openconfig_2fopenconfig_5fwavelength_5frouter_2fopenconfig_5fwavelength_5frouter_2eproto::InitDefaultsWavelengthRouter_MediaChannels_Channel_State();
  {
    void* ptr = &::openconfig::openconfig_wavelength_router::_WavelengthRouter_MediaChannels_Channel_default_instance_;
    new (ptr) ::openconfig::openconfig_wavelength_router::WavelengthRouter_MediaChannels_Channel();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_wavelength_router::WavelengthRouter_MediaChannels_Channel::InitAsDefaultInstance();
}

void InitDefaultsWavelengthRouter_MediaChannels_Channel() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsWavelengthRouter_MediaChannels_ChannelImpl);
}

void InitDefaultsWavelengthRouter_MediaChannels_ChannelKeyImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_openconfig_2fopenconfig_5fwavelength_5frouter_2fopenconfig_5fwavelength_5frouter_2eproto::InitDefaultsWavelengthRouter_MediaChannels_Channel();
  {
    void* ptr = &::openconfig::openconfig_wavelength_router::_WavelengthRouter_MediaChannels_ChannelKey_default_instance_;
    new (ptr) ::openconfig::openconfig_wavelength_router::WavelengthRouter_MediaChannels_ChannelKey();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_wavelength_router::WavelengthRouter_MediaChannels_ChannelKey::InitAsDefaultInstance();
}

void InitDefaultsWavelengthRouter_MediaChannels_ChannelKey() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsWavelengthRouter_MediaChannels_ChannelKeyImpl);
}

void InitDefaultsWavelengthRouter_MediaChannelsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_openconfig_2fopenconfig_5fwavelength_5frouter_2fopenconfig_5fwavelength_5frouter_2eproto::InitDefaultsWavelengthRouter_MediaChannels_ChannelKey();
  {
    void* ptr = &::openconfig::openconfig_wavelength_router::_WavelengthRouter_MediaChannels_default_instance_;
    new (ptr) ::openconfig::openconfig_wavelength_router::WavelengthRouter_MediaChannels();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_wavelength_router::WavelengthRouter_MediaChannels::InitAsDefaultInstance();
}

void InitDefaultsWavelengthRouter_MediaChannels() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsWavelengthRouter_MediaChannelsImpl);
}

void InitDefaultsWavelengthRouterImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_openconfig_2fopenconfig_5fwavelength_5frouter_2fopenconfig_5fwavelength_5frouter_2eproto::InitDefaultsWavelengthRouter_MediaChannels();
  {
    void* ptr = &::openconfig::openconfig_wavelength_router::_WavelengthRouter_default_instance_;
    new (ptr) ::openconfig::openconfig_wavelength_router::WavelengthRouter();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_wavelength_router::WavelengthRouter::InitAsDefaultInstance();
}

void InitDefaultsWavelengthRouter() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsWavelengthRouterImpl);
}

::google::protobuf::Metadata file_level_metadata[17];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_wavelength_router::WavelengthRouter_MediaChannels_Channel_Config, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_wavelength_router::WavelengthRouter_MediaChannels_Channel_Config, admin_status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_wavelength_router::WavelengthRouter_MediaChannels_Channel_Config, index_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_wavelength_router::WavelengthRouter_MediaChannels_Channel_Config, lower_frequency_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_wavelength_router::WavelengthRouter_MediaChannels_Channel_Config, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_wavelength_router::WavelengthRouter_MediaChannels_Channel_Config, upper_frequency_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_wavelength_router::WavelengthRouter_MediaChannels_Channel_Dest_Config, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_wavelength_router::WavelengthRouter_MediaChannels_Channel_Dest_Config, port_name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_wavelength_router::WavelengthRouter_MediaChannels_Channel_Dest_State, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_wavelength_router::WavelengthRouter_MediaChannels_Channel_Dest_State, port_name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_wavelength_router::WavelengthRouter_MediaChannels_Channel_Dest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_wavelength_router::WavelengthRouter_MediaChannels_Channel_Dest, config_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_wavelength_router::WavelengthRouter_MediaChannels_Channel_Dest, state_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_wavelength_router::WavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValue_Config, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_wavelength_router::WavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValue_Config, lower_frequency_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_wavelength_router::WavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValue_Config, psd_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_wavelength_router::WavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValue_Config, upper_frequency_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_wavelength_router::WavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValue_State, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_wavelength_router::WavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValue_State, lower_frequency_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_wavelength_router::WavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValue_State, psd_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_wavelength_router::WavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValue_State, upper_frequency_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_wavelength_router::WavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValue, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_wavelength_router::WavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValue, config_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_wavelength_router::WavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValue, state_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_wavelength_router::WavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValueKey, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_wavelength_router::WavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValueKey, lower_frequency_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_wavelength_router::WavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValueKey, upper_frequency_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_wavelength_router::WavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValueKey, psd_value_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_wavelength_router::WavelengthRouter_MediaChannels_Channel_PsdDistribution, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_wavelength_router::WavelengthRouter_MediaChannels_Channel_PsdDistribution, psd_value_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_wavelength_router::WavelengthRouter_MediaChannels_Channel_Source_Config, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_wavelength_router::WavelengthRouter_MediaChannels_Channel_Source_Config, port_name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_wavelength_router::WavelengthRouter_MediaChannels_Channel_Source_State, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_wavelength_router::WavelengthRouter_MediaChannels_Channel_Source_State, port_name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_wavelength_router::WavelengthRouter_MediaChannels_Channel_Source, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_wavelength_router::WavelengthRouter_MediaChannels_Channel_Source, config_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_wavelength_router::WavelengthRouter_MediaChannels_Channel_Source, state_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_wavelength_router::WavelengthRouter_MediaChannels_Channel_State, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_wavelength_router::WavelengthRouter_MediaChannels_Channel_State, admin_status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_wavelength_router::WavelengthRouter_MediaChannels_Channel_State, index_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_wavelength_router::WavelengthRouter_MediaChannels_Channel_State, lower_frequency_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_wavelength_router::WavelengthRouter_MediaChannels_Channel_State, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_wavelength_router::WavelengthRouter_MediaChannels_Channel_State, oper_status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_wavelength_router::WavelengthRouter_MediaChannels_Channel_State, upper_frequency_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_wavelength_router::WavelengthRouter_MediaChannels_Channel, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_wavelength_router::WavelengthRouter_MediaChannels_Channel, config_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_wavelength_router::WavelengthRouter_MediaChannels_Channel, dest_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_wavelength_router::WavelengthRouter_MediaChannels_Channel, psd_distribution_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_wavelength_router::WavelengthRouter_MediaChannels_Channel, source_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_wavelength_router::WavelengthRouter_MediaChannels_Channel, state_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_wavelength_router::WavelengthRouter_MediaChannels_ChannelKey, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_wavelength_router::WavelengthRouter_MediaChannels_ChannelKey, index_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_wavelength_router::WavelengthRouter_MediaChannels_ChannelKey, channel_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_wavelength_router::WavelengthRouter_MediaChannels, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_wavelength_router::WavelengthRouter_MediaChannels, channel_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_wavelength_router::WavelengthRouter, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_wavelength_router::WavelengthRouter, media_channels_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::openconfig::openconfig_wavelength_router::WavelengthRouter_MediaChannels_Channel_Config)},
  { 10, -1, sizeof(::openconfig::openconfig_wavelength_router::WavelengthRouter_MediaChannels_Channel_Dest_Config)},
  { 16, -1, sizeof(::openconfig::openconfig_wavelength_router::WavelengthRouter_MediaChannels_Channel_Dest_State)},
  { 22, -1, sizeof(::openconfig::openconfig_wavelength_router::WavelengthRouter_MediaChannels_Channel_Dest)},
  { 29, -1, sizeof(::openconfig::openconfig_wavelength_router::WavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValue_Config)},
  { 37, -1, sizeof(::openconfig::openconfig_wavelength_router::WavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValue_State)},
  { 45, -1, sizeof(::openconfig::openconfig_wavelength_router::WavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValue)},
  { 52, -1, sizeof(::openconfig::openconfig_wavelength_router::WavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValueKey)},
  { 60, -1, sizeof(::openconfig::openconfig_wavelength_router::WavelengthRouter_MediaChannels_Channel_PsdDistribution)},
  { 66, -1, sizeof(::openconfig::openconfig_wavelength_router::WavelengthRouter_MediaChannels_Channel_Source_Config)},
  { 72, -1, sizeof(::openconfig::openconfig_wavelength_router::WavelengthRouter_MediaChannels_Channel_Source_State)},
  { 78, -1, sizeof(::openconfig::openconfig_wavelength_router::WavelengthRouter_MediaChannels_Channel_Source)},
  { 85, -1, sizeof(::openconfig::openconfig_wavelength_router::WavelengthRouter_MediaChannels_Channel_State)},
  { 96, -1, sizeof(::openconfig::openconfig_wavelength_router::WavelengthRouter_MediaChannels_Channel)},
  { 106, -1, sizeof(::openconfig::openconfig_wavelength_router::WavelengthRouter_MediaChannels_ChannelKey)},
  { 113, -1, sizeof(::openconfig::openconfig_wavelength_router::WavelengthRouter_MediaChannels)},
  { 119, -1, sizeof(::openconfig::openconfig_wavelength_router::WavelengthRouter)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_wavelength_router::_WavelengthRouter_MediaChannels_Channel_Config_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_wavelength_router::_WavelengthRouter_MediaChannels_Channel_Dest_Config_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_wavelength_router::_WavelengthRouter_MediaChannels_Channel_Dest_State_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_wavelength_router::_WavelengthRouter_MediaChannels_Channel_Dest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_wavelength_router::_WavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValue_Config_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_wavelength_router::_WavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValue_State_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_wavelength_router::_WavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValue_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_wavelength_router::_WavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValueKey_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_wavelength_router::_WavelengthRouter_MediaChannels_Channel_PsdDistribution_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_wavelength_router::_WavelengthRouter_MediaChannels_Channel_Source_Config_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_wavelength_router::_WavelengthRouter_MediaChannels_Channel_Source_State_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_wavelength_router::_WavelengthRouter_MediaChannels_Channel_Source_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_wavelength_router::_WavelengthRouter_MediaChannels_Channel_State_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_wavelength_router::_WavelengthRouter_MediaChannels_Channel_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_wavelength_router::_WavelengthRouter_MediaChannels_ChannelKey_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_wavelength_router::_WavelengthRouter_MediaChannels_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_wavelength_router::_WavelengthRouter_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "openconfig/openconfig_wavelength_router/openconfig_wavelength_router.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 17);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\nJopenconfig/openconfig_wavelength_route"
      "r/openconfig_wavelength_router.proto\022\'op"
      "enconfig.openconfig_wavelength_router\0328g"
      "ithub.com/openconfig/ygot/proto/ywrapper"
      "/ywrapper.proto\0320github.com/openconfig/y"
      "got/proto/yext/yext.proto\032\034openconfig/en"
      "ums/enums.proto\"\213.\n\020WavelengthRouter\022\210\001\n"
      "\016media_channels\030\306\265\346< \001(\0132G.openconfig.op"
      "enconfig_wavelength_router.WavelengthRou"
      "ter.MediaChannelsB$\202A!/wavelength-router"
      "/media-channels\032\353,\n\rMediaChannels\022\225\001\n\007ch"
      "annel\030\322\217\376\377\001 \003(\0132R.openconfig.openconfig_"
      "wavelength_router.WavelengthRouter.Media"
      "Channels.ChannelKeyB,\202A)/wavelength-rout"
      "er/media-channels/channel\032\215*\n\007Channel\022\237\001"
      "\n\006config\030\223\233\271\303\001 \001(\0132V.openconfig.openconf"
      "ig_wavelength_router.WavelengthRouter.Me"
      "diaChannels.Channel.ConfigB3\202A0/waveleng"
      "th-router/media-channels/channel/config\022"
      "\230\001\n\004dest\030\345\324\264E \001(\0132T.openconfig.openconfi"
      "g_wavelength_router.WavelengthRouter.Med"
      "iaChannels.Channel.DestB1\202A./wavelength-"
      "router/media-channels/channel/dest\022\273\001\n\020p"
      "sd_distribution\030\335\367\215\027 \001(\0132_.openconfig.op"
      "enconfig_wavelength_router.WavelengthRou"
      "ter.MediaChannels.Channel.PsdDistributio"
      "nB=\202A:/wavelength-router/media-channels/"
      "channel/psd-distribution\022\236\001\n\006source\030\312\245\310u"
      " \001(\0132V.openconfig.openconfig_wavelength_"
      "router.WavelengthRouter.MediaChannels.Ch"
      "annel.SourceB3\202A0/wavelength-router/medi"
      "a-channels/channel/source\022\234\001\n\005state\030\364\330\354\313"
      "\001 \001(\0132U.openconfig.openconfig_wavelength"
      "_router.WavelengthRouter.MediaChannels.C"
      "hannel.StateB2\202A//wavelength-router/medi"
      "a-channels/channel/state\032\324\004\n\006Config\022\225\001\n\014"
      "admin_status\030\212\320\321F \001(\0162:.openconfig.enums"
      ".OpenconfigWavelengthRouterAdminStateTyp"
      "eB@\202A=/wavelength-router/media-channels/"
      "channel/config/admin-status\022a\n\005index\030\342\362\337"
      "\217\001 \001(\0132\023.ywrapper.UintValueB9\202A6/wavelen"
      "gth-router/media-channels/channel/config"
      "/index\022u\n\017lower_frequency\030\210\262\333\376\001 \001(\0132\023.yw"
      "rapper.UintValueBC\202A@/wavelength-router/"
      "media-channels/channel/config/lower-freq"
      "uency\022a\n\004name\030\303\321\264\247\001 \001(\0132\025.ywrapper.Strin"
      "gValueB8\202A5/wavelength-router/media-chan"
      "nels/channel/config/name\022u\n\017upper_freque"
      "ncy\030\207\340\374\315\001 \001(\0132\023.ywrapper.UintValueBC\202A@/"
      "wavelength-router/media-channels/channel"
      "/config/upper-frequency\032\317\004\n\004Dest\022\251\001\n\006con"
      "fig\030\252\236\260\212\001 \001(\0132[.openconfig.openconfig_wa"
      "velength_router.WavelengthRouter.MediaCh"
      "annels.Channel.Dest.ConfigB8\202A5/waveleng"
      "th-router/media-channels/channel/dest/co"
      "nfig\022\245\001\n\005state\030\307\212\220\005 \001(\0132Z.openconfig.ope"
      "nconfig_wavelength_router.WavelengthRout"
      "er.MediaChannels.Channel.Dest.StateB7\202A4"
      "/wavelength-router/media-channels/channe"
      "l/dest/state\032y\n\006Config\022o\n\tport_name\030\270\205\360\013"
      " \001(\0132\025.ywrapper.StringValueBB\202A\?/wavelen"
      "gth-router/media-channels/channel/dest/c"
      "onfig/port-name\032x\n\005State\022o\n\tport_name\030\255\244"
      "\321\250\001 \001(\0132\025.ywrapper.StringValueBA\202A>/wave"
      "length-router/media-channels/channel/des"
      "t/state/port-name\032\325\016\n\017PsdDistribution\022\313\001"
      "\n\tpsd_value\030\275\325\245\247\001 \003(\0132k.openconfig.openc"
      "onfig_wavelength_router.WavelengthRouter"
      ".MediaChannels.Channel.PsdDistribution.P"
      "sdValueKeyBG\202AD/wavelength-router/media-"
      "channels/channel/psd-distribution/psd-va"
      "lue\032\202\n\n\010PsdValue\022\322\001\n\006config\030\362\373\330C \001(\0132o.o"
      "penconfig.openconfig_wavelength_router.W"
      "avelengthRouter.MediaChannels.Channel.Ps"
      "dDistribution.PsdValue.ConfigBN\202AK/wavel"
      "ength-router/media-channels/channel/psd-"
      "distribution/psd-value/config\022\317\001\n\005state\030"
      "\357\325\223\t \001(\0132n.openconfig.openconfig_wavelen"
      "gth_router.WavelengthRouter.MediaChannel"
      "s.Channel.PsdDistribution.PsdValue.State"
      "BM\202AJ/wavelength-router/media-channels/c"
      "hannel/psd-distribution/psd-value/state\032"
      "\247\003\n\006Config\022\217\001\n\017lower_frequency\030\255\216\2052 \001(\0132"
      "\023.ywrapper.UintValueB^\202A[/wavelength-rou"
      "ter/media-channels/channel/psd-distribut"
      "ion/psd-value/config/lower-frequency\022x\n\003"
      "psd\030\302\333\317\002 \001(\0132\024.ywrapper.BytesValueBR\202AO/"
      "wavelength-router/media-channels/channel"
      "/psd-distribution/psd-value/config/psd\022\220"
      "\001\n\017upper_frequency\030\352\271\201\354\001 \001(\0132\023.ywrapper."
      "UintValueB^\202A[/wavelength-router/media-c"
      "hannels/channel/psd-distribution/psd-val"
      "ue/config/upper-frequency\032\244\003\n\005State\022\216\001\n\017"
      "lower_frequency\030\374\346\272J \001(\0132\023.ywrapper.Uint"
      "ValueB]\202AZ/wavelength-router/media-chann"
      "els/channel/psd-distribution/psd-value/s"
      "tate/lower-frequency\022x\n\003psd\030\227\230\204\301\001 \001(\0132\024."
      "ywrapper.BytesValueBQ\202AN/wavelength-rout"
      "er/media-channels/channel/psd-distributi"
      "on/psd-value/state/psd\022\217\001\n\017upper_frequen"
      "cy\030\253\271\362\234\001 \001(\0132\023.ywrapper.UintValueB]\202AZ/w"
      "avelength-router/media-channels/channel/"
      "psd-distribution/psd-value/state/upper-f"
      "requency\032\356\002\n\013PsdValueKey\022p\n\017lower_freque"
      "ncy\030\001 \001(\004BW\202AT/wavelength-router/media-c"
      "hannels/channel/psd-distribution/psd-val"
      "ue/lower-frequency\022p\n\017upper_frequency\030\002 "
      "\001(\004BW\202AT/wavelength-router/media-channel"
      "s/channel/psd-distribution/psd-value/upp"
      "er-frequency\022{\n\tpsd_value\030\003 \001(\0132h.openco"
      "nfig.openconfig_wavelength_router.Wavele"
      "ngthRouter.MediaChannels.Channel.PsdDist"
      "ribution.PsdValue\032\335\004\n\006Source\022\255\001\n\006config\030"
      "\233\251\342\350\001 \001(\0132].openconfig.openconfig_wavele"
      "ngth_router.WavelengthRouter.MediaChanne"
      "ls.Channel.Source.ConfigB:\202A7/wavelength"
      "-router/media-channels/channel/source/co"
      "nfig\022\251\001\n\005state\030\234\345\205T \001(\0132\\.openconfig.ope"
      "nconfig_wavelength_router.WavelengthRout"
      "er.MediaChannels.Channel.Source.StateB9\202"
      "A6/wavelength-router/media-channels/chan"
      "nel/source/state\032|\n\006Config\022r\n\tport_name\030"
      "\331\346\202\255\001 \001(\0132\025.ywrapper.StringValueBD\202AA/wa"
      "velength-router/media-channels/channel/s"
      "ource/config/port-name\032y\n\005State\022p\n\tport_"
      "name\030\212\370\331\004 \001(\0132\025.ywrapper.StringValueBC\202A"
      "@/wavelength-router/media-channels/chann"
      "el/source/state/port-name\032\345\006\n\005State\022\225\001\n\014"
      "admin_status\030\263\326\341\230\001 \001(\0162:.openconfig.enum"
      "s.OpenconfigWavelengthRouterAdminStateTy"
      "peB\?\202A</wavelength-router/media-channels"
      "/channel/state/admin-status\022_\n\005index\030\245\275\350"
      "i \001(\0132\023.ywrapper.UintValueB8\202A5/waveleng"
      "th-router/media-channels/channel/state/i"
      "ndex\022s\n\017lower_frequency\030\277\273\331\035 \001(\0132\023.ywrap"
      "per.UintValueBB\202A\?/wavelength-router/med"
      "ia-channels/channel/state/lower-frequenc"
      "y\022`\n\004name\030\226\372\340\211\001 \001(\0132\025.ywrapper.StringVal"
      "ueB7\202A4/wavelength-router/media-channels"
      "/channel/state/name\022\271\001\n\013oper_status\030\212\321\231\373"
      "\001 \001(\0162`.openconfig.openconfig_wavelength"
      "_router.WavelengthRouter.MediaChannels.C"
      "hannel.State.OperStatusB>\202A;/wavelength-"
      "router/media-channels/channel/state/oper"
      "-status\022t\n\017upper_frequency\030\244\321\310\311\001 \001(\0132\023.y"
      "wrapper.UintValueBB\202A\?/wavelength-router"
      "/media-channels/channel/state/upper-freq"
      "uency\"Z\n\nOperStatus\022\024\n\020OPERSTATUS_UNSET\020"
      "\000\022\030\n\rOPERSTATUS_UP\020\001\032\005\202A\002UP\022\034\n\017OPERSTATU"
      "S_DOWN\020\002\032\007\202A\004DOWN\032\261\001\n\nChannelKey\022A\n\005inde"
      "x\030\001 \001(\004B2\202A//wavelength-router/media-cha"
      "nnels/channel/index\022`\n\007channel\030\002 \001(\0132O.o"
      "penconfig.openconfig_wavelength_router.W"
      "avelengthRouter.MediaChannels.Channelb\006p"
      "roto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 6165);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "openconfig/openconfig_wavelength_router/openconfig_wavelength_router.proto", &protobuf_RegisterTypes);
  ::protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::AddDescriptors();
  ::protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fyext_2fyext_2eproto::AddDescriptors();
  ::protobuf_openconfig_2fenums_2fenums_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_openconfig_2fopenconfig_5fwavelength_5frouter_2fopenconfig_5fwavelength_5frouter_2eproto
namespace openconfig {
namespace openconfig_wavelength_router {
const ::google::protobuf::EnumDescriptor* WavelengthRouter_MediaChannels_Channel_State_OperStatus_descriptor() {
  protobuf_openconfig_2fopenconfig_5fwavelength_5frouter_2fopenconfig_5fwavelength_5frouter_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_openconfig_2fopenconfig_5fwavelength_5frouter_2fopenconfig_5fwavelength_5frouter_2eproto::file_level_enum_descriptors[0];
}
bool WavelengthRouter_MediaChannels_Channel_State_OperStatus_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const WavelengthRouter_MediaChannels_Channel_State_OperStatus WavelengthRouter_MediaChannels_Channel_State::OPERSTATUS_UNSET;
const WavelengthRouter_MediaChannels_Channel_State_OperStatus WavelengthRouter_MediaChannels_Channel_State::OPERSTATUS_UP;
const WavelengthRouter_MediaChannels_Channel_State_OperStatus WavelengthRouter_MediaChannels_Channel_State::OPERSTATUS_DOWN;
const WavelengthRouter_MediaChannels_Channel_State_OperStatus WavelengthRouter_MediaChannels_Channel_State::OperStatus_MIN;
const WavelengthRouter_MediaChannels_Channel_State_OperStatus WavelengthRouter_MediaChannels_Channel_State::OperStatus_MAX;
const int WavelengthRouter_MediaChannels_Channel_State::OperStatus_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void WavelengthRouter_MediaChannels_Channel_Config::InitAsDefaultInstance() {
  ::openconfig::openconfig_wavelength_router::_WavelengthRouter_MediaChannels_Channel_Config_default_instance_._instance.get_mutable()->index_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
  ::openconfig::openconfig_wavelength_router::_WavelengthRouter_MediaChannels_Channel_Config_default_instance_._instance.get_mutable()->lower_frequency_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
  ::openconfig::openconfig_wavelength_router::_WavelengthRouter_MediaChannels_Channel_Config_default_instance_._instance.get_mutable()->name_ = const_cast< ::ywrapper::StringValue*>(
      ::ywrapper::StringValue::internal_default_instance());
  ::openconfig::openconfig_wavelength_router::_WavelengthRouter_MediaChannels_Channel_Config_default_instance_._instance.get_mutable()->upper_frequency_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
}
void WavelengthRouter_MediaChannels_Channel_Config::clear_index() {
  if (GetArenaNoVirtual() == NULL && index_ != NULL) {
    delete index_;
  }
  index_ = NULL;
}
void WavelengthRouter_MediaChannels_Channel_Config::clear_lower_frequency() {
  if (GetArenaNoVirtual() == NULL && lower_frequency_ != NULL) {
    delete lower_frequency_;
  }
  lower_frequency_ = NULL;
}
void WavelengthRouter_MediaChannels_Channel_Config::clear_name() {
  if (GetArenaNoVirtual() == NULL && name_ != NULL) {
    delete name_;
  }
  name_ = NULL;
}
void WavelengthRouter_MediaChannels_Channel_Config::clear_upper_frequency() {
  if (GetArenaNoVirtual() == NULL && upper_frequency_ != NULL) {
    delete upper_frequency_;
  }
  upper_frequency_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WavelengthRouter_MediaChannels_Channel_Config::kAdminStatusFieldNumber;
const int WavelengthRouter_MediaChannels_Channel_Config::kIndexFieldNumber;
const int WavelengthRouter_MediaChannels_Channel_Config::kLowerFrequencyFieldNumber;
const int WavelengthRouter_MediaChannels_Channel_Config::kNameFieldNumber;
const int WavelengthRouter_MediaChannels_Channel_Config::kUpperFrequencyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WavelengthRouter_MediaChannels_Channel_Config::WavelengthRouter_MediaChannels_Channel_Config()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5fwavelength_5frouter_2fopenconfig_5fwavelength_5frouter_2eproto::InitDefaultsWavelengthRouter_MediaChannels_Channel_Config();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.Config)
}
WavelengthRouter_MediaChannels_Channel_Config::WavelengthRouter_MediaChannels_Channel_Config(const WavelengthRouter_MediaChannels_Channel_Config& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_index()) {
    index_ = new ::ywrapper::UintValue(*from.index_);
  } else {
    index_ = NULL;
  }
  if (from.has_name()) {
    name_ = new ::ywrapper::StringValue(*from.name_);
  } else {
    name_ = NULL;
  }
  if (from.has_upper_frequency()) {
    upper_frequency_ = new ::ywrapper::UintValue(*from.upper_frequency_);
  } else {
    upper_frequency_ = NULL;
  }
  if (from.has_lower_frequency()) {
    lower_frequency_ = new ::ywrapper::UintValue(*from.lower_frequency_);
  } else {
    lower_frequency_ = NULL;
  }
  admin_status_ = from.admin_status_;
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.Config)
}

void WavelengthRouter_MediaChannels_Channel_Config::SharedCtor() {
  ::memset(&index_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&admin_status_) -
      reinterpret_cast<char*>(&index_)) + sizeof(admin_status_));
  _cached_size_ = 0;
}

WavelengthRouter_MediaChannels_Channel_Config::~WavelengthRouter_MediaChannels_Channel_Config() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.Config)
  SharedDtor();
}

void WavelengthRouter_MediaChannels_Channel_Config::SharedDtor() {
  if (this != internal_default_instance()) delete index_;
  if (this != internal_default_instance()) delete name_;
  if (this != internal_default_instance()) delete upper_frequency_;
  if (this != internal_default_instance()) delete lower_frequency_;
}

void WavelengthRouter_MediaChannels_Channel_Config::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* WavelengthRouter_MediaChannels_Channel_Config::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5fwavelength_5frouter_2fopenconfig_5fwavelength_5frouter_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fwavelength_5frouter_2fopenconfig_5fwavelength_5frouter_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const WavelengthRouter_MediaChannels_Channel_Config& WavelengthRouter_MediaChannels_Channel_Config::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5fwavelength_5frouter_2fopenconfig_5fwavelength_5frouter_2eproto::InitDefaultsWavelengthRouter_MediaChannels_Channel_Config();
  return *internal_default_instance();
}

WavelengthRouter_MediaChannels_Channel_Config* WavelengthRouter_MediaChannels_Channel_Config::New(::google::protobuf::Arena* arena) const {
  WavelengthRouter_MediaChannels_Channel_Config* n = new WavelengthRouter_MediaChannels_Channel_Config;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void WavelengthRouter_MediaChannels_Channel_Config::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.Config)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && index_ != NULL) {
    delete index_;
  }
  index_ = NULL;
  if (GetArenaNoVirtual() == NULL && name_ != NULL) {
    delete name_;
  }
  name_ = NULL;
  if (GetArenaNoVirtual() == NULL && upper_frequency_ != NULL) {
    delete upper_frequency_;
  }
  upper_frequency_ = NULL;
  if (GetArenaNoVirtual() == NULL && lower_frequency_ != NULL) {
    delete lower_frequency_;
  }
  lower_frequency_ = NULL;
  admin_status_ = 0;
  _internal_metadata_.Clear();
}

bool WavelengthRouter_MediaChannels_Channel_Config::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.Config)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(4273391682u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .openconfig.enums.OpenconfigWavelengthRouterAdminStateType admin_status = 148137994 [(.yext.schemapath) = "/wavelength-router/media-channels/channel/config/admin-status"];
      case 148137994: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 1185103952 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_admin_status(static_cast< ::openconfig::enums::OpenconfigWavelengthRouterAdminStateType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.UintValue index = 301463906 [(.yext.schemapath) = "/wavelength-router/media-channels/channel/config/index"];
      case 301463906: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 2411711250 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_index()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.StringValue name = 351086787 [(.yext.schemapath) = "/wavelength-router/media-channels/channel/config/name"];
      case 351086787: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 2808694298 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.UintValue upper_frequency = 431960071 [(.yext.schemapath) = "/wavelength-router/media-channels/channel/config/upper-frequency"];
      case 431960071: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 3455680570 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_upper_frequency()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.UintValue lower_frequency = 534173960 [(.yext.schemapath) = "/wavelength-router/media-channels/channel/config/lower-frequency"];
      case 534173960: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 4273391682 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_lower_frequency()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.Config)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.Config)
  return false;
#undef DO_
}

void WavelengthRouter_MediaChannels_Channel_Config::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.Config)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .openconfig.enums.OpenconfigWavelengthRouterAdminStateType admin_status = 148137994 [(.yext.schemapath) = "/wavelength-router/media-channels/channel/config/admin-status"];
  if (this->admin_status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      148137994, this->admin_status(), output);
  }

  // .ywrapper.UintValue index = 301463906 [(.yext.schemapath) = "/wavelength-router/media-channels/channel/config/index"];
  if (this->has_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      301463906, *this->index_, output);
  }

  // .ywrapper.StringValue name = 351086787 [(.yext.schemapath) = "/wavelength-router/media-channels/channel/config/name"];
  if (this->has_name()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      351086787, *this->name_, output);
  }

  // .ywrapper.UintValue upper_frequency = 431960071 [(.yext.schemapath) = "/wavelength-router/media-channels/channel/config/upper-frequency"];
  if (this->has_upper_frequency()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      431960071, *this->upper_frequency_, output);
  }

  // .ywrapper.UintValue lower_frequency = 534173960 [(.yext.schemapath) = "/wavelength-router/media-channels/channel/config/lower-frequency"];
  if (this->has_lower_frequency()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      534173960, *this->lower_frequency_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.Config)
}

::google::protobuf::uint8* WavelengthRouter_MediaChannels_Channel_Config::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.Config)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .openconfig.enums.OpenconfigWavelengthRouterAdminStateType admin_status = 148137994 [(.yext.schemapath) = "/wavelength-router/media-channels/channel/config/admin-status"];
  if (this->admin_status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      148137994, this->admin_status(), target);
  }

  // .ywrapper.UintValue index = 301463906 [(.yext.schemapath) = "/wavelength-router/media-channels/channel/config/index"];
  if (this->has_index()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        301463906, *this->index_, deterministic, target);
  }

  // .ywrapper.StringValue name = 351086787 [(.yext.schemapath) = "/wavelength-router/media-channels/channel/config/name"];
  if (this->has_name()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        351086787, *this->name_, deterministic, target);
  }

  // .ywrapper.UintValue upper_frequency = 431960071 [(.yext.schemapath) = "/wavelength-router/media-channels/channel/config/upper-frequency"];
  if (this->has_upper_frequency()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        431960071, *this->upper_frequency_, deterministic, target);
  }

  // .ywrapper.UintValue lower_frequency = 534173960 [(.yext.schemapath) = "/wavelength-router/media-channels/channel/config/lower-frequency"];
  if (this->has_lower_frequency()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        534173960, *this->lower_frequency_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.Config)
  return target;
}

size_t WavelengthRouter_MediaChannels_Channel_Config::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.Config)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .ywrapper.UintValue index = 301463906 [(.yext.schemapath) = "/wavelength-router/media-channels/channel/config/index"];
  if (this->has_index()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->index_);
  }

  // .ywrapper.StringValue name = 351086787 [(.yext.schemapath) = "/wavelength-router/media-channels/channel/config/name"];
  if (this->has_name()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->name_);
  }

  // .ywrapper.UintValue upper_frequency = 431960071 [(.yext.schemapath) = "/wavelength-router/media-channels/channel/config/upper-frequency"];
  if (this->has_upper_frequency()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->upper_frequency_);
  }

  // .ywrapper.UintValue lower_frequency = 534173960 [(.yext.schemapath) = "/wavelength-router/media-channels/channel/config/lower-frequency"];
  if (this->has_lower_frequency()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->lower_frequency_);
  }

  // .openconfig.enums.OpenconfigWavelengthRouterAdminStateType admin_status = 148137994 [(.yext.schemapath) = "/wavelength-router/media-channels/channel/config/admin-status"];
  if (this->admin_status() != 0) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->admin_status());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void WavelengthRouter_MediaChannels_Channel_Config::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.Config)
  GOOGLE_DCHECK_NE(&from, this);
  const WavelengthRouter_MediaChannels_Channel_Config* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const WavelengthRouter_MediaChannels_Channel_Config>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.Config)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.Config)
    MergeFrom(*source);
  }
}

void WavelengthRouter_MediaChannels_Channel_Config::MergeFrom(const WavelengthRouter_MediaChannels_Channel_Config& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.Config)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_index()) {
    mutable_index()->::ywrapper::UintValue::MergeFrom(from.index());
  }
  if (from.has_name()) {
    mutable_name()->::ywrapper::StringValue::MergeFrom(from.name());
  }
  if (from.has_upper_frequency()) {
    mutable_upper_frequency()->::ywrapper::UintValue::MergeFrom(from.upper_frequency());
  }
  if (from.has_lower_frequency()) {
    mutable_lower_frequency()->::ywrapper::UintValue::MergeFrom(from.lower_frequency());
  }
  if (from.admin_status() != 0) {
    set_admin_status(from.admin_status());
  }
}

void WavelengthRouter_MediaChannels_Channel_Config::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.Config)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WavelengthRouter_MediaChannels_Channel_Config::CopyFrom(const WavelengthRouter_MediaChannels_Channel_Config& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.Config)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WavelengthRouter_MediaChannels_Channel_Config::IsInitialized() const {
  return true;
}

void WavelengthRouter_MediaChannels_Channel_Config::Swap(WavelengthRouter_MediaChannels_Channel_Config* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WavelengthRouter_MediaChannels_Channel_Config::InternalSwap(WavelengthRouter_MediaChannels_Channel_Config* other) {
  using std::swap;
  swap(index_, other->index_);
  swap(name_, other->name_);
  swap(upper_frequency_, other->upper_frequency_);
  swap(lower_frequency_, other->lower_frequency_);
  swap(admin_status_, other->admin_status_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata WavelengthRouter_MediaChannels_Channel_Config::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5fwavelength_5frouter_2fopenconfig_5fwavelength_5frouter_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fwavelength_5frouter_2fopenconfig_5fwavelength_5frouter_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void WavelengthRouter_MediaChannels_Channel_Dest_Config::InitAsDefaultInstance() {
  ::openconfig::openconfig_wavelength_router::_WavelengthRouter_MediaChannels_Channel_Dest_Config_default_instance_._instance.get_mutable()->port_name_ = const_cast< ::ywrapper::StringValue*>(
      ::ywrapper::StringValue::internal_default_instance());
}
void WavelengthRouter_MediaChannels_Channel_Dest_Config::clear_port_name() {
  if (GetArenaNoVirtual() == NULL && port_name_ != NULL) {
    delete port_name_;
  }
  port_name_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WavelengthRouter_MediaChannels_Channel_Dest_Config::kPortNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WavelengthRouter_MediaChannels_Channel_Dest_Config::WavelengthRouter_MediaChannels_Channel_Dest_Config()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5fwavelength_5frouter_2fopenconfig_5fwavelength_5frouter_2eproto::InitDefaultsWavelengthRouter_MediaChannels_Channel_Dest_Config();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.Dest.Config)
}
WavelengthRouter_MediaChannels_Channel_Dest_Config::WavelengthRouter_MediaChannels_Channel_Dest_Config(const WavelengthRouter_MediaChannels_Channel_Dest_Config& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_port_name()) {
    port_name_ = new ::ywrapper::StringValue(*from.port_name_);
  } else {
    port_name_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.Dest.Config)
}

void WavelengthRouter_MediaChannels_Channel_Dest_Config::SharedCtor() {
  port_name_ = NULL;
  _cached_size_ = 0;
}

WavelengthRouter_MediaChannels_Channel_Dest_Config::~WavelengthRouter_MediaChannels_Channel_Dest_Config() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.Dest.Config)
  SharedDtor();
}

void WavelengthRouter_MediaChannels_Channel_Dest_Config::SharedDtor() {
  if (this != internal_default_instance()) delete port_name_;
}

void WavelengthRouter_MediaChannels_Channel_Dest_Config::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* WavelengthRouter_MediaChannels_Channel_Dest_Config::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5fwavelength_5frouter_2fopenconfig_5fwavelength_5frouter_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fwavelength_5frouter_2fopenconfig_5fwavelength_5frouter_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const WavelengthRouter_MediaChannels_Channel_Dest_Config& WavelengthRouter_MediaChannels_Channel_Dest_Config::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5fwavelength_5frouter_2fopenconfig_5fwavelength_5frouter_2eproto::InitDefaultsWavelengthRouter_MediaChannels_Channel_Dest_Config();
  return *internal_default_instance();
}

WavelengthRouter_MediaChannels_Channel_Dest_Config* WavelengthRouter_MediaChannels_Channel_Dest_Config::New(::google::protobuf::Arena* arena) const {
  WavelengthRouter_MediaChannels_Channel_Dest_Config* n = new WavelengthRouter_MediaChannels_Channel_Dest_Config;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void WavelengthRouter_MediaChannels_Channel_Dest_Config::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.Dest.Config)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && port_name_ != NULL) {
    delete port_name_;
  }
  port_name_ = NULL;
  _internal_metadata_.Clear();
}

bool WavelengthRouter_MediaChannels_Channel_Dest_Config::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.Dest.Config)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(199235010u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .ywrapper.StringValue port_name = 24904376 [(.yext.schemapath) = "/wavelength-router/media-channels/channel/dest/config/port-name"];
      case 24904376: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(194u /* 199235010 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_port_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.Dest.Config)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.Dest.Config)
  return false;
#undef DO_
}

void WavelengthRouter_MediaChannels_Channel_Dest_Config::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.Dest.Config)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ywrapper.StringValue port_name = 24904376 [(.yext.schemapath) = "/wavelength-router/media-channels/channel/dest/config/port-name"];
  if (this->has_port_name()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      24904376, *this->port_name_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.Dest.Config)
}

::google::protobuf::uint8* WavelengthRouter_MediaChannels_Channel_Dest_Config::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.Dest.Config)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ywrapper.StringValue port_name = 24904376 [(.yext.schemapath) = "/wavelength-router/media-channels/channel/dest/config/port-name"];
  if (this->has_port_name()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        24904376, *this->port_name_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.Dest.Config)
  return target;
}

size_t WavelengthRouter_MediaChannels_Channel_Dest_Config::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.Dest.Config)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .ywrapper.StringValue port_name = 24904376 [(.yext.schemapath) = "/wavelength-router/media-channels/channel/dest/config/port-name"];
  if (this->has_port_name()) {
    total_size += 4 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->port_name_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void WavelengthRouter_MediaChannels_Channel_Dest_Config::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.Dest.Config)
  GOOGLE_DCHECK_NE(&from, this);
  const WavelengthRouter_MediaChannels_Channel_Dest_Config* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const WavelengthRouter_MediaChannels_Channel_Dest_Config>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.Dest.Config)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.Dest.Config)
    MergeFrom(*source);
  }
}

void WavelengthRouter_MediaChannels_Channel_Dest_Config::MergeFrom(const WavelengthRouter_MediaChannels_Channel_Dest_Config& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.Dest.Config)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_port_name()) {
    mutable_port_name()->::ywrapper::StringValue::MergeFrom(from.port_name());
  }
}

void WavelengthRouter_MediaChannels_Channel_Dest_Config::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.Dest.Config)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WavelengthRouter_MediaChannels_Channel_Dest_Config::CopyFrom(const WavelengthRouter_MediaChannels_Channel_Dest_Config& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.Dest.Config)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WavelengthRouter_MediaChannels_Channel_Dest_Config::IsInitialized() const {
  return true;
}

void WavelengthRouter_MediaChannels_Channel_Dest_Config::Swap(WavelengthRouter_MediaChannels_Channel_Dest_Config* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WavelengthRouter_MediaChannels_Channel_Dest_Config::InternalSwap(WavelengthRouter_MediaChannels_Channel_Dest_Config* other) {
  using std::swap;
  swap(port_name_, other->port_name_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata WavelengthRouter_MediaChannels_Channel_Dest_Config::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5fwavelength_5frouter_2fopenconfig_5fwavelength_5frouter_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fwavelength_5frouter_2fopenconfig_5fwavelength_5frouter_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void WavelengthRouter_MediaChannels_Channel_Dest_State::InitAsDefaultInstance() {
  ::openconfig::openconfig_wavelength_router::_WavelengthRouter_MediaChannels_Channel_Dest_State_default_instance_._instance.get_mutable()->port_name_ = const_cast< ::ywrapper::StringValue*>(
      ::ywrapper::StringValue::internal_default_instance());
}
void WavelengthRouter_MediaChannels_Channel_Dest_State::clear_port_name() {
  if (GetArenaNoVirtual() == NULL && port_name_ != NULL) {
    delete port_name_;
  }
  port_name_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WavelengthRouter_MediaChannels_Channel_Dest_State::kPortNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WavelengthRouter_MediaChannels_Channel_Dest_State::WavelengthRouter_MediaChannels_Channel_Dest_State()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5fwavelength_5frouter_2fopenconfig_5fwavelength_5frouter_2eproto::InitDefaultsWavelengthRouter_MediaChannels_Channel_Dest_State();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.Dest.State)
}
WavelengthRouter_MediaChannels_Channel_Dest_State::WavelengthRouter_MediaChannels_Channel_Dest_State(const WavelengthRouter_MediaChannels_Channel_Dest_State& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_port_name()) {
    port_name_ = new ::ywrapper::StringValue(*from.port_name_);
  } else {
    port_name_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.Dest.State)
}

void WavelengthRouter_MediaChannels_Channel_Dest_State::SharedCtor() {
  port_name_ = NULL;
  _cached_size_ = 0;
}

WavelengthRouter_MediaChannels_Channel_Dest_State::~WavelengthRouter_MediaChannels_Channel_Dest_State() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.Dest.State)
  SharedDtor();
}

void WavelengthRouter_MediaChannels_Channel_Dest_State::SharedDtor() {
  if (this != internal_default_instance()) delete port_name_;
}

void WavelengthRouter_MediaChannels_Channel_Dest_State::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* WavelengthRouter_MediaChannels_Channel_Dest_State::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5fwavelength_5frouter_2fopenconfig_5fwavelength_5frouter_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fwavelength_5frouter_2fopenconfig_5fwavelength_5frouter_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const WavelengthRouter_MediaChannels_Channel_Dest_State& WavelengthRouter_MediaChannels_Channel_Dest_State::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5fwavelength_5frouter_2fopenconfig_5fwavelength_5frouter_2eproto::InitDefaultsWavelengthRouter_MediaChannels_Channel_Dest_State();
  return *internal_default_instance();
}

WavelengthRouter_MediaChannels_Channel_Dest_State* WavelengthRouter_MediaChannels_Channel_Dest_State::New(::google::protobuf::Arena* arena) const {
  WavelengthRouter_MediaChannels_Channel_Dest_State* n = new WavelengthRouter_MediaChannels_Channel_Dest_State;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void WavelengthRouter_MediaChannels_Channel_Dest_State::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.Dest.State)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && port_name_ != NULL) {
    delete port_name_;
  }
  port_name_ = NULL;
  _internal_metadata_.Clear();
}

bool WavelengthRouter_MediaChannels_Channel_Dest_State::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.Dest.State)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(2829226346u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .ywrapper.StringValue port_name = 353653293 [(.yext.schemapath) = "/wavelength-router/media-channels/channel/dest/state/port-name"];
      case 353653293: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 2829226346 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_port_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.Dest.State)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.Dest.State)
  return false;
#undef DO_
}

void WavelengthRouter_MediaChannels_Channel_Dest_State::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.Dest.State)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ywrapper.StringValue port_name = 353653293 [(.yext.schemapath) = "/wavelength-router/media-channels/channel/dest/state/port-name"];
  if (this->has_port_name()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      353653293, *this->port_name_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.Dest.State)
}

::google::protobuf::uint8* WavelengthRouter_MediaChannels_Channel_Dest_State::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.Dest.State)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ywrapper.StringValue port_name = 353653293 [(.yext.schemapath) = "/wavelength-router/media-channels/channel/dest/state/port-name"];
  if (this->has_port_name()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        353653293, *this->port_name_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.Dest.State)
  return target;
}

size_t WavelengthRouter_MediaChannels_Channel_Dest_State::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.Dest.State)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .ywrapper.StringValue port_name = 353653293 [(.yext.schemapath) = "/wavelength-router/media-channels/channel/dest/state/port-name"];
  if (this->has_port_name()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->port_name_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void WavelengthRouter_MediaChannels_Channel_Dest_State::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.Dest.State)
  GOOGLE_DCHECK_NE(&from, this);
  const WavelengthRouter_MediaChannels_Channel_Dest_State* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const WavelengthRouter_MediaChannels_Channel_Dest_State>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.Dest.State)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.Dest.State)
    MergeFrom(*source);
  }
}

void WavelengthRouter_MediaChannels_Channel_Dest_State::MergeFrom(const WavelengthRouter_MediaChannels_Channel_Dest_State& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.Dest.State)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_port_name()) {
    mutable_port_name()->::ywrapper::StringValue::MergeFrom(from.port_name());
  }
}

void WavelengthRouter_MediaChannels_Channel_Dest_State::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.Dest.State)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WavelengthRouter_MediaChannels_Channel_Dest_State::CopyFrom(const WavelengthRouter_MediaChannels_Channel_Dest_State& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.Dest.State)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WavelengthRouter_MediaChannels_Channel_Dest_State::IsInitialized() const {
  return true;
}

void WavelengthRouter_MediaChannels_Channel_Dest_State::Swap(WavelengthRouter_MediaChannels_Channel_Dest_State* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WavelengthRouter_MediaChannels_Channel_Dest_State::InternalSwap(WavelengthRouter_MediaChannels_Channel_Dest_State* other) {
  using std::swap;
  swap(port_name_, other->port_name_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata WavelengthRouter_MediaChannels_Channel_Dest_State::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5fwavelength_5frouter_2fopenconfig_5fwavelength_5frouter_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fwavelength_5frouter_2fopenconfig_5fwavelength_5frouter_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void WavelengthRouter_MediaChannels_Channel_Dest::InitAsDefaultInstance() {
  ::openconfig::openconfig_wavelength_router::_WavelengthRouter_MediaChannels_Channel_Dest_default_instance_._instance.get_mutable()->config_ = const_cast< ::openconfig::openconfig_wavelength_router::WavelengthRouter_MediaChannels_Channel_Dest_Config*>(
      ::openconfig::openconfig_wavelength_router::WavelengthRouter_MediaChannels_Channel_Dest_Config::internal_default_instance());
  ::openconfig::openconfig_wavelength_router::_WavelengthRouter_MediaChannels_Channel_Dest_default_instance_._instance.get_mutable()->state_ = const_cast< ::openconfig::openconfig_wavelength_router::WavelengthRouter_MediaChannels_Channel_Dest_State*>(
      ::openconfig::openconfig_wavelength_router::WavelengthRouter_MediaChannels_Channel_Dest_State::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WavelengthRouter_MediaChannels_Channel_Dest::kConfigFieldNumber;
const int WavelengthRouter_MediaChannels_Channel_Dest::kStateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WavelengthRouter_MediaChannels_Channel_Dest::WavelengthRouter_MediaChannels_Channel_Dest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5fwavelength_5frouter_2fopenconfig_5fwavelength_5frouter_2eproto::InitDefaultsWavelengthRouter_MediaChannels_Channel_Dest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.Dest)
}
WavelengthRouter_MediaChannels_Channel_Dest::WavelengthRouter_MediaChannels_Channel_Dest(const WavelengthRouter_MediaChannels_Channel_Dest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_state()) {
    state_ = new ::openconfig::openconfig_wavelength_router::WavelengthRouter_MediaChannels_Channel_Dest_State(*from.state_);
  } else {
    state_ = NULL;
  }
  if (from.has_config()) {
    config_ = new ::openconfig::openconfig_wavelength_router::WavelengthRouter_MediaChannels_Channel_Dest_Config(*from.config_);
  } else {
    config_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.Dest)
}

void WavelengthRouter_MediaChannels_Channel_Dest::SharedCtor() {
  ::memset(&state_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&config_) -
      reinterpret_cast<char*>(&state_)) + sizeof(config_));
  _cached_size_ = 0;
}

WavelengthRouter_MediaChannels_Channel_Dest::~WavelengthRouter_MediaChannels_Channel_Dest() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.Dest)
  SharedDtor();
}

void WavelengthRouter_MediaChannels_Channel_Dest::SharedDtor() {
  if (this != internal_default_instance()) delete state_;
  if (this != internal_default_instance()) delete config_;
}

void WavelengthRouter_MediaChannels_Channel_Dest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* WavelengthRouter_MediaChannels_Channel_Dest::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5fwavelength_5frouter_2fopenconfig_5fwavelength_5frouter_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fwavelength_5frouter_2fopenconfig_5fwavelength_5frouter_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const WavelengthRouter_MediaChannels_Channel_Dest& WavelengthRouter_MediaChannels_Channel_Dest::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5fwavelength_5frouter_2fopenconfig_5fwavelength_5frouter_2eproto::InitDefaultsWavelengthRouter_MediaChannels_Channel_Dest();
  return *internal_default_instance();
}

WavelengthRouter_MediaChannels_Channel_Dest* WavelengthRouter_MediaChannels_Channel_Dest::New(::google::protobuf::Arena* arena) const {
  WavelengthRouter_MediaChannels_Channel_Dest* n = new WavelengthRouter_MediaChannels_Channel_Dest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void WavelengthRouter_MediaChannels_Channel_Dest::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.Dest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && state_ != NULL) {
    delete state_;
  }
  state_ = NULL;
  if (GetArenaNoVirtual() == NULL && config_ != NULL) {
    delete config_;
  }
  config_ = NULL;
  _internal_metadata_.Clear();
}

bool WavelengthRouter_MediaChannels_Channel_Dest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.Dest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(2321578322u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.Dest.State state = 10749255 [(.yext.schemapath) = "/wavelength-router/media-channels/channel/dest/state"];
      case 10749255: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 85994042 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_state()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.Dest.Config config = 290197290 [(.yext.schemapath) = "/wavelength-router/media-channels/channel/dest/config"];
      case 290197290: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 2321578322 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.Dest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.Dest)
  return false;
#undef DO_
}

void WavelengthRouter_MediaChannels_Channel_Dest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.Dest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.Dest.State state = 10749255 [(.yext.schemapath) = "/wavelength-router/media-channels/channel/dest/state"];
  if (this->has_state()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10749255, *this->state_, output);
  }

  // .openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.Dest.Config config = 290197290 [(.yext.schemapath) = "/wavelength-router/media-channels/channel/dest/config"];
  if (this->has_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      290197290, *this->config_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.Dest)
}

::google::protobuf::uint8* WavelengthRouter_MediaChannels_Channel_Dest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.Dest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.Dest.State state = 10749255 [(.yext.schemapath) = "/wavelength-router/media-channels/channel/dest/state"];
  if (this->has_state()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10749255, *this->state_, deterministic, target);
  }

  // .openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.Dest.Config config = 290197290 [(.yext.schemapath) = "/wavelength-router/media-channels/channel/dest/config"];
  if (this->has_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        290197290, *this->config_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.Dest)
  return target;
}

size_t WavelengthRouter_MediaChannels_Channel_Dest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.Dest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.Dest.State state = 10749255 [(.yext.schemapath) = "/wavelength-router/media-channels/channel/dest/state"];
  if (this->has_state()) {
    total_size += 4 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->state_);
  }

  // .openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.Dest.Config config = 290197290 [(.yext.schemapath) = "/wavelength-router/media-channels/channel/dest/config"];
  if (this->has_config()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->config_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void WavelengthRouter_MediaChannels_Channel_Dest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.Dest)
  GOOGLE_DCHECK_NE(&from, this);
  const WavelengthRouter_MediaChannels_Channel_Dest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const WavelengthRouter_MediaChannels_Channel_Dest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.Dest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.Dest)
    MergeFrom(*source);
  }
}

void WavelengthRouter_MediaChannels_Channel_Dest::MergeFrom(const WavelengthRouter_MediaChannels_Channel_Dest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.Dest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_state()) {
    mutable_state()->::openconfig::openconfig_wavelength_router::WavelengthRouter_MediaChannels_Channel_Dest_State::MergeFrom(from.state());
  }
  if (from.has_config()) {
    mutable_config()->::openconfig::openconfig_wavelength_router::WavelengthRouter_MediaChannels_Channel_Dest_Config::MergeFrom(from.config());
  }
}

void WavelengthRouter_MediaChannels_Channel_Dest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.Dest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WavelengthRouter_MediaChannels_Channel_Dest::CopyFrom(const WavelengthRouter_MediaChannels_Channel_Dest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.Dest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WavelengthRouter_MediaChannels_Channel_Dest::IsInitialized() const {
  return true;
}

void WavelengthRouter_MediaChannels_Channel_Dest::Swap(WavelengthRouter_MediaChannels_Channel_Dest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WavelengthRouter_MediaChannels_Channel_Dest::InternalSwap(WavelengthRouter_MediaChannels_Channel_Dest* other) {
  using std::swap;
  swap(state_, other->state_);
  swap(config_, other->config_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata WavelengthRouter_MediaChannels_Channel_Dest::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5fwavelength_5frouter_2fopenconfig_5fwavelength_5frouter_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fwavelength_5frouter_2fopenconfig_5fwavelength_5frouter_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void WavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValue_Config::InitAsDefaultInstance() {
  ::openconfig::openconfig_wavelength_router::_WavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValue_Config_default_instance_._instance.get_mutable()->lower_frequency_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
  ::openconfig::openconfig_wavelength_router::_WavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValue_Config_default_instance_._instance.get_mutable()->psd_ = const_cast< ::ywrapper::BytesValue*>(
      ::ywrapper::BytesValue::internal_default_instance());
  ::openconfig::openconfig_wavelength_router::_WavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValue_Config_default_instance_._instance.get_mutable()->upper_frequency_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
}
void WavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValue_Config::clear_lower_frequency() {
  if (GetArenaNoVirtual() == NULL && lower_frequency_ != NULL) {
    delete lower_frequency_;
  }
  lower_frequency_ = NULL;
}
void WavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValue_Config::clear_psd() {
  if (GetArenaNoVirtual() == NULL && psd_ != NULL) {
    delete psd_;
  }
  psd_ = NULL;
}
void WavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValue_Config::clear_upper_frequency() {
  if (GetArenaNoVirtual() == NULL && upper_frequency_ != NULL) {
    delete upper_frequency_;
  }
  upper_frequency_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValue_Config::kLowerFrequencyFieldNumber;
const int WavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValue_Config::kPsdFieldNumber;
const int WavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValue_Config::kUpperFrequencyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValue_Config::WavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValue_Config()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5fwavelength_5frouter_2fopenconfig_5fwavelength_5frouter_2eproto::InitDefaultsWavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValue_Config();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.PsdDistribution.PsdValue.Config)
}
WavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValue_Config::WavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValue_Config(const WavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValue_Config& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_psd()) {
    psd_ = new ::ywrapper::BytesValue(*from.psd_);
  } else {
    psd_ = NULL;
  }
  if (from.has_lower_frequency()) {
    lower_frequency_ = new ::ywrapper::UintValue(*from.lower_frequency_);
  } else {
    lower_frequency_ = NULL;
  }
  if (from.has_upper_frequency()) {
    upper_frequency_ = new ::ywrapper::UintValue(*from.upper_frequency_);
  } else {
    upper_frequency_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.PsdDistribution.PsdValue.Config)
}

void WavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValue_Config::SharedCtor() {
  ::memset(&psd_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&upper_frequency_) -
      reinterpret_cast<char*>(&psd_)) + sizeof(upper_frequency_));
  _cached_size_ = 0;
}

WavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValue_Config::~WavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValue_Config() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.PsdDistribution.PsdValue.Config)
  SharedDtor();
}

void WavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValue_Config::SharedDtor() {
  if (this != internal_default_instance()) delete psd_;
  if (this != internal_default_instance()) delete lower_frequency_;
  if (this != internal_default_instance()) delete upper_frequency_;
}

void WavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValue_Config::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* WavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValue_Config::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5fwavelength_5frouter_2fopenconfig_5fwavelength_5frouter_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fwavelength_5frouter_2fopenconfig_5fwavelength_5frouter_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const WavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValue_Config& WavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValue_Config::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5fwavelength_5frouter_2fopenconfig_5fwavelength_5frouter_2eproto::InitDefaultsWavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValue_Config();
  return *internal_default_instance();
}

WavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValue_Config* WavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValue_Config::New(::google::protobuf::Arena* arena) const {
  WavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValue_Config* n = new WavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValue_Config;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void WavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValue_Config::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.PsdDistribution.PsdValue.Config)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && psd_ != NULL) {
    delete psd_;
  }
  psd_ = NULL;
  if (GetArenaNoVirtual() == NULL && lower_frequency_ != NULL) {
    delete lower_frequency_;
  }
  lower_frequency_ = NULL;
  if (GetArenaNoVirtual() == NULL && upper_frequency_ != NULL) {
    delete upper_frequency_;
  }
  upper_frequency_ = NULL;
  _internal_metadata_.Clear();
}

bool WavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValue_Config::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.PsdDistribution.PsdValue.Config)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(3959613266u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .ywrapper.BytesValue psd = 5500354 [(.yext.schemapath) = "/wavelength-router/media-channels/channel/psd-distribution/psd-value/config/psd"];
      case 5500354: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 44002834 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_psd()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.UintValue lower_frequency = 104941357 [(.yext.schemapath) = "/wavelength-router/media-channels/channel/psd-distribution/psd-value/config/lower-frequency"];
      case 104941357: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 839530858 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_lower_frequency()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.UintValue upper_frequency = 494951658 [(.yext.schemapath) = "/wavelength-router/media-channels/channel/psd-distribution/psd-value/config/upper-frequency"];
      case 494951658: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 3959613266 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_upper_frequency()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.PsdDistribution.PsdValue.Config)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.PsdDistribution.PsdValue.Config)
  return false;
#undef DO_
}

void WavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValue_Config::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.PsdDistribution.PsdValue.Config)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ywrapper.BytesValue psd = 5500354 [(.yext.schemapath) = "/wavelength-router/media-channels/channel/psd-distribution/psd-value/config/psd"];
  if (this->has_psd()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5500354, *this->psd_, output);
  }

  // .ywrapper.UintValue lower_frequency = 104941357 [(.yext.schemapath) = "/wavelength-router/media-channels/channel/psd-distribution/psd-value/config/lower-frequency"];
  if (this->has_lower_frequency()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      104941357, *this->lower_frequency_, output);
  }

  // .ywrapper.UintValue upper_frequency = 494951658 [(.yext.schemapath) = "/wavelength-router/media-channels/channel/psd-distribution/psd-value/config/upper-frequency"];
  if (this->has_upper_frequency()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      494951658, *this->upper_frequency_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.PsdDistribution.PsdValue.Config)
}

::google::protobuf::uint8* WavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValue_Config::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.PsdDistribution.PsdValue.Config)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ywrapper.BytesValue psd = 5500354 [(.yext.schemapath) = "/wavelength-router/media-channels/channel/psd-distribution/psd-value/config/psd"];
  if (this->has_psd()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5500354, *this->psd_, deterministic, target);
  }

  // .ywrapper.UintValue lower_frequency = 104941357 [(.yext.schemapath) = "/wavelength-router/media-channels/channel/psd-distribution/psd-value/config/lower-frequency"];
  if (this->has_lower_frequency()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        104941357, *this->lower_frequency_, deterministic, target);
  }

  // .ywrapper.UintValue upper_frequency = 494951658 [(.yext.schemapath) = "/wavelength-router/media-channels/channel/psd-distribution/psd-value/config/upper-frequency"];
  if (this->has_upper_frequency()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        494951658, *this->upper_frequency_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.PsdDistribution.PsdValue.Config)
  return target;
}

size_t WavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValue_Config::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.PsdDistribution.PsdValue.Config)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .ywrapper.BytesValue psd = 5500354 [(.yext.schemapath) = "/wavelength-router/media-channels/channel/psd-distribution/psd-value/config/psd"];
  if (this->has_psd()) {
    total_size += 4 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->psd_);
  }

  // .ywrapper.UintValue lower_frequency = 104941357 [(.yext.schemapath) = "/wavelength-router/media-channels/channel/psd-distribution/psd-value/config/lower-frequency"];
  if (this->has_lower_frequency()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->lower_frequency_);
  }

  // .ywrapper.UintValue upper_frequency = 494951658 [(.yext.schemapath) = "/wavelength-router/media-channels/channel/psd-distribution/psd-value/config/upper-frequency"];
  if (this->has_upper_frequency()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->upper_frequency_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void WavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValue_Config::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.PsdDistribution.PsdValue.Config)
  GOOGLE_DCHECK_NE(&from, this);
  const WavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValue_Config* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const WavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValue_Config>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.PsdDistribution.PsdValue.Config)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.PsdDistribution.PsdValue.Config)
    MergeFrom(*source);
  }
}

void WavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValue_Config::MergeFrom(const WavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValue_Config& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.PsdDistribution.PsdValue.Config)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_psd()) {
    mutable_psd()->::ywrapper::BytesValue::MergeFrom(from.psd());
  }
  if (from.has_lower_frequency()) {
    mutable_lower_frequency()->::ywrapper::UintValue::MergeFrom(from.lower_frequency());
  }
  if (from.has_upper_frequency()) {
    mutable_upper_frequency()->::ywrapper::UintValue::MergeFrom(from.upper_frequency());
  }
}

void WavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValue_Config::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.PsdDistribution.PsdValue.Config)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValue_Config::CopyFrom(const WavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValue_Config& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.PsdDistribution.PsdValue.Config)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValue_Config::IsInitialized() const {
  return true;
}

void WavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValue_Config::Swap(WavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValue_Config* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValue_Config::InternalSwap(WavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValue_Config* other) {
  using std::swap;
  swap(psd_, other->psd_);
  swap(lower_frequency_, other->lower_frequency_);
  swap(upper_frequency_, other->upper_frequency_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata WavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValue_Config::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5fwavelength_5frouter_2fopenconfig_5fwavelength_5frouter_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fwavelength_5frouter_2fopenconfig_5fwavelength_5frouter_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void WavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValue_State::InitAsDefaultInstance() {
  ::openconfig::openconfig_wavelength_router::_WavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValue_State_default_instance_._instance.get_mutable()->lower_frequency_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
  ::openconfig::openconfig_wavelength_router::_WavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValue_State_default_instance_._instance.get_mutable()->psd_ = const_cast< ::ywrapper::BytesValue*>(
      ::ywrapper::BytesValue::internal_default_instance());
  ::openconfig::openconfig_wavelength_router::_WavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValue_State_default_instance_._instance.get_mutable()->upper_frequency_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
}
void WavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValue_State::clear_lower_frequency() {
  if (GetArenaNoVirtual() == NULL && lower_frequency_ != NULL) {
    delete lower_frequency_;
  }
  lower_frequency_ = NULL;
}
void WavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValue_State::clear_psd() {
  if (GetArenaNoVirtual() == NULL && psd_ != NULL) {
    delete psd_;
  }
  psd_ = NULL;
}
void WavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValue_State::clear_upper_frequency() {
  if (GetArenaNoVirtual() == NULL && upper_frequency_ != NULL) {
    delete upper_frequency_;
  }
  upper_frequency_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValue_State::kLowerFrequencyFieldNumber;
const int WavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValue_State::kPsdFieldNumber;
const int WavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValue_State::kUpperFrequencyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValue_State::WavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValue_State()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5fwavelength_5frouter_2fopenconfig_5fwavelength_5frouter_2eproto::InitDefaultsWavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValue_State();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.PsdDistribution.PsdValue.State)
}
WavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValue_State::WavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValue_State(const WavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValue_State& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_lower_frequency()) {
    lower_frequency_ = new ::ywrapper::UintValue(*from.lower_frequency_);
  } else {
    lower_frequency_ = NULL;
  }
  if (from.has_upper_frequency()) {
    upper_frequency_ = new ::ywrapper::UintValue(*from.upper_frequency_);
  } else {
    upper_frequency_ = NULL;
  }
  if (from.has_psd()) {
    psd_ = new ::ywrapper::BytesValue(*from.psd_);
  } else {
    psd_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.PsdDistribution.PsdValue.State)
}

void WavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValue_State::SharedCtor() {
  ::memset(&lower_frequency_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&psd_) -
      reinterpret_cast<char*>(&lower_frequency_)) + sizeof(psd_));
  _cached_size_ = 0;
}

WavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValue_State::~WavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValue_State() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.PsdDistribution.PsdValue.State)
  SharedDtor();
}

void WavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValue_State::SharedDtor() {
  if (this != internal_default_instance()) delete lower_frequency_;
  if (this != internal_default_instance()) delete upper_frequency_;
  if (this != internal_default_instance()) delete psd_;
}

void WavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValue_State::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* WavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValue_State::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5fwavelength_5frouter_2fopenconfig_5fwavelength_5frouter_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fwavelength_5frouter_2fopenconfig_5fwavelength_5frouter_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const WavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValue_State& WavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValue_State::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5fwavelength_5frouter_2fopenconfig_5fwavelength_5frouter_2eproto::InitDefaultsWavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValue_State();
  return *internal_default_instance();
}

WavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValue_State* WavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValue_State::New(::google::protobuf::Arena* arena) const {
  WavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValue_State* n = new WavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValue_State;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void WavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValue_State::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.PsdDistribution.PsdValue.State)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && lower_frequency_ != NULL) {
    delete lower_frequency_;
  }
  lower_frequency_ = NULL;
  if (GetArenaNoVirtual() == NULL && upper_frequency_ != NULL) {
    delete upper_frequency_;
  }
  upper_frequency_ = NULL;
  if (GetArenaNoVirtual() == NULL && psd_ != NULL) {
    delete psd_;
  }
  psd_ = NULL;
  _internal_metadata_.Clear();
}

bool WavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValue_State::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.PsdDistribution.PsdValue.State)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(3238551738u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .ywrapper.UintValue lower_frequency = 156152700 [(.yext.schemapath) = "/wavelength-router/media-channels/channel/psd-distribution/psd-value/state/lower-frequency"];
      case 156152700: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(226u /* 1249221602 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_lower_frequency()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.UintValue upper_frequency = 329030827 [(.yext.schemapath) = "/wavelength-router/media-channels/channel/psd-distribution/psd-value/state/upper-frequency"];
      case 329030827: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 2632246618 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_upper_frequency()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.BytesValue psd = 404818967 [(.yext.schemapath) = "/wavelength-router/media-channels/channel/psd-distribution/psd-value/state/psd"];
      case 404818967: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(186u /* 3238551738 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_psd()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.PsdDistribution.PsdValue.State)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.PsdDistribution.PsdValue.State)
  return false;
#undef DO_
}

void WavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValue_State::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.PsdDistribution.PsdValue.State)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ywrapper.UintValue lower_frequency = 156152700 [(.yext.schemapath) = "/wavelength-router/media-channels/channel/psd-distribution/psd-value/state/lower-frequency"];
  if (this->has_lower_frequency()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      156152700, *this->lower_frequency_, output);
  }

  // .ywrapper.UintValue upper_frequency = 329030827 [(.yext.schemapath) = "/wavelength-router/media-channels/channel/psd-distribution/psd-value/state/upper-frequency"];
  if (this->has_upper_frequency()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      329030827, *this->upper_frequency_, output);
  }

  // .ywrapper.BytesValue psd = 404818967 [(.yext.schemapath) = "/wavelength-router/media-channels/channel/psd-distribution/psd-value/state/psd"];
  if (this->has_psd()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      404818967, *this->psd_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.PsdDistribution.PsdValue.State)
}

::google::protobuf::uint8* WavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValue_State::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.PsdDistribution.PsdValue.State)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ywrapper.UintValue lower_frequency = 156152700 [(.yext.schemapath) = "/wavelength-router/media-channels/channel/psd-distribution/psd-value/state/lower-frequency"];
  if (this->has_lower_frequency()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        156152700, *this->lower_frequency_, deterministic, target);
  }

  // .ywrapper.UintValue upper_frequency = 329030827 [(.yext.schemapath) = "/wavelength-router/media-channels/channel/psd-distribution/psd-value/state/upper-frequency"];
  if (this->has_upper_frequency()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        329030827, *this->upper_frequency_, deterministic, target);
  }

  // .ywrapper.BytesValue psd = 404818967 [(.yext.schemapath) = "/wavelength-router/media-channels/channel/psd-distribution/psd-value/state/psd"];
  if (this->has_psd()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        404818967, *this->psd_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.PsdDistribution.PsdValue.State)
  return target;
}

size_t WavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValue_State::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.PsdDistribution.PsdValue.State)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .ywrapper.UintValue lower_frequency = 156152700 [(.yext.schemapath) = "/wavelength-router/media-channels/channel/psd-distribution/psd-value/state/lower-frequency"];
  if (this->has_lower_frequency()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->lower_frequency_);
  }

  // .ywrapper.UintValue upper_frequency = 329030827 [(.yext.schemapath) = "/wavelength-router/media-channels/channel/psd-distribution/psd-value/state/upper-frequency"];
  if (this->has_upper_frequency()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->upper_frequency_);
  }

  // .ywrapper.BytesValue psd = 404818967 [(.yext.schemapath) = "/wavelength-router/media-channels/channel/psd-distribution/psd-value/state/psd"];
  if (this->has_psd()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->psd_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void WavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValue_State::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.PsdDistribution.PsdValue.State)
  GOOGLE_DCHECK_NE(&from, this);
  const WavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValue_State* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const WavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValue_State>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.PsdDistribution.PsdValue.State)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.PsdDistribution.PsdValue.State)
    MergeFrom(*source);
  }
}

void WavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValue_State::MergeFrom(const WavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValue_State& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.PsdDistribution.PsdValue.State)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_lower_frequency()) {
    mutable_lower_frequency()->::ywrapper::UintValue::MergeFrom(from.lower_frequency());
  }
  if (from.has_upper_frequency()) {
    mutable_upper_frequency()->::ywrapper::UintValue::MergeFrom(from.upper_frequency());
  }
  if (from.has_psd()) {
    mutable_psd()->::ywrapper::BytesValue::MergeFrom(from.psd());
  }
}

void WavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValue_State::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.PsdDistribution.PsdValue.State)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValue_State::CopyFrom(const WavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValue_State& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.PsdDistribution.PsdValue.State)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValue_State::IsInitialized() const {
  return true;
}

void WavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValue_State::Swap(WavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValue_State* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValue_State::InternalSwap(WavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValue_State* other) {
  using std::swap;
  swap(lower_frequency_, other->lower_frequency_);
  swap(upper_frequency_, other->upper_frequency_);
  swap(psd_, other->psd_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata WavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValue_State::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5fwavelength_5frouter_2fopenconfig_5fwavelength_5frouter_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fwavelength_5frouter_2fopenconfig_5fwavelength_5frouter_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void WavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValue::InitAsDefaultInstance() {
  ::openconfig::openconfig_wavelength_router::_WavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValue_default_instance_._instance.get_mutable()->config_ = const_cast< ::openconfig::openconfig_wavelength_router::WavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValue_Config*>(
      ::openconfig::openconfig_wavelength_router::WavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValue_Config::internal_default_instance());
  ::openconfig::openconfig_wavelength_router::_WavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValue_default_instance_._instance.get_mutable()->state_ = const_cast< ::openconfig::openconfig_wavelength_router::WavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValue_State*>(
      ::openconfig::openconfig_wavelength_router::WavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValue_State::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValue::kConfigFieldNumber;
const int WavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValue::kStateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValue::WavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValue()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5fwavelength_5frouter_2fopenconfig_5fwavelength_5frouter_2eproto::InitDefaultsWavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValue();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.PsdDistribution.PsdValue)
}
WavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValue::WavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValue(const WavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValue& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_state()) {
    state_ = new ::openconfig::openconfig_wavelength_router::WavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValue_State(*from.state_);
  } else {
    state_ = NULL;
  }
  if (from.has_config()) {
    config_ = new ::openconfig::openconfig_wavelength_router::WavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValue_Config(*from.config_);
  } else {
    config_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.PsdDistribution.PsdValue)
}

void WavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValue::SharedCtor() {
  ::memset(&state_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&config_) -
      reinterpret_cast<char*>(&state_)) + sizeof(config_));
  _cached_size_ = 0;
}

WavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValue::~WavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValue() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.PsdDistribution.PsdValue)
  SharedDtor();
}

void WavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValue::SharedDtor() {
  if (this != internal_default_instance()) delete state_;
  if (this != internal_default_instance()) delete config_;
}

void WavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValue::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* WavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValue::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5fwavelength_5frouter_2fopenconfig_5fwavelength_5frouter_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fwavelength_5frouter_2fopenconfig_5fwavelength_5frouter_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const WavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValue& WavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValue::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5fwavelength_5frouter_2fopenconfig_5fwavelength_5frouter_2eproto::InitDefaultsWavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValue();
  return *internal_default_instance();
}

WavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValue* WavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValue::New(::google::protobuf::Arena* arena) const {
  WavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValue* n = new WavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValue;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void WavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValue::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.PsdDistribution.PsdValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && state_ != NULL) {
    delete state_;
  }
  state_ = NULL;
  if (GetArenaNoVirtual() == NULL && config_ != NULL) {
    delete config_;
  }
  config_ = NULL;
  _internal_metadata_.Clear();
}

bool WavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValue::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.PsdDistribution.PsdValue)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(1135734674u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.PsdDistribution.PsdValue.State state = 19196655 [(.yext.schemapath) = "/wavelength-router/media-channels/channel/psd-distribution/psd-value/state"];
      case 19196655: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 153573242 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_state()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.PsdDistribution.PsdValue.Config config = 141966834 [(.yext.schemapath) = "/wavelength-router/media-channels/channel/psd-distribution/psd-value/config"];
      case 141966834: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u /* 1135734674 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.PsdDistribution.PsdValue)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.PsdDistribution.PsdValue)
  return false;
#undef DO_
}

void WavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValue::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.PsdDistribution.PsdValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.PsdDistribution.PsdValue.State state = 19196655 [(.yext.schemapath) = "/wavelength-router/media-channels/channel/psd-distribution/psd-value/state"];
  if (this->has_state()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      19196655, *this->state_, output);
  }

  // .openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.PsdDistribution.PsdValue.Config config = 141966834 [(.yext.schemapath) = "/wavelength-router/media-channels/channel/psd-distribution/psd-value/config"];
  if (this->has_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      141966834, *this->config_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.PsdDistribution.PsdValue)
}

::google::protobuf::uint8* WavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValue::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.PsdDistribution.PsdValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.PsdDistribution.PsdValue.State state = 19196655 [(.yext.schemapath) = "/wavelength-router/media-channels/channel/psd-distribution/psd-value/state"];
  if (this->has_state()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        19196655, *this->state_, deterministic, target);
  }

  // .openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.PsdDistribution.PsdValue.Config config = 141966834 [(.yext.schemapath) = "/wavelength-router/media-channels/channel/psd-distribution/psd-value/config"];
  if (this->has_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        141966834, *this->config_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.PsdDistribution.PsdValue)
  return target;
}

size_t WavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValue::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.PsdDistribution.PsdValue)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.PsdDistribution.PsdValue.State state = 19196655 [(.yext.schemapath) = "/wavelength-router/media-channels/channel/psd-distribution/psd-value/state"];
  if (this->has_state()) {
    total_size += 4 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->state_);
  }

  // .openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.PsdDistribution.PsdValue.Config config = 141966834 [(.yext.schemapath) = "/wavelength-router/media-channels/channel/psd-distribution/psd-value/config"];
  if (this->has_config()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->config_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void WavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValue::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.PsdDistribution.PsdValue)
  GOOGLE_DCHECK_NE(&from, this);
  const WavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValue* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const WavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValue>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.PsdDistribution.PsdValue)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.PsdDistribution.PsdValue)
    MergeFrom(*source);
  }
}

void WavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValue::MergeFrom(const WavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValue& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.PsdDistribution.PsdValue)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_state()) {
    mutable_state()->::openconfig::openconfig_wavelength_router::WavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValue_State::MergeFrom(from.state());
  }
  if (from.has_config()) {
    mutable_config()->::openconfig::openconfig_wavelength_router::WavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValue_Config::MergeFrom(from.config());
  }
}

void WavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValue::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.PsdDistribution.PsdValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValue::CopyFrom(const WavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValue& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.PsdDistribution.PsdValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValue::IsInitialized() const {
  return true;
}

void WavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValue::Swap(WavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValue* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValue::InternalSwap(WavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValue* other) {
  using std::swap;
  swap(state_, other->state_);
  swap(config_, other->config_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata WavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValue::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5fwavelength_5frouter_2fopenconfig_5fwavelength_5frouter_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fwavelength_5frouter_2fopenconfig_5fwavelength_5frouter_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void WavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValueKey::InitAsDefaultInstance() {
  ::openconfig::openconfig_wavelength_router::_WavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValueKey_default_instance_._instance.get_mutable()->psd_value_ = const_cast< ::openconfig::openconfig_wavelength_router::WavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValue*>(
      ::openconfig::openconfig_wavelength_router::WavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValue::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValueKey::kLowerFrequencyFieldNumber;
const int WavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValueKey::kUpperFrequencyFieldNumber;
const int WavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValueKey::kPsdValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValueKey::WavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValueKey()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5fwavelength_5frouter_2fopenconfig_5fwavelength_5frouter_2eproto::InitDefaultsWavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValueKey();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.PsdDistribution.PsdValueKey)
}
WavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValueKey::WavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValueKey(const WavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValueKey& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_psd_value()) {
    psd_value_ = new ::openconfig::openconfig_wavelength_router::WavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValue(*from.psd_value_);
  } else {
    psd_value_ = NULL;
  }
  ::memcpy(&lower_frequency_, &from.lower_frequency_,
    static_cast<size_t>(reinterpret_cast<char*>(&upper_frequency_) -
    reinterpret_cast<char*>(&lower_frequency_)) + sizeof(upper_frequency_));
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.PsdDistribution.PsdValueKey)
}

void WavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValueKey::SharedCtor() {
  ::memset(&psd_value_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&upper_frequency_) -
      reinterpret_cast<char*>(&psd_value_)) + sizeof(upper_frequency_));
  _cached_size_ = 0;
}

WavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValueKey::~WavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValueKey() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.PsdDistribution.PsdValueKey)
  SharedDtor();
}

void WavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValueKey::SharedDtor() {
  if (this != internal_default_instance()) delete psd_value_;
}

void WavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValueKey::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* WavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValueKey::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5fwavelength_5frouter_2fopenconfig_5fwavelength_5frouter_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fwavelength_5frouter_2fopenconfig_5fwavelength_5frouter_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const WavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValueKey& WavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValueKey::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5fwavelength_5frouter_2fopenconfig_5fwavelength_5frouter_2eproto::InitDefaultsWavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValueKey();
  return *internal_default_instance();
}

WavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValueKey* WavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValueKey::New(::google::protobuf::Arena* arena) const {
  WavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValueKey* n = new WavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValueKey;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void WavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValueKey::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.PsdDistribution.PsdValueKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && psd_value_ != NULL) {
    delete psd_value_;
  }
  psd_value_ = NULL;
  ::memset(&lower_frequency_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&upper_frequency_) -
      reinterpret_cast<char*>(&lower_frequency_)) + sizeof(upper_frequency_));
  _internal_metadata_.Clear();
}

bool WavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValueKey::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.PsdDistribution.PsdValueKey)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 lower_frequency = 1 [(.yext.schemapath) = "/wavelength-router/media-channels/channel/psd-distribution/psd-value/lower-frequency"];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &lower_frequency_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 upper_frequency = 2 [(.yext.schemapath) = "/wavelength-router/media-channels/channel/psd-distribution/psd-value/upper-frequency"];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &upper_frequency_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.PsdDistribution.PsdValue psd_value = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_psd_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.PsdDistribution.PsdValueKey)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.PsdDistribution.PsdValueKey)
  return false;
#undef DO_
}

void WavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValueKey::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.PsdDistribution.PsdValueKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 lower_frequency = 1 [(.yext.schemapath) = "/wavelength-router/media-channels/channel/psd-distribution/psd-value/lower-frequency"];
  if (this->lower_frequency() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->lower_frequency(), output);
  }

  // uint64 upper_frequency = 2 [(.yext.schemapath) = "/wavelength-router/media-channels/channel/psd-distribution/psd-value/upper-frequency"];
  if (this->upper_frequency() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->upper_frequency(), output);
  }

  // .openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.PsdDistribution.PsdValue psd_value = 3;
  if (this->has_psd_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->psd_value_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.PsdDistribution.PsdValueKey)
}

::google::protobuf::uint8* WavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValueKey::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.PsdDistribution.PsdValueKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 lower_frequency = 1 [(.yext.schemapath) = "/wavelength-router/media-channels/channel/psd-distribution/psd-value/lower-frequency"];
  if (this->lower_frequency() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->lower_frequency(), target);
  }

  // uint64 upper_frequency = 2 [(.yext.schemapath) = "/wavelength-router/media-channels/channel/psd-distribution/psd-value/upper-frequency"];
  if (this->upper_frequency() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->upper_frequency(), target);
  }

  // .openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.PsdDistribution.PsdValue psd_value = 3;
  if (this->has_psd_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *this->psd_value_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.PsdDistribution.PsdValueKey)
  return target;
}

size_t WavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValueKey::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.PsdDistribution.PsdValueKey)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.PsdDistribution.PsdValue psd_value = 3;
  if (this->has_psd_value()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->psd_value_);
  }

  // uint64 lower_frequency = 1 [(.yext.schemapath) = "/wavelength-router/media-channels/channel/psd-distribution/psd-value/lower-frequency"];
  if (this->lower_frequency() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->lower_frequency());
  }

  // uint64 upper_frequency = 2 [(.yext.schemapath) = "/wavelength-router/media-channels/channel/psd-distribution/psd-value/upper-frequency"];
  if (this->upper_frequency() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->upper_frequency());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void WavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValueKey::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.PsdDistribution.PsdValueKey)
  GOOGLE_DCHECK_NE(&from, this);
  const WavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValueKey* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const WavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValueKey>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.PsdDistribution.PsdValueKey)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.PsdDistribution.PsdValueKey)
    MergeFrom(*source);
  }
}

void WavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValueKey::MergeFrom(const WavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValueKey& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.PsdDistribution.PsdValueKey)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_psd_value()) {
    mutable_psd_value()->::openconfig::openconfig_wavelength_router::WavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValue::MergeFrom(from.psd_value());
  }
  if (from.lower_frequency() != 0) {
    set_lower_frequency(from.lower_frequency());
  }
  if (from.upper_frequency() != 0) {
    set_upper_frequency(from.upper_frequency());
  }
}

void WavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValueKey::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.PsdDistribution.PsdValueKey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValueKey::CopyFrom(const WavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValueKey& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.PsdDistribution.PsdValueKey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValueKey::IsInitialized() const {
  return true;
}

void WavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValueKey::Swap(WavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValueKey* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValueKey::InternalSwap(WavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValueKey* other) {
  using std::swap;
  swap(psd_value_, other->psd_value_);
  swap(lower_frequency_, other->lower_frequency_);
  swap(upper_frequency_, other->upper_frequency_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata WavelengthRouter_MediaChannels_Channel_PsdDistribution_PsdValueKey::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5fwavelength_5frouter_2fopenconfig_5fwavelength_5frouter_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fwavelength_5frouter_2fopenconfig_5fwavelength_5frouter_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void WavelengthRouter_MediaChannels_Channel_PsdDistribution::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WavelengthRouter_MediaChannels_Channel_PsdDistribution::kPsdValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WavelengthRouter_MediaChannels_Channel_PsdDistribution::WavelengthRouter_MediaChannels_Channel_PsdDistribution()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5fwavelength_5frouter_2fopenconfig_5fwavelength_5frouter_2eproto::InitDefaultsWavelengthRouter_MediaChannels_Channel_PsdDistribution();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.PsdDistribution)
}
WavelengthRouter_MediaChannels_Channel_PsdDistribution::WavelengthRouter_MediaChannels_Channel_PsdDistribution(const WavelengthRouter_MediaChannels_Channel_PsdDistribution& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      psd_value_(from.psd_value_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.PsdDistribution)
}

void WavelengthRouter_MediaChannels_Channel_PsdDistribution::SharedCtor() {
  _cached_size_ = 0;
}

WavelengthRouter_MediaChannels_Channel_PsdDistribution::~WavelengthRouter_MediaChannels_Channel_PsdDistribution() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.PsdDistribution)
  SharedDtor();
}

void WavelengthRouter_MediaChannels_Channel_PsdDistribution::SharedDtor() {
}

void WavelengthRouter_MediaChannels_Channel_PsdDistribution::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* WavelengthRouter_MediaChannels_Channel_PsdDistribution::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5fwavelength_5frouter_2fopenconfig_5fwavelength_5frouter_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fwavelength_5frouter_2fopenconfig_5fwavelength_5frouter_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const WavelengthRouter_MediaChannels_Channel_PsdDistribution& WavelengthRouter_MediaChannels_Channel_PsdDistribution::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5fwavelength_5frouter_2fopenconfig_5fwavelength_5frouter_2eproto::InitDefaultsWavelengthRouter_MediaChannels_Channel_PsdDistribution();
  return *internal_default_instance();
}

WavelengthRouter_MediaChannels_Channel_PsdDistribution* WavelengthRouter_MediaChannels_Channel_PsdDistribution::New(::google::protobuf::Arena* arena) const {
  WavelengthRouter_MediaChannels_Channel_PsdDistribution* n = new WavelengthRouter_MediaChannels_Channel_PsdDistribution;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void WavelengthRouter_MediaChannels_Channel_PsdDistribution::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.PsdDistribution)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  psd_value_.Clear();
  _internal_metadata_.Clear();
}

bool WavelengthRouter_MediaChannels_Channel_PsdDistribution::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.PsdDistribution)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(2806732266u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.PsdDistribution.PsdValueKey psd_value = 350841533 [(.yext.schemapath) = "/wavelength-router/media-channels/channel/psd-distribution/psd-value"];
      case 350841533: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(234u /* 2806732266 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_psd_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.PsdDistribution)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.PsdDistribution)
  return false;
#undef DO_
}

void WavelengthRouter_MediaChannels_Channel_PsdDistribution::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.PsdDistribution)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.PsdDistribution.PsdValueKey psd_value = 350841533 [(.yext.schemapath) = "/wavelength-router/media-channels/channel/psd-distribution/psd-value"];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->psd_value_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      350841533, this->psd_value(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.PsdDistribution)
}

::google::protobuf::uint8* WavelengthRouter_MediaChannels_Channel_PsdDistribution::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.PsdDistribution)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.PsdDistribution.PsdValueKey psd_value = 350841533 [(.yext.schemapath) = "/wavelength-router/media-channels/channel/psd-distribution/psd-value"];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->psd_value_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        350841533, this->psd_value(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.PsdDistribution)
  return target;
}

size_t WavelengthRouter_MediaChannels_Channel_PsdDistribution::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.PsdDistribution)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.PsdDistribution.PsdValueKey psd_value = 350841533 [(.yext.schemapath) = "/wavelength-router/media-channels/channel/psd-distribution/psd-value"];
  {
    unsigned int count = static_cast<unsigned int>(this->psd_value_size());
    total_size += 5UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->psd_value(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void WavelengthRouter_MediaChannels_Channel_PsdDistribution::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.PsdDistribution)
  GOOGLE_DCHECK_NE(&from, this);
  const WavelengthRouter_MediaChannels_Channel_PsdDistribution* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const WavelengthRouter_MediaChannels_Channel_PsdDistribution>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.PsdDistribution)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.PsdDistribution)
    MergeFrom(*source);
  }
}

void WavelengthRouter_MediaChannels_Channel_PsdDistribution::MergeFrom(const WavelengthRouter_MediaChannels_Channel_PsdDistribution& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.PsdDistribution)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  psd_value_.MergeFrom(from.psd_value_);
}

void WavelengthRouter_MediaChannels_Channel_PsdDistribution::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.PsdDistribution)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WavelengthRouter_MediaChannels_Channel_PsdDistribution::CopyFrom(const WavelengthRouter_MediaChannels_Channel_PsdDistribution& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.PsdDistribution)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WavelengthRouter_MediaChannels_Channel_PsdDistribution::IsInitialized() const {
  return true;
}

void WavelengthRouter_MediaChannels_Channel_PsdDistribution::Swap(WavelengthRouter_MediaChannels_Channel_PsdDistribution* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WavelengthRouter_MediaChannels_Channel_PsdDistribution::InternalSwap(WavelengthRouter_MediaChannels_Channel_PsdDistribution* other) {
  using std::swap;
  psd_value_.InternalSwap(&other->psd_value_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata WavelengthRouter_MediaChannels_Channel_PsdDistribution::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5fwavelength_5frouter_2fopenconfig_5fwavelength_5frouter_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fwavelength_5frouter_2fopenconfig_5fwavelength_5frouter_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void WavelengthRouter_MediaChannels_Channel_Source_Config::InitAsDefaultInstance() {
  ::openconfig::openconfig_wavelength_router::_WavelengthRouter_MediaChannels_Channel_Source_Config_default_instance_._instance.get_mutable()->port_name_ = const_cast< ::ywrapper::StringValue*>(
      ::ywrapper::StringValue::internal_default_instance());
}
void WavelengthRouter_MediaChannels_Channel_Source_Config::clear_port_name() {
  if (GetArenaNoVirtual() == NULL && port_name_ != NULL) {
    delete port_name_;
  }
  port_name_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WavelengthRouter_MediaChannels_Channel_Source_Config::kPortNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WavelengthRouter_MediaChannels_Channel_Source_Config::WavelengthRouter_MediaChannels_Channel_Source_Config()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5fwavelength_5frouter_2fopenconfig_5fwavelength_5frouter_2eproto::InitDefaultsWavelengthRouter_MediaChannels_Channel_Source_Config();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.Source.Config)
}
WavelengthRouter_MediaChannels_Channel_Source_Config::WavelengthRouter_MediaChannels_Channel_Source_Config(const WavelengthRouter_MediaChannels_Channel_Source_Config& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_port_name()) {
    port_name_ = new ::ywrapper::StringValue(*from.port_name_);
  } else {
    port_name_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.Source.Config)
}

void WavelengthRouter_MediaChannels_Channel_Source_Config::SharedCtor() {
  port_name_ = NULL;
  _cached_size_ = 0;
}

WavelengthRouter_MediaChannels_Channel_Source_Config::~WavelengthRouter_MediaChannels_Channel_Source_Config() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.Source.Config)
  SharedDtor();
}

void WavelengthRouter_MediaChannels_Channel_Source_Config::SharedDtor() {
  if (this != internal_default_instance()) delete port_name_;
}

void WavelengthRouter_MediaChannels_Channel_Source_Config::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* WavelengthRouter_MediaChannels_Channel_Source_Config::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5fwavelength_5frouter_2fopenconfig_5fwavelength_5frouter_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fwavelength_5frouter_2fopenconfig_5fwavelength_5frouter_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const WavelengthRouter_MediaChannels_Channel_Source_Config& WavelengthRouter_MediaChannels_Channel_Source_Config::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5fwavelength_5frouter_2fopenconfig_5fwavelength_5frouter_2eproto::InitDefaultsWavelengthRouter_MediaChannels_Channel_Source_Config();
  return *internal_default_instance();
}

WavelengthRouter_MediaChannels_Channel_Source_Config* WavelengthRouter_MediaChannels_Channel_Source_Config::New(::google::protobuf::Arena* arena) const {
  WavelengthRouter_MediaChannels_Channel_Source_Config* n = new WavelengthRouter_MediaChannels_Channel_Source_Config;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void WavelengthRouter_MediaChannels_Channel_Source_Config::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.Source.Config)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && port_name_ != NULL) {
    delete port_name_;
  }
  port_name_ = NULL;
  _internal_metadata_.Clear();
}

bool WavelengthRouter_MediaChannels_Channel_Source_Config::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.Source.Config)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(2902825674u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .ywrapper.StringValue port_name = 362853209 [(.yext.schemapath) = "/wavelength-router/media-channels/channel/source/config/port-name"];
      case 362853209: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(202u /* 2902825674 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_port_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.Source.Config)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.Source.Config)
  return false;
#undef DO_
}

void WavelengthRouter_MediaChannels_Channel_Source_Config::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.Source.Config)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ywrapper.StringValue port_name = 362853209 [(.yext.schemapath) = "/wavelength-router/media-channels/channel/source/config/port-name"];
  if (this->has_port_name()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      362853209, *this->port_name_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.Source.Config)
}

::google::protobuf::uint8* WavelengthRouter_MediaChannels_Channel_Source_Config::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.Source.Config)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ywrapper.StringValue port_name = 362853209 [(.yext.schemapath) = "/wavelength-router/media-channels/channel/source/config/port-name"];
  if (this->has_port_name()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        362853209, *this->port_name_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.Source.Config)
  return target;
}

size_t WavelengthRouter_MediaChannels_Channel_Source_Config::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.Source.Config)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .ywrapper.StringValue port_name = 362853209 [(.yext.schemapath) = "/wavelength-router/media-channels/channel/source/config/port-name"];
  if (this->has_port_name()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->port_name_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void WavelengthRouter_MediaChannels_Channel_Source_Config::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.Source.Config)
  GOOGLE_DCHECK_NE(&from, this);
  const WavelengthRouter_MediaChannels_Channel_Source_Config* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const WavelengthRouter_MediaChannels_Channel_Source_Config>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.Source.Config)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.Source.Config)
    MergeFrom(*source);
  }
}

void WavelengthRouter_MediaChannels_Channel_Source_Config::MergeFrom(const WavelengthRouter_MediaChannels_Channel_Source_Config& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.Source.Config)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_port_name()) {
    mutable_port_name()->::ywrapper::StringValue::MergeFrom(from.port_name());
  }
}

void WavelengthRouter_MediaChannels_Channel_Source_Config::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.Source.Config)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WavelengthRouter_MediaChannels_Channel_Source_Config::CopyFrom(const WavelengthRouter_MediaChannels_Channel_Source_Config& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.Source.Config)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WavelengthRouter_MediaChannels_Channel_Source_Config::IsInitialized() const {
  return true;
}

void WavelengthRouter_MediaChannels_Channel_Source_Config::Swap(WavelengthRouter_MediaChannels_Channel_Source_Config* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WavelengthRouter_MediaChannels_Channel_Source_Config::InternalSwap(WavelengthRouter_MediaChannels_Channel_Source_Config* other) {
  using std::swap;
  swap(port_name_, other->port_name_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata WavelengthRouter_MediaChannels_Channel_Source_Config::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5fwavelength_5frouter_2fopenconfig_5fwavelength_5frouter_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fwavelength_5frouter_2fopenconfig_5fwavelength_5frouter_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void WavelengthRouter_MediaChannels_Channel_Source_State::InitAsDefaultInstance() {
  ::openconfig::openconfig_wavelength_router::_WavelengthRouter_MediaChannels_Channel_Source_State_default_instance_._instance.get_mutable()->port_name_ = const_cast< ::ywrapper::StringValue*>(
      ::ywrapper::StringValue::internal_default_instance());
}
void WavelengthRouter_MediaChannels_Channel_Source_State::clear_port_name() {
  if (GetArenaNoVirtual() == NULL && port_name_ != NULL) {
    delete port_name_;
  }
  port_name_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WavelengthRouter_MediaChannels_Channel_Source_State::kPortNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WavelengthRouter_MediaChannels_Channel_Source_State::WavelengthRouter_MediaChannels_Channel_Source_State()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5fwavelength_5frouter_2fopenconfig_5fwavelength_5frouter_2eproto::InitDefaultsWavelengthRouter_MediaChannels_Channel_Source_State();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.Source.State)
}
WavelengthRouter_MediaChannels_Channel_Source_State::WavelengthRouter_MediaChannels_Channel_Source_State(const WavelengthRouter_MediaChannels_Channel_Source_State& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_port_name()) {
    port_name_ = new ::ywrapper::StringValue(*from.port_name_);
  } else {
    port_name_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.Source.State)
}

void WavelengthRouter_MediaChannels_Channel_Source_State::SharedCtor() {
  port_name_ = NULL;
  _cached_size_ = 0;
}

WavelengthRouter_MediaChannels_Channel_Source_State::~WavelengthRouter_MediaChannels_Channel_Source_State() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.Source.State)
  SharedDtor();
}

void WavelengthRouter_MediaChannels_Channel_Source_State::SharedDtor() {
  if (this != internal_default_instance()) delete port_name_;
}

void WavelengthRouter_MediaChannels_Channel_Source_State::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* WavelengthRouter_MediaChannels_Channel_Source_State::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5fwavelength_5frouter_2fopenconfig_5fwavelength_5frouter_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fwavelength_5frouter_2fopenconfig_5fwavelength_5frouter_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const WavelengthRouter_MediaChannels_Channel_Source_State& WavelengthRouter_MediaChannels_Channel_Source_State::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5fwavelength_5frouter_2fopenconfig_5fwavelength_5frouter_2eproto::InitDefaultsWavelengthRouter_MediaChannels_Channel_Source_State();
  return *internal_default_instance();
}

WavelengthRouter_MediaChannels_Channel_Source_State* WavelengthRouter_MediaChannels_Channel_Source_State::New(::google::protobuf::Arena* arena) const {
  WavelengthRouter_MediaChannels_Channel_Source_State* n = new WavelengthRouter_MediaChannels_Channel_Source_State;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void WavelengthRouter_MediaChannels_Channel_Source_State::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.Source.State)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && port_name_ != NULL) {
    delete port_name_;
  }
  port_name_ = NULL;
  _internal_metadata_.Clear();
}

bool WavelengthRouter_MediaChannels_Channel_Source_State::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.Source.State)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(78897234u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .ywrapper.StringValue port_name = 9862154 [(.yext.schemapath) = "/wavelength-router/media-channels/channel/source/state/port-name"];
      case 9862154: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 78897234 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_port_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.Source.State)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.Source.State)
  return false;
#undef DO_
}

void WavelengthRouter_MediaChannels_Channel_Source_State::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.Source.State)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ywrapper.StringValue port_name = 9862154 [(.yext.schemapath) = "/wavelength-router/media-channels/channel/source/state/port-name"];
  if (this->has_port_name()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9862154, *this->port_name_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.Source.State)
}

::google::protobuf::uint8* WavelengthRouter_MediaChannels_Channel_Source_State::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.Source.State)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ywrapper.StringValue port_name = 9862154 [(.yext.schemapath) = "/wavelength-router/media-channels/channel/source/state/port-name"];
  if (this->has_port_name()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9862154, *this->port_name_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.Source.State)
  return target;
}

size_t WavelengthRouter_MediaChannels_Channel_Source_State::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.Source.State)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .ywrapper.StringValue port_name = 9862154 [(.yext.schemapath) = "/wavelength-router/media-channels/channel/source/state/port-name"];
  if (this->has_port_name()) {
    total_size += 4 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->port_name_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void WavelengthRouter_MediaChannels_Channel_Source_State::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.Source.State)
  GOOGLE_DCHECK_NE(&from, this);
  const WavelengthRouter_MediaChannels_Channel_Source_State* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const WavelengthRouter_MediaChannels_Channel_Source_State>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.Source.State)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.Source.State)
    MergeFrom(*source);
  }
}

void WavelengthRouter_MediaChannels_Channel_Source_State::MergeFrom(const WavelengthRouter_MediaChannels_Channel_Source_State& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.Source.State)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_port_name()) {
    mutable_port_name()->::ywrapper::StringValue::MergeFrom(from.port_name());
  }
}

void WavelengthRouter_MediaChannels_Channel_Source_State::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.Source.State)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WavelengthRouter_MediaChannels_Channel_Source_State::CopyFrom(const WavelengthRouter_MediaChannels_Channel_Source_State& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.Source.State)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WavelengthRouter_MediaChannels_Channel_Source_State::IsInitialized() const {
  return true;
}

void WavelengthRouter_MediaChannels_Channel_Source_State::Swap(WavelengthRouter_MediaChannels_Channel_Source_State* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WavelengthRouter_MediaChannels_Channel_Source_State::InternalSwap(WavelengthRouter_MediaChannels_Channel_Source_State* other) {
  using std::swap;
  swap(port_name_, other->port_name_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata WavelengthRouter_MediaChannels_Channel_Source_State::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5fwavelength_5frouter_2fopenconfig_5fwavelength_5frouter_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fwavelength_5frouter_2fopenconfig_5fwavelength_5frouter_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void WavelengthRouter_MediaChannels_Channel_Source::InitAsDefaultInstance() {
  ::openconfig::openconfig_wavelength_router::_WavelengthRouter_MediaChannels_Channel_Source_default_instance_._instance.get_mutable()->config_ = const_cast< ::openconfig::openconfig_wavelength_router::WavelengthRouter_MediaChannels_Channel_Source_Config*>(
      ::openconfig::openconfig_wavelength_router::WavelengthRouter_MediaChannels_Channel_Source_Config::internal_default_instance());
  ::openconfig::openconfig_wavelength_router::_WavelengthRouter_MediaChannels_Channel_Source_default_instance_._instance.get_mutable()->state_ = const_cast< ::openconfig::openconfig_wavelength_router::WavelengthRouter_MediaChannels_Channel_Source_State*>(
      ::openconfig::openconfig_wavelength_router::WavelengthRouter_MediaChannels_Channel_Source_State::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WavelengthRouter_MediaChannels_Channel_Source::kConfigFieldNumber;
const int WavelengthRouter_MediaChannels_Channel_Source::kStateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WavelengthRouter_MediaChannels_Channel_Source::WavelengthRouter_MediaChannels_Channel_Source()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5fwavelength_5frouter_2fopenconfig_5fwavelength_5frouter_2eproto::InitDefaultsWavelengthRouter_MediaChannels_Channel_Source();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.Source)
}
WavelengthRouter_MediaChannels_Channel_Source::WavelengthRouter_MediaChannels_Channel_Source(const WavelengthRouter_MediaChannels_Channel_Source& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_state()) {
    state_ = new ::openconfig::openconfig_wavelength_router::WavelengthRouter_MediaChannels_Channel_Source_State(*from.state_);
  } else {
    state_ = NULL;
  }
  if (from.has_config()) {
    config_ = new ::openconfig::openconfig_wavelength_router::WavelengthRouter_MediaChannels_Channel_Source_Config(*from.config_);
  } else {
    config_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.Source)
}

void WavelengthRouter_MediaChannels_Channel_Source::SharedCtor() {
  ::memset(&state_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&config_) -
      reinterpret_cast<char*>(&state_)) + sizeof(config_));
  _cached_size_ = 0;
}

WavelengthRouter_MediaChannels_Channel_Source::~WavelengthRouter_MediaChannels_Channel_Source() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.Source)
  SharedDtor();
}

void WavelengthRouter_MediaChannels_Channel_Source::SharedDtor() {
  if (this != internal_default_instance()) delete state_;
  if (this != internal_default_instance()) delete config_;
}

void WavelengthRouter_MediaChannels_Channel_Source::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* WavelengthRouter_MediaChannels_Channel_Source::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5fwavelength_5frouter_2fopenconfig_5fwavelength_5frouter_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fwavelength_5frouter_2fopenconfig_5fwavelength_5frouter_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const WavelengthRouter_MediaChannels_Channel_Source& WavelengthRouter_MediaChannels_Channel_Source::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5fwavelength_5frouter_2fopenconfig_5fwavelength_5frouter_2eproto::InitDefaultsWavelengthRouter_MediaChannels_Channel_Source();
  return *internal_default_instance();
}

WavelengthRouter_MediaChannels_Channel_Source* WavelengthRouter_MediaChannels_Channel_Source::New(::google::protobuf::Arena* arena) const {
  WavelengthRouter_MediaChannels_Channel_Source* n = new WavelengthRouter_MediaChannels_Channel_Source;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void WavelengthRouter_MediaChannels_Channel_Source::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.Source)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && state_ != NULL) {
    delete state_;
  }
  state_ = NULL;
  if (GetArenaNoVirtual() == NULL && config_ != NULL) {
    delete config_;
  }
  config_ = NULL;
  _internal_metadata_.Clear();
}

bool WavelengthRouter_MediaChannels_Channel_Source::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.Source)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(3905201370u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.Source.State state = 176255644 [(.yext.schemapath) = "/wavelength-router/media-channels/channel/source/state"];
      case 176255644: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(226u /* 1410045154 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_state()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.Source.Config config = 488150171 [(.yext.schemapath) = "/wavelength-router/media-channels/channel/source/config"];
      case 488150171: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(218u /* 3905201370 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.Source)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.Source)
  return false;
#undef DO_
}

void WavelengthRouter_MediaChannels_Channel_Source::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.Source)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.Source.State state = 176255644 [(.yext.schemapath) = "/wavelength-router/media-channels/channel/source/state"];
  if (this->has_state()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      176255644, *this->state_, output);
  }

  // .openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.Source.Config config = 488150171 [(.yext.schemapath) = "/wavelength-router/media-channels/channel/source/config"];
  if (this->has_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      488150171, *this->config_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.Source)
}

::google::protobuf::uint8* WavelengthRouter_MediaChannels_Channel_Source::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.Source)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.Source.State state = 176255644 [(.yext.schemapath) = "/wavelength-router/media-channels/channel/source/state"];
  if (this->has_state()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        176255644, *this->state_, deterministic, target);
  }

  // .openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.Source.Config config = 488150171 [(.yext.schemapath) = "/wavelength-router/media-channels/channel/source/config"];
  if (this->has_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        488150171, *this->config_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.Source)
  return target;
}

size_t WavelengthRouter_MediaChannels_Channel_Source::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.Source)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.Source.State state = 176255644 [(.yext.schemapath) = "/wavelength-router/media-channels/channel/source/state"];
  if (this->has_state()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->state_);
  }

  // .openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.Source.Config config = 488150171 [(.yext.schemapath) = "/wavelength-router/media-channels/channel/source/config"];
  if (this->has_config()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->config_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void WavelengthRouter_MediaChannels_Channel_Source::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.Source)
  GOOGLE_DCHECK_NE(&from, this);
  const WavelengthRouter_MediaChannels_Channel_Source* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const WavelengthRouter_MediaChannels_Channel_Source>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.Source)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.Source)
    MergeFrom(*source);
  }
}

void WavelengthRouter_MediaChannels_Channel_Source::MergeFrom(const WavelengthRouter_MediaChannels_Channel_Source& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.Source)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_state()) {
    mutable_state()->::openconfig::openconfig_wavelength_router::WavelengthRouter_MediaChannels_Channel_Source_State::MergeFrom(from.state());
  }
  if (from.has_config()) {
    mutable_config()->::openconfig::openconfig_wavelength_router::WavelengthRouter_MediaChannels_Channel_Source_Config::MergeFrom(from.config());
  }
}

void WavelengthRouter_MediaChannels_Channel_Source::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.Source)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WavelengthRouter_MediaChannels_Channel_Source::CopyFrom(const WavelengthRouter_MediaChannels_Channel_Source& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.Source)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WavelengthRouter_MediaChannels_Channel_Source::IsInitialized() const {
  return true;
}

void WavelengthRouter_MediaChannels_Channel_Source::Swap(WavelengthRouter_MediaChannels_Channel_Source* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WavelengthRouter_MediaChannels_Channel_Source::InternalSwap(WavelengthRouter_MediaChannels_Channel_Source* other) {
  using std::swap;
  swap(state_, other->state_);
  swap(config_, other->config_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata WavelengthRouter_MediaChannels_Channel_Source::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5fwavelength_5frouter_2fopenconfig_5fwavelength_5frouter_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fwavelength_5frouter_2fopenconfig_5fwavelength_5frouter_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void WavelengthRouter_MediaChannels_Channel_State::InitAsDefaultInstance() {
  ::openconfig::openconfig_wavelength_router::_WavelengthRouter_MediaChannels_Channel_State_default_instance_._instance.get_mutable()->index_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
  ::openconfig::openconfig_wavelength_router::_WavelengthRouter_MediaChannels_Channel_State_default_instance_._instance.get_mutable()->lower_frequency_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
  ::openconfig::openconfig_wavelength_router::_WavelengthRouter_MediaChannels_Channel_State_default_instance_._instance.get_mutable()->name_ = const_cast< ::ywrapper::StringValue*>(
      ::ywrapper::StringValue::internal_default_instance());
  ::openconfig::openconfig_wavelength_router::_WavelengthRouter_MediaChannels_Channel_State_default_instance_._instance.get_mutable()->upper_frequency_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
}
void WavelengthRouter_MediaChannels_Channel_State::clear_index() {
  if (GetArenaNoVirtual() == NULL && index_ != NULL) {
    delete index_;
  }
  index_ = NULL;
}
void WavelengthRouter_MediaChannels_Channel_State::clear_lower_frequency() {
  if (GetArenaNoVirtual() == NULL && lower_frequency_ != NULL) {
    delete lower_frequency_;
  }
  lower_frequency_ = NULL;
}
void WavelengthRouter_MediaChannels_Channel_State::clear_name() {
  if (GetArenaNoVirtual() == NULL && name_ != NULL) {
    delete name_;
  }
  name_ = NULL;
}
void WavelengthRouter_MediaChannels_Channel_State::clear_upper_frequency() {
  if (GetArenaNoVirtual() == NULL && upper_frequency_ != NULL) {
    delete upper_frequency_;
  }
  upper_frequency_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WavelengthRouter_MediaChannels_Channel_State::kAdminStatusFieldNumber;
const int WavelengthRouter_MediaChannels_Channel_State::kIndexFieldNumber;
const int WavelengthRouter_MediaChannels_Channel_State::kLowerFrequencyFieldNumber;
const int WavelengthRouter_MediaChannels_Channel_State::kNameFieldNumber;
const int WavelengthRouter_MediaChannels_Channel_State::kOperStatusFieldNumber;
const int WavelengthRouter_MediaChannels_Channel_State::kUpperFrequencyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WavelengthRouter_MediaChannels_Channel_State::WavelengthRouter_MediaChannels_Channel_State()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5fwavelength_5frouter_2fopenconfig_5fwavelength_5frouter_2eproto::InitDefaultsWavelengthRouter_MediaChannels_Channel_State();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.State)
}
WavelengthRouter_MediaChannels_Channel_State::WavelengthRouter_MediaChannels_Channel_State(const WavelengthRouter_MediaChannels_Channel_State& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_lower_frequency()) {
    lower_frequency_ = new ::ywrapper::UintValue(*from.lower_frequency_);
  } else {
    lower_frequency_ = NULL;
  }
  if (from.has_index()) {
    index_ = new ::ywrapper::UintValue(*from.index_);
  } else {
    index_ = NULL;
  }
  if (from.has_name()) {
    name_ = new ::ywrapper::StringValue(*from.name_);
  } else {
    name_ = NULL;
  }
  if (from.has_upper_frequency()) {
    upper_frequency_ = new ::ywrapper::UintValue(*from.upper_frequency_);
  } else {
    upper_frequency_ = NULL;
  }
  ::memcpy(&admin_status_, &from.admin_status_,
    static_cast<size_t>(reinterpret_cast<char*>(&oper_status_) -
    reinterpret_cast<char*>(&admin_status_)) + sizeof(oper_status_));
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.State)
}

void WavelengthRouter_MediaChannels_Channel_State::SharedCtor() {
  ::memset(&lower_frequency_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&oper_status_) -
      reinterpret_cast<char*>(&lower_frequency_)) + sizeof(oper_status_));
  _cached_size_ = 0;
}

WavelengthRouter_MediaChannels_Channel_State::~WavelengthRouter_MediaChannels_Channel_State() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.State)
  SharedDtor();
}

void WavelengthRouter_MediaChannels_Channel_State::SharedDtor() {
  if (this != internal_default_instance()) delete lower_frequency_;
  if (this != internal_default_instance()) delete index_;
  if (this != internal_default_instance()) delete name_;
  if (this != internal_default_instance()) delete upper_frequency_;
}

void WavelengthRouter_MediaChannels_Channel_State::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* WavelengthRouter_MediaChannels_Channel_State::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5fwavelength_5frouter_2fopenconfig_5fwavelength_5frouter_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fwavelength_5frouter_2fopenconfig_5fwavelength_5frouter_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const WavelengthRouter_MediaChannels_Channel_State& WavelengthRouter_MediaChannels_Channel_State::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5fwavelength_5frouter_2fopenconfig_5fwavelength_5frouter_2eproto::InitDefaultsWavelengthRouter_MediaChannels_Channel_State();
  return *internal_default_instance();
}

WavelengthRouter_MediaChannels_Channel_State* WavelengthRouter_MediaChannels_Channel_State::New(::google::protobuf::Arena* arena) const {
  WavelengthRouter_MediaChannels_Channel_State* n = new WavelengthRouter_MediaChannels_Channel_State;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void WavelengthRouter_MediaChannels_Channel_State::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.State)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && lower_frequency_ != NULL) {
    delete lower_frequency_;
  }
  lower_frequency_ = NULL;
  if (GetArenaNoVirtual() == NULL && index_ != NULL) {
    delete index_;
  }
  index_ = NULL;
  if (GetArenaNoVirtual() == NULL && name_ != NULL) {
    delete name_;
  }
  name_ = NULL;
  if (GetArenaNoVirtual() == NULL && upper_frequency_ != NULL) {
    delete upper_frequency_;
  }
  upper_frequency_ = NULL;
  ::memset(&admin_status_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&oper_status_) -
      reinterpret_cast<char*>(&admin_status_)) + sizeof(oper_status_));
  _internal_metadata_.Clear();
}

bool WavelengthRouter_MediaChannels_Channel_State::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.State)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(4214441040u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .ywrapper.UintValue lower_frequency = 62283199 [(.yext.schemapath) = "/wavelength-router/media-channels/channel/state/lower-frequency"];
      case 62283199: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(250u /* 498265594 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_lower_frequency()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.UintValue index = 221912741 [(.yext.schemapath) = "/wavelength-router/media-channels/channel/state/index"];
      case 221912741: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 1775301930 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_index()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.StringValue name = 288898326 [(.yext.schemapath) = "/wavelength-router/media-channels/channel/state/name"];
      case 288898326: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(178u /* 2311186610 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.enums.OpenconfigWavelengthRouterAdminStateType admin_status = 320367411 [(.yext.schemapath) = "/wavelength-router/media-channels/channel/state/admin-status"];
      case 320367411: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(152u /* 2562939288 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_admin_status(static_cast< ::openconfig::enums::OpenconfigWavelengthRouterAdminStateType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.UintValue upper_frequency = 422717604 [(.yext.schemapath) = "/wavelength-router/media-channels/channel/state/upper-frequency"];
      case 422717604: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 3381740834 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_upper_frequency()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.State.OperStatus oper_status = 526805130 [(.yext.schemapath) = "/wavelength-router/media-channels/channel/state/oper-status"];
      case 526805130: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 4214441040 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_oper_status(static_cast< ::openconfig::openconfig_wavelength_router::WavelengthRouter_MediaChannels_Channel_State_OperStatus >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.State)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.State)
  return false;
#undef DO_
}

void WavelengthRouter_MediaChannels_Channel_State::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.State)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ywrapper.UintValue lower_frequency = 62283199 [(.yext.schemapath) = "/wavelength-router/media-channels/channel/state/lower-frequency"];
  if (this->has_lower_frequency()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      62283199, *this->lower_frequency_, output);
  }

  // .ywrapper.UintValue index = 221912741 [(.yext.schemapath) = "/wavelength-router/media-channels/channel/state/index"];
  if (this->has_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      221912741, *this->index_, output);
  }

  // .ywrapper.StringValue name = 288898326 [(.yext.schemapath) = "/wavelength-router/media-channels/channel/state/name"];
  if (this->has_name()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      288898326, *this->name_, output);
  }

  // .openconfig.enums.OpenconfigWavelengthRouterAdminStateType admin_status = 320367411 [(.yext.schemapath) = "/wavelength-router/media-channels/channel/state/admin-status"];
  if (this->admin_status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      320367411, this->admin_status(), output);
  }

  // .ywrapper.UintValue upper_frequency = 422717604 [(.yext.schemapath) = "/wavelength-router/media-channels/channel/state/upper-frequency"];
  if (this->has_upper_frequency()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      422717604, *this->upper_frequency_, output);
  }

  // .openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.State.OperStatus oper_status = 526805130 [(.yext.schemapath) = "/wavelength-router/media-channels/channel/state/oper-status"];
  if (this->oper_status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      526805130, this->oper_status(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.State)
}

::google::protobuf::uint8* WavelengthRouter_MediaChannels_Channel_State::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.State)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ywrapper.UintValue lower_frequency = 62283199 [(.yext.schemapath) = "/wavelength-router/media-channels/channel/state/lower-frequency"];
  if (this->has_lower_frequency()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        62283199, *this->lower_frequency_, deterministic, target);
  }

  // .ywrapper.UintValue index = 221912741 [(.yext.schemapath) = "/wavelength-router/media-channels/channel/state/index"];
  if (this->has_index()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        221912741, *this->index_, deterministic, target);
  }

  // .ywrapper.StringValue name = 288898326 [(.yext.schemapath) = "/wavelength-router/media-channels/channel/state/name"];
  if (this->has_name()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        288898326, *this->name_, deterministic, target);
  }

  // .openconfig.enums.OpenconfigWavelengthRouterAdminStateType admin_status = 320367411 [(.yext.schemapath) = "/wavelength-router/media-channels/channel/state/admin-status"];
  if (this->admin_status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      320367411, this->admin_status(), target);
  }

  // .ywrapper.UintValue upper_frequency = 422717604 [(.yext.schemapath) = "/wavelength-router/media-channels/channel/state/upper-frequency"];
  if (this->has_upper_frequency()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        422717604, *this->upper_frequency_, deterministic, target);
  }

  // .openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.State.OperStatus oper_status = 526805130 [(.yext.schemapath) = "/wavelength-router/media-channels/channel/state/oper-status"];
  if (this->oper_status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      526805130, this->oper_status(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.State)
  return target;
}

size_t WavelengthRouter_MediaChannels_Channel_State::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.State)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .ywrapper.UintValue lower_frequency = 62283199 [(.yext.schemapath) = "/wavelength-router/media-channels/channel/state/lower-frequency"];
  if (this->has_lower_frequency()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->lower_frequency_);
  }

  // .ywrapper.UintValue index = 221912741 [(.yext.schemapath) = "/wavelength-router/media-channels/channel/state/index"];
  if (this->has_index()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->index_);
  }

  // .ywrapper.StringValue name = 288898326 [(.yext.schemapath) = "/wavelength-router/media-channels/channel/state/name"];
  if (this->has_name()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->name_);
  }

  // .ywrapper.UintValue upper_frequency = 422717604 [(.yext.schemapath) = "/wavelength-router/media-channels/channel/state/upper-frequency"];
  if (this->has_upper_frequency()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->upper_frequency_);
  }

  // .openconfig.enums.OpenconfigWavelengthRouterAdminStateType admin_status = 320367411 [(.yext.schemapath) = "/wavelength-router/media-channels/channel/state/admin-status"];
  if (this->admin_status() != 0) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->admin_status());
  }

  // .openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.State.OperStatus oper_status = 526805130 [(.yext.schemapath) = "/wavelength-router/media-channels/channel/state/oper-status"];
  if (this->oper_status() != 0) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->oper_status());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void WavelengthRouter_MediaChannels_Channel_State::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.State)
  GOOGLE_DCHECK_NE(&from, this);
  const WavelengthRouter_MediaChannels_Channel_State* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const WavelengthRouter_MediaChannels_Channel_State>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.State)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.State)
    MergeFrom(*source);
  }
}

void WavelengthRouter_MediaChannels_Channel_State::MergeFrom(const WavelengthRouter_MediaChannels_Channel_State& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.State)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_lower_frequency()) {
    mutable_lower_frequency()->::ywrapper::UintValue::MergeFrom(from.lower_frequency());
  }
  if (from.has_index()) {
    mutable_index()->::ywrapper::UintValue::MergeFrom(from.index());
  }
  if (from.has_name()) {
    mutable_name()->::ywrapper::StringValue::MergeFrom(from.name());
  }
  if (from.has_upper_frequency()) {
    mutable_upper_frequency()->::ywrapper::UintValue::MergeFrom(from.upper_frequency());
  }
  if (from.admin_status() != 0) {
    set_admin_status(from.admin_status());
  }
  if (from.oper_status() != 0) {
    set_oper_status(from.oper_status());
  }
}

void WavelengthRouter_MediaChannels_Channel_State::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.State)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WavelengthRouter_MediaChannels_Channel_State::CopyFrom(const WavelengthRouter_MediaChannels_Channel_State& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.State)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WavelengthRouter_MediaChannels_Channel_State::IsInitialized() const {
  return true;
}

void WavelengthRouter_MediaChannels_Channel_State::Swap(WavelengthRouter_MediaChannels_Channel_State* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WavelengthRouter_MediaChannels_Channel_State::InternalSwap(WavelengthRouter_MediaChannels_Channel_State* other) {
  using std::swap;
  swap(lower_frequency_, other->lower_frequency_);
  swap(index_, other->index_);
  swap(name_, other->name_);
  swap(upper_frequency_, other->upper_frequency_);
  swap(admin_status_, other->admin_status_);
  swap(oper_status_, other->oper_status_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata WavelengthRouter_MediaChannels_Channel_State::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5fwavelength_5frouter_2fopenconfig_5fwavelength_5frouter_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fwavelength_5frouter_2fopenconfig_5fwavelength_5frouter_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void WavelengthRouter_MediaChannels_Channel::InitAsDefaultInstance() {
  ::openconfig::openconfig_wavelength_router::_WavelengthRouter_MediaChannels_Channel_default_instance_._instance.get_mutable()->config_ = const_cast< ::openconfig::openconfig_wavelength_router::WavelengthRouter_MediaChannels_Channel_Config*>(
      ::openconfig::openconfig_wavelength_router::WavelengthRouter_MediaChannels_Channel_Config::internal_default_instance());
  ::openconfig::openconfig_wavelength_router::_WavelengthRouter_MediaChannels_Channel_default_instance_._instance.get_mutable()->dest_ = const_cast< ::openconfig::openconfig_wavelength_router::WavelengthRouter_MediaChannels_Channel_Dest*>(
      ::openconfig::openconfig_wavelength_router::WavelengthRouter_MediaChannels_Channel_Dest::internal_default_instance());
  ::openconfig::openconfig_wavelength_router::_WavelengthRouter_MediaChannels_Channel_default_instance_._instance.get_mutable()->psd_distribution_ = const_cast< ::openconfig::openconfig_wavelength_router::WavelengthRouter_MediaChannels_Channel_PsdDistribution*>(
      ::openconfig::openconfig_wavelength_router::WavelengthRouter_MediaChannels_Channel_PsdDistribution::internal_default_instance());
  ::openconfig::openconfig_wavelength_router::_WavelengthRouter_MediaChannels_Channel_default_instance_._instance.get_mutable()->source_ = const_cast< ::openconfig::openconfig_wavelength_router::WavelengthRouter_MediaChannels_Channel_Source*>(
      ::openconfig::openconfig_wavelength_router::WavelengthRouter_MediaChannels_Channel_Source::internal_default_instance());
  ::openconfig::openconfig_wavelength_router::_WavelengthRouter_MediaChannels_Channel_default_instance_._instance.get_mutable()->state_ = const_cast< ::openconfig::openconfig_wavelength_router::WavelengthRouter_MediaChannels_Channel_State*>(
      ::openconfig::openconfig_wavelength_router::WavelengthRouter_MediaChannels_Channel_State::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WavelengthRouter_MediaChannels_Channel::kConfigFieldNumber;
const int WavelengthRouter_MediaChannels_Channel::kDestFieldNumber;
const int WavelengthRouter_MediaChannels_Channel::kPsdDistributionFieldNumber;
const int WavelengthRouter_MediaChannels_Channel::kSourceFieldNumber;
const int WavelengthRouter_MediaChannels_Channel::kStateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WavelengthRouter_MediaChannels_Channel::WavelengthRouter_MediaChannels_Channel()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5fwavelength_5frouter_2fopenconfig_5fwavelength_5frouter_2eproto::InitDefaultsWavelengthRouter_MediaChannels_Channel();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel)
}
WavelengthRouter_MediaChannels_Channel::WavelengthRouter_MediaChannels_Channel(const WavelengthRouter_MediaChannels_Channel& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_psd_distribution()) {
    psd_distribution_ = new ::openconfig::openconfig_wavelength_router::WavelengthRouter_MediaChannels_Channel_PsdDistribution(*from.psd_distribution_);
  } else {
    psd_distribution_ = NULL;
  }
  if (from.has_dest()) {
    dest_ = new ::openconfig::openconfig_wavelength_router::WavelengthRouter_MediaChannels_Channel_Dest(*from.dest_);
  } else {
    dest_ = NULL;
  }
  if (from.has_source()) {
    source_ = new ::openconfig::openconfig_wavelength_router::WavelengthRouter_MediaChannels_Channel_Source(*from.source_);
  } else {
    source_ = NULL;
  }
  if (from.has_config()) {
    config_ = new ::openconfig::openconfig_wavelength_router::WavelengthRouter_MediaChannels_Channel_Config(*from.config_);
  } else {
    config_ = NULL;
  }
  if (from.has_state()) {
    state_ = new ::openconfig::openconfig_wavelength_router::WavelengthRouter_MediaChannels_Channel_State(*from.state_);
  } else {
    state_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel)
}

void WavelengthRouter_MediaChannels_Channel::SharedCtor() {
  ::memset(&psd_distribution_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&state_) -
      reinterpret_cast<char*>(&psd_distribution_)) + sizeof(state_));
  _cached_size_ = 0;
}

WavelengthRouter_MediaChannels_Channel::~WavelengthRouter_MediaChannels_Channel() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel)
  SharedDtor();
}

void WavelengthRouter_MediaChannels_Channel::SharedDtor() {
  if (this != internal_default_instance()) delete psd_distribution_;
  if (this != internal_default_instance()) delete dest_;
  if (this != internal_default_instance()) delete source_;
  if (this != internal_default_instance()) delete config_;
  if (this != internal_default_instance()) delete state_;
}

void WavelengthRouter_MediaChannels_Channel::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* WavelengthRouter_MediaChannels_Channel::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5fwavelength_5frouter_2fopenconfig_5fwavelength_5frouter_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fwavelength_5frouter_2fopenconfig_5fwavelength_5frouter_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const WavelengthRouter_MediaChannels_Channel& WavelengthRouter_MediaChannels_Channel::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5fwavelength_5frouter_2fopenconfig_5fwavelength_5frouter_2eproto::InitDefaultsWavelengthRouter_MediaChannels_Channel();
  return *internal_default_instance();
}

WavelengthRouter_MediaChannels_Channel* WavelengthRouter_MediaChannels_Channel::New(::google::protobuf::Arena* arena) const {
  WavelengthRouter_MediaChannels_Channel* n = new WavelengthRouter_MediaChannels_Channel;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void WavelengthRouter_MediaChannels_Channel::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && psd_distribution_ != NULL) {
    delete psd_distribution_;
  }
  psd_distribution_ = NULL;
  if (GetArenaNoVirtual() == NULL && dest_ != NULL) {
    delete dest_;
  }
  dest_ = NULL;
  if (GetArenaNoVirtual() == NULL && source_ != NULL) {
    delete source_;
  }
  source_ = NULL;
  if (GetArenaNoVirtual() == NULL && config_ != NULL) {
    delete config_;
  }
  config_ = NULL;
  if (GetArenaNoVirtual() == NULL && state_ != NULL) {
    delete state_;
  }
  state_ = NULL;
  _internal_metadata_.Clear();
}

bool WavelengthRouter_MediaChannels_Channel::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(3420021666u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.PsdDistribution psd_distribution = 48462813 [(.yext.schemapath) = "/wavelength-router/media-channels/channel/psd-distribution"];
      case 48462813: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(234u /* 387702506 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_psd_distribution()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.Dest dest = 145566309 [(.yext.schemapath) = "/wavelength-router/media-channels/channel/dest"];
      case 145566309: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 1164530474 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_dest()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.Source source = 246551242 [(.yext.schemapath) = "/wavelength-router/media-channels/channel/source"];
      case 246551242: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 1972409938 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_source()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.Config config = 409882003 [(.yext.schemapath) = "/wavelength-router/media-channels/channel/config"];
      case 409882003: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(154u /* 3279056026 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.State state = 427502708 [(.yext.schemapath) = "/wavelength-router/media-channels/channel/state"];
      case 427502708: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 3420021666 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_state()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel)
  return false;
#undef DO_
}

void WavelengthRouter_MediaChannels_Channel::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.PsdDistribution psd_distribution = 48462813 [(.yext.schemapath) = "/wavelength-router/media-channels/channel/psd-distribution"];
  if (this->has_psd_distribution()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      48462813, *this->psd_distribution_, output);
  }

  // .openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.Dest dest = 145566309 [(.yext.schemapath) = "/wavelength-router/media-channels/channel/dest"];
  if (this->has_dest()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      145566309, *this->dest_, output);
  }

  // .openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.Source source = 246551242 [(.yext.schemapath) = "/wavelength-router/media-channels/channel/source"];
  if (this->has_source()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      246551242, *this->source_, output);
  }

  // .openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.Config config = 409882003 [(.yext.schemapath) = "/wavelength-router/media-channels/channel/config"];
  if (this->has_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      409882003, *this->config_, output);
  }

  // .openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.State state = 427502708 [(.yext.schemapath) = "/wavelength-router/media-channels/channel/state"];
  if (this->has_state()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      427502708, *this->state_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel)
}

::google::protobuf::uint8* WavelengthRouter_MediaChannels_Channel::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.PsdDistribution psd_distribution = 48462813 [(.yext.schemapath) = "/wavelength-router/media-channels/channel/psd-distribution"];
  if (this->has_psd_distribution()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        48462813, *this->psd_distribution_, deterministic, target);
  }

  // .openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.Dest dest = 145566309 [(.yext.schemapath) = "/wavelength-router/media-channels/channel/dest"];
  if (this->has_dest()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        145566309, *this->dest_, deterministic, target);
  }

  // .openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.Source source = 246551242 [(.yext.schemapath) = "/wavelength-router/media-channels/channel/source"];
  if (this->has_source()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        246551242, *this->source_, deterministic, target);
  }

  // .openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.Config config = 409882003 [(.yext.schemapath) = "/wavelength-router/media-channels/channel/config"];
  if (this->has_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        409882003, *this->config_, deterministic, target);
  }

  // .openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.State state = 427502708 [(.yext.schemapath) = "/wavelength-router/media-channels/channel/state"];
  if (this->has_state()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        427502708, *this->state_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel)
  return target;
}

size_t WavelengthRouter_MediaChannels_Channel::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.PsdDistribution psd_distribution = 48462813 [(.yext.schemapath) = "/wavelength-router/media-channels/channel/psd-distribution"];
  if (this->has_psd_distribution()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->psd_distribution_);
  }

  // .openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.Dest dest = 145566309 [(.yext.schemapath) = "/wavelength-router/media-channels/channel/dest"];
  if (this->has_dest()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->dest_);
  }

  // .openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.Source source = 246551242 [(.yext.schemapath) = "/wavelength-router/media-channels/channel/source"];
  if (this->has_source()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->source_);
  }

  // .openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.Config config = 409882003 [(.yext.schemapath) = "/wavelength-router/media-channels/channel/config"];
  if (this->has_config()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->config_);
  }

  // .openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel.State state = 427502708 [(.yext.schemapath) = "/wavelength-router/media-channels/channel/state"];
  if (this->has_state()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->state_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void WavelengthRouter_MediaChannels_Channel::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel)
  GOOGLE_DCHECK_NE(&from, this);
  const WavelengthRouter_MediaChannels_Channel* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const WavelengthRouter_MediaChannels_Channel>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel)
    MergeFrom(*source);
  }
}

void WavelengthRouter_MediaChannels_Channel::MergeFrom(const WavelengthRouter_MediaChannels_Channel& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_psd_distribution()) {
    mutable_psd_distribution()->::openconfig::openconfig_wavelength_router::WavelengthRouter_MediaChannels_Channel_PsdDistribution::MergeFrom(from.psd_distribution());
  }
  if (from.has_dest()) {
    mutable_dest()->::openconfig::openconfig_wavelength_router::WavelengthRouter_MediaChannels_Channel_Dest::MergeFrom(from.dest());
  }
  if (from.has_source()) {
    mutable_source()->::openconfig::openconfig_wavelength_router::WavelengthRouter_MediaChannels_Channel_Source::MergeFrom(from.source());
  }
  if (from.has_config()) {
    mutable_config()->::openconfig::openconfig_wavelength_router::WavelengthRouter_MediaChannels_Channel_Config::MergeFrom(from.config());
  }
  if (from.has_state()) {
    mutable_state()->::openconfig::openconfig_wavelength_router::WavelengthRouter_MediaChannels_Channel_State::MergeFrom(from.state());
  }
}

void WavelengthRouter_MediaChannels_Channel::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WavelengthRouter_MediaChannels_Channel::CopyFrom(const WavelengthRouter_MediaChannels_Channel& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WavelengthRouter_MediaChannels_Channel::IsInitialized() const {
  return true;
}

void WavelengthRouter_MediaChannels_Channel::Swap(WavelengthRouter_MediaChannels_Channel* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WavelengthRouter_MediaChannels_Channel::InternalSwap(WavelengthRouter_MediaChannels_Channel* other) {
  using std::swap;
  swap(psd_distribution_, other->psd_distribution_);
  swap(dest_, other->dest_);
  swap(source_, other->source_);
  swap(config_, other->config_);
  swap(state_, other->state_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata WavelengthRouter_MediaChannels_Channel::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5fwavelength_5frouter_2fopenconfig_5fwavelength_5frouter_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fwavelength_5frouter_2fopenconfig_5fwavelength_5frouter_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void WavelengthRouter_MediaChannels_ChannelKey::InitAsDefaultInstance() {
  ::openconfig::openconfig_wavelength_router::_WavelengthRouter_MediaChannels_ChannelKey_default_instance_._instance.get_mutable()->channel_ = const_cast< ::openconfig::openconfig_wavelength_router::WavelengthRouter_MediaChannels_Channel*>(
      ::openconfig::openconfig_wavelength_router::WavelengthRouter_MediaChannels_Channel::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WavelengthRouter_MediaChannels_ChannelKey::kIndexFieldNumber;
const int WavelengthRouter_MediaChannels_ChannelKey::kChannelFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WavelengthRouter_MediaChannels_ChannelKey::WavelengthRouter_MediaChannels_ChannelKey()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5fwavelength_5frouter_2fopenconfig_5fwavelength_5frouter_2eproto::InitDefaultsWavelengthRouter_MediaChannels_ChannelKey();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.ChannelKey)
}
WavelengthRouter_MediaChannels_ChannelKey::WavelengthRouter_MediaChannels_ChannelKey(const WavelengthRouter_MediaChannels_ChannelKey& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_channel()) {
    channel_ = new ::openconfig::openconfig_wavelength_router::WavelengthRouter_MediaChannels_Channel(*from.channel_);
  } else {
    channel_ = NULL;
  }
  index_ = from.index_;
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.ChannelKey)
}

void WavelengthRouter_MediaChannels_ChannelKey::SharedCtor() {
  ::memset(&channel_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&index_) -
      reinterpret_cast<char*>(&channel_)) + sizeof(index_));
  _cached_size_ = 0;
}

WavelengthRouter_MediaChannels_ChannelKey::~WavelengthRouter_MediaChannels_ChannelKey() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.ChannelKey)
  SharedDtor();
}

void WavelengthRouter_MediaChannels_ChannelKey::SharedDtor() {
  if (this != internal_default_instance()) delete channel_;
}

void WavelengthRouter_MediaChannels_ChannelKey::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* WavelengthRouter_MediaChannels_ChannelKey::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5fwavelength_5frouter_2fopenconfig_5fwavelength_5frouter_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fwavelength_5frouter_2fopenconfig_5fwavelength_5frouter_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const WavelengthRouter_MediaChannels_ChannelKey& WavelengthRouter_MediaChannels_ChannelKey::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5fwavelength_5frouter_2fopenconfig_5fwavelength_5frouter_2eproto::InitDefaultsWavelengthRouter_MediaChannels_ChannelKey();
  return *internal_default_instance();
}

WavelengthRouter_MediaChannels_ChannelKey* WavelengthRouter_MediaChannels_ChannelKey::New(::google::protobuf::Arena* arena) const {
  WavelengthRouter_MediaChannels_ChannelKey* n = new WavelengthRouter_MediaChannels_ChannelKey;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void WavelengthRouter_MediaChannels_ChannelKey::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.ChannelKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && channel_ != NULL) {
    delete channel_;
  }
  channel_ = NULL;
  index_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool WavelengthRouter_MediaChannels_ChannelKey::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.ChannelKey)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 index = 1 [(.yext.schemapath) = "/wavelength-router/media-channels/channel/index"];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel channel = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_channel()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.ChannelKey)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.ChannelKey)
  return false;
#undef DO_
}

void WavelengthRouter_MediaChannels_ChannelKey::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.ChannelKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 index = 1 [(.yext.schemapath) = "/wavelength-router/media-channels/channel/index"];
  if (this->index() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->index(), output);
  }

  // .openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel channel = 2;
  if (this->has_channel()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->channel_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.ChannelKey)
}

::google::protobuf::uint8* WavelengthRouter_MediaChannels_ChannelKey::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.ChannelKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 index = 1 [(.yext.schemapath) = "/wavelength-router/media-channels/channel/index"];
  if (this->index() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->index(), target);
  }

  // .openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel channel = 2;
  if (this->has_channel()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->channel_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.ChannelKey)
  return target;
}

size_t WavelengthRouter_MediaChannels_ChannelKey::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.ChannelKey)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.Channel channel = 2;
  if (this->has_channel()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->channel_);
  }

  // uint64 index = 1 [(.yext.schemapath) = "/wavelength-router/media-channels/channel/index"];
  if (this->index() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->index());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void WavelengthRouter_MediaChannels_ChannelKey::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.ChannelKey)
  GOOGLE_DCHECK_NE(&from, this);
  const WavelengthRouter_MediaChannels_ChannelKey* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const WavelengthRouter_MediaChannels_ChannelKey>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.ChannelKey)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.ChannelKey)
    MergeFrom(*source);
  }
}

void WavelengthRouter_MediaChannels_ChannelKey::MergeFrom(const WavelengthRouter_MediaChannels_ChannelKey& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.ChannelKey)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_channel()) {
    mutable_channel()->::openconfig::openconfig_wavelength_router::WavelengthRouter_MediaChannels_Channel::MergeFrom(from.channel());
  }
  if (from.index() != 0) {
    set_index(from.index());
  }
}

void WavelengthRouter_MediaChannels_ChannelKey::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.ChannelKey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WavelengthRouter_MediaChannels_ChannelKey::CopyFrom(const WavelengthRouter_MediaChannels_ChannelKey& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.ChannelKey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WavelengthRouter_MediaChannels_ChannelKey::IsInitialized() const {
  return true;
}

void WavelengthRouter_MediaChannels_ChannelKey::Swap(WavelengthRouter_MediaChannels_ChannelKey* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WavelengthRouter_MediaChannels_ChannelKey::InternalSwap(WavelengthRouter_MediaChannels_ChannelKey* other) {
  using std::swap;
  swap(channel_, other->channel_);
  swap(index_, other->index_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata WavelengthRouter_MediaChannels_ChannelKey::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5fwavelength_5frouter_2fopenconfig_5fwavelength_5frouter_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fwavelength_5frouter_2fopenconfig_5fwavelength_5frouter_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void WavelengthRouter_MediaChannels::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WavelengthRouter_MediaChannels::kChannelFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WavelengthRouter_MediaChannels::WavelengthRouter_MediaChannels()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5fwavelength_5frouter_2fopenconfig_5fwavelength_5frouter_2eproto::InitDefaultsWavelengthRouter_MediaChannels();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels)
}
WavelengthRouter_MediaChannels::WavelengthRouter_MediaChannels(const WavelengthRouter_MediaChannels& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      channel_(from.channel_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels)
}

void WavelengthRouter_MediaChannels::SharedCtor() {
  _cached_size_ = 0;
}

WavelengthRouter_MediaChannels::~WavelengthRouter_MediaChannels() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels)
  SharedDtor();
}

void WavelengthRouter_MediaChannels::SharedDtor() {
}

void WavelengthRouter_MediaChannels::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* WavelengthRouter_MediaChannels::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5fwavelength_5frouter_2fopenconfig_5fwavelength_5frouter_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fwavelength_5frouter_2fopenconfig_5fwavelength_5frouter_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const WavelengthRouter_MediaChannels& WavelengthRouter_MediaChannels::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5fwavelength_5frouter_2fopenconfig_5fwavelength_5frouter_2eproto::InitDefaultsWavelengthRouter_MediaChannels();
  return *internal_default_instance();
}

WavelengthRouter_MediaChannels* WavelengthRouter_MediaChannels::New(::google::protobuf::Arena* arena) const {
  WavelengthRouter_MediaChannels* n = new WavelengthRouter_MediaChannels;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void WavelengthRouter_MediaChannels::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  channel_.Clear();
  _internal_metadata_.Clear();
}

bool WavelengthRouter_MediaChannels::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(4294721170u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.ChannelKey channel = 536840146 [(.yext.schemapath) = "/wavelength-router/media-channels/channel"];
      case 536840146: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u /* 4294721170 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_channel()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels)
  return false;
#undef DO_
}

void WavelengthRouter_MediaChannels::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.ChannelKey channel = 536840146 [(.yext.schemapath) = "/wavelength-router/media-channels/channel"];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->channel_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      536840146, this->channel(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels)
}

::google::protobuf::uint8* WavelengthRouter_MediaChannels::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.ChannelKey channel = 536840146 [(.yext.schemapath) = "/wavelength-router/media-channels/channel"];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->channel_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        536840146, this->channel(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels)
  return target;
}

size_t WavelengthRouter_MediaChannels::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels.ChannelKey channel = 536840146 [(.yext.schemapath) = "/wavelength-router/media-channels/channel"];
  {
    unsigned int count = static_cast<unsigned int>(this->channel_size());
    total_size += 5UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->channel(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void WavelengthRouter_MediaChannels::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels)
  GOOGLE_DCHECK_NE(&from, this);
  const WavelengthRouter_MediaChannels* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const WavelengthRouter_MediaChannels>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels)
    MergeFrom(*source);
  }
}

void WavelengthRouter_MediaChannels::MergeFrom(const WavelengthRouter_MediaChannels& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  channel_.MergeFrom(from.channel_);
}

void WavelengthRouter_MediaChannels::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WavelengthRouter_MediaChannels::CopyFrom(const WavelengthRouter_MediaChannels& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WavelengthRouter_MediaChannels::IsInitialized() const {
  return true;
}

void WavelengthRouter_MediaChannels::Swap(WavelengthRouter_MediaChannels* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WavelengthRouter_MediaChannels::InternalSwap(WavelengthRouter_MediaChannels* other) {
  using std::swap;
  channel_.InternalSwap(&other->channel_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata WavelengthRouter_MediaChannels::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5fwavelength_5frouter_2fopenconfig_5fwavelength_5frouter_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fwavelength_5frouter_2fopenconfig_5fwavelength_5frouter_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void WavelengthRouter::InitAsDefaultInstance() {
  ::openconfig::openconfig_wavelength_router::_WavelengthRouter_default_instance_._instance.get_mutable()->media_channels_ = const_cast< ::openconfig::openconfig_wavelength_router::WavelengthRouter_MediaChannels*>(
      ::openconfig::openconfig_wavelength_router::WavelengthRouter_MediaChannels::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WavelengthRouter::kMediaChannelsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WavelengthRouter::WavelengthRouter()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5fwavelength_5frouter_2fopenconfig_5fwavelength_5frouter_2eproto::InitDefaultsWavelengthRouter();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_wavelength_router.WavelengthRouter)
}
WavelengthRouter::WavelengthRouter(const WavelengthRouter& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_media_channels()) {
    media_channels_ = new ::openconfig::openconfig_wavelength_router::WavelengthRouter_MediaChannels(*from.media_channels_);
  } else {
    media_channels_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_wavelength_router.WavelengthRouter)
}

void WavelengthRouter::SharedCtor() {
  media_channels_ = NULL;
  _cached_size_ = 0;
}

WavelengthRouter::~WavelengthRouter() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_wavelength_router.WavelengthRouter)
  SharedDtor();
}

void WavelengthRouter::SharedDtor() {
  if (this != internal_default_instance()) delete media_channels_;
}

void WavelengthRouter::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* WavelengthRouter::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5fwavelength_5frouter_2fopenconfig_5fwavelength_5frouter_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fwavelength_5frouter_2fopenconfig_5fwavelength_5frouter_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const WavelengthRouter& WavelengthRouter::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5fwavelength_5frouter_2fopenconfig_5fwavelength_5frouter_2eproto::InitDefaultsWavelengthRouter();
  return *internal_default_instance();
}

WavelengthRouter* WavelengthRouter::New(::google::protobuf::Arena* arena) const {
  WavelengthRouter* n = new WavelengthRouter;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void WavelengthRouter::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_wavelength_router.WavelengthRouter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && media_channels_ != NULL) {
    delete media_channels_;
  }
  media_channels_ = NULL;
  _internal_metadata_.Clear();
}

bool WavelengthRouter::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_wavelength_router.WavelengthRouter)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(1020057138u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels media_channels = 127507142 [(.yext.schemapath) = "/wavelength-router/media-channels"];
      case 127507142: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 1020057138 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_media_channels()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_wavelength_router.WavelengthRouter)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_wavelength_router.WavelengthRouter)
  return false;
#undef DO_
}

void WavelengthRouter::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_wavelength_router.WavelengthRouter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels media_channels = 127507142 [(.yext.schemapath) = "/wavelength-router/media-channels"];
  if (this->has_media_channels()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      127507142, *this->media_channels_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_wavelength_router.WavelengthRouter)
}

::google::protobuf::uint8* WavelengthRouter::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_wavelength_router.WavelengthRouter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels media_channels = 127507142 [(.yext.schemapath) = "/wavelength-router/media-channels"];
  if (this->has_media_channels()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        127507142, *this->media_channels_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_wavelength_router.WavelengthRouter)
  return target;
}

size_t WavelengthRouter::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_wavelength_router.WavelengthRouter)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .openconfig.openconfig_wavelength_router.WavelengthRouter.MediaChannels media_channels = 127507142 [(.yext.schemapath) = "/wavelength-router/media-channels"];
  if (this->has_media_channels()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->media_channels_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void WavelengthRouter::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_wavelength_router.WavelengthRouter)
  GOOGLE_DCHECK_NE(&from, this);
  const WavelengthRouter* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const WavelengthRouter>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_wavelength_router.WavelengthRouter)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_wavelength_router.WavelengthRouter)
    MergeFrom(*source);
  }
}

void WavelengthRouter::MergeFrom(const WavelengthRouter& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_wavelength_router.WavelengthRouter)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_media_channels()) {
    mutable_media_channels()->::openconfig::openconfig_wavelength_router::WavelengthRouter_MediaChannels::MergeFrom(from.media_channels());
  }
}

void WavelengthRouter::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_wavelength_router.WavelengthRouter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WavelengthRouter::CopyFrom(const WavelengthRouter& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_wavelength_router.WavelengthRouter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WavelengthRouter::IsInitialized() const {
  return true;
}

void WavelengthRouter::Swap(WavelengthRouter* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WavelengthRouter::InternalSwap(WavelengthRouter* other) {
  using std::swap;
  swap(media_channels_, other->media_channels_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata WavelengthRouter::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5fwavelength_5frouter_2fopenconfig_5fwavelength_5frouter_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fwavelength_5frouter_2fopenconfig_5fwavelength_5frouter_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace openconfig_wavelength_router
}  // namespace openconfig

// @@protoc_insertion_point(global_scope)
