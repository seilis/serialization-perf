// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: openconfig/openconfig_terminal_device/openconfig_terminal_device.proto

#ifndef PROTOBUF_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto__INCLUDED
#define PROTOBUF_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "github.com/openconfig/ygot/proto/ywrapper/ywrapper.pb.h"
#include "github.com/openconfig/ygot/proto/yext/yext.pb.h"
#include "openconfig/enums/enums.pb.h"
// @@protoc_insertion_point(includes)

namespace protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[31];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsTerminalDevice_ConfigImpl();
void InitDefaultsTerminalDevice_Config();
void InitDefaultsTerminalDevice_LogicalChannels_Channel_ConfigImpl();
void InitDefaultsTerminalDevice_LogicalChannels_Channel_Config();
void InitDefaultsTerminalDevice_LogicalChannels_Channel_Ethernet_ConfigImpl();
void InitDefaultsTerminalDevice_LogicalChannels_Channel_Ethernet_Config();
void InitDefaultsTerminalDevice_LogicalChannels_Channel_Ethernet_StateImpl();
void InitDefaultsTerminalDevice_LogicalChannels_Channel_Ethernet_State();
void InitDefaultsTerminalDevice_LogicalChannels_Channel_EthernetImpl();
void InitDefaultsTerminalDevice_LogicalChannels_Channel_Ethernet();
void InitDefaultsTerminalDevice_LogicalChannels_Channel_Ingress_ConfigImpl();
void InitDefaultsTerminalDevice_LogicalChannels_Channel_Ingress_Config();
void InitDefaultsTerminalDevice_LogicalChannels_Channel_Ingress_StateImpl();
void InitDefaultsTerminalDevice_LogicalChannels_Channel_Ingress_State();
void InitDefaultsTerminalDevice_LogicalChannels_Channel_IngressImpl();
void InitDefaultsTerminalDevice_LogicalChannels_Channel_Ingress();
void InitDefaultsTerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_ConfigImpl();
void InitDefaultsTerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_Config();
void InitDefaultsTerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_StateImpl();
void InitDefaultsTerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_State();
void InitDefaultsTerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_AssignmentImpl();
void InitDefaultsTerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment();
void InitDefaultsTerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_AssignmentKeyImpl();
void InitDefaultsTerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_AssignmentKey();
void InitDefaultsTerminalDevice_LogicalChannels_Channel_LogicalChannelAssignmentsImpl();
void InitDefaultsTerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments();
void InitDefaultsTerminalDevice_LogicalChannels_Channel_Otn_ConfigImpl();
void InitDefaultsTerminalDevice_LogicalChannels_Channel_Otn_Config();
void InitDefaultsTerminalDevice_LogicalChannels_Channel_Otn_State_EsnrImpl();
void InitDefaultsTerminalDevice_LogicalChannels_Channel_Otn_State_Esnr();
void InitDefaultsTerminalDevice_LogicalChannels_Channel_Otn_State_PostFecBerImpl();
void InitDefaultsTerminalDevice_LogicalChannels_Channel_Otn_State_PostFecBer();
void InitDefaultsTerminalDevice_LogicalChannels_Channel_Otn_State_PreFecBerImpl();
void InitDefaultsTerminalDevice_LogicalChannels_Channel_Otn_State_PreFecBer();
void InitDefaultsTerminalDevice_LogicalChannels_Channel_Otn_State_QValueImpl();
void InitDefaultsTerminalDevice_LogicalChannels_Channel_Otn_State_QValue();
void InitDefaultsTerminalDevice_LogicalChannels_Channel_Otn_StateImpl();
void InitDefaultsTerminalDevice_LogicalChannels_Channel_Otn_State();
void InitDefaultsTerminalDevice_LogicalChannels_Channel_OtnImpl();
void InitDefaultsTerminalDevice_LogicalChannels_Channel_Otn();
void InitDefaultsTerminalDevice_LogicalChannels_Channel_StateImpl();
void InitDefaultsTerminalDevice_LogicalChannels_Channel_State();
void InitDefaultsTerminalDevice_LogicalChannels_ChannelImpl();
void InitDefaultsTerminalDevice_LogicalChannels_Channel();
void InitDefaultsTerminalDevice_LogicalChannels_ChannelKeyImpl();
void InitDefaultsTerminalDevice_LogicalChannels_ChannelKey();
void InitDefaultsTerminalDevice_LogicalChannelsImpl();
void InitDefaultsTerminalDevice_LogicalChannels();
void InitDefaultsTerminalDevice_OperationalModes_Mode_ConfigImpl();
void InitDefaultsTerminalDevice_OperationalModes_Mode_Config();
void InitDefaultsTerminalDevice_OperationalModes_Mode_StateImpl();
void InitDefaultsTerminalDevice_OperationalModes_Mode_State();
void InitDefaultsTerminalDevice_OperationalModes_ModeImpl();
void InitDefaultsTerminalDevice_OperationalModes_Mode();
void InitDefaultsTerminalDevice_OperationalModes_ModeKeyImpl();
void InitDefaultsTerminalDevice_OperationalModes_ModeKey();
void InitDefaultsTerminalDevice_OperationalModesImpl();
void InitDefaultsTerminalDevice_OperationalModes();
void InitDefaultsTerminalDevice_StateImpl();
void InitDefaultsTerminalDevice_State();
void InitDefaultsTerminalDeviceImpl();
void InitDefaultsTerminalDevice();
inline void InitDefaults() {
  InitDefaultsTerminalDevice_Config();
  InitDefaultsTerminalDevice_LogicalChannels_Channel_Config();
  InitDefaultsTerminalDevice_LogicalChannels_Channel_Ethernet_Config();
  InitDefaultsTerminalDevice_LogicalChannels_Channel_Ethernet_State();
  InitDefaultsTerminalDevice_LogicalChannels_Channel_Ethernet();
  InitDefaultsTerminalDevice_LogicalChannels_Channel_Ingress_Config();
  InitDefaultsTerminalDevice_LogicalChannels_Channel_Ingress_State();
  InitDefaultsTerminalDevice_LogicalChannels_Channel_Ingress();
  InitDefaultsTerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_Config();
  InitDefaultsTerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_State();
  InitDefaultsTerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment();
  InitDefaultsTerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_AssignmentKey();
  InitDefaultsTerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments();
  InitDefaultsTerminalDevice_LogicalChannels_Channel_Otn_Config();
  InitDefaultsTerminalDevice_LogicalChannels_Channel_Otn_State_Esnr();
  InitDefaultsTerminalDevice_LogicalChannels_Channel_Otn_State_PostFecBer();
  InitDefaultsTerminalDevice_LogicalChannels_Channel_Otn_State_PreFecBer();
  InitDefaultsTerminalDevice_LogicalChannels_Channel_Otn_State_QValue();
  InitDefaultsTerminalDevice_LogicalChannels_Channel_Otn_State();
  InitDefaultsTerminalDevice_LogicalChannels_Channel_Otn();
  InitDefaultsTerminalDevice_LogicalChannels_Channel_State();
  InitDefaultsTerminalDevice_LogicalChannels_Channel();
  InitDefaultsTerminalDevice_LogicalChannels_ChannelKey();
  InitDefaultsTerminalDevice_LogicalChannels();
  InitDefaultsTerminalDevice_OperationalModes_Mode_Config();
  InitDefaultsTerminalDevice_OperationalModes_Mode_State();
  InitDefaultsTerminalDevice_OperationalModes_Mode();
  InitDefaultsTerminalDevice_OperationalModes_ModeKey();
  InitDefaultsTerminalDevice_OperationalModes();
  InitDefaultsTerminalDevice_State();
  InitDefaultsTerminalDevice();
}
}  // namespace protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto
namespace openconfig {
namespace openconfig_terminal_device {
class TerminalDevice;
class TerminalDeviceDefaultTypeInternal;
extern TerminalDeviceDefaultTypeInternal _TerminalDevice_default_instance_;
class TerminalDevice_Config;
class TerminalDevice_ConfigDefaultTypeInternal;
extern TerminalDevice_ConfigDefaultTypeInternal _TerminalDevice_Config_default_instance_;
class TerminalDevice_LogicalChannels;
class TerminalDevice_LogicalChannelsDefaultTypeInternal;
extern TerminalDevice_LogicalChannelsDefaultTypeInternal _TerminalDevice_LogicalChannels_default_instance_;
class TerminalDevice_LogicalChannels_Channel;
class TerminalDevice_LogicalChannels_ChannelDefaultTypeInternal;
extern TerminalDevice_LogicalChannels_ChannelDefaultTypeInternal _TerminalDevice_LogicalChannels_Channel_default_instance_;
class TerminalDevice_LogicalChannels_ChannelKey;
class TerminalDevice_LogicalChannels_ChannelKeyDefaultTypeInternal;
extern TerminalDevice_LogicalChannels_ChannelKeyDefaultTypeInternal _TerminalDevice_LogicalChannels_ChannelKey_default_instance_;
class TerminalDevice_LogicalChannels_Channel_Config;
class TerminalDevice_LogicalChannels_Channel_ConfigDefaultTypeInternal;
extern TerminalDevice_LogicalChannels_Channel_ConfigDefaultTypeInternal _TerminalDevice_LogicalChannels_Channel_Config_default_instance_;
class TerminalDevice_LogicalChannels_Channel_Ethernet;
class TerminalDevice_LogicalChannels_Channel_EthernetDefaultTypeInternal;
extern TerminalDevice_LogicalChannels_Channel_EthernetDefaultTypeInternal _TerminalDevice_LogicalChannels_Channel_Ethernet_default_instance_;
class TerminalDevice_LogicalChannels_Channel_Ethernet_Config;
class TerminalDevice_LogicalChannels_Channel_Ethernet_ConfigDefaultTypeInternal;
extern TerminalDevice_LogicalChannels_Channel_Ethernet_ConfigDefaultTypeInternal _TerminalDevice_LogicalChannels_Channel_Ethernet_Config_default_instance_;
class TerminalDevice_LogicalChannels_Channel_Ethernet_State;
class TerminalDevice_LogicalChannels_Channel_Ethernet_StateDefaultTypeInternal;
extern TerminalDevice_LogicalChannels_Channel_Ethernet_StateDefaultTypeInternal _TerminalDevice_LogicalChannels_Channel_Ethernet_State_default_instance_;
class TerminalDevice_LogicalChannels_Channel_Ingress;
class TerminalDevice_LogicalChannels_Channel_IngressDefaultTypeInternal;
extern TerminalDevice_LogicalChannels_Channel_IngressDefaultTypeInternal _TerminalDevice_LogicalChannels_Channel_Ingress_default_instance_;
class TerminalDevice_LogicalChannels_Channel_Ingress_Config;
class TerminalDevice_LogicalChannels_Channel_Ingress_ConfigDefaultTypeInternal;
extern TerminalDevice_LogicalChannels_Channel_Ingress_ConfigDefaultTypeInternal _TerminalDevice_LogicalChannels_Channel_Ingress_Config_default_instance_;
class TerminalDevice_LogicalChannels_Channel_Ingress_State;
class TerminalDevice_LogicalChannels_Channel_Ingress_StateDefaultTypeInternal;
extern TerminalDevice_LogicalChannels_Channel_Ingress_StateDefaultTypeInternal _TerminalDevice_LogicalChannels_Channel_Ingress_State_default_instance_;
class TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments;
class TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignmentsDefaultTypeInternal;
extern TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignmentsDefaultTypeInternal _TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_default_instance_;
class TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment;
class TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_AssignmentDefaultTypeInternal;
extern TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_AssignmentDefaultTypeInternal _TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_default_instance_;
class TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_AssignmentKey;
class TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_AssignmentKeyDefaultTypeInternal;
extern TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_AssignmentKeyDefaultTypeInternal _TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_AssignmentKey_default_instance_;
class TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_Config;
class TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_ConfigDefaultTypeInternal;
extern TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_ConfigDefaultTypeInternal _TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_Config_default_instance_;
class TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_State;
class TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_StateDefaultTypeInternal;
extern TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_StateDefaultTypeInternal _TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_State_default_instance_;
class TerminalDevice_LogicalChannels_Channel_Otn;
class TerminalDevice_LogicalChannels_Channel_OtnDefaultTypeInternal;
extern TerminalDevice_LogicalChannels_Channel_OtnDefaultTypeInternal _TerminalDevice_LogicalChannels_Channel_Otn_default_instance_;
class TerminalDevice_LogicalChannels_Channel_Otn_Config;
class TerminalDevice_LogicalChannels_Channel_Otn_ConfigDefaultTypeInternal;
extern TerminalDevice_LogicalChannels_Channel_Otn_ConfigDefaultTypeInternal _TerminalDevice_LogicalChannels_Channel_Otn_Config_default_instance_;
class TerminalDevice_LogicalChannels_Channel_Otn_State;
class TerminalDevice_LogicalChannels_Channel_Otn_StateDefaultTypeInternal;
extern TerminalDevice_LogicalChannels_Channel_Otn_StateDefaultTypeInternal _TerminalDevice_LogicalChannels_Channel_Otn_State_default_instance_;
class TerminalDevice_LogicalChannels_Channel_Otn_State_Esnr;
class TerminalDevice_LogicalChannels_Channel_Otn_State_EsnrDefaultTypeInternal;
extern TerminalDevice_LogicalChannels_Channel_Otn_State_EsnrDefaultTypeInternal _TerminalDevice_LogicalChannels_Channel_Otn_State_Esnr_default_instance_;
class TerminalDevice_LogicalChannels_Channel_Otn_State_PostFecBer;
class TerminalDevice_LogicalChannels_Channel_Otn_State_PostFecBerDefaultTypeInternal;
extern TerminalDevice_LogicalChannels_Channel_Otn_State_PostFecBerDefaultTypeInternal _TerminalDevice_LogicalChannels_Channel_Otn_State_PostFecBer_default_instance_;
class TerminalDevice_LogicalChannels_Channel_Otn_State_PreFecBer;
class TerminalDevice_LogicalChannels_Channel_Otn_State_PreFecBerDefaultTypeInternal;
extern TerminalDevice_LogicalChannels_Channel_Otn_State_PreFecBerDefaultTypeInternal _TerminalDevice_LogicalChannels_Channel_Otn_State_PreFecBer_default_instance_;
class TerminalDevice_LogicalChannels_Channel_Otn_State_QValue;
class TerminalDevice_LogicalChannels_Channel_Otn_State_QValueDefaultTypeInternal;
extern TerminalDevice_LogicalChannels_Channel_Otn_State_QValueDefaultTypeInternal _TerminalDevice_LogicalChannels_Channel_Otn_State_QValue_default_instance_;
class TerminalDevice_LogicalChannels_Channel_State;
class TerminalDevice_LogicalChannels_Channel_StateDefaultTypeInternal;
extern TerminalDevice_LogicalChannels_Channel_StateDefaultTypeInternal _TerminalDevice_LogicalChannels_Channel_State_default_instance_;
class TerminalDevice_OperationalModes;
class TerminalDevice_OperationalModesDefaultTypeInternal;
extern TerminalDevice_OperationalModesDefaultTypeInternal _TerminalDevice_OperationalModes_default_instance_;
class TerminalDevice_OperationalModes_Mode;
class TerminalDevice_OperationalModes_ModeDefaultTypeInternal;
extern TerminalDevice_OperationalModes_ModeDefaultTypeInternal _TerminalDevice_OperationalModes_Mode_default_instance_;
class TerminalDevice_OperationalModes_ModeKey;
class TerminalDevice_OperationalModes_ModeKeyDefaultTypeInternal;
extern TerminalDevice_OperationalModes_ModeKeyDefaultTypeInternal _TerminalDevice_OperationalModes_ModeKey_default_instance_;
class TerminalDevice_OperationalModes_Mode_Config;
class TerminalDevice_OperationalModes_Mode_ConfigDefaultTypeInternal;
extern TerminalDevice_OperationalModes_Mode_ConfigDefaultTypeInternal _TerminalDevice_OperationalModes_Mode_Config_default_instance_;
class TerminalDevice_OperationalModes_Mode_State;
class TerminalDevice_OperationalModes_Mode_StateDefaultTypeInternal;
extern TerminalDevice_OperationalModes_Mode_StateDefaultTypeInternal _TerminalDevice_OperationalModes_Mode_State_default_instance_;
class TerminalDevice_State;
class TerminalDevice_StateDefaultTypeInternal;
extern TerminalDevice_StateDefaultTypeInternal _TerminalDevice_State_default_instance_;
}  // namespace openconfig_terminal_device
}  // namespace openconfig
namespace openconfig {
namespace openconfig_terminal_device {

enum TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_Config_AssignmentType {
  TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_Config_AssignmentType_ASSIGNMENTTYPE_UNSET = 0,
  TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_Config_AssignmentType_ASSIGNMENTTYPE_LOGICAL_CHANNEL = 1,
  TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_Config_AssignmentType_ASSIGNMENTTYPE_OPTICAL_CHANNEL = 2,
  TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_Config_AssignmentType_TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_Config_AssignmentType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_Config_AssignmentType_TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_Config_AssignmentType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_Config_AssignmentType_IsValid(int value);
const TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_Config_AssignmentType TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_Config_AssignmentType_AssignmentType_MIN = TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_Config_AssignmentType_ASSIGNMENTTYPE_UNSET;
const TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_Config_AssignmentType TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_Config_AssignmentType_AssignmentType_MAX = TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_Config_AssignmentType_ASSIGNMENTTYPE_OPTICAL_CHANNEL;
const int TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_Config_AssignmentType_AssignmentType_ARRAYSIZE = TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_Config_AssignmentType_AssignmentType_MAX + 1;

const ::google::protobuf::EnumDescriptor* TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_Config_AssignmentType_descriptor();
inline const ::std::string& TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_Config_AssignmentType_Name(TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_Config_AssignmentType value) {
  return ::google::protobuf::internal::NameOfEnum(
    TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_Config_AssignmentType_descriptor(), value);
}
inline bool TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_Config_AssignmentType_Parse(
    const ::std::string& name, TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_Config_AssignmentType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_Config_AssignmentType>(
    TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_Config_AssignmentType_descriptor(), name, value);
}
enum TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_State_AssignmentType {
  TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_State_AssignmentType_ASSIGNMENTTYPE_UNSET = 0,
  TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_State_AssignmentType_ASSIGNMENTTYPE_LOGICAL_CHANNEL = 1,
  TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_State_AssignmentType_ASSIGNMENTTYPE_OPTICAL_CHANNEL = 2,
  TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_State_AssignmentType_TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_State_AssignmentType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_State_AssignmentType_TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_State_AssignmentType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_State_AssignmentType_IsValid(int value);
const TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_State_AssignmentType TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_State_AssignmentType_AssignmentType_MIN = TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_State_AssignmentType_ASSIGNMENTTYPE_UNSET;
const TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_State_AssignmentType TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_State_AssignmentType_AssignmentType_MAX = TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_State_AssignmentType_ASSIGNMENTTYPE_OPTICAL_CHANNEL;
const int TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_State_AssignmentType_AssignmentType_ARRAYSIZE = TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_State_AssignmentType_AssignmentType_MAX + 1;

const ::google::protobuf::EnumDescriptor* TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_State_AssignmentType_descriptor();
inline const ::std::string& TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_State_AssignmentType_Name(TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_State_AssignmentType value) {
  return ::google::protobuf::internal::NameOfEnum(
    TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_State_AssignmentType_descriptor(), value);
}
inline bool TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_State_AssignmentType_Parse(
    const ::std::string& name, TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_State_AssignmentType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_State_AssignmentType>(
    TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_State_AssignmentType_descriptor(), name, value);
}
enum TerminalDevice_LogicalChannels_Channel_State_LinkState {
  TerminalDevice_LogicalChannels_Channel_State_LinkState_LINKSTATE_UNSET = 0,
  TerminalDevice_LogicalChannels_Channel_State_LinkState_LINKSTATE_UP = 1,
  TerminalDevice_LogicalChannels_Channel_State_LinkState_LINKSTATE_DOWN = 2,
  TerminalDevice_LogicalChannels_Channel_State_LinkState_TerminalDevice_LogicalChannels_Channel_State_LinkState_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  TerminalDevice_LogicalChannels_Channel_State_LinkState_TerminalDevice_LogicalChannels_Channel_State_LinkState_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool TerminalDevice_LogicalChannels_Channel_State_LinkState_IsValid(int value);
const TerminalDevice_LogicalChannels_Channel_State_LinkState TerminalDevice_LogicalChannels_Channel_State_LinkState_LinkState_MIN = TerminalDevice_LogicalChannels_Channel_State_LinkState_LINKSTATE_UNSET;
const TerminalDevice_LogicalChannels_Channel_State_LinkState TerminalDevice_LogicalChannels_Channel_State_LinkState_LinkState_MAX = TerminalDevice_LogicalChannels_Channel_State_LinkState_LINKSTATE_DOWN;
const int TerminalDevice_LogicalChannels_Channel_State_LinkState_LinkState_ARRAYSIZE = TerminalDevice_LogicalChannels_Channel_State_LinkState_LinkState_MAX + 1;

const ::google::protobuf::EnumDescriptor* TerminalDevice_LogicalChannels_Channel_State_LinkState_descriptor();
inline const ::std::string& TerminalDevice_LogicalChannels_Channel_State_LinkState_Name(TerminalDevice_LogicalChannels_Channel_State_LinkState value) {
  return ::google::protobuf::internal::NameOfEnum(
    TerminalDevice_LogicalChannels_Channel_State_LinkState_descriptor(), value);
}
inline bool TerminalDevice_LogicalChannels_Channel_State_LinkState_Parse(
    const ::std::string& name, TerminalDevice_LogicalChannels_Channel_State_LinkState* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TerminalDevice_LogicalChannels_Channel_State_LinkState>(
    TerminalDevice_LogicalChannels_Channel_State_LinkState_descriptor(), name, value);
}
// ===================================================================

class TerminalDevice_Config : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_terminal_device.TerminalDevice.Config) */ {
 public:
  TerminalDevice_Config();
  virtual ~TerminalDevice_Config();

  TerminalDevice_Config(const TerminalDevice_Config& from);

  inline TerminalDevice_Config& operator=(const TerminalDevice_Config& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TerminalDevice_Config(TerminalDevice_Config&& from) noexcept
    : TerminalDevice_Config() {
    *this = ::std::move(from);
  }

  inline TerminalDevice_Config& operator=(TerminalDevice_Config&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TerminalDevice_Config& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TerminalDevice_Config* internal_default_instance() {
    return reinterpret_cast<const TerminalDevice_Config*>(
               &_TerminalDevice_Config_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(TerminalDevice_Config* other);
  friend void swap(TerminalDevice_Config& a, TerminalDevice_Config& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TerminalDevice_Config* New() const PROTOBUF_FINAL { return New(NULL); }

  TerminalDevice_Config* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TerminalDevice_Config& from);
  void MergeFrom(const TerminalDevice_Config& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TerminalDevice_Config* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_terminal_device.TerminalDevice.Config)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::InitDefaultsTerminalDevice_ConfigImpl();
};
// -------------------------------------------------------------------

class TerminalDevice_LogicalChannels_Channel_Config : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Config) */ {
 public:
  TerminalDevice_LogicalChannels_Channel_Config();
  virtual ~TerminalDevice_LogicalChannels_Channel_Config();

  TerminalDevice_LogicalChannels_Channel_Config(const TerminalDevice_LogicalChannels_Channel_Config& from);

  inline TerminalDevice_LogicalChannels_Channel_Config& operator=(const TerminalDevice_LogicalChannels_Channel_Config& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TerminalDevice_LogicalChannels_Channel_Config(TerminalDevice_LogicalChannels_Channel_Config&& from) noexcept
    : TerminalDevice_LogicalChannels_Channel_Config() {
    *this = ::std::move(from);
  }

  inline TerminalDevice_LogicalChannels_Channel_Config& operator=(TerminalDevice_LogicalChannels_Channel_Config&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TerminalDevice_LogicalChannels_Channel_Config& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TerminalDevice_LogicalChannels_Channel_Config* internal_default_instance() {
    return reinterpret_cast<const TerminalDevice_LogicalChannels_Channel_Config*>(
               &_TerminalDevice_LogicalChannels_Channel_Config_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(TerminalDevice_LogicalChannels_Channel_Config* other);
  friend void swap(TerminalDevice_LogicalChannels_Channel_Config& a, TerminalDevice_LogicalChannels_Channel_Config& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TerminalDevice_LogicalChannels_Channel_Config* New() const PROTOBUF_FINAL { return New(NULL); }

  TerminalDevice_LogicalChannels_Channel_Config* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TerminalDevice_LogicalChannels_Channel_Config& from);
  void MergeFrom(const TerminalDevice_LogicalChannels_Channel_Config& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TerminalDevice_LogicalChannels_Channel_Config* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .ywrapper.BoolValue test_signal = 244958558 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/config/test-signal"];
  bool has_test_signal() const;
  void clear_test_signal();
  static const int kTestSignalFieldNumber = 244958558;
  const ::ywrapper::BoolValue& test_signal() const;
  ::ywrapper::BoolValue* release_test_signal();
  ::ywrapper::BoolValue* mutable_test_signal();
  void set_allocated_test_signal(::ywrapper::BoolValue* test_signal);

  // .ywrapper.UintValue index = 375779007 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/config/index"];
  bool has_index() const;
  void clear_index();
  static const int kIndexFieldNumber = 375779007;
  const ::ywrapper::UintValue& index() const;
  ::ywrapper::UintValue* release_index();
  ::ywrapper::UintValue* mutable_index();
  void set_allocated_index(::ywrapper::UintValue* index);

  // .ywrapper.StringValue description = 463402281 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/config/description"];
  bool has_description() const;
  void clear_description();
  static const int kDescriptionFieldNumber = 463402281;
  const ::ywrapper::StringValue& description() const;
  ::ywrapper::StringValue* release_description();
  ::ywrapper::StringValue* mutable_description();
  void set_allocated_description(::ywrapper::StringValue* description);

  // .openconfig.enums.OpenconfigTransportTypesTRIBUTARYRATECLASSTYPE rate_class = 487395304 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/config/rate-class"];
  void clear_rate_class();
  static const int kRateClassFieldNumber = 487395304;
  ::openconfig::enums::OpenconfigTransportTypesTRIBUTARYRATECLASSTYPE rate_class() const;
  void set_rate_class(::openconfig::enums::OpenconfigTransportTypesTRIBUTARYRATECLASSTYPE value);

  // .openconfig.enums.OpenconfigTransportTypesLOGICALELEMENTPROTOCOLTYPE logical_channel_type = 9398845 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/config/logical-channel-type"];
  void clear_logical_channel_type();
  static const int kLogicalChannelTypeFieldNumber = 9398845;
  ::openconfig::enums::OpenconfigTransportTypesLOGICALELEMENTPROTOCOLTYPE logical_channel_type() const;
  void set_logical_channel_type(::openconfig::enums::OpenconfigTransportTypesLOGICALELEMENTPROTOCOLTYPE value);

  // .openconfig.enums.OpenconfigTransportTypesTRIBUTARYPROTOCOLTYPE trib_protocol = 138398619 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/config/trib-protocol"];
  void clear_trib_protocol();
  static const int kTribProtocolFieldNumber = 138398619;
  ::openconfig::enums::OpenconfigTransportTypesTRIBUTARYPROTOCOLTYPE trib_protocol() const;
  void set_trib_protocol(::openconfig::enums::OpenconfigTransportTypesTRIBUTARYPROTOCOLTYPE value);

  // .openconfig.enums.OpenconfigTerminalDeviceLoopbackModeType loopback_mode = 369824790 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/config/loopback-mode"];
  void clear_loopback_mode();
  static const int kLoopbackModeFieldNumber = 369824790;
  ::openconfig::enums::OpenconfigTerminalDeviceLoopbackModeType loopback_mode() const;
  void set_loopback_mode(::openconfig::enums::OpenconfigTerminalDeviceLoopbackModeType value);

  // .openconfig.enums.OpenconfigTerminalDeviceAdminStateType admin_state = 419524166 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/config/admin-state"];
  void clear_admin_state();
  static const int kAdminStateFieldNumber = 419524166;
  ::openconfig::enums::OpenconfigTerminalDeviceAdminStateType admin_state() const;
  void set_admin_state(::openconfig::enums::OpenconfigTerminalDeviceAdminStateType value);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Config)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ywrapper::BoolValue* test_signal_;
  ::ywrapper::UintValue* index_;
  ::ywrapper::StringValue* description_;
  int rate_class_;
  int logical_channel_type_;
  int trib_protocol_;
  int loopback_mode_;
  int admin_state_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::InitDefaultsTerminalDevice_LogicalChannels_Channel_ConfigImpl();
};
// -------------------------------------------------------------------

class TerminalDevice_LogicalChannels_Channel_Ethernet_Config : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Ethernet.Config) */ {
 public:
  TerminalDevice_LogicalChannels_Channel_Ethernet_Config();
  virtual ~TerminalDevice_LogicalChannels_Channel_Ethernet_Config();

  TerminalDevice_LogicalChannels_Channel_Ethernet_Config(const TerminalDevice_LogicalChannels_Channel_Ethernet_Config& from);

  inline TerminalDevice_LogicalChannels_Channel_Ethernet_Config& operator=(const TerminalDevice_LogicalChannels_Channel_Ethernet_Config& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TerminalDevice_LogicalChannels_Channel_Ethernet_Config(TerminalDevice_LogicalChannels_Channel_Ethernet_Config&& from) noexcept
    : TerminalDevice_LogicalChannels_Channel_Ethernet_Config() {
    *this = ::std::move(from);
  }

  inline TerminalDevice_LogicalChannels_Channel_Ethernet_Config& operator=(TerminalDevice_LogicalChannels_Channel_Ethernet_Config&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TerminalDevice_LogicalChannels_Channel_Ethernet_Config& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TerminalDevice_LogicalChannels_Channel_Ethernet_Config* internal_default_instance() {
    return reinterpret_cast<const TerminalDevice_LogicalChannels_Channel_Ethernet_Config*>(
               &_TerminalDevice_LogicalChannels_Channel_Ethernet_Config_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(TerminalDevice_LogicalChannels_Channel_Ethernet_Config* other);
  friend void swap(TerminalDevice_LogicalChannels_Channel_Ethernet_Config& a, TerminalDevice_LogicalChannels_Channel_Ethernet_Config& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TerminalDevice_LogicalChannels_Channel_Ethernet_Config* New() const PROTOBUF_FINAL { return New(NULL); }

  TerminalDevice_LogicalChannels_Channel_Ethernet_Config* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TerminalDevice_LogicalChannels_Channel_Ethernet_Config& from);
  void MergeFrom(const TerminalDevice_LogicalChannels_Channel_Ethernet_Config& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TerminalDevice_LogicalChannels_Channel_Ethernet_Config* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Ethernet.Config)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::InitDefaultsTerminalDevice_LogicalChannels_Channel_Ethernet_ConfigImpl();
};
// -------------------------------------------------------------------

class TerminalDevice_LogicalChannels_Channel_Ethernet_State : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Ethernet.State) */ {
 public:
  TerminalDevice_LogicalChannels_Channel_Ethernet_State();
  virtual ~TerminalDevice_LogicalChannels_Channel_Ethernet_State();

  TerminalDevice_LogicalChannels_Channel_Ethernet_State(const TerminalDevice_LogicalChannels_Channel_Ethernet_State& from);

  inline TerminalDevice_LogicalChannels_Channel_Ethernet_State& operator=(const TerminalDevice_LogicalChannels_Channel_Ethernet_State& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TerminalDevice_LogicalChannels_Channel_Ethernet_State(TerminalDevice_LogicalChannels_Channel_Ethernet_State&& from) noexcept
    : TerminalDevice_LogicalChannels_Channel_Ethernet_State() {
    *this = ::std::move(from);
  }

  inline TerminalDevice_LogicalChannels_Channel_Ethernet_State& operator=(TerminalDevice_LogicalChannels_Channel_Ethernet_State&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TerminalDevice_LogicalChannels_Channel_Ethernet_State& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TerminalDevice_LogicalChannels_Channel_Ethernet_State* internal_default_instance() {
    return reinterpret_cast<const TerminalDevice_LogicalChannels_Channel_Ethernet_State*>(
               &_TerminalDevice_LogicalChannels_Channel_Ethernet_State_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(TerminalDevice_LogicalChannels_Channel_Ethernet_State* other);
  friend void swap(TerminalDevice_LogicalChannels_Channel_Ethernet_State& a, TerminalDevice_LogicalChannels_Channel_Ethernet_State& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TerminalDevice_LogicalChannels_Channel_Ethernet_State* New() const PROTOBUF_FINAL { return New(NULL); }

  TerminalDevice_LogicalChannels_Channel_Ethernet_State* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TerminalDevice_LogicalChannels_Channel_Ethernet_State& from);
  void MergeFrom(const TerminalDevice_LogicalChannels_Channel_Ethernet_State& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TerminalDevice_LogicalChannels_Channel_Ethernet_State* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .ywrapper.UintValue out_mac_control_frames = 31760815 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/ethernet/state/out-mac-control-frames"];
  bool has_out_mac_control_frames() const;
  void clear_out_mac_control_frames();
  static const int kOutMacControlFramesFieldNumber = 31760815;
  const ::ywrapper::UintValue& out_mac_control_frames() const;
  ::ywrapper::UintValue* release_out_mac_control_frames();
  ::ywrapper::UintValue* mutable_out_mac_control_frames();
  void set_allocated_out_mac_control_frames(::ywrapper::UintValue* out_mac_control_frames);

  // .ywrapper.UintValue in_fragment_frames = 40398731 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/ethernet/state/in-fragment-frames"];
  bool has_in_fragment_frames() const;
  void clear_in_fragment_frames();
  static const int kInFragmentFramesFieldNumber = 40398731;
  const ::ywrapper::UintValue& in_fragment_frames() const;
  ::ywrapper::UintValue* release_in_fragment_frames();
  ::ywrapper::UintValue* mutable_in_fragment_frames();
  void set_allocated_in_fragment_frames(::ywrapper::UintValue* in_fragment_frames);

  // .ywrapper.UintValue in_8021q_frames = 144594791 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/ethernet/state/in-8021q-frames"];
  bool has_in_8021q_frames() const;
  void clear_in_8021q_frames();
  static const int kIn8021QFramesFieldNumber = 144594791;
  const ::ywrapper::UintValue& in_8021q_frames() const;
  ::ywrapper::UintValue* release_in_8021q_frames();
  ::ywrapper::UintValue* mutable_in_8021q_frames();
  void set_allocated_in_8021q_frames(::ywrapper::UintValue* in_8021q_frames);

  // .ywrapper.UintValue out_8021q_frames = 198455804 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/ethernet/state/out-8021q-frames"];
  bool has_out_8021q_frames() const;
  void clear_out_8021q_frames();
  static const int kOut8021QFramesFieldNumber = 198455804;
  const ::ywrapper::UintValue& out_8021q_frames() const;
  ::ywrapper::UintValue* release_out_8021q_frames();
  ::ywrapper::UintValue* mutable_out_8021q_frames();
  void set_allocated_out_8021q_frames(::ywrapper::UintValue* out_8021q_frames);

  // .ywrapper.UintValue in_mac_control_frames = 339653696 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/ethernet/state/in-mac-control-frames"];
  bool has_in_mac_control_frames() const;
  void clear_in_mac_control_frames();
  static const int kInMacControlFramesFieldNumber = 339653696;
  const ::ywrapper::UintValue& in_mac_control_frames() const;
  ::ywrapper::UintValue* release_in_mac_control_frames();
  ::ywrapper::UintValue* mutable_in_mac_control_frames();
  void set_allocated_in_mac_control_frames(::ywrapper::UintValue* in_mac_control_frames);

  // .ywrapper.UintValue in_crc_errors = 397283042 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/ethernet/state/in-crc-errors"];
  bool has_in_crc_errors() const;
  void clear_in_crc_errors();
  static const int kInCrcErrorsFieldNumber = 397283042;
  const ::ywrapper::UintValue& in_crc_errors() const;
  ::ywrapper::UintValue* release_in_crc_errors();
  ::ywrapper::UintValue* mutable_in_crc_errors();
  void set_allocated_in_crc_errors(::ywrapper::UintValue* in_crc_errors);

  // .ywrapper.UintValue in_mac_pause_frames = 429314703 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/ethernet/state/in-mac-pause-frames"];
  bool has_in_mac_pause_frames() const;
  void clear_in_mac_pause_frames();
  static const int kInMacPauseFramesFieldNumber = 429314703;
  const ::ywrapper::UintValue& in_mac_pause_frames() const;
  ::ywrapper::UintValue* release_in_mac_pause_frames();
  ::ywrapper::UintValue* mutable_in_mac_pause_frames();
  void set_allocated_in_mac_pause_frames(::ywrapper::UintValue* in_mac_pause_frames);

  // .ywrapper.UintValue out_mac_pause_frames = 440130020 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/ethernet/state/out-mac-pause-frames"];
  bool has_out_mac_pause_frames() const;
  void clear_out_mac_pause_frames();
  static const int kOutMacPauseFramesFieldNumber = 440130020;
  const ::ywrapper::UintValue& out_mac_pause_frames() const;
  ::ywrapper::UintValue* release_out_mac_pause_frames();
  ::ywrapper::UintValue* mutable_out_mac_pause_frames();
  void set_allocated_out_mac_pause_frames(::ywrapper::UintValue* out_mac_pause_frames);

  // .ywrapper.UintValue in_jabber_frames = 447323069 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/ethernet/state/in-jabber-frames"];
  bool has_in_jabber_frames() const;
  void clear_in_jabber_frames();
  static const int kInJabberFramesFieldNumber = 447323069;
  const ::ywrapper::UintValue& in_jabber_frames() const;
  ::ywrapper::UintValue* release_in_jabber_frames();
  ::ywrapper::UintValue* mutable_in_jabber_frames();
  void set_allocated_in_jabber_frames(::ywrapper::UintValue* in_jabber_frames);

  // .ywrapper.UintValue in_oversize_frames = 499149204 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/ethernet/state/in-oversize-frames"];
  bool has_in_oversize_frames() const;
  void clear_in_oversize_frames();
  static const int kInOversizeFramesFieldNumber = 499149204;
  const ::ywrapper::UintValue& in_oversize_frames() const;
  ::ywrapper::UintValue* release_in_oversize_frames();
  ::ywrapper::UintValue* mutable_in_oversize_frames();
  void set_allocated_in_oversize_frames(::ywrapper::UintValue* in_oversize_frames);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Ethernet.State)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ywrapper::UintValue* out_mac_control_frames_;
  ::ywrapper::UintValue* in_fragment_frames_;
  ::ywrapper::UintValue* in_8021q_frames_;
  ::ywrapper::UintValue* out_8021q_frames_;
  ::ywrapper::UintValue* in_mac_control_frames_;
  ::ywrapper::UintValue* in_crc_errors_;
  ::ywrapper::UintValue* in_mac_pause_frames_;
  ::ywrapper::UintValue* out_mac_pause_frames_;
  ::ywrapper::UintValue* in_jabber_frames_;
  ::ywrapper::UintValue* in_oversize_frames_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::InitDefaultsTerminalDevice_LogicalChannels_Channel_Ethernet_StateImpl();
};
// -------------------------------------------------------------------

class TerminalDevice_LogicalChannels_Channel_Ethernet : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Ethernet) */ {
 public:
  TerminalDevice_LogicalChannels_Channel_Ethernet();
  virtual ~TerminalDevice_LogicalChannels_Channel_Ethernet();

  TerminalDevice_LogicalChannels_Channel_Ethernet(const TerminalDevice_LogicalChannels_Channel_Ethernet& from);

  inline TerminalDevice_LogicalChannels_Channel_Ethernet& operator=(const TerminalDevice_LogicalChannels_Channel_Ethernet& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TerminalDevice_LogicalChannels_Channel_Ethernet(TerminalDevice_LogicalChannels_Channel_Ethernet&& from) noexcept
    : TerminalDevice_LogicalChannels_Channel_Ethernet() {
    *this = ::std::move(from);
  }

  inline TerminalDevice_LogicalChannels_Channel_Ethernet& operator=(TerminalDevice_LogicalChannels_Channel_Ethernet&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TerminalDevice_LogicalChannels_Channel_Ethernet& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TerminalDevice_LogicalChannels_Channel_Ethernet* internal_default_instance() {
    return reinterpret_cast<const TerminalDevice_LogicalChannels_Channel_Ethernet*>(
               &_TerminalDevice_LogicalChannels_Channel_Ethernet_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(TerminalDevice_LogicalChannels_Channel_Ethernet* other);
  friend void swap(TerminalDevice_LogicalChannels_Channel_Ethernet& a, TerminalDevice_LogicalChannels_Channel_Ethernet& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TerminalDevice_LogicalChannels_Channel_Ethernet* New() const PROTOBUF_FINAL { return New(NULL); }

  TerminalDevice_LogicalChannels_Channel_Ethernet* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TerminalDevice_LogicalChannels_Channel_Ethernet& from);
  void MergeFrom(const TerminalDevice_LogicalChannels_Channel_Ethernet& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TerminalDevice_LogicalChannels_Channel_Ethernet* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef TerminalDevice_LogicalChannels_Channel_Ethernet_Config Config;
  typedef TerminalDevice_LogicalChannels_Channel_Ethernet_State State;

  // accessors -------------------------------------------------------

  // .openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Ethernet.Config config = 63644242 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/ethernet/config"];
  bool has_config() const;
  void clear_config();
  static const int kConfigFieldNumber = 63644242;
  const ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Ethernet_Config& config() const;
  ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Ethernet_Config* release_config();
  ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Ethernet_Config* mutable_config();
  void set_allocated_config(::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Ethernet_Config* config);

  // .openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Ethernet.State state = 197618383 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/ethernet/state"];
  bool has_state() const;
  void clear_state();
  static const int kStateFieldNumber = 197618383;
  const ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Ethernet_State& state() const;
  ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Ethernet_State* release_state();
  ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Ethernet_State* mutable_state();
  void set_allocated_state(::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Ethernet_State* state);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Ethernet)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Ethernet_Config* config_;
  ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Ethernet_State* state_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::InitDefaultsTerminalDevice_LogicalChannels_Channel_EthernetImpl();
};
// -------------------------------------------------------------------

class TerminalDevice_LogicalChannels_Channel_Ingress_Config : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Ingress.Config) */ {
 public:
  TerminalDevice_LogicalChannels_Channel_Ingress_Config();
  virtual ~TerminalDevice_LogicalChannels_Channel_Ingress_Config();

  TerminalDevice_LogicalChannels_Channel_Ingress_Config(const TerminalDevice_LogicalChannels_Channel_Ingress_Config& from);

  inline TerminalDevice_LogicalChannels_Channel_Ingress_Config& operator=(const TerminalDevice_LogicalChannels_Channel_Ingress_Config& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TerminalDevice_LogicalChannels_Channel_Ingress_Config(TerminalDevice_LogicalChannels_Channel_Ingress_Config&& from) noexcept
    : TerminalDevice_LogicalChannels_Channel_Ingress_Config() {
    *this = ::std::move(from);
  }

  inline TerminalDevice_LogicalChannels_Channel_Ingress_Config& operator=(TerminalDevice_LogicalChannels_Channel_Ingress_Config&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TerminalDevice_LogicalChannels_Channel_Ingress_Config& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TerminalDevice_LogicalChannels_Channel_Ingress_Config* internal_default_instance() {
    return reinterpret_cast<const TerminalDevice_LogicalChannels_Channel_Ingress_Config*>(
               &_TerminalDevice_LogicalChannels_Channel_Ingress_Config_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(TerminalDevice_LogicalChannels_Channel_Ingress_Config* other);
  friend void swap(TerminalDevice_LogicalChannels_Channel_Ingress_Config& a, TerminalDevice_LogicalChannels_Channel_Ingress_Config& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TerminalDevice_LogicalChannels_Channel_Ingress_Config* New() const PROTOBUF_FINAL { return New(NULL); }

  TerminalDevice_LogicalChannels_Channel_Ingress_Config* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TerminalDevice_LogicalChannels_Channel_Ingress_Config& from);
  void MergeFrom(const TerminalDevice_LogicalChannels_Channel_Ingress_Config& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TerminalDevice_LogicalChannels_Channel_Ingress_Config* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .ywrapper.UintValue physical_channel = 116250452 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/ingress/config/physical-channel"];
  int physical_channel_size() const;
  void clear_physical_channel();
  static const int kPhysicalChannelFieldNumber = 116250452;
  const ::ywrapper::UintValue& physical_channel(int index) const;
  ::ywrapper::UintValue* mutable_physical_channel(int index);
  ::ywrapper::UintValue* add_physical_channel();
  ::google::protobuf::RepeatedPtrField< ::ywrapper::UintValue >*
      mutable_physical_channel();
  const ::google::protobuf::RepeatedPtrField< ::ywrapper::UintValue >&
      physical_channel() const;

  // .ywrapper.StringValue transceiver = 110176305 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/ingress/config/transceiver"];
  bool has_transceiver() const;
  void clear_transceiver();
  static const int kTransceiverFieldNumber = 110176305;
  const ::ywrapper::StringValue& transceiver() const;
  ::ywrapper::StringValue* release_transceiver();
  ::ywrapper::StringValue* mutable_transceiver();
  void set_allocated_transceiver(::ywrapper::StringValue* transceiver);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Ingress.Config)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::ywrapper::UintValue > physical_channel_;
  ::ywrapper::StringValue* transceiver_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::InitDefaultsTerminalDevice_LogicalChannels_Channel_Ingress_ConfigImpl();
};
// -------------------------------------------------------------------

class TerminalDevice_LogicalChannels_Channel_Ingress_State : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Ingress.State) */ {
 public:
  TerminalDevice_LogicalChannels_Channel_Ingress_State();
  virtual ~TerminalDevice_LogicalChannels_Channel_Ingress_State();

  TerminalDevice_LogicalChannels_Channel_Ingress_State(const TerminalDevice_LogicalChannels_Channel_Ingress_State& from);

  inline TerminalDevice_LogicalChannels_Channel_Ingress_State& operator=(const TerminalDevice_LogicalChannels_Channel_Ingress_State& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TerminalDevice_LogicalChannels_Channel_Ingress_State(TerminalDevice_LogicalChannels_Channel_Ingress_State&& from) noexcept
    : TerminalDevice_LogicalChannels_Channel_Ingress_State() {
    *this = ::std::move(from);
  }

  inline TerminalDevice_LogicalChannels_Channel_Ingress_State& operator=(TerminalDevice_LogicalChannels_Channel_Ingress_State&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TerminalDevice_LogicalChannels_Channel_Ingress_State& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TerminalDevice_LogicalChannels_Channel_Ingress_State* internal_default_instance() {
    return reinterpret_cast<const TerminalDevice_LogicalChannels_Channel_Ingress_State*>(
               &_TerminalDevice_LogicalChannels_Channel_Ingress_State_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(TerminalDevice_LogicalChannels_Channel_Ingress_State* other);
  friend void swap(TerminalDevice_LogicalChannels_Channel_Ingress_State& a, TerminalDevice_LogicalChannels_Channel_Ingress_State& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TerminalDevice_LogicalChannels_Channel_Ingress_State* New() const PROTOBUF_FINAL { return New(NULL); }

  TerminalDevice_LogicalChannels_Channel_Ingress_State* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TerminalDevice_LogicalChannels_Channel_Ingress_State& from);
  void MergeFrom(const TerminalDevice_LogicalChannels_Channel_Ingress_State& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TerminalDevice_LogicalChannels_Channel_Ingress_State* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .ywrapper.UintValue physical_channel = 494740411 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/ingress/state/physical-channel"];
  int physical_channel_size() const;
  void clear_physical_channel();
  static const int kPhysicalChannelFieldNumber = 494740411;
  const ::ywrapper::UintValue& physical_channel(int index) const;
  ::ywrapper::UintValue* mutable_physical_channel(int index);
  ::ywrapper::UintValue* add_physical_channel();
  ::google::protobuf::RepeatedPtrField< ::ywrapper::UintValue >*
      mutable_physical_channel();
  const ::google::protobuf::RepeatedPtrField< ::ywrapper::UintValue >&
      physical_channel() const;

  // .ywrapper.StringValue transceiver = 160140636 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/ingress/state/transceiver"];
  bool has_transceiver() const;
  void clear_transceiver();
  static const int kTransceiverFieldNumber = 160140636;
  const ::ywrapper::StringValue& transceiver() const;
  ::ywrapper::StringValue* release_transceiver();
  ::ywrapper::StringValue* mutable_transceiver();
  void set_allocated_transceiver(::ywrapper::StringValue* transceiver);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Ingress.State)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::ywrapper::UintValue > physical_channel_;
  ::ywrapper::StringValue* transceiver_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::InitDefaultsTerminalDevice_LogicalChannels_Channel_Ingress_StateImpl();
};
// -------------------------------------------------------------------

class TerminalDevice_LogicalChannels_Channel_Ingress : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Ingress) */ {
 public:
  TerminalDevice_LogicalChannels_Channel_Ingress();
  virtual ~TerminalDevice_LogicalChannels_Channel_Ingress();

  TerminalDevice_LogicalChannels_Channel_Ingress(const TerminalDevice_LogicalChannels_Channel_Ingress& from);

  inline TerminalDevice_LogicalChannels_Channel_Ingress& operator=(const TerminalDevice_LogicalChannels_Channel_Ingress& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TerminalDevice_LogicalChannels_Channel_Ingress(TerminalDevice_LogicalChannels_Channel_Ingress&& from) noexcept
    : TerminalDevice_LogicalChannels_Channel_Ingress() {
    *this = ::std::move(from);
  }

  inline TerminalDevice_LogicalChannels_Channel_Ingress& operator=(TerminalDevice_LogicalChannels_Channel_Ingress&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TerminalDevice_LogicalChannels_Channel_Ingress& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TerminalDevice_LogicalChannels_Channel_Ingress* internal_default_instance() {
    return reinterpret_cast<const TerminalDevice_LogicalChannels_Channel_Ingress*>(
               &_TerminalDevice_LogicalChannels_Channel_Ingress_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(TerminalDevice_LogicalChannels_Channel_Ingress* other);
  friend void swap(TerminalDevice_LogicalChannels_Channel_Ingress& a, TerminalDevice_LogicalChannels_Channel_Ingress& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TerminalDevice_LogicalChannels_Channel_Ingress* New() const PROTOBUF_FINAL { return New(NULL); }

  TerminalDevice_LogicalChannels_Channel_Ingress* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TerminalDevice_LogicalChannels_Channel_Ingress& from);
  void MergeFrom(const TerminalDevice_LogicalChannels_Channel_Ingress& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TerminalDevice_LogicalChannels_Channel_Ingress* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef TerminalDevice_LogicalChannels_Channel_Ingress_Config Config;
  typedef TerminalDevice_LogicalChannels_Channel_Ingress_State State;

  // accessors -------------------------------------------------------

  // .openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Ingress.Config config = 197300886 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/ingress/config"];
  bool has_config() const;
  void clear_config();
  static const int kConfigFieldNumber = 197300886;
  const ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Ingress_Config& config() const;
  ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Ingress_Config* release_config();
  ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Ingress_Config* mutable_config();
  void set_allocated_config(::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Ingress_Config* config);

  // .openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Ingress.State state = 375537987 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/ingress/state"];
  bool has_state() const;
  void clear_state();
  static const int kStateFieldNumber = 375537987;
  const ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Ingress_State& state() const;
  ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Ingress_State* release_state();
  ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Ingress_State* mutable_state();
  void set_allocated_state(::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Ingress_State* state);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Ingress)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Ingress_Config* config_;
  ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Ingress_State* state_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::InitDefaultsTerminalDevice_LogicalChannels_Channel_IngressImpl();
};
// -------------------------------------------------------------------

class TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_Config : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.LogicalChannelAssignments.Assignment.Config) */ {
 public:
  TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_Config();
  virtual ~TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_Config();

  TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_Config(const TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_Config& from);

  inline TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_Config& operator=(const TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_Config& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_Config(TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_Config&& from) noexcept
    : TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_Config() {
    *this = ::std::move(from);
  }

  inline TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_Config& operator=(TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_Config&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_Config& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_Config* internal_default_instance() {
    return reinterpret_cast<const TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_Config*>(
               &_TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_Config_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void Swap(TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_Config* other);
  friend void swap(TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_Config& a, TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_Config& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_Config* New() const PROTOBUF_FINAL { return New(NULL); }

  TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_Config* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_Config& from);
  void MergeFrom(const TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_Config& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_Config* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_Config_AssignmentType AssignmentType;
  static const AssignmentType ASSIGNMENTTYPE_UNSET =
    TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_Config_AssignmentType_ASSIGNMENTTYPE_UNSET;
  static const AssignmentType ASSIGNMENTTYPE_LOGICAL_CHANNEL =
    TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_Config_AssignmentType_ASSIGNMENTTYPE_LOGICAL_CHANNEL;
  static const AssignmentType ASSIGNMENTTYPE_OPTICAL_CHANNEL =
    TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_Config_AssignmentType_ASSIGNMENTTYPE_OPTICAL_CHANNEL;
  static inline bool AssignmentType_IsValid(int value) {
    return TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_Config_AssignmentType_IsValid(value);
  }
  static const AssignmentType AssignmentType_MIN =
    TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_Config_AssignmentType_AssignmentType_MIN;
  static const AssignmentType AssignmentType_MAX =
    TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_Config_AssignmentType_AssignmentType_MAX;
  static const int AssignmentType_ARRAYSIZE =
    TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_Config_AssignmentType_AssignmentType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  AssignmentType_descriptor() {
    return TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_Config_AssignmentType_descriptor();
  }
  static inline const ::std::string& AssignmentType_Name(AssignmentType value) {
    return TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_Config_AssignmentType_Name(value);
  }
  static inline bool AssignmentType_Parse(const ::std::string& name,
      AssignmentType* value) {
    return TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_Config_AssignmentType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .ywrapper.UintValue logical_channel = 92447393 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/logical-channel-assignments/assignment/config/logical-channel"];
  bool has_logical_channel() const;
  void clear_logical_channel();
  static const int kLogicalChannelFieldNumber = 92447393;
  const ::ywrapper::UintValue& logical_channel() const;
  ::ywrapper::UintValue* release_logical_channel();
  ::ywrapper::UintValue* mutable_logical_channel();
  void set_allocated_logical_channel(::ywrapper::UintValue* logical_channel);

  // .ywrapper.StringValue description = 125024468 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/logical-channel-assignments/assignment/config/description"];
  bool has_description() const;
  void clear_description();
  static const int kDescriptionFieldNumber = 125024468;
  const ::ywrapper::StringValue& description() const;
  ::ywrapper::StringValue* release_description();
  ::ywrapper::StringValue* mutable_description();
  void set_allocated_description(::ywrapper::StringValue* description);

  // .ywrapper.UintValue index = 149526970 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/logical-channel-assignments/assignment/config/index"];
  bool has_index() const;
  void clear_index();
  static const int kIndexFieldNumber = 149526970;
  const ::ywrapper::UintValue& index() const;
  ::ywrapper::UintValue* release_index();
  ::ywrapper::UintValue* mutable_index();
  void set_allocated_index(::ywrapper::UintValue* index);

  // .ywrapper.StringValue optical_channel = 175286324 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/logical-channel-assignments/assignment/config/optical-channel"];
  bool has_optical_channel() const;
  void clear_optical_channel();
  static const int kOpticalChannelFieldNumber = 175286324;
  const ::ywrapper::StringValue& optical_channel() const;
  ::ywrapper::StringValue* release_optical_channel();
  ::ywrapper::StringValue* mutable_optical_channel();
  void set_allocated_optical_channel(::ywrapper::StringValue* optical_channel);

  // .ywrapper.Decimal64Value allocation = 314188864 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/logical-channel-assignments/assignment/config/allocation"];
  bool has_allocation() const;
  void clear_allocation();
  static const int kAllocationFieldNumber = 314188864;
  const ::ywrapper::Decimal64Value& allocation() const;
  ::ywrapper::Decimal64Value* release_allocation();
  ::ywrapper::Decimal64Value* mutable_allocation();
  void set_allocated_allocation(::ywrapper::Decimal64Value* allocation);

  // .openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.LogicalChannelAssignments.Assignment.Config.AssignmentType assignment_type = 456756042 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/logical-channel-assignments/assignment/config/assignment-type"];
  void clear_assignment_type();
  static const int kAssignmentTypeFieldNumber = 456756042;
  ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_Config_AssignmentType assignment_type() const;
  void set_assignment_type(::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_Config_AssignmentType value);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.LogicalChannelAssignments.Assignment.Config)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ywrapper::UintValue* logical_channel_;
  ::ywrapper::StringValue* description_;
  ::ywrapper::UintValue* index_;
  ::ywrapper::StringValue* optical_channel_;
  ::ywrapper::Decimal64Value* allocation_;
  int assignment_type_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::InitDefaultsTerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_ConfigImpl();
};
// -------------------------------------------------------------------

class TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_State : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.LogicalChannelAssignments.Assignment.State) */ {
 public:
  TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_State();
  virtual ~TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_State();

  TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_State(const TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_State& from);

  inline TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_State& operator=(const TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_State& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_State(TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_State&& from) noexcept
    : TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_State() {
    *this = ::std::move(from);
  }

  inline TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_State& operator=(TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_State&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_State& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_State* internal_default_instance() {
    return reinterpret_cast<const TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_State*>(
               &_TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_State_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    9;

  void Swap(TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_State* other);
  friend void swap(TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_State& a, TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_State& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_State* New() const PROTOBUF_FINAL { return New(NULL); }

  TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_State* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_State& from);
  void MergeFrom(const TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_State& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_State* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_State_AssignmentType AssignmentType;
  static const AssignmentType ASSIGNMENTTYPE_UNSET =
    TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_State_AssignmentType_ASSIGNMENTTYPE_UNSET;
  static const AssignmentType ASSIGNMENTTYPE_LOGICAL_CHANNEL =
    TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_State_AssignmentType_ASSIGNMENTTYPE_LOGICAL_CHANNEL;
  static const AssignmentType ASSIGNMENTTYPE_OPTICAL_CHANNEL =
    TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_State_AssignmentType_ASSIGNMENTTYPE_OPTICAL_CHANNEL;
  static inline bool AssignmentType_IsValid(int value) {
    return TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_State_AssignmentType_IsValid(value);
  }
  static const AssignmentType AssignmentType_MIN =
    TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_State_AssignmentType_AssignmentType_MIN;
  static const AssignmentType AssignmentType_MAX =
    TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_State_AssignmentType_AssignmentType_MAX;
  static const int AssignmentType_ARRAYSIZE =
    TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_State_AssignmentType_AssignmentType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  AssignmentType_descriptor() {
    return TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_State_AssignmentType_descriptor();
  }
  static inline const ::std::string& AssignmentType_Name(AssignmentType value) {
    return TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_State_AssignmentType_Name(value);
  }
  static inline bool AssignmentType_Parse(const ::std::string& name,
      AssignmentType* value) {
    return TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_State_AssignmentType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .ywrapper.Decimal64Value allocation = 36320529 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/logical-channel-assignments/assignment/state/allocation"];
  bool has_allocation() const;
  void clear_allocation();
  static const int kAllocationFieldNumber = 36320529;
  const ::ywrapper::Decimal64Value& allocation() const;
  ::ywrapper::Decimal64Value* release_allocation();
  ::ywrapper::Decimal64Value* mutable_allocation();
  void set_allocated_allocation(::ywrapper::Decimal64Value* allocation);

  // .ywrapper.UintValue logical_channel = 106910794 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/logical-channel-assignments/assignment/state/logical-channel"];
  bool has_logical_channel() const;
  void clear_logical_channel();
  static const int kLogicalChannelFieldNumber = 106910794;
  const ::ywrapper::UintValue& logical_channel() const;
  ::ywrapper::UintValue* release_logical_channel();
  ::ywrapper::UintValue* mutable_logical_channel();
  void set_allocated_logical_channel(::ywrapper::UintValue* logical_channel);

  // .ywrapper.UintValue index = 107378301 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/logical-channel-assignments/assignment/state/index"];
  bool has_index() const;
  void clear_index();
  static const int kIndexFieldNumber = 107378301;
  const ::ywrapper::UintValue& index() const;
  ::ywrapper::UintValue* release_index();
  ::ywrapper::UintValue* mutable_index();
  void set_allocated_index(::ywrapper::UintValue* index);

  // .ywrapper.StringValue description = 355583159 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/logical-channel-assignments/assignment/state/description"];
  bool has_description() const;
  void clear_description();
  static const int kDescriptionFieldNumber = 355583159;
  const ::ywrapper::StringValue& description() const;
  ::ywrapper::StringValue* release_description();
  ::ywrapper::StringValue* mutable_description();
  void set_allocated_description(::ywrapper::StringValue* description);

  // .ywrapper.StringValue optical_channel = 413714875 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/logical-channel-assignments/assignment/state/optical-channel"];
  bool has_optical_channel() const;
  void clear_optical_channel();
  static const int kOpticalChannelFieldNumber = 413714875;
  const ::ywrapper::StringValue& optical_channel() const;
  ::ywrapper::StringValue* release_optical_channel();
  ::ywrapper::StringValue* mutable_optical_channel();
  void set_allocated_optical_channel(::ywrapper::StringValue* optical_channel);

  // .openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.LogicalChannelAssignments.Assignment.State.AssignmentType assignment_type = 280777113 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/logical-channel-assignments/assignment/state/assignment-type"];
  void clear_assignment_type();
  static const int kAssignmentTypeFieldNumber = 280777113;
  ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_State_AssignmentType assignment_type() const;
  void set_assignment_type(::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_State_AssignmentType value);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.LogicalChannelAssignments.Assignment.State)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ywrapper::Decimal64Value* allocation_;
  ::ywrapper::UintValue* logical_channel_;
  ::ywrapper::UintValue* index_;
  ::ywrapper::StringValue* description_;
  ::ywrapper::StringValue* optical_channel_;
  int assignment_type_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::InitDefaultsTerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_StateImpl();
};
// -------------------------------------------------------------------

class TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.LogicalChannelAssignments.Assignment) */ {
 public:
  TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment();
  virtual ~TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment();

  TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment(const TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment& from);

  inline TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment& operator=(const TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment(TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment&& from) noexcept
    : TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment() {
    *this = ::std::move(from);
  }

  inline TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment& operator=(TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment* internal_default_instance() {
    return reinterpret_cast<const TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment*>(
               &_TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    10;

  void Swap(TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment* other);
  friend void swap(TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment& a, TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment* New() const PROTOBUF_FINAL { return New(NULL); }

  TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment& from);
  void MergeFrom(const TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_Config Config;
  typedef TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_State State;

  // accessors -------------------------------------------------------

  // .openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.LogicalChannelAssignments.Assignment.State state = 263535820 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/logical-channel-assignments/assignment/state"];
  bool has_state() const;
  void clear_state();
  static const int kStateFieldNumber = 263535820;
  const ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_State& state() const;
  ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_State* release_state();
  ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_State* mutable_state();
  void set_allocated_state(::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_State* state);

  // .openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.LogicalChannelAssignments.Assignment.Config config = 488440203 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/logical-channel-assignments/assignment/config"];
  bool has_config() const;
  void clear_config();
  static const int kConfigFieldNumber = 488440203;
  const ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_Config& config() const;
  ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_Config* release_config();
  ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_Config* mutable_config();
  void set_allocated_config(::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_Config* config);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.LogicalChannelAssignments.Assignment)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_State* state_;
  ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_Config* config_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::InitDefaultsTerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_AssignmentImpl();
};
// -------------------------------------------------------------------

class TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_AssignmentKey : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.LogicalChannelAssignments.AssignmentKey) */ {
 public:
  TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_AssignmentKey();
  virtual ~TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_AssignmentKey();

  TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_AssignmentKey(const TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_AssignmentKey& from);

  inline TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_AssignmentKey& operator=(const TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_AssignmentKey& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_AssignmentKey(TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_AssignmentKey&& from) noexcept
    : TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_AssignmentKey() {
    *this = ::std::move(from);
  }

  inline TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_AssignmentKey& operator=(TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_AssignmentKey&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_AssignmentKey& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_AssignmentKey* internal_default_instance() {
    return reinterpret_cast<const TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_AssignmentKey*>(
               &_TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_AssignmentKey_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    11;

  void Swap(TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_AssignmentKey* other);
  friend void swap(TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_AssignmentKey& a, TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_AssignmentKey& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_AssignmentKey* New() const PROTOBUF_FINAL { return New(NULL); }

  TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_AssignmentKey* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_AssignmentKey& from);
  void MergeFrom(const TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_AssignmentKey& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_AssignmentKey* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.LogicalChannelAssignments.Assignment assignment = 2;
  bool has_assignment() const;
  void clear_assignment();
  static const int kAssignmentFieldNumber = 2;
  const ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment& assignment() const;
  ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment* release_assignment();
  ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment* mutable_assignment();
  void set_allocated_assignment(::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment* assignment);

  // uint64 index = 1 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/logical-channel-assignments/assignment/index"];
  void clear_index();
  static const int kIndexFieldNumber = 1;
  ::google::protobuf::uint64 index() const;
  void set_index(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.LogicalChannelAssignments.AssignmentKey)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment* assignment_;
  ::google::protobuf::uint64 index_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::InitDefaultsTerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_AssignmentKeyImpl();
};
// -------------------------------------------------------------------

class TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.LogicalChannelAssignments) */ {
 public:
  TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments();
  virtual ~TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments();

  TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments(const TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments& from);

  inline TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments& operator=(const TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments(TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments&& from) noexcept
    : TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments() {
    *this = ::std::move(from);
  }

  inline TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments& operator=(TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments* internal_default_instance() {
    return reinterpret_cast<const TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments*>(
               &_TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    12;

  void Swap(TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments* other);
  friend void swap(TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments& a, TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments* New() const PROTOBUF_FINAL { return New(NULL); }

  TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments& from);
  void MergeFrom(const TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment Assignment;
  typedef TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_AssignmentKey AssignmentKey;

  // accessors -------------------------------------------------------

  // repeated .openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.LogicalChannelAssignments.AssignmentKey assignment = 520668442 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/logical-channel-assignments/assignment"];
  int assignment_size() const;
  void clear_assignment();
  static const int kAssignmentFieldNumber = 520668442;
  const ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_AssignmentKey& assignment(int index) const;
  ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_AssignmentKey* mutable_assignment(int index);
  ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_AssignmentKey* add_assignment();
  ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_AssignmentKey >*
      mutable_assignment();
  const ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_AssignmentKey >&
      assignment() const;

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.LogicalChannelAssignments)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_AssignmentKey > assignment_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::InitDefaultsTerminalDevice_LogicalChannels_Channel_LogicalChannelAssignmentsImpl();
};
// -------------------------------------------------------------------

class TerminalDevice_LogicalChannels_Channel_Otn_Config : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.Config) */ {
 public:
  TerminalDevice_LogicalChannels_Channel_Otn_Config();
  virtual ~TerminalDevice_LogicalChannels_Channel_Otn_Config();

  TerminalDevice_LogicalChannels_Channel_Otn_Config(const TerminalDevice_LogicalChannels_Channel_Otn_Config& from);

  inline TerminalDevice_LogicalChannels_Channel_Otn_Config& operator=(const TerminalDevice_LogicalChannels_Channel_Otn_Config& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TerminalDevice_LogicalChannels_Channel_Otn_Config(TerminalDevice_LogicalChannels_Channel_Otn_Config&& from) noexcept
    : TerminalDevice_LogicalChannels_Channel_Otn_Config() {
    *this = ::std::move(from);
  }

  inline TerminalDevice_LogicalChannels_Channel_Otn_Config& operator=(TerminalDevice_LogicalChannels_Channel_Otn_Config&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TerminalDevice_LogicalChannels_Channel_Otn_Config& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TerminalDevice_LogicalChannels_Channel_Otn_Config* internal_default_instance() {
    return reinterpret_cast<const TerminalDevice_LogicalChannels_Channel_Otn_Config*>(
               &_TerminalDevice_LogicalChannels_Channel_Otn_Config_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    13;

  void Swap(TerminalDevice_LogicalChannels_Channel_Otn_Config* other);
  friend void swap(TerminalDevice_LogicalChannels_Channel_Otn_Config& a, TerminalDevice_LogicalChannels_Channel_Otn_Config& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TerminalDevice_LogicalChannels_Channel_Otn_Config* New() const PROTOBUF_FINAL { return New(NULL); }

  TerminalDevice_LogicalChannels_Channel_Otn_Config* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TerminalDevice_LogicalChannels_Channel_Otn_Config& from);
  void MergeFrom(const TerminalDevice_LogicalChannels_Channel_Otn_Config& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TerminalDevice_LogicalChannels_Channel_Otn_Config* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .ywrapper.StringValue tti_msg_expected = 22126267 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/config/tti-msg-expected"];
  bool has_tti_msg_expected() const;
  void clear_tti_msg_expected();
  static const int kTtiMsgExpectedFieldNumber = 22126267;
  const ::ywrapper::StringValue& tti_msg_expected() const;
  ::ywrapper::StringValue* release_tti_msg_expected();
  ::ywrapper::StringValue* mutable_tti_msg_expected();
  void set_allocated_tti_msg_expected(::ywrapper::StringValue* tti_msg_expected);

  // .ywrapper.StringValue tti_msg_transmit = 129219947 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/config/tti-msg-transmit"];
  bool has_tti_msg_transmit() const;
  void clear_tti_msg_transmit();
  static const int kTtiMsgTransmitFieldNumber = 129219947;
  const ::ywrapper::StringValue& tti_msg_transmit() const;
  ::ywrapper::StringValue* release_tti_msg_transmit();
  ::ywrapper::StringValue* mutable_tti_msg_transmit();
  void set_allocated_tti_msg_transmit(::ywrapper::StringValue* tti_msg_transmit);

  // .ywrapper.BoolValue tti_msg_auto = 143356042 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/config/tti-msg-auto"];
  bool has_tti_msg_auto() const;
  void clear_tti_msg_auto();
  static const int kTtiMsgAutoFieldNumber = 143356042;
  const ::ywrapper::BoolValue& tti_msg_auto() const;
  ::ywrapper::BoolValue* release_tti_msg_auto();
  ::ywrapper::BoolValue* mutable_tti_msg_auto();
  void set_allocated_tti_msg_auto(::ywrapper::BoolValue* tti_msg_auto);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.Config)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ywrapper::StringValue* tti_msg_expected_;
  ::ywrapper::StringValue* tti_msg_transmit_;
  ::ywrapper::BoolValue* tti_msg_auto_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::InitDefaultsTerminalDevice_LogicalChannels_Channel_Otn_ConfigImpl();
};
// -------------------------------------------------------------------

class TerminalDevice_LogicalChannels_Channel_Otn_State_Esnr : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.Esnr) */ {
 public:
  TerminalDevice_LogicalChannels_Channel_Otn_State_Esnr();
  virtual ~TerminalDevice_LogicalChannels_Channel_Otn_State_Esnr();

  TerminalDevice_LogicalChannels_Channel_Otn_State_Esnr(const TerminalDevice_LogicalChannels_Channel_Otn_State_Esnr& from);

  inline TerminalDevice_LogicalChannels_Channel_Otn_State_Esnr& operator=(const TerminalDevice_LogicalChannels_Channel_Otn_State_Esnr& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TerminalDevice_LogicalChannels_Channel_Otn_State_Esnr(TerminalDevice_LogicalChannels_Channel_Otn_State_Esnr&& from) noexcept
    : TerminalDevice_LogicalChannels_Channel_Otn_State_Esnr() {
    *this = ::std::move(from);
  }

  inline TerminalDevice_LogicalChannels_Channel_Otn_State_Esnr& operator=(TerminalDevice_LogicalChannels_Channel_Otn_State_Esnr&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TerminalDevice_LogicalChannels_Channel_Otn_State_Esnr& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TerminalDevice_LogicalChannels_Channel_Otn_State_Esnr* internal_default_instance() {
    return reinterpret_cast<const TerminalDevice_LogicalChannels_Channel_Otn_State_Esnr*>(
               &_TerminalDevice_LogicalChannels_Channel_Otn_State_Esnr_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    14;

  void Swap(TerminalDevice_LogicalChannels_Channel_Otn_State_Esnr* other);
  friend void swap(TerminalDevice_LogicalChannels_Channel_Otn_State_Esnr& a, TerminalDevice_LogicalChannels_Channel_Otn_State_Esnr& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TerminalDevice_LogicalChannels_Channel_Otn_State_Esnr* New() const PROTOBUF_FINAL { return New(NULL); }

  TerminalDevice_LogicalChannels_Channel_Otn_State_Esnr* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TerminalDevice_LogicalChannels_Channel_Otn_State_Esnr& from);
  void MergeFrom(const TerminalDevice_LogicalChannels_Channel_Otn_State_Esnr& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TerminalDevice_LogicalChannels_Channel_Otn_State_Esnr* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .ywrapper.Decimal64Value min = 314171675 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/state/esnr/min"];
  bool has_min() const;
  void clear_min();
  static const int kMinFieldNumber = 314171675;
  const ::ywrapper::Decimal64Value& min() const;
  ::ywrapper::Decimal64Value* release_min();
  ::ywrapper::Decimal64Value* mutable_min();
  void set_allocated_min(::ywrapper::Decimal64Value* min);

  // .ywrapper.Decimal64Value avg = 330244907 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/state/esnr/avg"];
  bool has_avg() const;
  void clear_avg();
  static const int kAvgFieldNumber = 330244907;
  const ::ywrapper::Decimal64Value& avg() const;
  ::ywrapper::Decimal64Value* release_avg();
  ::ywrapper::Decimal64Value* mutable_avg();
  void set_allocated_avg(::ywrapper::Decimal64Value* avg);

  // .ywrapper.Decimal64Value instant = 330879284 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/state/esnr/instant"];
  bool has_instant() const;
  void clear_instant();
  static const int kInstantFieldNumber = 330879284;
  const ::ywrapper::Decimal64Value& instant() const;
  ::ywrapper::Decimal64Value* release_instant();
  ::ywrapper::Decimal64Value* mutable_instant();
  void set_allocated_instant(::ywrapper::Decimal64Value* instant);

  // .ywrapper.UintValue interval = 336957778 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/state/esnr/interval"];
  bool has_interval() const;
  void clear_interval();
  static const int kIntervalFieldNumber = 336957778;
  const ::ywrapper::UintValue& interval() const;
  ::ywrapper::UintValue* release_interval();
  ::ywrapper::UintValue* mutable_interval();
  void set_allocated_interval(::ywrapper::UintValue* interval);

  // .ywrapper.Decimal64Value max = 448392821 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/state/esnr/max"];
  bool has_max() const;
  void clear_max();
  static const int kMaxFieldNumber = 448392821;
  const ::ywrapper::Decimal64Value& max() const;
  ::ywrapper::Decimal64Value* release_max();
  ::ywrapper::Decimal64Value* mutable_max();
  void set_allocated_max(::ywrapper::Decimal64Value* max);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.Esnr)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ywrapper::Decimal64Value* min_;
  ::ywrapper::Decimal64Value* avg_;
  ::ywrapper::Decimal64Value* instant_;
  ::ywrapper::UintValue* interval_;
  ::ywrapper::Decimal64Value* max_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::InitDefaultsTerminalDevice_LogicalChannels_Channel_Otn_State_EsnrImpl();
};
// -------------------------------------------------------------------

class TerminalDevice_LogicalChannels_Channel_Otn_State_PostFecBer : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.PostFecBer) */ {
 public:
  TerminalDevice_LogicalChannels_Channel_Otn_State_PostFecBer();
  virtual ~TerminalDevice_LogicalChannels_Channel_Otn_State_PostFecBer();

  TerminalDevice_LogicalChannels_Channel_Otn_State_PostFecBer(const TerminalDevice_LogicalChannels_Channel_Otn_State_PostFecBer& from);

  inline TerminalDevice_LogicalChannels_Channel_Otn_State_PostFecBer& operator=(const TerminalDevice_LogicalChannels_Channel_Otn_State_PostFecBer& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TerminalDevice_LogicalChannels_Channel_Otn_State_PostFecBer(TerminalDevice_LogicalChannels_Channel_Otn_State_PostFecBer&& from) noexcept
    : TerminalDevice_LogicalChannels_Channel_Otn_State_PostFecBer() {
    *this = ::std::move(from);
  }

  inline TerminalDevice_LogicalChannels_Channel_Otn_State_PostFecBer& operator=(TerminalDevice_LogicalChannels_Channel_Otn_State_PostFecBer&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TerminalDevice_LogicalChannels_Channel_Otn_State_PostFecBer& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TerminalDevice_LogicalChannels_Channel_Otn_State_PostFecBer* internal_default_instance() {
    return reinterpret_cast<const TerminalDevice_LogicalChannels_Channel_Otn_State_PostFecBer*>(
               &_TerminalDevice_LogicalChannels_Channel_Otn_State_PostFecBer_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    15;

  void Swap(TerminalDevice_LogicalChannels_Channel_Otn_State_PostFecBer* other);
  friend void swap(TerminalDevice_LogicalChannels_Channel_Otn_State_PostFecBer& a, TerminalDevice_LogicalChannels_Channel_Otn_State_PostFecBer& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TerminalDevice_LogicalChannels_Channel_Otn_State_PostFecBer* New() const PROTOBUF_FINAL { return New(NULL); }

  TerminalDevice_LogicalChannels_Channel_Otn_State_PostFecBer* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TerminalDevice_LogicalChannels_Channel_Otn_State_PostFecBer& from);
  void MergeFrom(const TerminalDevice_LogicalChannels_Channel_Otn_State_PostFecBer& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TerminalDevice_LogicalChannels_Channel_Otn_State_PostFecBer* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .ywrapper.Decimal64Value min = 2214112 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/state/post-fec-ber/min"];
  bool has_min() const;
  void clear_min();
  static const int kMinFieldNumber = 2214112;
  const ::ywrapper::Decimal64Value& min() const;
  ::ywrapper::Decimal64Value* release_min();
  ::ywrapper::Decimal64Value* mutable_min();
  void set_allocated_min(::ywrapper::Decimal64Value* min);

  // .ywrapper.Decimal64Value avg = 188623348 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/state/post-fec-ber/avg"];
  bool has_avg() const;
  void clear_avg();
  static const int kAvgFieldNumber = 188623348;
  const ::ywrapper::Decimal64Value& avg() const;
  ::ywrapper::Decimal64Value* release_avg();
  ::ywrapper::Decimal64Value* mutable_avg();
  void set_allocated_avg(::ywrapper::Decimal64Value* avg);

  // .ywrapper.Decimal64Value instant = 321048399 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/state/post-fec-ber/instant"];
  bool has_instant() const;
  void clear_instant();
  static const int kInstantFieldNumber = 321048399;
  const ::ywrapper::Decimal64Value& instant() const;
  ::ywrapper::Decimal64Value* release_instant();
  ::ywrapper::Decimal64Value* mutable_instant();
  void set_allocated_instant(::ywrapper::Decimal64Value* instant);

  // .ywrapper.Decimal64Value max = 404863886 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/state/post-fec-ber/max"];
  bool has_max() const;
  void clear_max();
  static const int kMaxFieldNumber = 404863886;
  const ::ywrapper::Decimal64Value& max() const;
  ::ywrapper::Decimal64Value* release_max();
  ::ywrapper::Decimal64Value* mutable_max();
  void set_allocated_max(::ywrapper::Decimal64Value* max);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.PostFecBer)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ywrapper::Decimal64Value* min_;
  ::ywrapper::Decimal64Value* avg_;
  ::ywrapper::Decimal64Value* instant_;
  ::ywrapper::Decimal64Value* max_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::InitDefaultsTerminalDevice_LogicalChannels_Channel_Otn_State_PostFecBerImpl();
};
// -------------------------------------------------------------------

class TerminalDevice_LogicalChannels_Channel_Otn_State_PreFecBer : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.PreFecBer) */ {
 public:
  TerminalDevice_LogicalChannels_Channel_Otn_State_PreFecBer();
  virtual ~TerminalDevice_LogicalChannels_Channel_Otn_State_PreFecBer();

  TerminalDevice_LogicalChannels_Channel_Otn_State_PreFecBer(const TerminalDevice_LogicalChannels_Channel_Otn_State_PreFecBer& from);

  inline TerminalDevice_LogicalChannels_Channel_Otn_State_PreFecBer& operator=(const TerminalDevice_LogicalChannels_Channel_Otn_State_PreFecBer& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TerminalDevice_LogicalChannels_Channel_Otn_State_PreFecBer(TerminalDevice_LogicalChannels_Channel_Otn_State_PreFecBer&& from) noexcept
    : TerminalDevice_LogicalChannels_Channel_Otn_State_PreFecBer() {
    *this = ::std::move(from);
  }

  inline TerminalDevice_LogicalChannels_Channel_Otn_State_PreFecBer& operator=(TerminalDevice_LogicalChannels_Channel_Otn_State_PreFecBer&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TerminalDevice_LogicalChannels_Channel_Otn_State_PreFecBer& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TerminalDevice_LogicalChannels_Channel_Otn_State_PreFecBer* internal_default_instance() {
    return reinterpret_cast<const TerminalDevice_LogicalChannels_Channel_Otn_State_PreFecBer*>(
               &_TerminalDevice_LogicalChannels_Channel_Otn_State_PreFecBer_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    16;

  void Swap(TerminalDevice_LogicalChannels_Channel_Otn_State_PreFecBer* other);
  friend void swap(TerminalDevice_LogicalChannels_Channel_Otn_State_PreFecBer& a, TerminalDevice_LogicalChannels_Channel_Otn_State_PreFecBer& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TerminalDevice_LogicalChannels_Channel_Otn_State_PreFecBer* New() const PROTOBUF_FINAL { return New(NULL); }

  TerminalDevice_LogicalChannels_Channel_Otn_State_PreFecBer* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TerminalDevice_LogicalChannels_Channel_Otn_State_PreFecBer& from);
  void MergeFrom(const TerminalDevice_LogicalChannels_Channel_Otn_State_PreFecBer& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TerminalDevice_LogicalChannels_Channel_Otn_State_PreFecBer* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .ywrapper.Decimal64Value min = 71881665 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/state/pre-fec-ber/min"];
  bool has_min() const;
  void clear_min();
  static const int kMinFieldNumber = 71881665;
  const ::ywrapper::Decimal64Value& min() const;
  ::ywrapper::Decimal64Value* release_min();
  ::ywrapper::Decimal64Value* mutable_min();
  void set_allocated_min(::ywrapper::Decimal64Value* min);

  // .ywrapper.Decimal64Value max = 206102591 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/state/pre-fec-ber/max"];
  bool has_max() const;
  void clear_max();
  static const int kMaxFieldNumber = 206102591;
  const ::ywrapper::Decimal64Value& max() const;
  ::ywrapper::Decimal64Value* release_max();
  ::ywrapper::Decimal64Value* mutable_max();
  void set_allocated_max(::ywrapper::Decimal64Value* max);

  // .ywrapper.Decimal64Value instant = 417553930 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/state/pre-fec-ber/instant"];
  bool has_instant() const;
  void clear_instant();
  static const int kInstantFieldNumber = 417553930;
  const ::ywrapper::Decimal64Value& instant() const;
  ::ywrapper::Decimal64Value* release_instant();
  ::ywrapper::Decimal64Value* mutable_instant();
  void set_allocated_instant(::ywrapper::Decimal64Value* instant);

  // .ywrapper.Decimal64Value avg = 424787165 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/state/pre-fec-ber/avg"];
  bool has_avg() const;
  void clear_avg();
  static const int kAvgFieldNumber = 424787165;
  const ::ywrapper::Decimal64Value& avg() const;
  ::ywrapper::Decimal64Value* release_avg();
  ::ywrapper::Decimal64Value* mutable_avg();
  void set_allocated_avg(::ywrapper::Decimal64Value* avg);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.PreFecBer)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ywrapper::Decimal64Value* min_;
  ::ywrapper::Decimal64Value* max_;
  ::ywrapper::Decimal64Value* instant_;
  ::ywrapper::Decimal64Value* avg_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::InitDefaultsTerminalDevice_LogicalChannels_Channel_Otn_State_PreFecBerImpl();
};
// -------------------------------------------------------------------

class TerminalDevice_LogicalChannels_Channel_Otn_State_QValue : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.QValue) */ {
 public:
  TerminalDevice_LogicalChannels_Channel_Otn_State_QValue();
  virtual ~TerminalDevice_LogicalChannels_Channel_Otn_State_QValue();

  TerminalDevice_LogicalChannels_Channel_Otn_State_QValue(const TerminalDevice_LogicalChannels_Channel_Otn_State_QValue& from);

  inline TerminalDevice_LogicalChannels_Channel_Otn_State_QValue& operator=(const TerminalDevice_LogicalChannels_Channel_Otn_State_QValue& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TerminalDevice_LogicalChannels_Channel_Otn_State_QValue(TerminalDevice_LogicalChannels_Channel_Otn_State_QValue&& from) noexcept
    : TerminalDevice_LogicalChannels_Channel_Otn_State_QValue() {
    *this = ::std::move(from);
  }

  inline TerminalDevice_LogicalChannels_Channel_Otn_State_QValue& operator=(TerminalDevice_LogicalChannels_Channel_Otn_State_QValue&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TerminalDevice_LogicalChannels_Channel_Otn_State_QValue& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TerminalDevice_LogicalChannels_Channel_Otn_State_QValue* internal_default_instance() {
    return reinterpret_cast<const TerminalDevice_LogicalChannels_Channel_Otn_State_QValue*>(
               &_TerminalDevice_LogicalChannels_Channel_Otn_State_QValue_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    17;

  void Swap(TerminalDevice_LogicalChannels_Channel_Otn_State_QValue* other);
  friend void swap(TerminalDevice_LogicalChannels_Channel_Otn_State_QValue& a, TerminalDevice_LogicalChannels_Channel_Otn_State_QValue& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TerminalDevice_LogicalChannels_Channel_Otn_State_QValue* New() const PROTOBUF_FINAL { return New(NULL); }

  TerminalDevice_LogicalChannels_Channel_Otn_State_QValue* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TerminalDevice_LogicalChannels_Channel_Otn_State_QValue& from);
  void MergeFrom(const TerminalDevice_LogicalChannels_Channel_Otn_State_QValue& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TerminalDevice_LogicalChannels_Channel_Otn_State_QValue* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .ywrapper.Decimal64Value max = 51963280 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/state/q-value/max"];
  bool has_max() const;
  void clear_max();
  static const int kMaxFieldNumber = 51963280;
  const ::ywrapper::Decimal64Value& max() const;
  ::ywrapper::Decimal64Value* release_max();
  ::ywrapper::Decimal64Value* mutable_max();
  void set_allocated_max(::ywrapper::Decimal64Value* max);

  // .ywrapper.UintValue interval = 388690377 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/state/q-value/interval"];
  bool has_interval() const;
  void clear_interval();
  static const int kIntervalFieldNumber = 388690377;
  const ::ywrapper::UintValue& interval() const;
  ::ywrapper::UintValue* release_interval();
  ::ywrapper::UintValue* mutable_interval();
  void set_allocated_interval(::ywrapper::UintValue* interval);

  // .ywrapper.Decimal64Value instant = 400113333 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/state/q-value/instant"];
  bool has_instant() const;
  void clear_instant();
  static const int kInstantFieldNumber = 400113333;
  const ::ywrapper::Decimal64Value& instant() const;
  ::ywrapper::Decimal64Value* release_instant();
  ::ywrapper::Decimal64Value* mutable_instant();
  void set_allocated_instant(::ywrapper::Decimal64Value* instant);

  // .ywrapper.Decimal64Value avg = 439703990 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/state/q-value/avg"];
  bool has_avg() const;
  void clear_avg();
  static const int kAvgFieldNumber = 439703990;
  const ::ywrapper::Decimal64Value& avg() const;
  ::ywrapper::Decimal64Value* release_avg();
  ::ywrapper::Decimal64Value* mutable_avg();
  void set_allocated_avg(::ywrapper::Decimal64Value* avg);

  // .ywrapper.Decimal64Value min = 454613310 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/state/q-value/min"];
  bool has_min() const;
  void clear_min();
  static const int kMinFieldNumber = 454613310;
  const ::ywrapper::Decimal64Value& min() const;
  ::ywrapper::Decimal64Value* release_min();
  ::ywrapper::Decimal64Value* mutable_min();
  void set_allocated_min(::ywrapper::Decimal64Value* min);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.QValue)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ywrapper::Decimal64Value* max_;
  ::ywrapper::UintValue* interval_;
  ::ywrapper::Decimal64Value* instant_;
  ::ywrapper::Decimal64Value* avg_;
  ::ywrapper::Decimal64Value* min_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::InitDefaultsTerminalDevice_LogicalChannels_Channel_Otn_State_QValueImpl();
};
// -------------------------------------------------------------------

class TerminalDevice_LogicalChannels_Channel_Otn_State : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State) */ {
 public:
  TerminalDevice_LogicalChannels_Channel_Otn_State();
  virtual ~TerminalDevice_LogicalChannels_Channel_Otn_State();

  TerminalDevice_LogicalChannels_Channel_Otn_State(const TerminalDevice_LogicalChannels_Channel_Otn_State& from);

  inline TerminalDevice_LogicalChannels_Channel_Otn_State& operator=(const TerminalDevice_LogicalChannels_Channel_Otn_State& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TerminalDevice_LogicalChannels_Channel_Otn_State(TerminalDevice_LogicalChannels_Channel_Otn_State&& from) noexcept
    : TerminalDevice_LogicalChannels_Channel_Otn_State() {
    *this = ::std::move(from);
  }

  inline TerminalDevice_LogicalChannels_Channel_Otn_State& operator=(TerminalDevice_LogicalChannels_Channel_Otn_State&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TerminalDevice_LogicalChannels_Channel_Otn_State& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TerminalDevice_LogicalChannels_Channel_Otn_State* internal_default_instance() {
    return reinterpret_cast<const TerminalDevice_LogicalChannels_Channel_Otn_State*>(
               &_TerminalDevice_LogicalChannels_Channel_Otn_State_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    18;

  void Swap(TerminalDevice_LogicalChannels_Channel_Otn_State* other);
  friend void swap(TerminalDevice_LogicalChannels_Channel_Otn_State& a, TerminalDevice_LogicalChannels_Channel_Otn_State& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TerminalDevice_LogicalChannels_Channel_Otn_State* New() const PROTOBUF_FINAL { return New(NULL); }

  TerminalDevice_LogicalChannels_Channel_Otn_State* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TerminalDevice_LogicalChannels_Channel_Otn_State& from);
  void MergeFrom(const TerminalDevice_LogicalChannels_Channel_Otn_State& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TerminalDevice_LogicalChannels_Channel_Otn_State* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef TerminalDevice_LogicalChannels_Channel_Otn_State_Esnr Esnr;
  typedef TerminalDevice_LogicalChannels_Channel_Otn_State_PostFecBer PostFecBer;
  typedef TerminalDevice_LogicalChannels_Channel_Otn_State_PreFecBer PreFecBer;
  typedef TerminalDevice_LogicalChannels_Channel_Otn_State_QValue QValue;

  // accessors -------------------------------------------------------

  // .ywrapper.UintValue code_violations = 15333406 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/state/code-violations"];
  bool has_code_violations() const;
  void clear_code_violations();
  static const int kCodeViolationsFieldNumber = 15333406;
  const ::ywrapper::UintValue& code_violations() const;
  ::ywrapper::UintValue* release_code_violations();
  ::ywrapper::UintValue* mutable_code_violations();
  void set_allocated_code_violations(::ywrapper::UintValue* code_violations);

  // .ywrapper.UintValue severely_errored_seconds = 17854709 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/state/severely-errored-seconds"];
  bool has_severely_errored_seconds() const;
  void clear_severely_errored_seconds();
  static const int kSeverelyErroredSecondsFieldNumber = 17854709;
  const ::ywrapper::UintValue& severely_errored_seconds() const;
  ::ywrapper::UintValue* release_severely_errored_seconds();
  ::ywrapper::UintValue* mutable_severely_errored_seconds();
  void set_allocated_severely_errored_seconds(::ywrapper::UintValue* severely_errored_seconds);

  // .openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.PreFecBer pre_fec_ber = 24995908 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/state/pre-fec-ber"];
  bool has_pre_fec_ber() const;
  void clear_pre_fec_ber();
  static const int kPreFecBerFieldNumber = 24995908;
  const ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Otn_State_PreFecBer& pre_fec_ber() const;
  ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Otn_State_PreFecBer* release_pre_fec_ber();
  ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Otn_State_PreFecBer* mutable_pre_fec_ber();
  void set_allocated_pre_fec_ber(::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Otn_State_PreFecBer* pre_fec_ber);

  // .ywrapper.StringValue tti_msg_expected = 50568880 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/state/tti-msg-expected"];
  bool has_tti_msg_expected() const;
  void clear_tti_msg_expected();
  static const int kTtiMsgExpectedFieldNumber = 50568880;
  const ::ywrapper::StringValue& tti_msg_expected() const;
  ::ywrapper::StringValue* release_tti_msg_expected();
  ::ywrapper::StringValue* mutable_tti_msg_expected();
  void set_allocated_tti_msg_expected(::ywrapper::StringValue* tti_msg_expected);

  // .ywrapper.StringValue tti_msg_recv = 51151448 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/state/tti-msg-recv"];
  bool has_tti_msg_recv() const;
  void clear_tti_msg_recv();
  static const int kTtiMsgRecvFieldNumber = 51151448;
  const ::ywrapper::StringValue& tti_msg_recv() const;
  ::ywrapper::StringValue* release_tti_msg_recv();
  ::ywrapper::StringValue* mutable_tti_msg_recv();
  void set_allocated_tti_msg_recv(::ywrapper::StringValue* tti_msg_recv);

  // .ywrapper.UintValue unavailable_seconds = 60512408 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/state/unavailable-seconds"];
  bool has_unavailable_seconds() const;
  void clear_unavailable_seconds();
  static const int kUnavailableSecondsFieldNumber = 60512408;
  const ::ywrapper::UintValue& unavailable_seconds() const;
  ::ywrapper::UintValue* release_unavailable_seconds();
  ::ywrapper::UintValue* mutable_unavailable_seconds();
  void set_allocated_unavailable_seconds(::ywrapper::UintValue* unavailable_seconds);

  // .ywrapper.UintValue errored_seconds = 101254023 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/state/errored-seconds"];
  bool has_errored_seconds() const;
  void clear_errored_seconds();
  static const int kErroredSecondsFieldNumber = 101254023;
  const ::ywrapper::UintValue& errored_seconds() const;
  ::ywrapper::UintValue* release_errored_seconds();
  ::ywrapper::UintValue* mutable_errored_seconds();
  void set_allocated_errored_seconds(::ywrapper::UintValue* errored_seconds);

  // .ywrapper.StringValue tti_msg_transmit = 138432560 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/state/tti-msg-transmit"];
  bool has_tti_msg_transmit() const;
  void clear_tti_msg_transmit();
  static const int kTtiMsgTransmitFieldNumber = 138432560;
  const ::ywrapper::StringValue& tti_msg_transmit() const;
  ::ywrapper::StringValue* release_tti_msg_transmit();
  ::ywrapper::StringValue* mutable_tti_msg_transmit();
  void set_allocated_tti_msg_transmit(::ywrapper::StringValue* tti_msg_transmit);

  // .openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.QValue q_value = 155046327 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/state/q-value"];
  bool has_q_value() const;
  void clear_q_value();
  static const int kQValueFieldNumber = 155046327;
  const ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Otn_State_QValue& q_value() const;
  ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Otn_State_QValue* release_q_value();
  ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Otn_State_QValue* mutable_q_value();
  void set_allocated_q_value(::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Otn_State_QValue* q_value);

  // .ywrapper.UintValue fec_uncorrectable_words = 189812742 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/state/fec-uncorrectable-words"];
  bool has_fec_uncorrectable_words() const;
  void clear_fec_uncorrectable_words();
  static const int kFecUncorrectableWordsFieldNumber = 189812742;
  const ::ywrapper::UintValue& fec_uncorrectable_words() const;
  ::ywrapper::UintValue* release_fec_uncorrectable_words();
  ::ywrapper::UintValue* mutable_fec_uncorrectable_words();
  void set_allocated_fec_uncorrectable_words(::ywrapper::UintValue* fec_uncorrectable_words);

  // .ywrapper.BoolValue tti_msg_auto = 195236077 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/state/tti-msg-auto"];
  bool has_tti_msg_auto() const;
  void clear_tti_msg_auto();
  static const int kTtiMsgAutoFieldNumber = 195236077;
  const ::ywrapper::BoolValue& tti_msg_auto() const;
  ::ywrapper::BoolValue* release_tti_msg_auto();
  ::ywrapper::BoolValue* mutable_tti_msg_auto();
  void set_allocated_tti_msg_auto(::ywrapper::BoolValue* tti_msg_auto);

  // .ywrapper.UintValue background_block_errors = 225465906 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/state/background-block-errors"];
  bool has_background_block_errors() const;
  void clear_background_block_errors();
  static const int kBackgroundBlockErrorsFieldNumber = 225465906;
  const ::ywrapper::UintValue& background_block_errors() const;
  ::ywrapper::UintValue* release_background_block_errors();
  ::ywrapper::UintValue* mutable_background_block_errors();
  void set_allocated_background_block_errors(::ywrapper::UintValue* background_block_errors);

  // .ywrapper.UintValue fec_corrected_bits = 347445731 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/state/fec-corrected-bits"];
  bool has_fec_corrected_bits() const;
  void clear_fec_corrected_bits();
  static const int kFecCorrectedBitsFieldNumber = 347445731;
  const ::ywrapper::UintValue& fec_corrected_bits() const;
  ::ywrapper::UintValue* release_fec_corrected_bits();
  ::ywrapper::UintValue* mutable_fec_corrected_bits();
  void set_allocated_fec_corrected_bits(::ywrapper::UintValue* fec_corrected_bits);

  // .ywrapper.StringValue rdi_msg = 372221681 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/state/rdi-msg"];
  bool has_rdi_msg() const;
  void clear_rdi_msg();
  static const int kRdiMsgFieldNumber = 372221681;
  const ::ywrapper::StringValue& rdi_msg() const;
  ::ywrapper::StringValue* release_rdi_msg();
  ::ywrapper::StringValue* mutable_rdi_msg();
  void set_allocated_rdi_msg(::ywrapper::StringValue* rdi_msg);

  // .ywrapper.UintValue fec_corrected_bytes = 475965836 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/state/fec-corrected-bytes"];
  bool has_fec_corrected_bytes() const;
  void clear_fec_corrected_bytes();
  static const int kFecCorrectedBytesFieldNumber = 475965836;
  const ::ywrapper::UintValue& fec_corrected_bytes() const;
  ::ywrapper::UintValue* release_fec_corrected_bytes();
  ::ywrapper::UintValue* mutable_fec_corrected_bytes();
  void set_allocated_fec_corrected_bytes(::ywrapper::UintValue* fec_corrected_bytes);

  // .openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.Esnr esnr = 477535494 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/state/esnr"];
  bool has_esnr() const;
  void clear_esnr();
  static const int kEsnrFieldNumber = 477535494;
  const ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Otn_State_Esnr& esnr() const;
  ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Otn_State_Esnr* release_esnr();
  ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Otn_State_Esnr* mutable_esnr();
  void set_allocated_esnr(::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Otn_State_Esnr* esnr);

  // .openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.PostFecBer post_fec_ber = 512618601 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/state/post-fec-ber"];
  bool has_post_fec_ber() const;
  void clear_post_fec_ber();
  static const int kPostFecBerFieldNumber = 512618601;
  const ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Otn_State_PostFecBer& post_fec_ber() const;
  ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Otn_State_PostFecBer* release_post_fec_ber();
  ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Otn_State_PostFecBer* mutable_post_fec_ber();
  void set_allocated_post_fec_ber(::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Otn_State_PostFecBer* post_fec_ber);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ywrapper::UintValue* code_violations_;
  ::ywrapper::UintValue* severely_errored_seconds_;
  ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Otn_State_PreFecBer* pre_fec_ber_;
  ::ywrapper::StringValue* tti_msg_expected_;
  ::ywrapper::StringValue* tti_msg_recv_;
  ::ywrapper::UintValue* unavailable_seconds_;
  ::ywrapper::UintValue* errored_seconds_;
  ::ywrapper::StringValue* tti_msg_transmit_;
  ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Otn_State_QValue* q_value_;
  ::ywrapper::UintValue* fec_uncorrectable_words_;
  ::ywrapper::BoolValue* tti_msg_auto_;
  ::ywrapper::UintValue* background_block_errors_;
  ::ywrapper::UintValue* fec_corrected_bits_;
  ::ywrapper::StringValue* rdi_msg_;
  ::ywrapper::UintValue* fec_corrected_bytes_;
  ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Otn_State_Esnr* esnr_;
  ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Otn_State_PostFecBer* post_fec_ber_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::InitDefaultsTerminalDevice_LogicalChannels_Channel_Otn_StateImpl();
};
// -------------------------------------------------------------------

class TerminalDevice_LogicalChannels_Channel_Otn : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn) */ {
 public:
  TerminalDevice_LogicalChannels_Channel_Otn();
  virtual ~TerminalDevice_LogicalChannels_Channel_Otn();

  TerminalDevice_LogicalChannels_Channel_Otn(const TerminalDevice_LogicalChannels_Channel_Otn& from);

  inline TerminalDevice_LogicalChannels_Channel_Otn& operator=(const TerminalDevice_LogicalChannels_Channel_Otn& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TerminalDevice_LogicalChannels_Channel_Otn(TerminalDevice_LogicalChannels_Channel_Otn&& from) noexcept
    : TerminalDevice_LogicalChannels_Channel_Otn() {
    *this = ::std::move(from);
  }

  inline TerminalDevice_LogicalChannels_Channel_Otn& operator=(TerminalDevice_LogicalChannels_Channel_Otn&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TerminalDevice_LogicalChannels_Channel_Otn& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TerminalDevice_LogicalChannels_Channel_Otn* internal_default_instance() {
    return reinterpret_cast<const TerminalDevice_LogicalChannels_Channel_Otn*>(
               &_TerminalDevice_LogicalChannels_Channel_Otn_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    19;

  void Swap(TerminalDevice_LogicalChannels_Channel_Otn* other);
  friend void swap(TerminalDevice_LogicalChannels_Channel_Otn& a, TerminalDevice_LogicalChannels_Channel_Otn& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TerminalDevice_LogicalChannels_Channel_Otn* New() const PROTOBUF_FINAL { return New(NULL); }

  TerminalDevice_LogicalChannels_Channel_Otn* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TerminalDevice_LogicalChannels_Channel_Otn& from);
  void MergeFrom(const TerminalDevice_LogicalChannels_Channel_Otn& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TerminalDevice_LogicalChannels_Channel_Otn* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef TerminalDevice_LogicalChannels_Channel_Otn_Config Config;
  typedef TerminalDevice_LogicalChannels_Channel_Otn_State State;

  // accessors -------------------------------------------------------

  // .openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.Config config = 122922822 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/config"];
  bool has_config() const;
  void clear_config();
  static const int kConfigFieldNumber = 122922822;
  const ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Otn_Config& config() const;
  ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Otn_Config* release_config();
  ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Otn_Config* mutable_config();
  void set_allocated_config(::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Otn_Config* config);

  // .openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State state = 431686707 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/state"];
  bool has_state() const;
  void clear_state();
  static const int kStateFieldNumber = 431686707;
  const ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Otn_State& state() const;
  ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Otn_State* release_state();
  ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Otn_State* mutable_state();
  void set_allocated_state(::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Otn_State* state);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Otn_Config* config_;
  ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Otn_State* state_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::InitDefaultsTerminalDevice_LogicalChannels_Channel_OtnImpl();
};
// -------------------------------------------------------------------

class TerminalDevice_LogicalChannels_Channel_State : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.State) */ {
 public:
  TerminalDevice_LogicalChannels_Channel_State();
  virtual ~TerminalDevice_LogicalChannels_Channel_State();

  TerminalDevice_LogicalChannels_Channel_State(const TerminalDevice_LogicalChannels_Channel_State& from);

  inline TerminalDevice_LogicalChannels_Channel_State& operator=(const TerminalDevice_LogicalChannels_Channel_State& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TerminalDevice_LogicalChannels_Channel_State(TerminalDevice_LogicalChannels_Channel_State&& from) noexcept
    : TerminalDevice_LogicalChannels_Channel_State() {
    *this = ::std::move(from);
  }

  inline TerminalDevice_LogicalChannels_Channel_State& operator=(TerminalDevice_LogicalChannels_Channel_State&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TerminalDevice_LogicalChannels_Channel_State& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TerminalDevice_LogicalChannels_Channel_State* internal_default_instance() {
    return reinterpret_cast<const TerminalDevice_LogicalChannels_Channel_State*>(
               &_TerminalDevice_LogicalChannels_Channel_State_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    20;

  void Swap(TerminalDevice_LogicalChannels_Channel_State* other);
  friend void swap(TerminalDevice_LogicalChannels_Channel_State& a, TerminalDevice_LogicalChannels_Channel_State& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TerminalDevice_LogicalChannels_Channel_State* New() const PROTOBUF_FINAL { return New(NULL); }

  TerminalDevice_LogicalChannels_Channel_State* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TerminalDevice_LogicalChannels_Channel_State& from);
  void MergeFrom(const TerminalDevice_LogicalChannels_Channel_State& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TerminalDevice_LogicalChannels_Channel_State* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef TerminalDevice_LogicalChannels_Channel_State_LinkState LinkState;
  static const LinkState LINKSTATE_UNSET =
    TerminalDevice_LogicalChannels_Channel_State_LinkState_LINKSTATE_UNSET;
  static const LinkState LINKSTATE_UP =
    TerminalDevice_LogicalChannels_Channel_State_LinkState_LINKSTATE_UP;
  static const LinkState LINKSTATE_DOWN =
    TerminalDevice_LogicalChannels_Channel_State_LinkState_LINKSTATE_DOWN;
  static inline bool LinkState_IsValid(int value) {
    return TerminalDevice_LogicalChannels_Channel_State_LinkState_IsValid(value);
  }
  static const LinkState LinkState_MIN =
    TerminalDevice_LogicalChannels_Channel_State_LinkState_LinkState_MIN;
  static const LinkState LinkState_MAX =
    TerminalDevice_LogicalChannels_Channel_State_LinkState_LinkState_MAX;
  static const int LinkState_ARRAYSIZE =
    TerminalDevice_LogicalChannels_Channel_State_LinkState_LinkState_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  LinkState_descriptor() {
    return TerminalDevice_LogicalChannels_Channel_State_LinkState_descriptor();
  }
  static inline const ::std::string& LinkState_Name(LinkState value) {
    return TerminalDevice_LogicalChannels_Channel_State_LinkState_Name(value);
  }
  static inline bool LinkState_Parse(const ::std::string& name,
      LinkState* value) {
    return TerminalDevice_LogicalChannels_Channel_State_LinkState_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .ywrapper.UintValue index = 118301378 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/state/index"];
  bool has_index() const;
  void clear_index();
  static const int kIndexFieldNumber = 118301378;
  const ::ywrapper::UintValue& index() const;
  ::ywrapper::UintValue* release_index();
  ::ywrapper::UintValue* mutable_index();
  void set_allocated_index(::ywrapper::UintValue* index);

  // .ywrapper.StringValue description = 272041836 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/state/description"];
  bool has_description() const;
  void clear_description();
  static const int kDescriptionFieldNumber = 272041836;
  const ::ywrapper::StringValue& description() const;
  ::ywrapper::StringValue* release_description();
  ::ywrapper::StringValue* mutable_description();
  void set_allocated_description(::ywrapper::StringValue* description);

  // .ywrapper.BoolValue test_signal = 412085659 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/state/test-signal"];
  bool has_test_signal() const;
  void clear_test_signal();
  static const int kTestSignalFieldNumber = 412085659;
  const ::ywrapper::BoolValue& test_signal() const;
  ::ywrapper::BoolValue* release_test_signal();
  ::ywrapper::BoolValue* mutable_test_signal();
  void set_allocated_test_signal(::ywrapper::BoolValue* test_signal);

  // .openconfig.enums.OpenconfigTransportTypesLOGICALELEMENTPROTOCOLTYPE logical_channel_type = 81142 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/state/logical-channel-type"];
  void clear_logical_channel_type();
  static const int kLogicalChannelTypeFieldNumber = 81142;
  ::openconfig::enums::OpenconfigTransportTypesLOGICALELEMENTPROTOCOLTYPE logical_channel_type() const;
  void set_logical_channel_type(::openconfig::enums::OpenconfigTransportTypesLOGICALELEMENTPROTOCOLTYPE value);

  // .openconfig.enums.OpenconfigTerminalDeviceAdminStateType admin_state = 126844211 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/state/admin-state"];
  void clear_admin_state();
  static const int kAdminStateFieldNumber = 126844211;
  ::openconfig::enums::OpenconfigTerminalDeviceAdminStateType admin_state() const;
  void set_admin_state(::openconfig::enums::OpenconfigTerminalDeviceAdminStateType value);

  // .openconfig.enums.OpenconfigTransportTypesTRIBUTARYRATECLASSTYPE rate_class = 232587011 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/state/rate-class"];
  void clear_rate_class();
  static const int kRateClassFieldNumber = 232587011;
  ::openconfig::enums::OpenconfigTransportTypesTRIBUTARYRATECLASSTYPE rate_class() const;
  void set_rate_class(::openconfig::enums::OpenconfigTransportTypesTRIBUTARYRATECLASSTYPE value);

  // .openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.State.LinkState link_state = 264729618 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/state/link-state"];
  void clear_link_state();
  static const int kLinkStateFieldNumber = 264729618;
  ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_State_LinkState link_state() const;
  void set_link_state(::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_State_LinkState value);

  // .openconfig.enums.OpenconfigTransportTypesTRIBUTARYPROTOCOLTYPE trib_protocol = 455160550 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/state/trib-protocol"];
  void clear_trib_protocol();
  static const int kTribProtocolFieldNumber = 455160550;
  ::openconfig::enums::OpenconfigTransportTypesTRIBUTARYPROTOCOLTYPE trib_protocol() const;
  void set_trib_protocol(::openconfig::enums::OpenconfigTransportTypesTRIBUTARYPROTOCOLTYPE value);

  // .openconfig.enums.OpenconfigTerminalDeviceLoopbackModeType loopback_mode = 525273123 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/state/loopback-mode"];
  void clear_loopback_mode();
  static const int kLoopbackModeFieldNumber = 525273123;
  ::openconfig::enums::OpenconfigTerminalDeviceLoopbackModeType loopback_mode() const;
  void set_loopback_mode(::openconfig::enums::OpenconfigTerminalDeviceLoopbackModeType value);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.State)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ywrapper::UintValue* index_;
  ::ywrapper::StringValue* description_;
  ::ywrapper::BoolValue* test_signal_;
  int logical_channel_type_;
  int admin_state_;
  int rate_class_;
  int link_state_;
  int trib_protocol_;
  int loopback_mode_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::InitDefaultsTerminalDevice_LogicalChannels_Channel_StateImpl();
};
// -------------------------------------------------------------------

class TerminalDevice_LogicalChannels_Channel : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel) */ {
 public:
  TerminalDevice_LogicalChannels_Channel();
  virtual ~TerminalDevice_LogicalChannels_Channel();

  TerminalDevice_LogicalChannels_Channel(const TerminalDevice_LogicalChannels_Channel& from);

  inline TerminalDevice_LogicalChannels_Channel& operator=(const TerminalDevice_LogicalChannels_Channel& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TerminalDevice_LogicalChannels_Channel(TerminalDevice_LogicalChannels_Channel&& from) noexcept
    : TerminalDevice_LogicalChannels_Channel() {
    *this = ::std::move(from);
  }

  inline TerminalDevice_LogicalChannels_Channel& operator=(TerminalDevice_LogicalChannels_Channel&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TerminalDevice_LogicalChannels_Channel& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TerminalDevice_LogicalChannels_Channel* internal_default_instance() {
    return reinterpret_cast<const TerminalDevice_LogicalChannels_Channel*>(
               &_TerminalDevice_LogicalChannels_Channel_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    21;

  void Swap(TerminalDevice_LogicalChannels_Channel* other);
  friend void swap(TerminalDevice_LogicalChannels_Channel& a, TerminalDevice_LogicalChannels_Channel& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TerminalDevice_LogicalChannels_Channel* New() const PROTOBUF_FINAL { return New(NULL); }

  TerminalDevice_LogicalChannels_Channel* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TerminalDevice_LogicalChannels_Channel& from);
  void MergeFrom(const TerminalDevice_LogicalChannels_Channel& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TerminalDevice_LogicalChannels_Channel* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef TerminalDevice_LogicalChannels_Channel_Config Config;
  typedef TerminalDevice_LogicalChannels_Channel_Ethernet Ethernet;
  typedef TerminalDevice_LogicalChannels_Channel_Ingress Ingress;
  typedef TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments LogicalChannelAssignments;
  typedef TerminalDevice_LogicalChannels_Channel_Otn Otn;
  typedef TerminalDevice_LogicalChannels_Channel_State State;

  // accessors -------------------------------------------------------

  // .openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn otn = 25263425 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn"];
  bool has_otn() const;
  void clear_otn();
  static const int kOtnFieldNumber = 25263425;
  const ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Otn& otn() const;
  ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Otn* release_otn();
  ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Otn* mutable_otn();
  void set_allocated_otn(::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Otn* otn);

  // .openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Ethernet ethernet = 53959837 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/ethernet"];
  bool has_ethernet() const;
  void clear_ethernet();
  static const int kEthernetFieldNumber = 53959837;
  const ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Ethernet& ethernet() const;
  ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Ethernet* release_ethernet();
  ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Ethernet* mutable_ethernet();
  void set_allocated_ethernet(::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Ethernet* ethernet);

  // .openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Ingress ingress = 121136753 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/ingress"];
  bool has_ingress() const;
  void clear_ingress();
  static const int kIngressFieldNumber = 121136753;
  const ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Ingress& ingress() const;
  ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Ingress* release_ingress();
  ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Ingress* mutable_ingress();
  void set_allocated_ingress(::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Ingress* ingress);

  // .openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.State state = 310909555 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/state"];
  bool has_state() const;
  void clear_state();
  static const int kStateFieldNumber = 310909555;
  const ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_State& state() const;
  ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_State* release_state();
  ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_State* mutable_state();
  void set_allocated_state(::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_State* state);

  // .openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Config config = 375716998 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/config"];
  bool has_config() const;
  void clear_config();
  static const int kConfigFieldNumber = 375716998;
  const ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Config& config() const;
  ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Config* release_config();
  ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Config* mutable_config();
  void set_allocated_config(::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Config* config);

  // .openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.LogicalChannelAssignments logical_channel_assignments = 383032150 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/logical-channel-assignments"];
  bool has_logical_channel_assignments() const;
  void clear_logical_channel_assignments();
  static const int kLogicalChannelAssignmentsFieldNumber = 383032150;
  const ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments& logical_channel_assignments() const;
  ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments* release_logical_channel_assignments();
  ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments* mutable_logical_channel_assignments();
  void set_allocated_logical_channel_assignments(::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments* logical_channel_assignments);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Otn* otn_;
  ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Ethernet* ethernet_;
  ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Ingress* ingress_;
  ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_State* state_;
  ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Config* config_;
  ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments* logical_channel_assignments_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::InitDefaultsTerminalDevice_LogicalChannels_ChannelImpl();
};
// -------------------------------------------------------------------

class TerminalDevice_LogicalChannels_ChannelKey : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.ChannelKey) */ {
 public:
  TerminalDevice_LogicalChannels_ChannelKey();
  virtual ~TerminalDevice_LogicalChannels_ChannelKey();

  TerminalDevice_LogicalChannels_ChannelKey(const TerminalDevice_LogicalChannels_ChannelKey& from);

  inline TerminalDevice_LogicalChannels_ChannelKey& operator=(const TerminalDevice_LogicalChannels_ChannelKey& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TerminalDevice_LogicalChannels_ChannelKey(TerminalDevice_LogicalChannels_ChannelKey&& from) noexcept
    : TerminalDevice_LogicalChannels_ChannelKey() {
    *this = ::std::move(from);
  }

  inline TerminalDevice_LogicalChannels_ChannelKey& operator=(TerminalDevice_LogicalChannels_ChannelKey&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TerminalDevice_LogicalChannels_ChannelKey& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TerminalDevice_LogicalChannels_ChannelKey* internal_default_instance() {
    return reinterpret_cast<const TerminalDevice_LogicalChannels_ChannelKey*>(
               &_TerminalDevice_LogicalChannels_ChannelKey_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    22;

  void Swap(TerminalDevice_LogicalChannels_ChannelKey* other);
  friend void swap(TerminalDevice_LogicalChannels_ChannelKey& a, TerminalDevice_LogicalChannels_ChannelKey& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TerminalDevice_LogicalChannels_ChannelKey* New() const PROTOBUF_FINAL { return New(NULL); }

  TerminalDevice_LogicalChannels_ChannelKey* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TerminalDevice_LogicalChannels_ChannelKey& from);
  void MergeFrom(const TerminalDevice_LogicalChannels_ChannelKey& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TerminalDevice_LogicalChannels_ChannelKey* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel channel = 2;
  bool has_channel() const;
  void clear_channel();
  static const int kChannelFieldNumber = 2;
  const ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel& channel() const;
  ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel* release_channel();
  ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel* mutable_channel();
  void set_allocated_channel(::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel* channel);

  // uint64 index = 1 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/index"];
  void clear_index();
  static const int kIndexFieldNumber = 1;
  ::google::protobuf::uint64 index() const;
  void set_index(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.ChannelKey)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel* channel_;
  ::google::protobuf::uint64 index_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::InitDefaultsTerminalDevice_LogicalChannels_ChannelKeyImpl();
};
// -------------------------------------------------------------------

class TerminalDevice_LogicalChannels : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels) */ {
 public:
  TerminalDevice_LogicalChannels();
  virtual ~TerminalDevice_LogicalChannels();

  TerminalDevice_LogicalChannels(const TerminalDevice_LogicalChannels& from);

  inline TerminalDevice_LogicalChannels& operator=(const TerminalDevice_LogicalChannels& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TerminalDevice_LogicalChannels(TerminalDevice_LogicalChannels&& from) noexcept
    : TerminalDevice_LogicalChannels() {
    *this = ::std::move(from);
  }

  inline TerminalDevice_LogicalChannels& operator=(TerminalDevice_LogicalChannels&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TerminalDevice_LogicalChannels& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TerminalDevice_LogicalChannels* internal_default_instance() {
    return reinterpret_cast<const TerminalDevice_LogicalChannels*>(
               &_TerminalDevice_LogicalChannels_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    23;

  void Swap(TerminalDevice_LogicalChannels* other);
  friend void swap(TerminalDevice_LogicalChannels& a, TerminalDevice_LogicalChannels& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TerminalDevice_LogicalChannels* New() const PROTOBUF_FINAL { return New(NULL); }

  TerminalDevice_LogicalChannels* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TerminalDevice_LogicalChannels& from);
  void MergeFrom(const TerminalDevice_LogicalChannels& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TerminalDevice_LogicalChannels* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef TerminalDevice_LogicalChannels_Channel Channel;
  typedef TerminalDevice_LogicalChannels_ChannelKey ChannelKey;

  // accessors -------------------------------------------------------

  // repeated .openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.ChannelKey channel = 528903937 [(.yext.schemapath) = "/terminal-device/logical-channels/channel"];
  int channel_size() const;
  void clear_channel();
  static const int kChannelFieldNumber = 528903937;
  const ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_ChannelKey& channel(int index) const;
  ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_ChannelKey* mutable_channel(int index);
  ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_ChannelKey* add_channel();
  ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_ChannelKey >*
      mutable_channel();
  const ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_ChannelKey >&
      channel() const;

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_ChannelKey > channel_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::InitDefaultsTerminalDevice_LogicalChannelsImpl();
};
// -------------------------------------------------------------------

class TerminalDevice_OperationalModes_Mode_Config : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_terminal_device.TerminalDevice.OperationalModes.Mode.Config) */ {
 public:
  TerminalDevice_OperationalModes_Mode_Config();
  virtual ~TerminalDevice_OperationalModes_Mode_Config();

  TerminalDevice_OperationalModes_Mode_Config(const TerminalDevice_OperationalModes_Mode_Config& from);

  inline TerminalDevice_OperationalModes_Mode_Config& operator=(const TerminalDevice_OperationalModes_Mode_Config& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TerminalDevice_OperationalModes_Mode_Config(TerminalDevice_OperationalModes_Mode_Config&& from) noexcept
    : TerminalDevice_OperationalModes_Mode_Config() {
    *this = ::std::move(from);
  }

  inline TerminalDevice_OperationalModes_Mode_Config& operator=(TerminalDevice_OperationalModes_Mode_Config&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TerminalDevice_OperationalModes_Mode_Config& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TerminalDevice_OperationalModes_Mode_Config* internal_default_instance() {
    return reinterpret_cast<const TerminalDevice_OperationalModes_Mode_Config*>(
               &_TerminalDevice_OperationalModes_Mode_Config_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    24;

  void Swap(TerminalDevice_OperationalModes_Mode_Config* other);
  friend void swap(TerminalDevice_OperationalModes_Mode_Config& a, TerminalDevice_OperationalModes_Mode_Config& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TerminalDevice_OperationalModes_Mode_Config* New() const PROTOBUF_FINAL { return New(NULL); }

  TerminalDevice_OperationalModes_Mode_Config* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TerminalDevice_OperationalModes_Mode_Config& from);
  void MergeFrom(const TerminalDevice_OperationalModes_Mode_Config& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TerminalDevice_OperationalModes_Mode_Config* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_terminal_device.TerminalDevice.OperationalModes.Mode.Config)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::InitDefaultsTerminalDevice_OperationalModes_Mode_ConfigImpl();
};
// -------------------------------------------------------------------

class TerminalDevice_OperationalModes_Mode_State : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_terminal_device.TerminalDevice.OperationalModes.Mode.State) */ {
 public:
  TerminalDevice_OperationalModes_Mode_State();
  virtual ~TerminalDevice_OperationalModes_Mode_State();

  TerminalDevice_OperationalModes_Mode_State(const TerminalDevice_OperationalModes_Mode_State& from);

  inline TerminalDevice_OperationalModes_Mode_State& operator=(const TerminalDevice_OperationalModes_Mode_State& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TerminalDevice_OperationalModes_Mode_State(TerminalDevice_OperationalModes_Mode_State&& from) noexcept
    : TerminalDevice_OperationalModes_Mode_State() {
    *this = ::std::move(from);
  }

  inline TerminalDevice_OperationalModes_Mode_State& operator=(TerminalDevice_OperationalModes_Mode_State&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TerminalDevice_OperationalModes_Mode_State& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TerminalDevice_OperationalModes_Mode_State* internal_default_instance() {
    return reinterpret_cast<const TerminalDevice_OperationalModes_Mode_State*>(
               &_TerminalDevice_OperationalModes_Mode_State_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    25;

  void Swap(TerminalDevice_OperationalModes_Mode_State* other);
  friend void swap(TerminalDevice_OperationalModes_Mode_State& a, TerminalDevice_OperationalModes_Mode_State& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TerminalDevice_OperationalModes_Mode_State* New() const PROTOBUF_FINAL { return New(NULL); }

  TerminalDevice_OperationalModes_Mode_State* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TerminalDevice_OperationalModes_Mode_State& from);
  void MergeFrom(const TerminalDevice_OperationalModes_Mode_State& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TerminalDevice_OperationalModes_Mode_State* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .ywrapper.UintValue mode_id = 74994658 [(.yext.schemapath) = "/terminal-device/operational-modes/mode/state/mode-id"];
  bool has_mode_id() const;
  void clear_mode_id();
  static const int kModeIdFieldNumber = 74994658;
  const ::ywrapper::UintValue& mode_id() const;
  ::ywrapper::UintValue* release_mode_id();
  ::ywrapper::UintValue* mutable_mode_id();
  void set_allocated_mode_id(::ywrapper::UintValue* mode_id);

  // .ywrapper.StringValue description = 107447685 [(.yext.schemapath) = "/terminal-device/operational-modes/mode/state/description"];
  bool has_description() const;
  void clear_description();
  static const int kDescriptionFieldNumber = 107447685;
  const ::ywrapper::StringValue& description() const;
  ::ywrapper::StringValue* release_description();
  ::ywrapper::StringValue* mutable_description();
  void set_allocated_description(::ywrapper::StringValue* description);

  // .ywrapper.StringValue vendor_id = 526782251 [(.yext.schemapath) = "/terminal-device/operational-modes/mode/state/vendor-id"];
  bool has_vendor_id() const;
  void clear_vendor_id();
  static const int kVendorIdFieldNumber = 526782251;
  const ::ywrapper::StringValue& vendor_id() const;
  ::ywrapper::StringValue* release_vendor_id();
  ::ywrapper::StringValue* mutable_vendor_id();
  void set_allocated_vendor_id(::ywrapper::StringValue* vendor_id);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_terminal_device.TerminalDevice.OperationalModes.Mode.State)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ywrapper::UintValue* mode_id_;
  ::ywrapper::StringValue* description_;
  ::ywrapper::StringValue* vendor_id_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::InitDefaultsTerminalDevice_OperationalModes_Mode_StateImpl();
};
// -------------------------------------------------------------------

class TerminalDevice_OperationalModes_Mode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_terminal_device.TerminalDevice.OperationalModes.Mode) */ {
 public:
  TerminalDevice_OperationalModes_Mode();
  virtual ~TerminalDevice_OperationalModes_Mode();

  TerminalDevice_OperationalModes_Mode(const TerminalDevice_OperationalModes_Mode& from);

  inline TerminalDevice_OperationalModes_Mode& operator=(const TerminalDevice_OperationalModes_Mode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TerminalDevice_OperationalModes_Mode(TerminalDevice_OperationalModes_Mode&& from) noexcept
    : TerminalDevice_OperationalModes_Mode() {
    *this = ::std::move(from);
  }

  inline TerminalDevice_OperationalModes_Mode& operator=(TerminalDevice_OperationalModes_Mode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TerminalDevice_OperationalModes_Mode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TerminalDevice_OperationalModes_Mode* internal_default_instance() {
    return reinterpret_cast<const TerminalDevice_OperationalModes_Mode*>(
               &_TerminalDevice_OperationalModes_Mode_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    26;

  void Swap(TerminalDevice_OperationalModes_Mode* other);
  friend void swap(TerminalDevice_OperationalModes_Mode& a, TerminalDevice_OperationalModes_Mode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TerminalDevice_OperationalModes_Mode* New() const PROTOBUF_FINAL { return New(NULL); }

  TerminalDevice_OperationalModes_Mode* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TerminalDevice_OperationalModes_Mode& from);
  void MergeFrom(const TerminalDevice_OperationalModes_Mode& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TerminalDevice_OperationalModes_Mode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef TerminalDevice_OperationalModes_Mode_Config Config;
  typedef TerminalDevice_OperationalModes_Mode_State State;

  // accessors -------------------------------------------------------

  // .openconfig.openconfig_terminal_device.TerminalDevice.OperationalModes.Mode.Config config = 187786493 [(.yext.schemapath) = "/terminal-device/operational-modes/mode/config"];
  bool has_config() const;
  void clear_config();
  static const int kConfigFieldNumber = 187786493;
  const ::openconfig::openconfig_terminal_device::TerminalDevice_OperationalModes_Mode_Config& config() const;
  ::openconfig::openconfig_terminal_device::TerminalDevice_OperationalModes_Mode_Config* release_config();
  ::openconfig::openconfig_terminal_device::TerminalDevice_OperationalModes_Mode_Config* mutable_config();
  void set_allocated_config(::openconfig::openconfig_terminal_device::TerminalDevice_OperationalModes_Mode_Config* config);

  // .openconfig.openconfig_terminal_device.TerminalDevice.OperationalModes.Mode.State state = 208910962 [(.yext.schemapath) = "/terminal-device/operational-modes/mode/state"];
  bool has_state() const;
  void clear_state();
  static const int kStateFieldNumber = 208910962;
  const ::openconfig::openconfig_terminal_device::TerminalDevice_OperationalModes_Mode_State& state() const;
  ::openconfig::openconfig_terminal_device::TerminalDevice_OperationalModes_Mode_State* release_state();
  ::openconfig::openconfig_terminal_device::TerminalDevice_OperationalModes_Mode_State* mutable_state();
  void set_allocated_state(::openconfig::openconfig_terminal_device::TerminalDevice_OperationalModes_Mode_State* state);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_terminal_device.TerminalDevice.OperationalModes.Mode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::openconfig::openconfig_terminal_device::TerminalDevice_OperationalModes_Mode_Config* config_;
  ::openconfig::openconfig_terminal_device::TerminalDevice_OperationalModes_Mode_State* state_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::InitDefaultsTerminalDevice_OperationalModes_ModeImpl();
};
// -------------------------------------------------------------------

class TerminalDevice_OperationalModes_ModeKey : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_terminal_device.TerminalDevice.OperationalModes.ModeKey) */ {
 public:
  TerminalDevice_OperationalModes_ModeKey();
  virtual ~TerminalDevice_OperationalModes_ModeKey();

  TerminalDevice_OperationalModes_ModeKey(const TerminalDevice_OperationalModes_ModeKey& from);

  inline TerminalDevice_OperationalModes_ModeKey& operator=(const TerminalDevice_OperationalModes_ModeKey& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TerminalDevice_OperationalModes_ModeKey(TerminalDevice_OperationalModes_ModeKey&& from) noexcept
    : TerminalDevice_OperationalModes_ModeKey() {
    *this = ::std::move(from);
  }

  inline TerminalDevice_OperationalModes_ModeKey& operator=(TerminalDevice_OperationalModes_ModeKey&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TerminalDevice_OperationalModes_ModeKey& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TerminalDevice_OperationalModes_ModeKey* internal_default_instance() {
    return reinterpret_cast<const TerminalDevice_OperationalModes_ModeKey*>(
               &_TerminalDevice_OperationalModes_ModeKey_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    27;

  void Swap(TerminalDevice_OperationalModes_ModeKey* other);
  friend void swap(TerminalDevice_OperationalModes_ModeKey& a, TerminalDevice_OperationalModes_ModeKey& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TerminalDevice_OperationalModes_ModeKey* New() const PROTOBUF_FINAL { return New(NULL); }

  TerminalDevice_OperationalModes_ModeKey* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TerminalDevice_OperationalModes_ModeKey& from);
  void MergeFrom(const TerminalDevice_OperationalModes_ModeKey& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TerminalDevice_OperationalModes_ModeKey* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .openconfig.openconfig_terminal_device.TerminalDevice.OperationalModes.Mode mode = 2;
  bool has_mode() const;
  void clear_mode();
  static const int kModeFieldNumber = 2;
  const ::openconfig::openconfig_terminal_device::TerminalDevice_OperationalModes_Mode& mode() const;
  ::openconfig::openconfig_terminal_device::TerminalDevice_OperationalModes_Mode* release_mode();
  ::openconfig::openconfig_terminal_device::TerminalDevice_OperationalModes_Mode* mutable_mode();
  void set_allocated_mode(::openconfig::openconfig_terminal_device::TerminalDevice_OperationalModes_Mode* mode);

  // uint64 mode_id = 1 [(.yext.schemapath) = "/terminal-device/operational-modes/mode/mode-id"];
  void clear_mode_id();
  static const int kModeIdFieldNumber = 1;
  ::google::protobuf::uint64 mode_id() const;
  void set_mode_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_terminal_device.TerminalDevice.OperationalModes.ModeKey)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::openconfig::openconfig_terminal_device::TerminalDevice_OperationalModes_Mode* mode_;
  ::google::protobuf::uint64 mode_id_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::InitDefaultsTerminalDevice_OperationalModes_ModeKeyImpl();
};
// -------------------------------------------------------------------

class TerminalDevice_OperationalModes : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_terminal_device.TerminalDevice.OperationalModes) */ {
 public:
  TerminalDevice_OperationalModes();
  virtual ~TerminalDevice_OperationalModes();

  TerminalDevice_OperationalModes(const TerminalDevice_OperationalModes& from);

  inline TerminalDevice_OperationalModes& operator=(const TerminalDevice_OperationalModes& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TerminalDevice_OperationalModes(TerminalDevice_OperationalModes&& from) noexcept
    : TerminalDevice_OperationalModes() {
    *this = ::std::move(from);
  }

  inline TerminalDevice_OperationalModes& operator=(TerminalDevice_OperationalModes&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TerminalDevice_OperationalModes& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TerminalDevice_OperationalModes* internal_default_instance() {
    return reinterpret_cast<const TerminalDevice_OperationalModes*>(
               &_TerminalDevice_OperationalModes_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    28;

  void Swap(TerminalDevice_OperationalModes* other);
  friend void swap(TerminalDevice_OperationalModes& a, TerminalDevice_OperationalModes& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TerminalDevice_OperationalModes* New() const PROTOBUF_FINAL { return New(NULL); }

  TerminalDevice_OperationalModes* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TerminalDevice_OperationalModes& from);
  void MergeFrom(const TerminalDevice_OperationalModes& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TerminalDevice_OperationalModes* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef TerminalDevice_OperationalModes_Mode Mode;
  typedef TerminalDevice_OperationalModes_ModeKey ModeKey;

  // accessors -------------------------------------------------------

  // repeated .openconfig.openconfig_terminal_device.TerminalDevice.OperationalModes.ModeKey mode = 507936888 [(.yext.schemapath) = "/terminal-device/operational-modes/mode"];
  int mode_size() const;
  void clear_mode();
  static const int kModeFieldNumber = 507936888;
  const ::openconfig::openconfig_terminal_device::TerminalDevice_OperationalModes_ModeKey& mode(int index) const;
  ::openconfig::openconfig_terminal_device::TerminalDevice_OperationalModes_ModeKey* mutable_mode(int index);
  ::openconfig::openconfig_terminal_device::TerminalDevice_OperationalModes_ModeKey* add_mode();
  ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_terminal_device::TerminalDevice_OperationalModes_ModeKey >*
      mutable_mode();
  const ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_terminal_device::TerminalDevice_OperationalModes_ModeKey >&
      mode() const;

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_terminal_device.TerminalDevice.OperationalModes)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_terminal_device::TerminalDevice_OperationalModes_ModeKey > mode_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::InitDefaultsTerminalDevice_OperationalModesImpl();
};
// -------------------------------------------------------------------

class TerminalDevice_State : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_terminal_device.TerminalDevice.State) */ {
 public:
  TerminalDevice_State();
  virtual ~TerminalDevice_State();

  TerminalDevice_State(const TerminalDevice_State& from);

  inline TerminalDevice_State& operator=(const TerminalDevice_State& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TerminalDevice_State(TerminalDevice_State&& from) noexcept
    : TerminalDevice_State() {
    *this = ::std::move(from);
  }

  inline TerminalDevice_State& operator=(TerminalDevice_State&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TerminalDevice_State& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TerminalDevice_State* internal_default_instance() {
    return reinterpret_cast<const TerminalDevice_State*>(
               &_TerminalDevice_State_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    29;

  void Swap(TerminalDevice_State* other);
  friend void swap(TerminalDevice_State& a, TerminalDevice_State& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TerminalDevice_State* New() const PROTOBUF_FINAL { return New(NULL); }

  TerminalDevice_State* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TerminalDevice_State& from);
  void MergeFrom(const TerminalDevice_State& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TerminalDevice_State* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_terminal_device.TerminalDevice.State)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::InitDefaultsTerminalDevice_StateImpl();
};
// -------------------------------------------------------------------

class TerminalDevice : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_terminal_device.TerminalDevice) */ {
 public:
  TerminalDevice();
  virtual ~TerminalDevice();

  TerminalDevice(const TerminalDevice& from);

  inline TerminalDevice& operator=(const TerminalDevice& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TerminalDevice(TerminalDevice&& from) noexcept
    : TerminalDevice() {
    *this = ::std::move(from);
  }

  inline TerminalDevice& operator=(TerminalDevice&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TerminalDevice& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TerminalDevice* internal_default_instance() {
    return reinterpret_cast<const TerminalDevice*>(
               &_TerminalDevice_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    30;

  void Swap(TerminalDevice* other);
  friend void swap(TerminalDevice& a, TerminalDevice& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TerminalDevice* New() const PROTOBUF_FINAL { return New(NULL); }

  TerminalDevice* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TerminalDevice& from);
  void MergeFrom(const TerminalDevice& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TerminalDevice* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef TerminalDevice_Config Config;
  typedef TerminalDevice_LogicalChannels LogicalChannels;
  typedef TerminalDevice_OperationalModes OperationalModes;
  typedef TerminalDevice_State State;

  // accessors -------------------------------------------------------

  // .openconfig.openconfig_terminal_device.TerminalDevice.Config config = 4498449 [(.yext.schemapath) = "/terminal-device/config"];
  bool has_config() const;
  void clear_config();
  static const int kConfigFieldNumber = 4498449;
  const ::openconfig::openconfig_terminal_device::TerminalDevice_Config& config() const;
  ::openconfig::openconfig_terminal_device::TerminalDevice_Config* release_config();
  ::openconfig::openconfig_terminal_device::TerminalDevice_Config* mutable_config();
  void set_allocated_config(::openconfig::openconfig_terminal_device::TerminalDevice_Config* config);

  // .openconfig.openconfig_terminal_device.TerminalDevice.OperationalModes operational_modes = 54138558 [(.yext.schemapath) = "/terminal-device/operational-modes"];
  bool has_operational_modes() const;
  void clear_operational_modes();
  static const int kOperationalModesFieldNumber = 54138558;
  const ::openconfig::openconfig_terminal_device::TerminalDevice_OperationalModes& operational_modes() const;
  ::openconfig::openconfig_terminal_device::TerminalDevice_OperationalModes* release_operational_modes();
  ::openconfig::openconfig_terminal_device::TerminalDevice_OperationalModes* mutable_operational_modes();
  void set_allocated_operational_modes(::openconfig::openconfig_terminal_device::TerminalDevice_OperationalModes* operational_modes);

  // .openconfig.openconfig_terminal_device.TerminalDevice.State state = 150416646 [(.yext.schemapath) = "/terminal-device/state"];
  bool has_state() const;
  void clear_state();
  static const int kStateFieldNumber = 150416646;
  const ::openconfig::openconfig_terminal_device::TerminalDevice_State& state() const;
  ::openconfig::openconfig_terminal_device::TerminalDevice_State* release_state();
  ::openconfig::openconfig_terminal_device::TerminalDevice_State* mutable_state();
  void set_allocated_state(::openconfig::openconfig_terminal_device::TerminalDevice_State* state);

  // .openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels logical_channels = 495167037 [(.yext.schemapath) = "/terminal-device/logical-channels"];
  bool has_logical_channels() const;
  void clear_logical_channels();
  static const int kLogicalChannelsFieldNumber = 495167037;
  const ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels& logical_channels() const;
  ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels* release_logical_channels();
  ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels* mutable_logical_channels();
  void set_allocated_logical_channels(::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels* logical_channels);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_terminal_device.TerminalDevice)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::openconfig::openconfig_terminal_device::TerminalDevice_Config* config_;
  ::openconfig::openconfig_terminal_device::TerminalDevice_OperationalModes* operational_modes_;
  ::openconfig::openconfig_terminal_device::TerminalDevice_State* state_;
  ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels* logical_channels_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::InitDefaultsTerminalDeviceImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// TerminalDevice_Config

// -------------------------------------------------------------------

// TerminalDevice_LogicalChannels_Channel_Config

// .openconfig.enums.OpenconfigTerminalDeviceAdminStateType admin_state = 419524166 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/config/admin-state"];
inline void TerminalDevice_LogicalChannels_Channel_Config::clear_admin_state() {
  admin_state_ = 0;
}
inline ::openconfig::enums::OpenconfigTerminalDeviceAdminStateType TerminalDevice_LogicalChannels_Channel_Config::admin_state() const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Config.admin_state)
  return static_cast< ::openconfig::enums::OpenconfigTerminalDeviceAdminStateType >(admin_state_);
}
inline void TerminalDevice_LogicalChannels_Channel_Config::set_admin_state(::openconfig::enums::OpenconfigTerminalDeviceAdminStateType value) {
  
  admin_state_ = value;
  // @@protoc_insertion_point(field_set:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Config.admin_state)
}

// .ywrapper.StringValue description = 463402281 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/config/description"];
inline bool TerminalDevice_LogicalChannels_Channel_Config::has_description() const {
  return this != internal_default_instance() && description_ != NULL;
}
inline const ::ywrapper::StringValue& TerminalDevice_LogicalChannels_Channel_Config::description() const {
  const ::ywrapper::StringValue* p = description_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Config.description)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::StringValue*>(
      &::ywrapper::_StringValue_default_instance_);
}
inline ::ywrapper::StringValue* TerminalDevice_LogicalChannels_Channel_Config::release_description() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Config.description)
  
  ::ywrapper::StringValue* temp = description_;
  description_ = NULL;
  return temp;
}
inline ::ywrapper::StringValue* TerminalDevice_LogicalChannels_Channel_Config::mutable_description() {
  
  if (description_ == NULL) {
    description_ = new ::ywrapper::StringValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Config.description)
  return description_;
}
inline void TerminalDevice_LogicalChannels_Channel_Config::set_allocated_description(::ywrapper::StringValue* description) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(description_);
  }
  if (description) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      description = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, description, submessage_arena);
    }
    
  } else {
    
  }
  description_ = description;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Config.description)
}

// .ywrapper.UintValue index = 375779007 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/config/index"];
inline bool TerminalDevice_LogicalChannels_Channel_Config::has_index() const {
  return this != internal_default_instance() && index_ != NULL;
}
inline const ::ywrapper::UintValue& TerminalDevice_LogicalChannels_Channel_Config::index() const {
  const ::ywrapper::UintValue* p = index_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Config.index)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* TerminalDevice_LogicalChannels_Channel_Config::release_index() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Config.index)
  
  ::ywrapper::UintValue* temp = index_;
  index_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* TerminalDevice_LogicalChannels_Channel_Config::mutable_index() {
  
  if (index_ == NULL) {
    index_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Config.index)
  return index_;
}
inline void TerminalDevice_LogicalChannels_Channel_Config::set_allocated_index(::ywrapper::UintValue* index) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(index_);
  }
  if (index) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      index = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, index, submessage_arena);
    }
    
  } else {
    
  }
  index_ = index;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Config.index)
}

// .openconfig.enums.OpenconfigTransportTypesLOGICALELEMENTPROTOCOLTYPE logical_channel_type = 9398845 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/config/logical-channel-type"];
inline void TerminalDevice_LogicalChannels_Channel_Config::clear_logical_channel_type() {
  logical_channel_type_ = 0;
}
inline ::openconfig::enums::OpenconfigTransportTypesLOGICALELEMENTPROTOCOLTYPE TerminalDevice_LogicalChannels_Channel_Config::logical_channel_type() const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Config.logical_channel_type)
  return static_cast< ::openconfig::enums::OpenconfigTransportTypesLOGICALELEMENTPROTOCOLTYPE >(logical_channel_type_);
}
inline void TerminalDevice_LogicalChannels_Channel_Config::set_logical_channel_type(::openconfig::enums::OpenconfigTransportTypesLOGICALELEMENTPROTOCOLTYPE value) {
  
  logical_channel_type_ = value;
  // @@protoc_insertion_point(field_set:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Config.logical_channel_type)
}

// .openconfig.enums.OpenconfigTerminalDeviceLoopbackModeType loopback_mode = 369824790 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/config/loopback-mode"];
inline void TerminalDevice_LogicalChannels_Channel_Config::clear_loopback_mode() {
  loopback_mode_ = 0;
}
inline ::openconfig::enums::OpenconfigTerminalDeviceLoopbackModeType TerminalDevice_LogicalChannels_Channel_Config::loopback_mode() const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Config.loopback_mode)
  return static_cast< ::openconfig::enums::OpenconfigTerminalDeviceLoopbackModeType >(loopback_mode_);
}
inline void TerminalDevice_LogicalChannels_Channel_Config::set_loopback_mode(::openconfig::enums::OpenconfigTerminalDeviceLoopbackModeType value) {
  
  loopback_mode_ = value;
  // @@protoc_insertion_point(field_set:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Config.loopback_mode)
}

// .openconfig.enums.OpenconfigTransportTypesTRIBUTARYRATECLASSTYPE rate_class = 487395304 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/config/rate-class"];
inline void TerminalDevice_LogicalChannels_Channel_Config::clear_rate_class() {
  rate_class_ = 0;
}
inline ::openconfig::enums::OpenconfigTransportTypesTRIBUTARYRATECLASSTYPE TerminalDevice_LogicalChannels_Channel_Config::rate_class() const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Config.rate_class)
  return static_cast< ::openconfig::enums::OpenconfigTransportTypesTRIBUTARYRATECLASSTYPE >(rate_class_);
}
inline void TerminalDevice_LogicalChannels_Channel_Config::set_rate_class(::openconfig::enums::OpenconfigTransportTypesTRIBUTARYRATECLASSTYPE value) {
  
  rate_class_ = value;
  // @@protoc_insertion_point(field_set:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Config.rate_class)
}

// .ywrapper.BoolValue test_signal = 244958558 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/config/test-signal"];
inline bool TerminalDevice_LogicalChannels_Channel_Config::has_test_signal() const {
  return this != internal_default_instance() && test_signal_ != NULL;
}
inline const ::ywrapper::BoolValue& TerminalDevice_LogicalChannels_Channel_Config::test_signal() const {
  const ::ywrapper::BoolValue* p = test_signal_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Config.test_signal)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::BoolValue*>(
      &::ywrapper::_BoolValue_default_instance_);
}
inline ::ywrapper::BoolValue* TerminalDevice_LogicalChannels_Channel_Config::release_test_signal() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Config.test_signal)
  
  ::ywrapper::BoolValue* temp = test_signal_;
  test_signal_ = NULL;
  return temp;
}
inline ::ywrapper::BoolValue* TerminalDevice_LogicalChannels_Channel_Config::mutable_test_signal() {
  
  if (test_signal_ == NULL) {
    test_signal_ = new ::ywrapper::BoolValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Config.test_signal)
  return test_signal_;
}
inline void TerminalDevice_LogicalChannels_Channel_Config::set_allocated_test_signal(::ywrapper::BoolValue* test_signal) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(test_signal_);
  }
  if (test_signal) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      test_signal = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, test_signal, submessage_arena);
    }
    
  } else {
    
  }
  test_signal_ = test_signal;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Config.test_signal)
}

// .openconfig.enums.OpenconfigTransportTypesTRIBUTARYPROTOCOLTYPE trib_protocol = 138398619 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/config/trib-protocol"];
inline void TerminalDevice_LogicalChannels_Channel_Config::clear_trib_protocol() {
  trib_protocol_ = 0;
}
inline ::openconfig::enums::OpenconfigTransportTypesTRIBUTARYPROTOCOLTYPE TerminalDevice_LogicalChannels_Channel_Config::trib_protocol() const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Config.trib_protocol)
  return static_cast< ::openconfig::enums::OpenconfigTransportTypesTRIBUTARYPROTOCOLTYPE >(trib_protocol_);
}
inline void TerminalDevice_LogicalChannels_Channel_Config::set_trib_protocol(::openconfig::enums::OpenconfigTransportTypesTRIBUTARYPROTOCOLTYPE value) {
  
  trib_protocol_ = value;
  // @@protoc_insertion_point(field_set:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Config.trib_protocol)
}

// -------------------------------------------------------------------

// TerminalDevice_LogicalChannels_Channel_Ethernet_Config

// -------------------------------------------------------------------

// TerminalDevice_LogicalChannels_Channel_Ethernet_State

// .ywrapper.UintValue in_8021q_frames = 144594791 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/ethernet/state/in-8021q-frames"];
inline bool TerminalDevice_LogicalChannels_Channel_Ethernet_State::has_in_8021q_frames() const {
  return this != internal_default_instance() && in_8021q_frames_ != NULL;
}
inline const ::ywrapper::UintValue& TerminalDevice_LogicalChannels_Channel_Ethernet_State::in_8021q_frames() const {
  const ::ywrapper::UintValue* p = in_8021q_frames_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Ethernet.State.in_8021q_frames)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* TerminalDevice_LogicalChannels_Channel_Ethernet_State::release_in_8021q_frames() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Ethernet.State.in_8021q_frames)
  
  ::ywrapper::UintValue* temp = in_8021q_frames_;
  in_8021q_frames_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* TerminalDevice_LogicalChannels_Channel_Ethernet_State::mutable_in_8021q_frames() {
  
  if (in_8021q_frames_ == NULL) {
    in_8021q_frames_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Ethernet.State.in_8021q_frames)
  return in_8021q_frames_;
}
inline void TerminalDevice_LogicalChannels_Channel_Ethernet_State::set_allocated_in_8021q_frames(::ywrapper::UintValue* in_8021q_frames) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(in_8021q_frames_);
  }
  if (in_8021q_frames) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      in_8021q_frames = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, in_8021q_frames, submessage_arena);
    }
    
  } else {
    
  }
  in_8021q_frames_ = in_8021q_frames;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Ethernet.State.in_8021q_frames)
}

// .ywrapper.UintValue in_crc_errors = 397283042 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/ethernet/state/in-crc-errors"];
inline bool TerminalDevice_LogicalChannels_Channel_Ethernet_State::has_in_crc_errors() const {
  return this != internal_default_instance() && in_crc_errors_ != NULL;
}
inline const ::ywrapper::UintValue& TerminalDevice_LogicalChannels_Channel_Ethernet_State::in_crc_errors() const {
  const ::ywrapper::UintValue* p = in_crc_errors_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Ethernet.State.in_crc_errors)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* TerminalDevice_LogicalChannels_Channel_Ethernet_State::release_in_crc_errors() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Ethernet.State.in_crc_errors)
  
  ::ywrapper::UintValue* temp = in_crc_errors_;
  in_crc_errors_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* TerminalDevice_LogicalChannels_Channel_Ethernet_State::mutable_in_crc_errors() {
  
  if (in_crc_errors_ == NULL) {
    in_crc_errors_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Ethernet.State.in_crc_errors)
  return in_crc_errors_;
}
inline void TerminalDevice_LogicalChannels_Channel_Ethernet_State::set_allocated_in_crc_errors(::ywrapper::UintValue* in_crc_errors) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(in_crc_errors_);
  }
  if (in_crc_errors) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      in_crc_errors = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, in_crc_errors, submessage_arena);
    }
    
  } else {
    
  }
  in_crc_errors_ = in_crc_errors;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Ethernet.State.in_crc_errors)
}

// .ywrapper.UintValue in_fragment_frames = 40398731 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/ethernet/state/in-fragment-frames"];
inline bool TerminalDevice_LogicalChannels_Channel_Ethernet_State::has_in_fragment_frames() const {
  return this != internal_default_instance() && in_fragment_frames_ != NULL;
}
inline const ::ywrapper::UintValue& TerminalDevice_LogicalChannels_Channel_Ethernet_State::in_fragment_frames() const {
  const ::ywrapper::UintValue* p = in_fragment_frames_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Ethernet.State.in_fragment_frames)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* TerminalDevice_LogicalChannels_Channel_Ethernet_State::release_in_fragment_frames() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Ethernet.State.in_fragment_frames)
  
  ::ywrapper::UintValue* temp = in_fragment_frames_;
  in_fragment_frames_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* TerminalDevice_LogicalChannels_Channel_Ethernet_State::mutable_in_fragment_frames() {
  
  if (in_fragment_frames_ == NULL) {
    in_fragment_frames_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Ethernet.State.in_fragment_frames)
  return in_fragment_frames_;
}
inline void TerminalDevice_LogicalChannels_Channel_Ethernet_State::set_allocated_in_fragment_frames(::ywrapper::UintValue* in_fragment_frames) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(in_fragment_frames_);
  }
  if (in_fragment_frames) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      in_fragment_frames = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, in_fragment_frames, submessage_arena);
    }
    
  } else {
    
  }
  in_fragment_frames_ = in_fragment_frames;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Ethernet.State.in_fragment_frames)
}

// .ywrapper.UintValue in_jabber_frames = 447323069 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/ethernet/state/in-jabber-frames"];
inline bool TerminalDevice_LogicalChannels_Channel_Ethernet_State::has_in_jabber_frames() const {
  return this != internal_default_instance() && in_jabber_frames_ != NULL;
}
inline const ::ywrapper::UintValue& TerminalDevice_LogicalChannels_Channel_Ethernet_State::in_jabber_frames() const {
  const ::ywrapper::UintValue* p = in_jabber_frames_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Ethernet.State.in_jabber_frames)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* TerminalDevice_LogicalChannels_Channel_Ethernet_State::release_in_jabber_frames() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Ethernet.State.in_jabber_frames)
  
  ::ywrapper::UintValue* temp = in_jabber_frames_;
  in_jabber_frames_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* TerminalDevice_LogicalChannels_Channel_Ethernet_State::mutable_in_jabber_frames() {
  
  if (in_jabber_frames_ == NULL) {
    in_jabber_frames_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Ethernet.State.in_jabber_frames)
  return in_jabber_frames_;
}
inline void TerminalDevice_LogicalChannels_Channel_Ethernet_State::set_allocated_in_jabber_frames(::ywrapper::UintValue* in_jabber_frames) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(in_jabber_frames_);
  }
  if (in_jabber_frames) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      in_jabber_frames = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, in_jabber_frames, submessage_arena);
    }
    
  } else {
    
  }
  in_jabber_frames_ = in_jabber_frames;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Ethernet.State.in_jabber_frames)
}

// .ywrapper.UintValue in_mac_control_frames = 339653696 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/ethernet/state/in-mac-control-frames"];
inline bool TerminalDevice_LogicalChannels_Channel_Ethernet_State::has_in_mac_control_frames() const {
  return this != internal_default_instance() && in_mac_control_frames_ != NULL;
}
inline const ::ywrapper::UintValue& TerminalDevice_LogicalChannels_Channel_Ethernet_State::in_mac_control_frames() const {
  const ::ywrapper::UintValue* p = in_mac_control_frames_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Ethernet.State.in_mac_control_frames)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* TerminalDevice_LogicalChannels_Channel_Ethernet_State::release_in_mac_control_frames() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Ethernet.State.in_mac_control_frames)
  
  ::ywrapper::UintValue* temp = in_mac_control_frames_;
  in_mac_control_frames_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* TerminalDevice_LogicalChannels_Channel_Ethernet_State::mutable_in_mac_control_frames() {
  
  if (in_mac_control_frames_ == NULL) {
    in_mac_control_frames_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Ethernet.State.in_mac_control_frames)
  return in_mac_control_frames_;
}
inline void TerminalDevice_LogicalChannels_Channel_Ethernet_State::set_allocated_in_mac_control_frames(::ywrapper::UintValue* in_mac_control_frames) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(in_mac_control_frames_);
  }
  if (in_mac_control_frames) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      in_mac_control_frames = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, in_mac_control_frames, submessage_arena);
    }
    
  } else {
    
  }
  in_mac_control_frames_ = in_mac_control_frames;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Ethernet.State.in_mac_control_frames)
}

// .ywrapper.UintValue in_mac_pause_frames = 429314703 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/ethernet/state/in-mac-pause-frames"];
inline bool TerminalDevice_LogicalChannels_Channel_Ethernet_State::has_in_mac_pause_frames() const {
  return this != internal_default_instance() && in_mac_pause_frames_ != NULL;
}
inline const ::ywrapper::UintValue& TerminalDevice_LogicalChannels_Channel_Ethernet_State::in_mac_pause_frames() const {
  const ::ywrapper::UintValue* p = in_mac_pause_frames_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Ethernet.State.in_mac_pause_frames)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* TerminalDevice_LogicalChannels_Channel_Ethernet_State::release_in_mac_pause_frames() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Ethernet.State.in_mac_pause_frames)
  
  ::ywrapper::UintValue* temp = in_mac_pause_frames_;
  in_mac_pause_frames_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* TerminalDevice_LogicalChannels_Channel_Ethernet_State::mutable_in_mac_pause_frames() {
  
  if (in_mac_pause_frames_ == NULL) {
    in_mac_pause_frames_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Ethernet.State.in_mac_pause_frames)
  return in_mac_pause_frames_;
}
inline void TerminalDevice_LogicalChannels_Channel_Ethernet_State::set_allocated_in_mac_pause_frames(::ywrapper::UintValue* in_mac_pause_frames) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(in_mac_pause_frames_);
  }
  if (in_mac_pause_frames) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      in_mac_pause_frames = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, in_mac_pause_frames, submessage_arena);
    }
    
  } else {
    
  }
  in_mac_pause_frames_ = in_mac_pause_frames;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Ethernet.State.in_mac_pause_frames)
}

// .ywrapper.UintValue in_oversize_frames = 499149204 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/ethernet/state/in-oversize-frames"];
inline bool TerminalDevice_LogicalChannels_Channel_Ethernet_State::has_in_oversize_frames() const {
  return this != internal_default_instance() && in_oversize_frames_ != NULL;
}
inline const ::ywrapper::UintValue& TerminalDevice_LogicalChannels_Channel_Ethernet_State::in_oversize_frames() const {
  const ::ywrapper::UintValue* p = in_oversize_frames_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Ethernet.State.in_oversize_frames)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* TerminalDevice_LogicalChannels_Channel_Ethernet_State::release_in_oversize_frames() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Ethernet.State.in_oversize_frames)
  
  ::ywrapper::UintValue* temp = in_oversize_frames_;
  in_oversize_frames_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* TerminalDevice_LogicalChannels_Channel_Ethernet_State::mutable_in_oversize_frames() {
  
  if (in_oversize_frames_ == NULL) {
    in_oversize_frames_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Ethernet.State.in_oversize_frames)
  return in_oversize_frames_;
}
inline void TerminalDevice_LogicalChannels_Channel_Ethernet_State::set_allocated_in_oversize_frames(::ywrapper::UintValue* in_oversize_frames) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(in_oversize_frames_);
  }
  if (in_oversize_frames) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      in_oversize_frames = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, in_oversize_frames, submessage_arena);
    }
    
  } else {
    
  }
  in_oversize_frames_ = in_oversize_frames;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Ethernet.State.in_oversize_frames)
}

// .ywrapper.UintValue out_8021q_frames = 198455804 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/ethernet/state/out-8021q-frames"];
inline bool TerminalDevice_LogicalChannels_Channel_Ethernet_State::has_out_8021q_frames() const {
  return this != internal_default_instance() && out_8021q_frames_ != NULL;
}
inline const ::ywrapper::UintValue& TerminalDevice_LogicalChannels_Channel_Ethernet_State::out_8021q_frames() const {
  const ::ywrapper::UintValue* p = out_8021q_frames_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Ethernet.State.out_8021q_frames)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* TerminalDevice_LogicalChannels_Channel_Ethernet_State::release_out_8021q_frames() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Ethernet.State.out_8021q_frames)
  
  ::ywrapper::UintValue* temp = out_8021q_frames_;
  out_8021q_frames_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* TerminalDevice_LogicalChannels_Channel_Ethernet_State::mutable_out_8021q_frames() {
  
  if (out_8021q_frames_ == NULL) {
    out_8021q_frames_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Ethernet.State.out_8021q_frames)
  return out_8021q_frames_;
}
inline void TerminalDevice_LogicalChannels_Channel_Ethernet_State::set_allocated_out_8021q_frames(::ywrapper::UintValue* out_8021q_frames) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(out_8021q_frames_);
  }
  if (out_8021q_frames) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      out_8021q_frames = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, out_8021q_frames, submessage_arena);
    }
    
  } else {
    
  }
  out_8021q_frames_ = out_8021q_frames;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Ethernet.State.out_8021q_frames)
}

// .ywrapper.UintValue out_mac_control_frames = 31760815 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/ethernet/state/out-mac-control-frames"];
inline bool TerminalDevice_LogicalChannels_Channel_Ethernet_State::has_out_mac_control_frames() const {
  return this != internal_default_instance() && out_mac_control_frames_ != NULL;
}
inline const ::ywrapper::UintValue& TerminalDevice_LogicalChannels_Channel_Ethernet_State::out_mac_control_frames() const {
  const ::ywrapper::UintValue* p = out_mac_control_frames_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Ethernet.State.out_mac_control_frames)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* TerminalDevice_LogicalChannels_Channel_Ethernet_State::release_out_mac_control_frames() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Ethernet.State.out_mac_control_frames)
  
  ::ywrapper::UintValue* temp = out_mac_control_frames_;
  out_mac_control_frames_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* TerminalDevice_LogicalChannels_Channel_Ethernet_State::mutable_out_mac_control_frames() {
  
  if (out_mac_control_frames_ == NULL) {
    out_mac_control_frames_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Ethernet.State.out_mac_control_frames)
  return out_mac_control_frames_;
}
inline void TerminalDevice_LogicalChannels_Channel_Ethernet_State::set_allocated_out_mac_control_frames(::ywrapper::UintValue* out_mac_control_frames) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(out_mac_control_frames_);
  }
  if (out_mac_control_frames) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      out_mac_control_frames = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, out_mac_control_frames, submessage_arena);
    }
    
  } else {
    
  }
  out_mac_control_frames_ = out_mac_control_frames;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Ethernet.State.out_mac_control_frames)
}

// .ywrapper.UintValue out_mac_pause_frames = 440130020 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/ethernet/state/out-mac-pause-frames"];
inline bool TerminalDevice_LogicalChannels_Channel_Ethernet_State::has_out_mac_pause_frames() const {
  return this != internal_default_instance() && out_mac_pause_frames_ != NULL;
}
inline const ::ywrapper::UintValue& TerminalDevice_LogicalChannels_Channel_Ethernet_State::out_mac_pause_frames() const {
  const ::ywrapper::UintValue* p = out_mac_pause_frames_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Ethernet.State.out_mac_pause_frames)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* TerminalDevice_LogicalChannels_Channel_Ethernet_State::release_out_mac_pause_frames() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Ethernet.State.out_mac_pause_frames)
  
  ::ywrapper::UintValue* temp = out_mac_pause_frames_;
  out_mac_pause_frames_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* TerminalDevice_LogicalChannels_Channel_Ethernet_State::mutable_out_mac_pause_frames() {
  
  if (out_mac_pause_frames_ == NULL) {
    out_mac_pause_frames_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Ethernet.State.out_mac_pause_frames)
  return out_mac_pause_frames_;
}
inline void TerminalDevice_LogicalChannels_Channel_Ethernet_State::set_allocated_out_mac_pause_frames(::ywrapper::UintValue* out_mac_pause_frames) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(out_mac_pause_frames_);
  }
  if (out_mac_pause_frames) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      out_mac_pause_frames = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, out_mac_pause_frames, submessage_arena);
    }
    
  } else {
    
  }
  out_mac_pause_frames_ = out_mac_pause_frames;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Ethernet.State.out_mac_pause_frames)
}

// -------------------------------------------------------------------

// TerminalDevice_LogicalChannels_Channel_Ethernet

// .openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Ethernet.Config config = 63644242 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/ethernet/config"];
inline bool TerminalDevice_LogicalChannels_Channel_Ethernet::has_config() const {
  return this != internal_default_instance() && config_ != NULL;
}
inline void TerminalDevice_LogicalChannels_Channel_Ethernet::clear_config() {
  if (GetArenaNoVirtual() == NULL && config_ != NULL) {
    delete config_;
  }
  config_ = NULL;
}
inline const ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Ethernet_Config& TerminalDevice_LogicalChannels_Channel_Ethernet::config() const {
  const ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Ethernet_Config* p = config_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Ethernet.config)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Ethernet_Config*>(
      &::openconfig::openconfig_terminal_device::_TerminalDevice_LogicalChannels_Channel_Ethernet_Config_default_instance_);
}
inline ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Ethernet_Config* TerminalDevice_LogicalChannels_Channel_Ethernet::release_config() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Ethernet.config)
  
  ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Ethernet_Config* temp = config_;
  config_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Ethernet_Config* TerminalDevice_LogicalChannels_Channel_Ethernet::mutable_config() {
  
  if (config_ == NULL) {
    config_ = new ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Ethernet_Config;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Ethernet.config)
  return config_;
}
inline void TerminalDevice_LogicalChannels_Channel_Ethernet::set_allocated_config(::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Ethernet_Config* config) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete config_;
  }
  if (config) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      config = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, config, submessage_arena);
    }
    
  } else {
    
  }
  config_ = config;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Ethernet.config)
}

// .openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Ethernet.State state = 197618383 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/ethernet/state"];
inline bool TerminalDevice_LogicalChannels_Channel_Ethernet::has_state() const {
  return this != internal_default_instance() && state_ != NULL;
}
inline void TerminalDevice_LogicalChannels_Channel_Ethernet::clear_state() {
  if (GetArenaNoVirtual() == NULL && state_ != NULL) {
    delete state_;
  }
  state_ = NULL;
}
inline const ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Ethernet_State& TerminalDevice_LogicalChannels_Channel_Ethernet::state() const {
  const ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Ethernet_State* p = state_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Ethernet.state)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Ethernet_State*>(
      &::openconfig::openconfig_terminal_device::_TerminalDevice_LogicalChannels_Channel_Ethernet_State_default_instance_);
}
inline ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Ethernet_State* TerminalDevice_LogicalChannels_Channel_Ethernet::release_state() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Ethernet.state)
  
  ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Ethernet_State* temp = state_;
  state_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Ethernet_State* TerminalDevice_LogicalChannels_Channel_Ethernet::mutable_state() {
  
  if (state_ == NULL) {
    state_ = new ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Ethernet_State;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Ethernet.state)
  return state_;
}
inline void TerminalDevice_LogicalChannels_Channel_Ethernet::set_allocated_state(::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Ethernet_State* state) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete state_;
  }
  if (state) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      state = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, state, submessage_arena);
    }
    
  } else {
    
  }
  state_ = state;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Ethernet.state)
}

// -------------------------------------------------------------------

// TerminalDevice_LogicalChannels_Channel_Ingress_Config

// repeated .ywrapper.UintValue physical_channel = 116250452 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/ingress/config/physical-channel"];
inline int TerminalDevice_LogicalChannels_Channel_Ingress_Config::physical_channel_size() const {
  return physical_channel_.size();
}
inline const ::ywrapper::UintValue& TerminalDevice_LogicalChannels_Channel_Ingress_Config::physical_channel(int index) const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Ingress.Config.physical_channel)
  return physical_channel_.Get(index);
}
inline ::ywrapper::UintValue* TerminalDevice_LogicalChannels_Channel_Ingress_Config::mutable_physical_channel(int index) {
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Ingress.Config.physical_channel)
  return physical_channel_.Mutable(index);
}
inline ::ywrapper::UintValue* TerminalDevice_LogicalChannels_Channel_Ingress_Config::add_physical_channel() {
  // @@protoc_insertion_point(field_add:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Ingress.Config.physical_channel)
  return physical_channel_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::ywrapper::UintValue >*
TerminalDevice_LogicalChannels_Channel_Ingress_Config::mutable_physical_channel() {
  // @@protoc_insertion_point(field_mutable_list:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Ingress.Config.physical_channel)
  return &physical_channel_;
}
inline const ::google::protobuf::RepeatedPtrField< ::ywrapper::UintValue >&
TerminalDevice_LogicalChannels_Channel_Ingress_Config::physical_channel() const {
  // @@protoc_insertion_point(field_list:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Ingress.Config.physical_channel)
  return physical_channel_;
}

// .ywrapper.StringValue transceiver = 110176305 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/ingress/config/transceiver"];
inline bool TerminalDevice_LogicalChannels_Channel_Ingress_Config::has_transceiver() const {
  return this != internal_default_instance() && transceiver_ != NULL;
}
inline const ::ywrapper::StringValue& TerminalDevice_LogicalChannels_Channel_Ingress_Config::transceiver() const {
  const ::ywrapper::StringValue* p = transceiver_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Ingress.Config.transceiver)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::StringValue*>(
      &::ywrapper::_StringValue_default_instance_);
}
inline ::ywrapper::StringValue* TerminalDevice_LogicalChannels_Channel_Ingress_Config::release_transceiver() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Ingress.Config.transceiver)
  
  ::ywrapper::StringValue* temp = transceiver_;
  transceiver_ = NULL;
  return temp;
}
inline ::ywrapper::StringValue* TerminalDevice_LogicalChannels_Channel_Ingress_Config::mutable_transceiver() {
  
  if (transceiver_ == NULL) {
    transceiver_ = new ::ywrapper::StringValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Ingress.Config.transceiver)
  return transceiver_;
}
inline void TerminalDevice_LogicalChannels_Channel_Ingress_Config::set_allocated_transceiver(::ywrapper::StringValue* transceiver) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(transceiver_);
  }
  if (transceiver) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      transceiver = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, transceiver, submessage_arena);
    }
    
  } else {
    
  }
  transceiver_ = transceiver;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Ingress.Config.transceiver)
}

// -------------------------------------------------------------------

// TerminalDevice_LogicalChannels_Channel_Ingress_State

// repeated .ywrapper.UintValue physical_channel = 494740411 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/ingress/state/physical-channel"];
inline int TerminalDevice_LogicalChannels_Channel_Ingress_State::physical_channel_size() const {
  return physical_channel_.size();
}
inline const ::ywrapper::UintValue& TerminalDevice_LogicalChannels_Channel_Ingress_State::physical_channel(int index) const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Ingress.State.physical_channel)
  return physical_channel_.Get(index);
}
inline ::ywrapper::UintValue* TerminalDevice_LogicalChannels_Channel_Ingress_State::mutable_physical_channel(int index) {
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Ingress.State.physical_channel)
  return physical_channel_.Mutable(index);
}
inline ::ywrapper::UintValue* TerminalDevice_LogicalChannels_Channel_Ingress_State::add_physical_channel() {
  // @@protoc_insertion_point(field_add:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Ingress.State.physical_channel)
  return physical_channel_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::ywrapper::UintValue >*
TerminalDevice_LogicalChannels_Channel_Ingress_State::mutable_physical_channel() {
  // @@protoc_insertion_point(field_mutable_list:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Ingress.State.physical_channel)
  return &physical_channel_;
}
inline const ::google::protobuf::RepeatedPtrField< ::ywrapper::UintValue >&
TerminalDevice_LogicalChannels_Channel_Ingress_State::physical_channel() const {
  // @@protoc_insertion_point(field_list:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Ingress.State.physical_channel)
  return physical_channel_;
}

// .ywrapper.StringValue transceiver = 160140636 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/ingress/state/transceiver"];
inline bool TerminalDevice_LogicalChannels_Channel_Ingress_State::has_transceiver() const {
  return this != internal_default_instance() && transceiver_ != NULL;
}
inline const ::ywrapper::StringValue& TerminalDevice_LogicalChannels_Channel_Ingress_State::transceiver() const {
  const ::ywrapper::StringValue* p = transceiver_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Ingress.State.transceiver)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::StringValue*>(
      &::ywrapper::_StringValue_default_instance_);
}
inline ::ywrapper::StringValue* TerminalDevice_LogicalChannels_Channel_Ingress_State::release_transceiver() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Ingress.State.transceiver)
  
  ::ywrapper::StringValue* temp = transceiver_;
  transceiver_ = NULL;
  return temp;
}
inline ::ywrapper::StringValue* TerminalDevice_LogicalChannels_Channel_Ingress_State::mutable_transceiver() {
  
  if (transceiver_ == NULL) {
    transceiver_ = new ::ywrapper::StringValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Ingress.State.transceiver)
  return transceiver_;
}
inline void TerminalDevice_LogicalChannels_Channel_Ingress_State::set_allocated_transceiver(::ywrapper::StringValue* transceiver) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(transceiver_);
  }
  if (transceiver) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      transceiver = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, transceiver, submessage_arena);
    }
    
  } else {
    
  }
  transceiver_ = transceiver;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Ingress.State.transceiver)
}

// -------------------------------------------------------------------

// TerminalDevice_LogicalChannels_Channel_Ingress

// .openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Ingress.Config config = 197300886 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/ingress/config"];
inline bool TerminalDevice_LogicalChannels_Channel_Ingress::has_config() const {
  return this != internal_default_instance() && config_ != NULL;
}
inline void TerminalDevice_LogicalChannels_Channel_Ingress::clear_config() {
  if (GetArenaNoVirtual() == NULL && config_ != NULL) {
    delete config_;
  }
  config_ = NULL;
}
inline const ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Ingress_Config& TerminalDevice_LogicalChannels_Channel_Ingress::config() const {
  const ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Ingress_Config* p = config_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Ingress.config)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Ingress_Config*>(
      &::openconfig::openconfig_terminal_device::_TerminalDevice_LogicalChannels_Channel_Ingress_Config_default_instance_);
}
inline ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Ingress_Config* TerminalDevice_LogicalChannels_Channel_Ingress::release_config() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Ingress.config)
  
  ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Ingress_Config* temp = config_;
  config_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Ingress_Config* TerminalDevice_LogicalChannels_Channel_Ingress::mutable_config() {
  
  if (config_ == NULL) {
    config_ = new ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Ingress_Config;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Ingress.config)
  return config_;
}
inline void TerminalDevice_LogicalChannels_Channel_Ingress::set_allocated_config(::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Ingress_Config* config) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete config_;
  }
  if (config) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      config = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, config, submessage_arena);
    }
    
  } else {
    
  }
  config_ = config;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Ingress.config)
}

// .openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Ingress.State state = 375537987 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/ingress/state"];
inline bool TerminalDevice_LogicalChannels_Channel_Ingress::has_state() const {
  return this != internal_default_instance() && state_ != NULL;
}
inline void TerminalDevice_LogicalChannels_Channel_Ingress::clear_state() {
  if (GetArenaNoVirtual() == NULL && state_ != NULL) {
    delete state_;
  }
  state_ = NULL;
}
inline const ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Ingress_State& TerminalDevice_LogicalChannels_Channel_Ingress::state() const {
  const ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Ingress_State* p = state_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Ingress.state)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Ingress_State*>(
      &::openconfig::openconfig_terminal_device::_TerminalDevice_LogicalChannels_Channel_Ingress_State_default_instance_);
}
inline ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Ingress_State* TerminalDevice_LogicalChannels_Channel_Ingress::release_state() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Ingress.state)
  
  ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Ingress_State* temp = state_;
  state_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Ingress_State* TerminalDevice_LogicalChannels_Channel_Ingress::mutable_state() {
  
  if (state_ == NULL) {
    state_ = new ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Ingress_State;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Ingress.state)
  return state_;
}
inline void TerminalDevice_LogicalChannels_Channel_Ingress::set_allocated_state(::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Ingress_State* state) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete state_;
  }
  if (state) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      state = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, state, submessage_arena);
    }
    
  } else {
    
  }
  state_ = state;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Ingress.state)
}

// -------------------------------------------------------------------

// TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_Config

// .ywrapper.Decimal64Value allocation = 314188864 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/logical-channel-assignments/assignment/config/allocation"];
inline bool TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_Config::has_allocation() const {
  return this != internal_default_instance() && allocation_ != NULL;
}
inline const ::ywrapper::Decimal64Value& TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_Config::allocation() const {
  const ::ywrapper::Decimal64Value* p = allocation_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.LogicalChannelAssignments.Assignment.Config.allocation)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::Decimal64Value*>(
      &::ywrapper::_Decimal64Value_default_instance_);
}
inline ::ywrapper::Decimal64Value* TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_Config::release_allocation() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.LogicalChannelAssignments.Assignment.Config.allocation)
  
  ::ywrapper::Decimal64Value* temp = allocation_;
  allocation_ = NULL;
  return temp;
}
inline ::ywrapper::Decimal64Value* TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_Config::mutable_allocation() {
  
  if (allocation_ == NULL) {
    allocation_ = new ::ywrapper::Decimal64Value;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.LogicalChannelAssignments.Assignment.Config.allocation)
  return allocation_;
}
inline void TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_Config::set_allocated_allocation(::ywrapper::Decimal64Value* allocation) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(allocation_);
  }
  if (allocation) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      allocation = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, allocation, submessage_arena);
    }
    
  } else {
    
  }
  allocation_ = allocation;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.LogicalChannelAssignments.Assignment.Config.allocation)
}

// .openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.LogicalChannelAssignments.Assignment.Config.AssignmentType assignment_type = 456756042 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/logical-channel-assignments/assignment/config/assignment-type"];
inline void TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_Config::clear_assignment_type() {
  assignment_type_ = 0;
}
inline ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_Config_AssignmentType TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_Config::assignment_type() const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.LogicalChannelAssignments.Assignment.Config.assignment_type)
  return static_cast< ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_Config_AssignmentType >(assignment_type_);
}
inline void TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_Config::set_assignment_type(::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_Config_AssignmentType value) {
  
  assignment_type_ = value;
  // @@protoc_insertion_point(field_set:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.LogicalChannelAssignments.Assignment.Config.assignment_type)
}

// .ywrapper.StringValue description = 125024468 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/logical-channel-assignments/assignment/config/description"];
inline bool TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_Config::has_description() const {
  return this != internal_default_instance() && description_ != NULL;
}
inline const ::ywrapper::StringValue& TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_Config::description() const {
  const ::ywrapper::StringValue* p = description_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.LogicalChannelAssignments.Assignment.Config.description)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::StringValue*>(
      &::ywrapper::_StringValue_default_instance_);
}
inline ::ywrapper::StringValue* TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_Config::release_description() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.LogicalChannelAssignments.Assignment.Config.description)
  
  ::ywrapper::StringValue* temp = description_;
  description_ = NULL;
  return temp;
}
inline ::ywrapper::StringValue* TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_Config::mutable_description() {
  
  if (description_ == NULL) {
    description_ = new ::ywrapper::StringValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.LogicalChannelAssignments.Assignment.Config.description)
  return description_;
}
inline void TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_Config::set_allocated_description(::ywrapper::StringValue* description) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(description_);
  }
  if (description) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      description = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, description, submessage_arena);
    }
    
  } else {
    
  }
  description_ = description;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.LogicalChannelAssignments.Assignment.Config.description)
}

// .ywrapper.UintValue index = 149526970 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/logical-channel-assignments/assignment/config/index"];
inline bool TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_Config::has_index() const {
  return this != internal_default_instance() && index_ != NULL;
}
inline const ::ywrapper::UintValue& TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_Config::index() const {
  const ::ywrapper::UintValue* p = index_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.LogicalChannelAssignments.Assignment.Config.index)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_Config::release_index() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.LogicalChannelAssignments.Assignment.Config.index)
  
  ::ywrapper::UintValue* temp = index_;
  index_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_Config::mutable_index() {
  
  if (index_ == NULL) {
    index_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.LogicalChannelAssignments.Assignment.Config.index)
  return index_;
}
inline void TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_Config::set_allocated_index(::ywrapper::UintValue* index) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(index_);
  }
  if (index) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      index = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, index, submessage_arena);
    }
    
  } else {
    
  }
  index_ = index;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.LogicalChannelAssignments.Assignment.Config.index)
}

// .ywrapper.UintValue logical_channel = 92447393 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/logical-channel-assignments/assignment/config/logical-channel"];
inline bool TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_Config::has_logical_channel() const {
  return this != internal_default_instance() && logical_channel_ != NULL;
}
inline const ::ywrapper::UintValue& TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_Config::logical_channel() const {
  const ::ywrapper::UintValue* p = logical_channel_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.LogicalChannelAssignments.Assignment.Config.logical_channel)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_Config::release_logical_channel() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.LogicalChannelAssignments.Assignment.Config.logical_channel)
  
  ::ywrapper::UintValue* temp = logical_channel_;
  logical_channel_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_Config::mutable_logical_channel() {
  
  if (logical_channel_ == NULL) {
    logical_channel_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.LogicalChannelAssignments.Assignment.Config.logical_channel)
  return logical_channel_;
}
inline void TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_Config::set_allocated_logical_channel(::ywrapper::UintValue* logical_channel) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(logical_channel_);
  }
  if (logical_channel) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      logical_channel = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, logical_channel, submessage_arena);
    }
    
  } else {
    
  }
  logical_channel_ = logical_channel;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.LogicalChannelAssignments.Assignment.Config.logical_channel)
}

// .ywrapper.StringValue optical_channel = 175286324 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/logical-channel-assignments/assignment/config/optical-channel"];
inline bool TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_Config::has_optical_channel() const {
  return this != internal_default_instance() && optical_channel_ != NULL;
}
inline const ::ywrapper::StringValue& TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_Config::optical_channel() const {
  const ::ywrapper::StringValue* p = optical_channel_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.LogicalChannelAssignments.Assignment.Config.optical_channel)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::StringValue*>(
      &::ywrapper::_StringValue_default_instance_);
}
inline ::ywrapper::StringValue* TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_Config::release_optical_channel() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.LogicalChannelAssignments.Assignment.Config.optical_channel)
  
  ::ywrapper::StringValue* temp = optical_channel_;
  optical_channel_ = NULL;
  return temp;
}
inline ::ywrapper::StringValue* TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_Config::mutable_optical_channel() {
  
  if (optical_channel_ == NULL) {
    optical_channel_ = new ::ywrapper::StringValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.LogicalChannelAssignments.Assignment.Config.optical_channel)
  return optical_channel_;
}
inline void TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_Config::set_allocated_optical_channel(::ywrapper::StringValue* optical_channel) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(optical_channel_);
  }
  if (optical_channel) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      optical_channel = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, optical_channel, submessage_arena);
    }
    
  } else {
    
  }
  optical_channel_ = optical_channel;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.LogicalChannelAssignments.Assignment.Config.optical_channel)
}

// -------------------------------------------------------------------

// TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_State

// .ywrapper.Decimal64Value allocation = 36320529 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/logical-channel-assignments/assignment/state/allocation"];
inline bool TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_State::has_allocation() const {
  return this != internal_default_instance() && allocation_ != NULL;
}
inline const ::ywrapper::Decimal64Value& TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_State::allocation() const {
  const ::ywrapper::Decimal64Value* p = allocation_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.LogicalChannelAssignments.Assignment.State.allocation)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::Decimal64Value*>(
      &::ywrapper::_Decimal64Value_default_instance_);
}
inline ::ywrapper::Decimal64Value* TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_State::release_allocation() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.LogicalChannelAssignments.Assignment.State.allocation)
  
  ::ywrapper::Decimal64Value* temp = allocation_;
  allocation_ = NULL;
  return temp;
}
inline ::ywrapper::Decimal64Value* TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_State::mutable_allocation() {
  
  if (allocation_ == NULL) {
    allocation_ = new ::ywrapper::Decimal64Value;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.LogicalChannelAssignments.Assignment.State.allocation)
  return allocation_;
}
inline void TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_State::set_allocated_allocation(::ywrapper::Decimal64Value* allocation) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(allocation_);
  }
  if (allocation) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      allocation = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, allocation, submessage_arena);
    }
    
  } else {
    
  }
  allocation_ = allocation;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.LogicalChannelAssignments.Assignment.State.allocation)
}

// .openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.LogicalChannelAssignments.Assignment.State.AssignmentType assignment_type = 280777113 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/logical-channel-assignments/assignment/state/assignment-type"];
inline void TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_State::clear_assignment_type() {
  assignment_type_ = 0;
}
inline ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_State_AssignmentType TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_State::assignment_type() const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.LogicalChannelAssignments.Assignment.State.assignment_type)
  return static_cast< ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_State_AssignmentType >(assignment_type_);
}
inline void TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_State::set_assignment_type(::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_State_AssignmentType value) {
  
  assignment_type_ = value;
  // @@protoc_insertion_point(field_set:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.LogicalChannelAssignments.Assignment.State.assignment_type)
}

// .ywrapper.StringValue description = 355583159 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/logical-channel-assignments/assignment/state/description"];
inline bool TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_State::has_description() const {
  return this != internal_default_instance() && description_ != NULL;
}
inline const ::ywrapper::StringValue& TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_State::description() const {
  const ::ywrapper::StringValue* p = description_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.LogicalChannelAssignments.Assignment.State.description)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::StringValue*>(
      &::ywrapper::_StringValue_default_instance_);
}
inline ::ywrapper::StringValue* TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_State::release_description() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.LogicalChannelAssignments.Assignment.State.description)
  
  ::ywrapper::StringValue* temp = description_;
  description_ = NULL;
  return temp;
}
inline ::ywrapper::StringValue* TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_State::mutable_description() {
  
  if (description_ == NULL) {
    description_ = new ::ywrapper::StringValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.LogicalChannelAssignments.Assignment.State.description)
  return description_;
}
inline void TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_State::set_allocated_description(::ywrapper::StringValue* description) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(description_);
  }
  if (description) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      description = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, description, submessage_arena);
    }
    
  } else {
    
  }
  description_ = description;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.LogicalChannelAssignments.Assignment.State.description)
}

// .ywrapper.UintValue index = 107378301 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/logical-channel-assignments/assignment/state/index"];
inline bool TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_State::has_index() const {
  return this != internal_default_instance() && index_ != NULL;
}
inline const ::ywrapper::UintValue& TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_State::index() const {
  const ::ywrapper::UintValue* p = index_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.LogicalChannelAssignments.Assignment.State.index)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_State::release_index() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.LogicalChannelAssignments.Assignment.State.index)
  
  ::ywrapper::UintValue* temp = index_;
  index_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_State::mutable_index() {
  
  if (index_ == NULL) {
    index_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.LogicalChannelAssignments.Assignment.State.index)
  return index_;
}
inline void TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_State::set_allocated_index(::ywrapper::UintValue* index) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(index_);
  }
  if (index) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      index = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, index, submessage_arena);
    }
    
  } else {
    
  }
  index_ = index;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.LogicalChannelAssignments.Assignment.State.index)
}

// .ywrapper.UintValue logical_channel = 106910794 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/logical-channel-assignments/assignment/state/logical-channel"];
inline bool TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_State::has_logical_channel() const {
  return this != internal_default_instance() && logical_channel_ != NULL;
}
inline const ::ywrapper::UintValue& TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_State::logical_channel() const {
  const ::ywrapper::UintValue* p = logical_channel_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.LogicalChannelAssignments.Assignment.State.logical_channel)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_State::release_logical_channel() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.LogicalChannelAssignments.Assignment.State.logical_channel)
  
  ::ywrapper::UintValue* temp = logical_channel_;
  logical_channel_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_State::mutable_logical_channel() {
  
  if (logical_channel_ == NULL) {
    logical_channel_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.LogicalChannelAssignments.Assignment.State.logical_channel)
  return logical_channel_;
}
inline void TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_State::set_allocated_logical_channel(::ywrapper::UintValue* logical_channel) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(logical_channel_);
  }
  if (logical_channel) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      logical_channel = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, logical_channel, submessage_arena);
    }
    
  } else {
    
  }
  logical_channel_ = logical_channel;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.LogicalChannelAssignments.Assignment.State.logical_channel)
}

// .ywrapper.StringValue optical_channel = 413714875 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/logical-channel-assignments/assignment/state/optical-channel"];
inline bool TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_State::has_optical_channel() const {
  return this != internal_default_instance() && optical_channel_ != NULL;
}
inline const ::ywrapper::StringValue& TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_State::optical_channel() const {
  const ::ywrapper::StringValue* p = optical_channel_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.LogicalChannelAssignments.Assignment.State.optical_channel)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::StringValue*>(
      &::ywrapper::_StringValue_default_instance_);
}
inline ::ywrapper::StringValue* TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_State::release_optical_channel() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.LogicalChannelAssignments.Assignment.State.optical_channel)
  
  ::ywrapper::StringValue* temp = optical_channel_;
  optical_channel_ = NULL;
  return temp;
}
inline ::ywrapper::StringValue* TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_State::mutable_optical_channel() {
  
  if (optical_channel_ == NULL) {
    optical_channel_ = new ::ywrapper::StringValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.LogicalChannelAssignments.Assignment.State.optical_channel)
  return optical_channel_;
}
inline void TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_State::set_allocated_optical_channel(::ywrapper::StringValue* optical_channel) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(optical_channel_);
  }
  if (optical_channel) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      optical_channel = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, optical_channel, submessage_arena);
    }
    
  } else {
    
  }
  optical_channel_ = optical_channel;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.LogicalChannelAssignments.Assignment.State.optical_channel)
}

// -------------------------------------------------------------------

// TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment

// .openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.LogicalChannelAssignments.Assignment.Config config = 488440203 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/logical-channel-assignments/assignment/config"];
inline bool TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment::has_config() const {
  return this != internal_default_instance() && config_ != NULL;
}
inline void TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment::clear_config() {
  if (GetArenaNoVirtual() == NULL && config_ != NULL) {
    delete config_;
  }
  config_ = NULL;
}
inline const ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_Config& TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment::config() const {
  const ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_Config* p = config_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.LogicalChannelAssignments.Assignment.config)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_Config*>(
      &::openconfig::openconfig_terminal_device::_TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_Config_default_instance_);
}
inline ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_Config* TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment::release_config() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.LogicalChannelAssignments.Assignment.config)
  
  ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_Config* temp = config_;
  config_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_Config* TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment::mutable_config() {
  
  if (config_ == NULL) {
    config_ = new ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_Config;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.LogicalChannelAssignments.Assignment.config)
  return config_;
}
inline void TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment::set_allocated_config(::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_Config* config) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete config_;
  }
  if (config) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      config = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, config, submessage_arena);
    }
    
  } else {
    
  }
  config_ = config;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.LogicalChannelAssignments.Assignment.config)
}

// .openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.LogicalChannelAssignments.Assignment.State state = 263535820 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/logical-channel-assignments/assignment/state"];
inline bool TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment::has_state() const {
  return this != internal_default_instance() && state_ != NULL;
}
inline void TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment::clear_state() {
  if (GetArenaNoVirtual() == NULL && state_ != NULL) {
    delete state_;
  }
  state_ = NULL;
}
inline const ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_State& TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment::state() const {
  const ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_State* p = state_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.LogicalChannelAssignments.Assignment.state)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_State*>(
      &::openconfig::openconfig_terminal_device::_TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_State_default_instance_);
}
inline ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_State* TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment::release_state() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.LogicalChannelAssignments.Assignment.state)
  
  ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_State* temp = state_;
  state_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_State* TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment::mutable_state() {
  
  if (state_ == NULL) {
    state_ = new ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_State;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.LogicalChannelAssignments.Assignment.state)
  return state_;
}
inline void TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment::set_allocated_state(::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_State* state) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete state_;
  }
  if (state) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      state = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, state, submessage_arena);
    }
    
  } else {
    
  }
  state_ = state;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.LogicalChannelAssignments.Assignment.state)
}

// -------------------------------------------------------------------

// TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_AssignmentKey

// uint64 index = 1 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/logical-channel-assignments/assignment/index"];
inline void TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_AssignmentKey::clear_index() {
  index_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_AssignmentKey::index() const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.LogicalChannelAssignments.AssignmentKey.index)
  return index_;
}
inline void TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_AssignmentKey::set_index(::google::protobuf::uint64 value) {
  
  index_ = value;
  // @@protoc_insertion_point(field_set:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.LogicalChannelAssignments.AssignmentKey.index)
}

// .openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.LogicalChannelAssignments.Assignment assignment = 2;
inline bool TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_AssignmentKey::has_assignment() const {
  return this != internal_default_instance() && assignment_ != NULL;
}
inline void TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_AssignmentKey::clear_assignment() {
  if (GetArenaNoVirtual() == NULL && assignment_ != NULL) {
    delete assignment_;
  }
  assignment_ = NULL;
}
inline const ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment& TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_AssignmentKey::assignment() const {
  const ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment* p = assignment_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.LogicalChannelAssignments.AssignmentKey.assignment)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment*>(
      &::openconfig::openconfig_terminal_device::_TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_default_instance_);
}
inline ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment* TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_AssignmentKey::release_assignment() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.LogicalChannelAssignments.AssignmentKey.assignment)
  
  ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment* temp = assignment_;
  assignment_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment* TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_AssignmentKey::mutable_assignment() {
  
  if (assignment_ == NULL) {
    assignment_ = new ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.LogicalChannelAssignments.AssignmentKey.assignment)
  return assignment_;
}
inline void TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_AssignmentKey::set_allocated_assignment(::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment* assignment) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete assignment_;
  }
  if (assignment) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      assignment = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, assignment, submessage_arena);
    }
    
  } else {
    
  }
  assignment_ = assignment;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.LogicalChannelAssignments.AssignmentKey.assignment)
}

// -------------------------------------------------------------------

// TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments

// repeated .openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.LogicalChannelAssignments.AssignmentKey assignment = 520668442 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/logical-channel-assignments/assignment"];
inline int TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments::assignment_size() const {
  return assignment_.size();
}
inline void TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments::clear_assignment() {
  assignment_.Clear();
}
inline const ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_AssignmentKey& TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments::assignment(int index) const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.LogicalChannelAssignments.assignment)
  return assignment_.Get(index);
}
inline ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_AssignmentKey* TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments::mutable_assignment(int index) {
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.LogicalChannelAssignments.assignment)
  return assignment_.Mutable(index);
}
inline ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_AssignmentKey* TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments::add_assignment() {
  // @@protoc_insertion_point(field_add:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.LogicalChannelAssignments.assignment)
  return assignment_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_AssignmentKey >*
TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments::mutable_assignment() {
  // @@protoc_insertion_point(field_mutable_list:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.LogicalChannelAssignments.assignment)
  return &assignment_;
}
inline const ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_AssignmentKey >&
TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments::assignment() const {
  // @@protoc_insertion_point(field_list:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.LogicalChannelAssignments.assignment)
  return assignment_;
}

// -------------------------------------------------------------------

// TerminalDevice_LogicalChannels_Channel_Otn_Config

// .ywrapper.BoolValue tti_msg_auto = 143356042 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/config/tti-msg-auto"];
inline bool TerminalDevice_LogicalChannels_Channel_Otn_Config::has_tti_msg_auto() const {
  return this != internal_default_instance() && tti_msg_auto_ != NULL;
}
inline const ::ywrapper::BoolValue& TerminalDevice_LogicalChannels_Channel_Otn_Config::tti_msg_auto() const {
  const ::ywrapper::BoolValue* p = tti_msg_auto_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.Config.tti_msg_auto)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::BoolValue*>(
      &::ywrapper::_BoolValue_default_instance_);
}
inline ::ywrapper::BoolValue* TerminalDevice_LogicalChannels_Channel_Otn_Config::release_tti_msg_auto() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.Config.tti_msg_auto)
  
  ::ywrapper::BoolValue* temp = tti_msg_auto_;
  tti_msg_auto_ = NULL;
  return temp;
}
inline ::ywrapper::BoolValue* TerminalDevice_LogicalChannels_Channel_Otn_Config::mutable_tti_msg_auto() {
  
  if (tti_msg_auto_ == NULL) {
    tti_msg_auto_ = new ::ywrapper::BoolValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.Config.tti_msg_auto)
  return tti_msg_auto_;
}
inline void TerminalDevice_LogicalChannels_Channel_Otn_Config::set_allocated_tti_msg_auto(::ywrapper::BoolValue* tti_msg_auto) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(tti_msg_auto_);
  }
  if (tti_msg_auto) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      tti_msg_auto = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, tti_msg_auto, submessage_arena);
    }
    
  } else {
    
  }
  tti_msg_auto_ = tti_msg_auto;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.Config.tti_msg_auto)
}

// .ywrapper.StringValue tti_msg_expected = 22126267 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/config/tti-msg-expected"];
inline bool TerminalDevice_LogicalChannels_Channel_Otn_Config::has_tti_msg_expected() const {
  return this != internal_default_instance() && tti_msg_expected_ != NULL;
}
inline const ::ywrapper::StringValue& TerminalDevice_LogicalChannels_Channel_Otn_Config::tti_msg_expected() const {
  const ::ywrapper::StringValue* p = tti_msg_expected_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.Config.tti_msg_expected)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::StringValue*>(
      &::ywrapper::_StringValue_default_instance_);
}
inline ::ywrapper::StringValue* TerminalDevice_LogicalChannels_Channel_Otn_Config::release_tti_msg_expected() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.Config.tti_msg_expected)
  
  ::ywrapper::StringValue* temp = tti_msg_expected_;
  tti_msg_expected_ = NULL;
  return temp;
}
inline ::ywrapper::StringValue* TerminalDevice_LogicalChannels_Channel_Otn_Config::mutable_tti_msg_expected() {
  
  if (tti_msg_expected_ == NULL) {
    tti_msg_expected_ = new ::ywrapper::StringValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.Config.tti_msg_expected)
  return tti_msg_expected_;
}
inline void TerminalDevice_LogicalChannels_Channel_Otn_Config::set_allocated_tti_msg_expected(::ywrapper::StringValue* tti_msg_expected) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(tti_msg_expected_);
  }
  if (tti_msg_expected) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      tti_msg_expected = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, tti_msg_expected, submessage_arena);
    }
    
  } else {
    
  }
  tti_msg_expected_ = tti_msg_expected;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.Config.tti_msg_expected)
}

// .ywrapper.StringValue tti_msg_transmit = 129219947 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/config/tti-msg-transmit"];
inline bool TerminalDevice_LogicalChannels_Channel_Otn_Config::has_tti_msg_transmit() const {
  return this != internal_default_instance() && tti_msg_transmit_ != NULL;
}
inline const ::ywrapper::StringValue& TerminalDevice_LogicalChannels_Channel_Otn_Config::tti_msg_transmit() const {
  const ::ywrapper::StringValue* p = tti_msg_transmit_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.Config.tti_msg_transmit)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::StringValue*>(
      &::ywrapper::_StringValue_default_instance_);
}
inline ::ywrapper::StringValue* TerminalDevice_LogicalChannels_Channel_Otn_Config::release_tti_msg_transmit() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.Config.tti_msg_transmit)
  
  ::ywrapper::StringValue* temp = tti_msg_transmit_;
  tti_msg_transmit_ = NULL;
  return temp;
}
inline ::ywrapper::StringValue* TerminalDevice_LogicalChannels_Channel_Otn_Config::mutable_tti_msg_transmit() {
  
  if (tti_msg_transmit_ == NULL) {
    tti_msg_transmit_ = new ::ywrapper::StringValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.Config.tti_msg_transmit)
  return tti_msg_transmit_;
}
inline void TerminalDevice_LogicalChannels_Channel_Otn_Config::set_allocated_tti_msg_transmit(::ywrapper::StringValue* tti_msg_transmit) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(tti_msg_transmit_);
  }
  if (tti_msg_transmit) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      tti_msg_transmit = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, tti_msg_transmit, submessage_arena);
    }
    
  } else {
    
  }
  tti_msg_transmit_ = tti_msg_transmit;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.Config.tti_msg_transmit)
}

// -------------------------------------------------------------------

// TerminalDevice_LogicalChannels_Channel_Otn_State_Esnr

// .ywrapper.Decimal64Value avg = 330244907 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/state/esnr/avg"];
inline bool TerminalDevice_LogicalChannels_Channel_Otn_State_Esnr::has_avg() const {
  return this != internal_default_instance() && avg_ != NULL;
}
inline const ::ywrapper::Decimal64Value& TerminalDevice_LogicalChannels_Channel_Otn_State_Esnr::avg() const {
  const ::ywrapper::Decimal64Value* p = avg_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.Esnr.avg)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::Decimal64Value*>(
      &::ywrapper::_Decimal64Value_default_instance_);
}
inline ::ywrapper::Decimal64Value* TerminalDevice_LogicalChannels_Channel_Otn_State_Esnr::release_avg() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.Esnr.avg)
  
  ::ywrapper::Decimal64Value* temp = avg_;
  avg_ = NULL;
  return temp;
}
inline ::ywrapper::Decimal64Value* TerminalDevice_LogicalChannels_Channel_Otn_State_Esnr::mutable_avg() {
  
  if (avg_ == NULL) {
    avg_ = new ::ywrapper::Decimal64Value;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.Esnr.avg)
  return avg_;
}
inline void TerminalDevice_LogicalChannels_Channel_Otn_State_Esnr::set_allocated_avg(::ywrapper::Decimal64Value* avg) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(avg_);
  }
  if (avg) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      avg = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, avg, submessage_arena);
    }
    
  } else {
    
  }
  avg_ = avg;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.Esnr.avg)
}

// .ywrapper.Decimal64Value instant = 330879284 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/state/esnr/instant"];
inline bool TerminalDevice_LogicalChannels_Channel_Otn_State_Esnr::has_instant() const {
  return this != internal_default_instance() && instant_ != NULL;
}
inline const ::ywrapper::Decimal64Value& TerminalDevice_LogicalChannels_Channel_Otn_State_Esnr::instant() const {
  const ::ywrapper::Decimal64Value* p = instant_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.Esnr.instant)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::Decimal64Value*>(
      &::ywrapper::_Decimal64Value_default_instance_);
}
inline ::ywrapper::Decimal64Value* TerminalDevice_LogicalChannels_Channel_Otn_State_Esnr::release_instant() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.Esnr.instant)
  
  ::ywrapper::Decimal64Value* temp = instant_;
  instant_ = NULL;
  return temp;
}
inline ::ywrapper::Decimal64Value* TerminalDevice_LogicalChannels_Channel_Otn_State_Esnr::mutable_instant() {
  
  if (instant_ == NULL) {
    instant_ = new ::ywrapper::Decimal64Value;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.Esnr.instant)
  return instant_;
}
inline void TerminalDevice_LogicalChannels_Channel_Otn_State_Esnr::set_allocated_instant(::ywrapper::Decimal64Value* instant) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(instant_);
  }
  if (instant) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      instant = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, instant, submessage_arena);
    }
    
  } else {
    
  }
  instant_ = instant;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.Esnr.instant)
}

// .ywrapper.UintValue interval = 336957778 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/state/esnr/interval"];
inline bool TerminalDevice_LogicalChannels_Channel_Otn_State_Esnr::has_interval() const {
  return this != internal_default_instance() && interval_ != NULL;
}
inline const ::ywrapper::UintValue& TerminalDevice_LogicalChannels_Channel_Otn_State_Esnr::interval() const {
  const ::ywrapper::UintValue* p = interval_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.Esnr.interval)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* TerminalDevice_LogicalChannels_Channel_Otn_State_Esnr::release_interval() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.Esnr.interval)
  
  ::ywrapper::UintValue* temp = interval_;
  interval_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* TerminalDevice_LogicalChannels_Channel_Otn_State_Esnr::mutable_interval() {
  
  if (interval_ == NULL) {
    interval_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.Esnr.interval)
  return interval_;
}
inline void TerminalDevice_LogicalChannels_Channel_Otn_State_Esnr::set_allocated_interval(::ywrapper::UintValue* interval) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(interval_);
  }
  if (interval) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      interval = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, interval, submessage_arena);
    }
    
  } else {
    
  }
  interval_ = interval;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.Esnr.interval)
}

// .ywrapper.Decimal64Value max = 448392821 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/state/esnr/max"];
inline bool TerminalDevice_LogicalChannels_Channel_Otn_State_Esnr::has_max() const {
  return this != internal_default_instance() && max_ != NULL;
}
inline const ::ywrapper::Decimal64Value& TerminalDevice_LogicalChannels_Channel_Otn_State_Esnr::max() const {
  const ::ywrapper::Decimal64Value* p = max_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.Esnr.max)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::Decimal64Value*>(
      &::ywrapper::_Decimal64Value_default_instance_);
}
inline ::ywrapper::Decimal64Value* TerminalDevice_LogicalChannels_Channel_Otn_State_Esnr::release_max() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.Esnr.max)
  
  ::ywrapper::Decimal64Value* temp = max_;
  max_ = NULL;
  return temp;
}
inline ::ywrapper::Decimal64Value* TerminalDevice_LogicalChannels_Channel_Otn_State_Esnr::mutable_max() {
  
  if (max_ == NULL) {
    max_ = new ::ywrapper::Decimal64Value;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.Esnr.max)
  return max_;
}
inline void TerminalDevice_LogicalChannels_Channel_Otn_State_Esnr::set_allocated_max(::ywrapper::Decimal64Value* max) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(max_);
  }
  if (max) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      max = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, max, submessage_arena);
    }
    
  } else {
    
  }
  max_ = max;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.Esnr.max)
}

// .ywrapper.Decimal64Value min = 314171675 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/state/esnr/min"];
inline bool TerminalDevice_LogicalChannels_Channel_Otn_State_Esnr::has_min() const {
  return this != internal_default_instance() && min_ != NULL;
}
inline const ::ywrapper::Decimal64Value& TerminalDevice_LogicalChannels_Channel_Otn_State_Esnr::min() const {
  const ::ywrapper::Decimal64Value* p = min_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.Esnr.min)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::Decimal64Value*>(
      &::ywrapper::_Decimal64Value_default_instance_);
}
inline ::ywrapper::Decimal64Value* TerminalDevice_LogicalChannels_Channel_Otn_State_Esnr::release_min() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.Esnr.min)
  
  ::ywrapper::Decimal64Value* temp = min_;
  min_ = NULL;
  return temp;
}
inline ::ywrapper::Decimal64Value* TerminalDevice_LogicalChannels_Channel_Otn_State_Esnr::mutable_min() {
  
  if (min_ == NULL) {
    min_ = new ::ywrapper::Decimal64Value;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.Esnr.min)
  return min_;
}
inline void TerminalDevice_LogicalChannels_Channel_Otn_State_Esnr::set_allocated_min(::ywrapper::Decimal64Value* min) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(min_);
  }
  if (min) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      min = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, min, submessage_arena);
    }
    
  } else {
    
  }
  min_ = min;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.Esnr.min)
}

// -------------------------------------------------------------------

// TerminalDevice_LogicalChannels_Channel_Otn_State_PostFecBer

// .ywrapper.Decimal64Value avg = 188623348 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/state/post-fec-ber/avg"];
inline bool TerminalDevice_LogicalChannels_Channel_Otn_State_PostFecBer::has_avg() const {
  return this != internal_default_instance() && avg_ != NULL;
}
inline const ::ywrapper::Decimal64Value& TerminalDevice_LogicalChannels_Channel_Otn_State_PostFecBer::avg() const {
  const ::ywrapper::Decimal64Value* p = avg_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.PostFecBer.avg)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::Decimal64Value*>(
      &::ywrapper::_Decimal64Value_default_instance_);
}
inline ::ywrapper::Decimal64Value* TerminalDevice_LogicalChannels_Channel_Otn_State_PostFecBer::release_avg() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.PostFecBer.avg)
  
  ::ywrapper::Decimal64Value* temp = avg_;
  avg_ = NULL;
  return temp;
}
inline ::ywrapper::Decimal64Value* TerminalDevice_LogicalChannels_Channel_Otn_State_PostFecBer::mutable_avg() {
  
  if (avg_ == NULL) {
    avg_ = new ::ywrapper::Decimal64Value;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.PostFecBer.avg)
  return avg_;
}
inline void TerminalDevice_LogicalChannels_Channel_Otn_State_PostFecBer::set_allocated_avg(::ywrapper::Decimal64Value* avg) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(avg_);
  }
  if (avg) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      avg = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, avg, submessage_arena);
    }
    
  } else {
    
  }
  avg_ = avg;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.PostFecBer.avg)
}

// .ywrapper.Decimal64Value instant = 321048399 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/state/post-fec-ber/instant"];
inline bool TerminalDevice_LogicalChannels_Channel_Otn_State_PostFecBer::has_instant() const {
  return this != internal_default_instance() && instant_ != NULL;
}
inline const ::ywrapper::Decimal64Value& TerminalDevice_LogicalChannels_Channel_Otn_State_PostFecBer::instant() const {
  const ::ywrapper::Decimal64Value* p = instant_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.PostFecBer.instant)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::Decimal64Value*>(
      &::ywrapper::_Decimal64Value_default_instance_);
}
inline ::ywrapper::Decimal64Value* TerminalDevice_LogicalChannels_Channel_Otn_State_PostFecBer::release_instant() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.PostFecBer.instant)
  
  ::ywrapper::Decimal64Value* temp = instant_;
  instant_ = NULL;
  return temp;
}
inline ::ywrapper::Decimal64Value* TerminalDevice_LogicalChannels_Channel_Otn_State_PostFecBer::mutable_instant() {
  
  if (instant_ == NULL) {
    instant_ = new ::ywrapper::Decimal64Value;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.PostFecBer.instant)
  return instant_;
}
inline void TerminalDevice_LogicalChannels_Channel_Otn_State_PostFecBer::set_allocated_instant(::ywrapper::Decimal64Value* instant) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(instant_);
  }
  if (instant) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      instant = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, instant, submessage_arena);
    }
    
  } else {
    
  }
  instant_ = instant;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.PostFecBer.instant)
}

// .ywrapper.Decimal64Value max = 404863886 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/state/post-fec-ber/max"];
inline bool TerminalDevice_LogicalChannels_Channel_Otn_State_PostFecBer::has_max() const {
  return this != internal_default_instance() && max_ != NULL;
}
inline const ::ywrapper::Decimal64Value& TerminalDevice_LogicalChannels_Channel_Otn_State_PostFecBer::max() const {
  const ::ywrapper::Decimal64Value* p = max_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.PostFecBer.max)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::Decimal64Value*>(
      &::ywrapper::_Decimal64Value_default_instance_);
}
inline ::ywrapper::Decimal64Value* TerminalDevice_LogicalChannels_Channel_Otn_State_PostFecBer::release_max() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.PostFecBer.max)
  
  ::ywrapper::Decimal64Value* temp = max_;
  max_ = NULL;
  return temp;
}
inline ::ywrapper::Decimal64Value* TerminalDevice_LogicalChannels_Channel_Otn_State_PostFecBer::mutable_max() {
  
  if (max_ == NULL) {
    max_ = new ::ywrapper::Decimal64Value;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.PostFecBer.max)
  return max_;
}
inline void TerminalDevice_LogicalChannels_Channel_Otn_State_PostFecBer::set_allocated_max(::ywrapper::Decimal64Value* max) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(max_);
  }
  if (max) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      max = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, max, submessage_arena);
    }
    
  } else {
    
  }
  max_ = max;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.PostFecBer.max)
}

// .ywrapper.Decimal64Value min = 2214112 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/state/post-fec-ber/min"];
inline bool TerminalDevice_LogicalChannels_Channel_Otn_State_PostFecBer::has_min() const {
  return this != internal_default_instance() && min_ != NULL;
}
inline const ::ywrapper::Decimal64Value& TerminalDevice_LogicalChannels_Channel_Otn_State_PostFecBer::min() const {
  const ::ywrapper::Decimal64Value* p = min_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.PostFecBer.min)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::Decimal64Value*>(
      &::ywrapper::_Decimal64Value_default_instance_);
}
inline ::ywrapper::Decimal64Value* TerminalDevice_LogicalChannels_Channel_Otn_State_PostFecBer::release_min() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.PostFecBer.min)
  
  ::ywrapper::Decimal64Value* temp = min_;
  min_ = NULL;
  return temp;
}
inline ::ywrapper::Decimal64Value* TerminalDevice_LogicalChannels_Channel_Otn_State_PostFecBer::mutable_min() {
  
  if (min_ == NULL) {
    min_ = new ::ywrapper::Decimal64Value;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.PostFecBer.min)
  return min_;
}
inline void TerminalDevice_LogicalChannels_Channel_Otn_State_PostFecBer::set_allocated_min(::ywrapper::Decimal64Value* min) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(min_);
  }
  if (min) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      min = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, min, submessage_arena);
    }
    
  } else {
    
  }
  min_ = min;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.PostFecBer.min)
}

// -------------------------------------------------------------------

// TerminalDevice_LogicalChannels_Channel_Otn_State_PreFecBer

// .ywrapper.Decimal64Value avg = 424787165 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/state/pre-fec-ber/avg"];
inline bool TerminalDevice_LogicalChannels_Channel_Otn_State_PreFecBer::has_avg() const {
  return this != internal_default_instance() && avg_ != NULL;
}
inline const ::ywrapper::Decimal64Value& TerminalDevice_LogicalChannels_Channel_Otn_State_PreFecBer::avg() const {
  const ::ywrapper::Decimal64Value* p = avg_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.PreFecBer.avg)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::Decimal64Value*>(
      &::ywrapper::_Decimal64Value_default_instance_);
}
inline ::ywrapper::Decimal64Value* TerminalDevice_LogicalChannels_Channel_Otn_State_PreFecBer::release_avg() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.PreFecBer.avg)
  
  ::ywrapper::Decimal64Value* temp = avg_;
  avg_ = NULL;
  return temp;
}
inline ::ywrapper::Decimal64Value* TerminalDevice_LogicalChannels_Channel_Otn_State_PreFecBer::mutable_avg() {
  
  if (avg_ == NULL) {
    avg_ = new ::ywrapper::Decimal64Value;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.PreFecBer.avg)
  return avg_;
}
inline void TerminalDevice_LogicalChannels_Channel_Otn_State_PreFecBer::set_allocated_avg(::ywrapper::Decimal64Value* avg) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(avg_);
  }
  if (avg) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      avg = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, avg, submessage_arena);
    }
    
  } else {
    
  }
  avg_ = avg;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.PreFecBer.avg)
}

// .ywrapper.Decimal64Value instant = 417553930 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/state/pre-fec-ber/instant"];
inline bool TerminalDevice_LogicalChannels_Channel_Otn_State_PreFecBer::has_instant() const {
  return this != internal_default_instance() && instant_ != NULL;
}
inline const ::ywrapper::Decimal64Value& TerminalDevice_LogicalChannels_Channel_Otn_State_PreFecBer::instant() const {
  const ::ywrapper::Decimal64Value* p = instant_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.PreFecBer.instant)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::Decimal64Value*>(
      &::ywrapper::_Decimal64Value_default_instance_);
}
inline ::ywrapper::Decimal64Value* TerminalDevice_LogicalChannels_Channel_Otn_State_PreFecBer::release_instant() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.PreFecBer.instant)
  
  ::ywrapper::Decimal64Value* temp = instant_;
  instant_ = NULL;
  return temp;
}
inline ::ywrapper::Decimal64Value* TerminalDevice_LogicalChannels_Channel_Otn_State_PreFecBer::mutable_instant() {
  
  if (instant_ == NULL) {
    instant_ = new ::ywrapper::Decimal64Value;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.PreFecBer.instant)
  return instant_;
}
inline void TerminalDevice_LogicalChannels_Channel_Otn_State_PreFecBer::set_allocated_instant(::ywrapper::Decimal64Value* instant) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(instant_);
  }
  if (instant) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      instant = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, instant, submessage_arena);
    }
    
  } else {
    
  }
  instant_ = instant;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.PreFecBer.instant)
}

// .ywrapper.Decimal64Value max = 206102591 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/state/pre-fec-ber/max"];
inline bool TerminalDevice_LogicalChannels_Channel_Otn_State_PreFecBer::has_max() const {
  return this != internal_default_instance() && max_ != NULL;
}
inline const ::ywrapper::Decimal64Value& TerminalDevice_LogicalChannels_Channel_Otn_State_PreFecBer::max() const {
  const ::ywrapper::Decimal64Value* p = max_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.PreFecBer.max)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::Decimal64Value*>(
      &::ywrapper::_Decimal64Value_default_instance_);
}
inline ::ywrapper::Decimal64Value* TerminalDevice_LogicalChannels_Channel_Otn_State_PreFecBer::release_max() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.PreFecBer.max)
  
  ::ywrapper::Decimal64Value* temp = max_;
  max_ = NULL;
  return temp;
}
inline ::ywrapper::Decimal64Value* TerminalDevice_LogicalChannels_Channel_Otn_State_PreFecBer::mutable_max() {
  
  if (max_ == NULL) {
    max_ = new ::ywrapper::Decimal64Value;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.PreFecBer.max)
  return max_;
}
inline void TerminalDevice_LogicalChannels_Channel_Otn_State_PreFecBer::set_allocated_max(::ywrapper::Decimal64Value* max) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(max_);
  }
  if (max) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      max = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, max, submessage_arena);
    }
    
  } else {
    
  }
  max_ = max;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.PreFecBer.max)
}

// .ywrapper.Decimal64Value min = 71881665 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/state/pre-fec-ber/min"];
inline bool TerminalDevice_LogicalChannels_Channel_Otn_State_PreFecBer::has_min() const {
  return this != internal_default_instance() && min_ != NULL;
}
inline const ::ywrapper::Decimal64Value& TerminalDevice_LogicalChannels_Channel_Otn_State_PreFecBer::min() const {
  const ::ywrapper::Decimal64Value* p = min_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.PreFecBer.min)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::Decimal64Value*>(
      &::ywrapper::_Decimal64Value_default_instance_);
}
inline ::ywrapper::Decimal64Value* TerminalDevice_LogicalChannels_Channel_Otn_State_PreFecBer::release_min() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.PreFecBer.min)
  
  ::ywrapper::Decimal64Value* temp = min_;
  min_ = NULL;
  return temp;
}
inline ::ywrapper::Decimal64Value* TerminalDevice_LogicalChannels_Channel_Otn_State_PreFecBer::mutable_min() {
  
  if (min_ == NULL) {
    min_ = new ::ywrapper::Decimal64Value;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.PreFecBer.min)
  return min_;
}
inline void TerminalDevice_LogicalChannels_Channel_Otn_State_PreFecBer::set_allocated_min(::ywrapper::Decimal64Value* min) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(min_);
  }
  if (min) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      min = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, min, submessage_arena);
    }
    
  } else {
    
  }
  min_ = min;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.PreFecBer.min)
}

// -------------------------------------------------------------------

// TerminalDevice_LogicalChannels_Channel_Otn_State_QValue

// .ywrapper.Decimal64Value avg = 439703990 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/state/q-value/avg"];
inline bool TerminalDevice_LogicalChannels_Channel_Otn_State_QValue::has_avg() const {
  return this != internal_default_instance() && avg_ != NULL;
}
inline const ::ywrapper::Decimal64Value& TerminalDevice_LogicalChannels_Channel_Otn_State_QValue::avg() const {
  const ::ywrapper::Decimal64Value* p = avg_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.QValue.avg)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::Decimal64Value*>(
      &::ywrapper::_Decimal64Value_default_instance_);
}
inline ::ywrapper::Decimal64Value* TerminalDevice_LogicalChannels_Channel_Otn_State_QValue::release_avg() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.QValue.avg)
  
  ::ywrapper::Decimal64Value* temp = avg_;
  avg_ = NULL;
  return temp;
}
inline ::ywrapper::Decimal64Value* TerminalDevice_LogicalChannels_Channel_Otn_State_QValue::mutable_avg() {
  
  if (avg_ == NULL) {
    avg_ = new ::ywrapper::Decimal64Value;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.QValue.avg)
  return avg_;
}
inline void TerminalDevice_LogicalChannels_Channel_Otn_State_QValue::set_allocated_avg(::ywrapper::Decimal64Value* avg) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(avg_);
  }
  if (avg) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      avg = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, avg, submessage_arena);
    }
    
  } else {
    
  }
  avg_ = avg;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.QValue.avg)
}

// .ywrapper.Decimal64Value instant = 400113333 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/state/q-value/instant"];
inline bool TerminalDevice_LogicalChannels_Channel_Otn_State_QValue::has_instant() const {
  return this != internal_default_instance() && instant_ != NULL;
}
inline const ::ywrapper::Decimal64Value& TerminalDevice_LogicalChannels_Channel_Otn_State_QValue::instant() const {
  const ::ywrapper::Decimal64Value* p = instant_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.QValue.instant)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::Decimal64Value*>(
      &::ywrapper::_Decimal64Value_default_instance_);
}
inline ::ywrapper::Decimal64Value* TerminalDevice_LogicalChannels_Channel_Otn_State_QValue::release_instant() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.QValue.instant)
  
  ::ywrapper::Decimal64Value* temp = instant_;
  instant_ = NULL;
  return temp;
}
inline ::ywrapper::Decimal64Value* TerminalDevice_LogicalChannels_Channel_Otn_State_QValue::mutable_instant() {
  
  if (instant_ == NULL) {
    instant_ = new ::ywrapper::Decimal64Value;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.QValue.instant)
  return instant_;
}
inline void TerminalDevice_LogicalChannels_Channel_Otn_State_QValue::set_allocated_instant(::ywrapper::Decimal64Value* instant) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(instant_);
  }
  if (instant) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      instant = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, instant, submessage_arena);
    }
    
  } else {
    
  }
  instant_ = instant;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.QValue.instant)
}

// .ywrapper.UintValue interval = 388690377 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/state/q-value/interval"];
inline bool TerminalDevice_LogicalChannels_Channel_Otn_State_QValue::has_interval() const {
  return this != internal_default_instance() && interval_ != NULL;
}
inline const ::ywrapper::UintValue& TerminalDevice_LogicalChannels_Channel_Otn_State_QValue::interval() const {
  const ::ywrapper::UintValue* p = interval_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.QValue.interval)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* TerminalDevice_LogicalChannels_Channel_Otn_State_QValue::release_interval() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.QValue.interval)
  
  ::ywrapper::UintValue* temp = interval_;
  interval_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* TerminalDevice_LogicalChannels_Channel_Otn_State_QValue::mutable_interval() {
  
  if (interval_ == NULL) {
    interval_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.QValue.interval)
  return interval_;
}
inline void TerminalDevice_LogicalChannels_Channel_Otn_State_QValue::set_allocated_interval(::ywrapper::UintValue* interval) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(interval_);
  }
  if (interval) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      interval = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, interval, submessage_arena);
    }
    
  } else {
    
  }
  interval_ = interval;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.QValue.interval)
}

// .ywrapper.Decimal64Value max = 51963280 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/state/q-value/max"];
inline bool TerminalDevice_LogicalChannels_Channel_Otn_State_QValue::has_max() const {
  return this != internal_default_instance() && max_ != NULL;
}
inline const ::ywrapper::Decimal64Value& TerminalDevice_LogicalChannels_Channel_Otn_State_QValue::max() const {
  const ::ywrapper::Decimal64Value* p = max_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.QValue.max)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::Decimal64Value*>(
      &::ywrapper::_Decimal64Value_default_instance_);
}
inline ::ywrapper::Decimal64Value* TerminalDevice_LogicalChannels_Channel_Otn_State_QValue::release_max() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.QValue.max)
  
  ::ywrapper::Decimal64Value* temp = max_;
  max_ = NULL;
  return temp;
}
inline ::ywrapper::Decimal64Value* TerminalDevice_LogicalChannels_Channel_Otn_State_QValue::mutable_max() {
  
  if (max_ == NULL) {
    max_ = new ::ywrapper::Decimal64Value;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.QValue.max)
  return max_;
}
inline void TerminalDevice_LogicalChannels_Channel_Otn_State_QValue::set_allocated_max(::ywrapper::Decimal64Value* max) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(max_);
  }
  if (max) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      max = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, max, submessage_arena);
    }
    
  } else {
    
  }
  max_ = max;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.QValue.max)
}

// .ywrapper.Decimal64Value min = 454613310 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/state/q-value/min"];
inline bool TerminalDevice_LogicalChannels_Channel_Otn_State_QValue::has_min() const {
  return this != internal_default_instance() && min_ != NULL;
}
inline const ::ywrapper::Decimal64Value& TerminalDevice_LogicalChannels_Channel_Otn_State_QValue::min() const {
  const ::ywrapper::Decimal64Value* p = min_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.QValue.min)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::Decimal64Value*>(
      &::ywrapper::_Decimal64Value_default_instance_);
}
inline ::ywrapper::Decimal64Value* TerminalDevice_LogicalChannels_Channel_Otn_State_QValue::release_min() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.QValue.min)
  
  ::ywrapper::Decimal64Value* temp = min_;
  min_ = NULL;
  return temp;
}
inline ::ywrapper::Decimal64Value* TerminalDevice_LogicalChannels_Channel_Otn_State_QValue::mutable_min() {
  
  if (min_ == NULL) {
    min_ = new ::ywrapper::Decimal64Value;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.QValue.min)
  return min_;
}
inline void TerminalDevice_LogicalChannels_Channel_Otn_State_QValue::set_allocated_min(::ywrapper::Decimal64Value* min) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(min_);
  }
  if (min) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      min = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, min, submessage_arena);
    }
    
  } else {
    
  }
  min_ = min;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.QValue.min)
}

// -------------------------------------------------------------------

// TerminalDevice_LogicalChannels_Channel_Otn_State

// .ywrapper.UintValue background_block_errors = 225465906 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/state/background-block-errors"];
inline bool TerminalDevice_LogicalChannels_Channel_Otn_State::has_background_block_errors() const {
  return this != internal_default_instance() && background_block_errors_ != NULL;
}
inline const ::ywrapper::UintValue& TerminalDevice_LogicalChannels_Channel_Otn_State::background_block_errors() const {
  const ::ywrapper::UintValue* p = background_block_errors_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.background_block_errors)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* TerminalDevice_LogicalChannels_Channel_Otn_State::release_background_block_errors() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.background_block_errors)
  
  ::ywrapper::UintValue* temp = background_block_errors_;
  background_block_errors_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* TerminalDevice_LogicalChannels_Channel_Otn_State::mutable_background_block_errors() {
  
  if (background_block_errors_ == NULL) {
    background_block_errors_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.background_block_errors)
  return background_block_errors_;
}
inline void TerminalDevice_LogicalChannels_Channel_Otn_State::set_allocated_background_block_errors(::ywrapper::UintValue* background_block_errors) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(background_block_errors_);
  }
  if (background_block_errors) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      background_block_errors = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, background_block_errors, submessage_arena);
    }
    
  } else {
    
  }
  background_block_errors_ = background_block_errors;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.background_block_errors)
}

// .ywrapper.UintValue code_violations = 15333406 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/state/code-violations"];
inline bool TerminalDevice_LogicalChannels_Channel_Otn_State::has_code_violations() const {
  return this != internal_default_instance() && code_violations_ != NULL;
}
inline const ::ywrapper::UintValue& TerminalDevice_LogicalChannels_Channel_Otn_State::code_violations() const {
  const ::ywrapper::UintValue* p = code_violations_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.code_violations)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* TerminalDevice_LogicalChannels_Channel_Otn_State::release_code_violations() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.code_violations)
  
  ::ywrapper::UintValue* temp = code_violations_;
  code_violations_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* TerminalDevice_LogicalChannels_Channel_Otn_State::mutable_code_violations() {
  
  if (code_violations_ == NULL) {
    code_violations_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.code_violations)
  return code_violations_;
}
inline void TerminalDevice_LogicalChannels_Channel_Otn_State::set_allocated_code_violations(::ywrapper::UintValue* code_violations) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(code_violations_);
  }
  if (code_violations) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      code_violations = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, code_violations, submessage_arena);
    }
    
  } else {
    
  }
  code_violations_ = code_violations;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.code_violations)
}

// .ywrapper.UintValue errored_seconds = 101254023 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/state/errored-seconds"];
inline bool TerminalDevice_LogicalChannels_Channel_Otn_State::has_errored_seconds() const {
  return this != internal_default_instance() && errored_seconds_ != NULL;
}
inline const ::ywrapper::UintValue& TerminalDevice_LogicalChannels_Channel_Otn_State::errored_seconds() const {
  const ::ywrapper::UintValue* p = errored_seconds_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.errored_seconds)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* TerminalDevice_LogicalChannels_Channel_Otn_State::release_errored_seconds() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.errored_seconds)
  
  ::ywrapper::UintValue* temp = errored_seconds_;
  errored_seconds_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* TerminalDevice_LogicalChannels_Channel_Otn_State::mutable_errored_seconds() {
  
  if (errored_seconds_ == NULL) {
    errored_seconds_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.errored_seconds)
  return errored_seconds_;
}
inline void TerminalDevice_LogicalChannels_Channel_Otn_State::set_allocated_errored_seconds(::ywrapper::UintValue* errored_seconds) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(errored_seconds_);
  }
  if (errored_seconds) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      errored_seconds = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, errored_seconds, submessage_arena);
    }
    
  } else {
    
  }
  errored_seconds_ = errored_seconds;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.errored_seconds)
}

// .openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.Esnr esnr = 477535494 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/state/esnr"];
inline bool TerminalDevice_LogicalChannels_Channel_Otn_State::has_esnr() const {
  return this != internal_default_instance() && esnr_ != NULL;
}
inline void TerminalDevice_LogicalChannels_Channel_Otn_State::clear_esnr() {
  if (GetArenaNoVirtual() == NULL && esnr_ != NULL) {
    delete esnr_;
  }
  esnr_ = NULL;
}
inline const ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Otn_State_Esnr& TerminalDevice_LogicalChannels_Channel_Otn_State::esnr() const {
  const ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Otn_State_Esnr* p = esnr_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.esnr)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Otn_State_Esnr*>(
      &::openconfig::openconfig_terminal_device::_TerminalDevice_LogicalChannels_Channel_Otn_State_Esnr_default_instance_);
}
inline ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Otn_State_Esnr* TerminalDevice_LogicalChannels_Channel_Otn_State::release_esnr() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.esnr)
  
  ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Otn_State_Esnr* temp = esnr_;
  esnr_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Otn_State_Esnr* TerminalDevice_LogicalChannels_Channel_Otn_State::mutable_esnr() {
  
  if (esnr_ == NULL) {
    esnr_ = new ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Otn_State_Esnr;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.esnr)
  return esnr_;
}
inline void TerminalDevice_LogicalChannels_Channel_Otn_State::set_allocated_esnr(::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Otn_State_Esnr* esnr) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete esnr_;
  }
  if (esnr) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      esnr = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, esnr, submessage_arena);
    }
    
  } else {
    
  }
  esnr_ = esnr;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.esnr)
}

// .ywrapper.UintValue fec_corrected_bits = 347445731 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/state/fec-corrected-bits"];
inline bool TerminalDevice_LogicalChannels_Channel_Otn_State::has_fec_corrected_bits() const {
  return this != internal_default_instance() && fec_corrected_bits_ != NULL;
}
inline const ::ywrapper::UintValue& TerminalDevice_LogicalChannels_Channel_Otn_State::fec_corrected_bits() const {
  const ::ywrapper::UintValue* p = fec_corrected_bits_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.fec_corrected_bits)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* TerminalDevice_LogicalChannels_Channel_Otn_State::release_fec_corrected_bits() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.fec_corrected_bits)
  
  ::ywrapper::UintValue* temp = fec_corrected_bits_;
  fec_corrected_bits_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* TerminalDevice_LogicalChannels_Channel_Otn_State::mutable_fec_corrected_bits() {
  
  if (fec_corrected_bits_ == NULL) {
    fec_corrected_bits_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.fec_corrected_bits)
  return fec_corrected_bits_;
}
inline void TerminalDevice_LogicalChannels_Channel_Otn_State::set_allocated_fec_corrected_bits(::ywrapper::UintValue* fec_corrected_bits) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(fec_corrected_bits_);
  }
  if (fec_corrected_bits) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      fec_corrected_bits = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, fec_corrected_bits, submessage_arena);
    }
    
  } else {
    
  }
  fec_corrected_bits_ = fec_corrected_bits;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.fec_corrected_bits)
}

// .ywrapper.UintValue fec_corrected_bytes = 475965836 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/state/fec-corrected-bytes"];
inline bool TerminalDevice_LogicalChannels_Channel_Otn_State::has_fec_corrected_bytes() const {
  return this != internal_default_instance() && fec_corrected_bytes_ != NULL;
}
inline const ::ywrapper::UintValue& TerminalDevice_LogicalChannels_Channel_Otn_State::fec_corrected_bytes() const {
  const ::ywrapper::UintValue* p = fec_corrected_bytes_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.fec_corrected_bytes)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* TerminalDevice_LogicalChannels_Channel_Otn_State::release_fec_corrected_bytes() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.fec_corrected_bytes)
  
  ::ywrapper::UintValue* temp = fec_corrected_bytes_;
  fec_corrected_bytes_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* TerminalDevice_LogicalChannels_Channel_Otn_State::mutable_fec_corrected_bytes() {
  
  if (fec_corrected_bytes_ == NULL) {
    fec_corrected_bytes_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.fec_corrected_bytes)
  return fec_corrected_bytes_;
}
inline void TerminalDevice_LogicalChannels_Channel_Otn_State::set_allocated_fec_corrected_bytes(::ywrapper::UintValue* fec_corrected_bytes) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(fec_corrected_bytes_);
  }
  if (fec_corrected_bytes) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      fec_corrected_bytes = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, fec_corrected_bytes, submessage_arena);
    }
    
  } else {
    
  }
  fec_corrected_bytes_ = fec_corrected_bytes;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.fec_corrected_bytes)
}

// .ywrapper.UintValue fec_uncorrectable_words = 189812742 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/state/fec-uncorrectable-words"];
inline bool TerminalDevice_LogicalChannels_Channel_Otn_State::has_fec_uncorrectable_words() const {
  return this != internal_default_instance() && fec_uncorrectable_words_ != NULL;
}
inline const ::ywrapper::UintValue& TerminalDevice_LogicalChannels_Channel_Otn_State::fec_uncorrectable_words() const {
  const ::ywrapper::UintValue* p = fec_uncorrectable_words_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.fec_uncorrectable_words)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* TerminalDevice_LogicalChannels_Channel_Otn_State::release_fec_uncorrectable_words() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.fec_uncorrectable_words)
  
  ::ywrapper::UintValue* temp = fec_uncorrectable_words_;
  fec_uncorrectable_words_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* TerminalDevice_LogicalChannels_Channel_Otn_State::mutable_fec_uncorrectable_words() {
  
  if (fec_uncorrectable_words_ == NULL) {
    fec_uncorrectable_words_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.fec_uncorrectable_words)
  return fec_uncorrectable_words_;
}
inline void TerminalDevice_LogicalChannels_Channel_Otn_State::set_allocated_fec_uncorrectable_words(::ywrapper::UintValue* fec_uncorrectable_words) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(fec_uncorrectable_words_);
  }
  if (fec_uncorrectable_words) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      fec_uncorrectable_words = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, fec_uncorrectable_words, submessage_arena);
    }
    
  } else {
    
  }
  fec_uncorrectable_words_ = fec_uncorrectable_words;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.fec_uncorrectable_words)
}

// .openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.PostFecBer post_fec_ber = 512618601 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/state/post-fec-ber"];
inline bool TerminalDevice_LogicalChannels_Channel_Otn_State::has_post_fec_ber() const {
  return this != internal_default_instance() && post_fec_ber_ != NULL;
}
inline void TerminalDevice_LogicalChannels_Channel_Otn_State::clear_post_fec_ber() {
  if (GetArenaNoVirtual() == NULL && post_fec_ber_ != NULL) {
    delete post_fec_ber_;
  }
  post_fec_ber_ = NULL;
}
inline const ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Otn_State_PostFecBer& TerminalDevice_LogicalChannels_Channel_Otn_State::post_fec_ber() const {
  const ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Otn_State_PostFecBer* p = post_fec_ber_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.post_fec_ber)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Otn_State_PostFecBer*>(
      &::openconfig::openconfig_terminal_device::_TerminalDevice_LogicalChannels_Channel_Otn_State_PostFecBer_default_instance_);
}
inline ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Otn_State_PostFecBer* TerminalDevice_LogicalChannels_Channel_Otn_State::release_post_fec_ber() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.post_fec_ber)
  
  ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Otn_State_PostFecBer* temp = post_fec_ber_;
  post_fec_ber_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Otn_State_PostFecBer* TerminalDevice_LogicalChannels_Channel_Otn_State::mutable_post_fec_ber() {
  
  if (post_fec_ber_ == NULL) {
    post_fec_ber_ = new ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Otn_State_PostFecBer;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.post_fec_ber)
  return post_fec_ber_;
}
inline void TerminalDevice_LogicalChannels_Channel_Otn_State::set_allocated_post_fec_ber(::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Otn_State_PostFecBer* post_fec_ber) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete post_fec_ber_;
  }
  if (post_fec_ber) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      post_fec_ber = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, post_fec_ber, submessage_arena);
    }
    
  } else {
    
  }
  post_fec_ber_ = post_fec_ber;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.post_fec_ber)
}

// .openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.PreFecBer pre_fec_ber = 24995908 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/state/pre-fec-ber"];
inline bool TerminalDevice_LogicalChannels_Channel_Otn_State::has_pre_fec_ber() const {
  return this != internal_default_instance() && pre_fec_ber_ != NULL;
}
inline void TerminalDevice_LogicalChannels_Channel_Otn_State::clear_pre_fec_ber() {
  if (GetArenaNoVirtual() == NULL && pre_fec_ber_ != NULL) {
    delete pre_fec_ber_;
  }
  pre_fec_ber_ = NULL;
}
inline const ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Otn_State_PreFecBer& TerminalDevice_LogicalChannels_Channel_Otn_State::pre_fec_ber() const {
  const ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Otn_State_PreFecBer* p = pre_fec_ber_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.pre_fec_ber)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Otn_State_PreFecBer*>(
      &::openconfig::openconfig_terminal_device::_TerminalDevice_LogicalChannels_Channel_Otn_State_PreFecBer_default_instance_);
}
inline ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Otn_State_PreFecBer* TerminalDevice_LogicalChannels_Channel_Otn_State::release_pre_fec_ber() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.pre_fec_ber)
  
  ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Otn_State_PreFecBer* temp = pre_fec_ber_;
  pre_fec_ber_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Otn_State_PreFecBer* TerminalDevice_LogicalChannels_Channel_Otn_State::mutable_pre_fec_ber() {
  
  if (pre_fec_ber_ == NULL) {
    pre_fec_ber_ = new ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Otn_State_PreFecBer;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.pre_fec_ber)
  return pre_fec_ber_;
}
inline void TerminalDevice_LogicalChannels_Channel_Otn_State::set_allocated_pre_fec_ber(::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Otn_State_PreFecBer* pre_fec_ber) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete pre_fec_ber_;
  }
  if (pre_fec_ber) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      pre_fec_ber = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, pre_fec_ber, submessage_arena);
    }
    
  } else {
    
  }
  pre_fec_ber_ = pre_fec_ber;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.pre_fec_ber)
}

// .openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.QValue q_value = 155046327 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/state/q-value"];
inline bool TerminalDevice_LogicalChannels_Channel_Otn_State::has_q_value() const {
  return this != internal_default_instance() && q_value_ != NULL;
}
inline void TerminalDevice_LogicalChannels_Channel_Otn_State::clear_q_value() {
  if (GetArenaNoVirtual() == NULL && q_value_ != NULL) {
    delete q_value_;
  }
  q_value_ = NULL;
}
inline const ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Otn_State_QValue& TerminalDevice_LogicalChannels_Channel_Otn_State::q_value() const {
  const ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Otn_State_QValue* p = q_value_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.q_value)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Otn_State_QValue*>(
      &::openconfig::openconfig_terminal_device::_TerminalDevice_LogicalChannels_Channel_Otn_State_QValue_default_instance_);
}
inline ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Otn_State_QValue* TerminalDevice_LogicalChannels_Channel_Otn_State::release_q_value() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.q_value)
  
  ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Otn_State_QValue* temp = q_value_;
  q_value_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Otn_State_QValue* TerminalDevice_LogicalChannels_Channel_Otn_State::mutable_q_value() {
  
  if (q_value_ == NULL) {
    q_value_ = new ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Otn_State_QValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.q_value)
  return q_value_;
}
inline void TerminalDevice_LogicalChannels_Channel_Otn_State::set_allocated_q_value(::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Otn_State_QValue* q_value) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete q_value_;
  }
  if (q_value) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      q_value = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, q_value, submessage_arena);
    }
    
  } else {
    
  }
  q_value_ = q_value;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.q_value)
}

// .ywrapper.StringValue rdi_msg = 372221681 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/state/rdi-msg"];
inline bool TerminalDevice_LogicalChannels_Channel_Otn_State::has_rdi_msg() const {
  return this != internal_default_instance() && rdi_msg_ != NULL;
}
inline const ::ywrapper::StringValue& TerminalDevice_LogicalChannels_Channel_Otn_State::rdi_msg() const {
  const ::ywrapper::StringValue* p = rdi_msg_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.rdi_msg)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::StringValue*>(
      &::ywrapper::_StringValue_default_instance_);
}
inline ::ywrapper::StringValue* TerminalDevice_LogicalChannels_Channel_Otn_State::release_rdi_msg() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.rdi_msg)
  
  ::ywrapper::StringValue* temp = rdi_msg_;
  rdi_msg_ = NULL;
  return temp;
}
inline ::ywrapper::StringValue* TerminalDevice_LogicalChannels_Channel_Otn_State::mutable_rdi_msg() {
  
  if (rdi_msg_ == NULL) {
    rdi_msg_ = new ::ywrapper::StringValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.rdi_msg)
  return rdi_msg_;
}
inline void TerminalDevice_LogicalChannels_Channel_Otn_State::set_allocated_rdi_msg(::ywrapper::StringValue* rdi_msg) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(rdi_msg_);
  }
  if (rdi_msg) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      rdi_msg = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, rdi_msg, submessage_arena);
    }
    
  } else {
    
  }
  rdi_msg_ = rdi_msg;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.rdi_msg)
}

// .ywrapper.UintValue severely_errored_seconds = 17854709 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/state/severely-errored-seconds"];
inline bool TerminalDevice_LogicalChannels_Channel_Otn_State::has_severely_errored_seconds() const {
  return this != internal_default_instance() && severely_errored_seconds_ != NULL;
}
inline const ::ywrapper::UintValue& TerminalDevice_LogicalChannels_Channel_Otn_State::severely_errored_seconds() const {
  const ::ywrapper::UintValue* p = severely_errored_seconds_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.severely_errored_seconds)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* TerminalDevice_LogicalChannels_Channel_Otn_State::release_severely_errored_seconds() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.severely_errored_seconds)
  
  ::ywrapper::UintValue* temp = severely_errored_seconds_;
  severely_errored_seconds_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* TerminalDevice_LogicalChannels_Channel_Otn_State::mutable_severely_errored_seconds() {
  
  if (severely_errored_seconds_ == NULL) {
    severely_errored_seconds_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.severely_errored_seconds)
  return severely_errored_seconds_;
}
inline void TerminalDevice_LogicalChannels_Channel_Otn_State::set_allocated_severely_errored_seconds(::ywrapper::UintValue* severely_errored_seconds) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(severely_errored_seconds_);
  }
  if (severely_errored_seconds) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      severely_errored_seconds = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, severely_errored_seconds, submessage_arena);
    }
    
  } else {
    
  }
  severely_errored_seconds_ = severely_errored_seconds;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.severely_errored_seconds)
}

// .ywrapper.BoolValue tti_msg_auto = 195236077 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/state/tti-msg-auto"];
inline bool TerminalDevice_LogicalChannels_Channel_Otn_State::has_tti_msg_auto() const {
  return this != internal_default_instance() && tti_msg_auto_ != NULL;
}
inline const ::ywrapper::BoolValue& TerminalDevice_LogicalChannels_Channel_Otn_State::tti_msg_auto() const {
  const ::ywrapper::BoolValue* p = tti_msg_auto_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.tti_msg_auto)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::BoolValue*>(
      &::ywrapper::_BoolValue_default_instance_);
}
inline ::ywrapper::BoolValue* TerminalDevice_LogicalChannels_Channel_Otn_State::release_tti_msg_auto() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.tti_msg_auto)
  
  ::ywrapper::BoolValue* temp = tti_msg_auto_;
  tti_msg_auto_ = NULL;
  return temp;
}
inline ::ywrapper::BoolValue* TerminalDevice_LogicalChannels_Channel_Otn_State::mutable_tti_msg_auto() {
  
  if (tti_msg_auto_ == NULL) {
    tti_msg_auto_ = new ::ywrapper::BoolValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.tti_msg_auto)
  return tti_msg_auto_;
}
inline void TerminalDevice_LogicalChannels_Channel_Otn_State::set_allocated_tti_msg_auto(::ywrapper::BoolValue* tti_msg_auto) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(tti_msg_auto_);
  }
  if (tti_msg_auto) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      tti_msg_auto = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, tti_msg_auto, submessage_arena);
    }
    
  } else {
    
  }
  tti_msg_auto_ = tti_msg_auto;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.tti_msg_auto)
}

// .ywrapper.StringValue tti_msg_expected = 50568880 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/state/tti-msg-expected"];
inline bool TerminalDevice_LogicalChannels_Channel_Otn_State::has_tti_msg_expected() const {
  return this != internal_default_instance() && tti_msg_expected_ != NULL;
}
inline const ::ywrapper::StringValue& TerminalDevice_LogicalChannels_Channel_Otn_State::tti_msg_expected() const {
  const ::ywrapper::StringValue* p = tti_msg_expected_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.tti_msg_expected)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::StringValue*>(
      &::ywrapper::_StringValue_default_instance_);
}
inline ::ywrapper::StringValue* TerminalDevice_LogicalChannels_Channel_Otn_State::release_tti_msg_expected() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.tti_msg_expected)
  
  ::ywrapper::StringValue* temp = tti_msg_expected_;
  tti_msg_expected_ = NULL;
  return temp;
}
inline ::ywrapper::StringValue* TerminalDevice_LogicalChannels_Channel_Otn_State::mutable_tti_msg_expected() {
  
  if (tti_msg_expected_ == NULL) {
    tti_msg_expected_ = new ::ywrapper::StringValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.tti_msg_expected)
  return tti_msg_expected_;
}
inline void TerminalDevice_LogicalChannels_Channel_Otn_State::set_allocated_tti_msg_expected(::ywrapper::StringValue* tti_msg_expected) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(tti_msg_expected_);
  }
  if (tti_msg_expected) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      tti_msg_expected = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, tti_msg_expected, submessage_arena);
    }
    
  } else {
    
  }
  tti_msg_expected_ = tti_msg_expected;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.tti_msg_expected)
}

// .ywrapper.StringValue tti_msg_recv = 51151448 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/state/tti-msg-recv"];
inline bool TerminalDevice_LogicalChannels_Channel_Otn_State::has_tti_msg_recv() const {
  return this != internal_default_instance() && tti_msg_recv_ != NULL;
}
inline const ::ywrapper::StringValue& TerminalDevice_LogicalChannels_Channel_Otn_State::tti_msg_recv() const {
  const ::ywrapper::StringValue* p = tti_msg_recv_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.tti_msg_recv)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::StringValue*>(
      &::ywrapper::_StringValue_default_instance_);
}
inline ::ywrapper::StringValue* TerminalDevice_LogicalChannels_Channel_Otn_State::release_tti_msg_recv() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.tti_msg_recv)
  
  ::ywrapper::StringValue* temp = tti_msg_recv_;
  tti_msg_recv_ = NULL;
  return temp;
}
inline ::ywrapper::StringValue* TerminalDevice_LogicalChannels_Channel_Otn_State::mutable_tti_msg_recv() {
  
  if (tti_msg_recv_ == NULL) {
    tti_msg_recv_ = new ::ywrapper::StringValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.tti_msg_recv)
  return tti_msg_recv_;
}
inline void TerminalDevice_LogicalChannels_Channel_Otn_State::set_allocated_tti_msg_recv(::ywrapper::StringValue* tti_msg_recv) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(tti_msg_recv_);
  }
  if (tti_msg_recv) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      tti_msg_recv = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, tti_msg_recv, submessage_arena);
    }
    
  } else {
    
  }
  tti_msg_recv_ = tti_msg_recv;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.tti_msg_recv)
}

// .ywrapper.StringValue tti_msg_transmit = 138432560 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/state/tti-msg-transmit"];
inline bool TerminalDevice_LogicalChannels_Channel_Otn_State::has_tti_msg_transmit() const {
  return this != internal_default_instance() && tti_msg_transmit_ != NULL;
}
inline const ::ywrapper::StringValue& TerminalDevice_LogicalChannels_Channel_Otn_State::tti_msg_transmit() const {
  const ::ywrapper::StringValue* p = tti_msg_transmit_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.tti_msg_transmit)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::StringValue*>(
      &::ywrapper::_StringValue_default_instance_);
}
inline ::ywrapper::StringValue* TerminalDevice_LogicalChannels_Channel_Otn_State::release_tti_msg_transmit() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.tti_msg_transmit)
  
  ::ywrapper::StringValue* temp = tti_msg_transmit_;
  tti_msg_transmit_ = NULL;
  return temp;
}
inline ::ywrapper::StringValue* TerminalDevice_LogicalChannels_Channel_Otn_State::mutable_tti_msg_transmit() {
  
  if (tti_msg_transmit_ == NULL) {
    tti_msg_transmit_ = new ::ywrapper::StringValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.tti_msg_transmit)
  return tti_msg_transmit_;
}
inline void TerminalDevice_LogicalChannels_Channel_Otn_State::set_allocated_tti_msg_transmit(::ywrapper::StringValue* tti_msg_transmit) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(tti_msg_transmit_);
  }
  if (tti_msg_transmit) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      tti_msg_transmit = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, tti_msg_transmit, submessage_arena);
    }
    
  } else {
    
  }
  tti_msg_transmit_ = tti_msg_transmit;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.tti_msg_transmit)
}

// .ywrapper.UintValue unavailable_seconds = 60512408 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/state/unavailable-seconds"];
inline bool TerminalDevice_LogicalChannels_Channel_Otn_State::has_unavailable_seconds() const {
  return this != internal_default_instance() && unavailable_seconds_ != NULL;
}
inline const ::ywrapper::UintValue& TerminalDevice_LogicalChannels_Channel_Otn_State::unavailable_seconds() const {
  const ::ywrapper::UintValue* p = unavailable_seconds_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.unavailable_seconds)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* TerminalDevice_LogicalChannels_Channel_Otn_State::release_unavailable_seconds() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.unavailable_seconds)
  
  ::ywrapper::UintValue* temp = unavailable_seconds_;
  unavailable_seconds_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* TerminalDevice_LogicalChannels_Channel_Otn_State::mutable_unavailable_seconds() {
  
  if (unavailable_seconds_ == NULL) {
    unavailable_seconds_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.unavailable_seconds)
  return unavailable_seconds_;
}
inline void TerminalDevice_LogicalChannels_Channel_Otn_State::set_allocated_unavailable_seconds(::ywrapper::UintValue* unavailable_seconds) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(unavailable_seconds_);
  }
  if (unavailable_seconds) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      unavailable_seconds = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, unavailable_seconds, submessage_arena);
    }
    
  } else {
    
  }
  unavailable_seconds_ = unavailable_seconds;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.unavailable_seconds)
}

// -------------------------------------------------------------------

// TerminalDevice_LogicalChannels_Channel_Otn

// .openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.Config config = 122922822 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/config"];
inline bool TerminalDevice_LogicalChannels_Channel_Otn::has_config() const {
  return this != internal_default_instance() && config_ != NULL;
}
inline void TerminalDevice_LogicalChannels_Channel_Otn::clear_config() {
  if (GetArenaNoVirtual() == NULL && config_ != NULL) {
    delete config_;
  }
  config_ = NULL;
}
inline const ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Otn_Config& TerminalDevice_LogicalChannels_Channel_Otn::config() const {
  const ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Otn_Config* p = config_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.config)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Otn_Config*>(
      &::openconfig::openconfig_terminal_device::_TerminalDevice_LogicalChannels_Channel_Otn_Config_default_instance_);
}
inline ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Otn_Config* TerminalDevice_LogicalChannels_Channel_Otn::release_config() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.config)
  
  ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Otn_Config* temp = config_;
  config_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Otn_Config* TerminalDevice_LogicalChannels_Channel_Otn::mutable_config() {
  
  if (config_ == NULL) {
    config_ = new ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Otn_Config;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.config)
  return config_;
}
inline void TerminalDevice_LogicalChannels_Channel_Otn::set_allocated_config(::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Otn_Config* config) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete config_;
  }
  if (config) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      config = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, config, submessage_arena);
    }
    
  } else {
    
  }
  config_ = config;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.config)
}

// .openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State state = 431686707 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/state"];
inline bool TerminalDevice_LogicalChannels_Channel_Otn::has_state() const {
  return this != internal_default_instance() && state_ != NULL;
}
inline void TerminalDevice_LogicalChannels_Channel_Otn::clear_state() {
  if (GetArenaNoVirtual() == NULL && state_ != NULL) {
    delete state_;
  }
  state_ = NULL;
}
inline const ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Otn_State& TerminalDevice_LogicalChannels_Channel_Otn::state() const {
  const ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Otn_State* p = state_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.state)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Otn_State*>(
      &::openconfig::openconfig_terminal_device::_TerminalDevice_LogicalChannels_Channel_Otn_State_default_instance_);
}
inline ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Otn_State* TerminalDevice_LogicalChannels_Channel_Otn::release_state() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.state)
  
  ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Otn_State* temp = state_;
  state_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Otn_State* TerminalDevice_LogicalChannels_Channel_Otn::mutable_state() {
  
  if (state_ == NULL) {
    state_ = new ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Otn_State;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.state)
  return state_;
}
inline void TerminalDevice_LogicalChannels_Channel_Otn::set_allocated_state(::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Otn_State* state) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete state_;
  }
  if (state) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      state = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, state, submessage_arena);
    }
    
  } else {
    
  }
  state_ = state;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.state)
}

// -------------------------------------------------------------------

// TerminalDevice_LogicalChannels_Channel_State

// .openconfig.enums.OpenconfigTerminalDeviceAdminStateType admin_state = 126844211 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/state/admin-state"];
inline void TerminalDevice_LogicalChannels_Channel_State::clear_admin_state() {
  admin_state_ = 0;
}
inline ::openconfig::enums::OpenconfigTerminalDeviceAdminStateType TerminalDevice_LogicalChannels_Channel_State::admin_state() const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.State.admin_state)
  return static_cast< ::openconfig::enums::OpenconfigTerminalDeviceAdminStateType >(admin_state_);
}
inline void TerminalDevice_LogicalChannels_Channel_State::set_admin_state(::openconfig::enums::OpenconfigTerminalDeviceAdminStateType value) {
  
  admin_state_ = value;
  // @@protoc_insertion_point(field_set:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.State.admin_state)
}

// .ywrapper.StringValue description = 272041836 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/state/description"];
inline bool TerminalDevice_LogicalChannels_Channel_State::has_description() const {
  return this != internal_default_instance() && description_ != NULL;
}
inline const ::ywrapper::StringValue& TerminalDevice_LogicalChannels_Channel_State::description() const {
  const ::ywrapper::StringValue* p = description_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.State.description)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::StringValue*>(
      &::ywrapper::_StringValue_default_instance_);
}
inline ::ywrapper::StringValue* TerminalDevice_LogicalChannels_Channel_State::release_description() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.State.description)
  
  ::ywrapper::StringValue* temp = description_;
  description_ = NULL;
  return temp;
}
inline ::ywrapper::StringValue* TerminalDevice_LogicalChannels_Channel_State::mutable_description() {
  
  if (description_ == NULL) {
    description_ = new ::ywrapper::StringValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.State.description)
  return description_;
}
inline void TerminalDevice_LogicalChannels_Channel_State::set_allocated_description(::ywrapper::StringValue* description) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(description_);
  }
  if (description) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      description = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, description, submessage_arena);
    }
    
  } else {
    
  }
  description_ = description;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.State.description)
}

// .ywrapper.UintValue index = 118301378 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/state/index"];
inline bool TerminalDevice_LogicalChannels_Channel_State::has_index() const {
  return this != internal_default_instance() && index_ != NULL;
}
inline const ::ywrapper::UintValue& TerminalDevice_LogicalChannels_Channel_State::index() const {
  const ::ywrapper::UintValue* p = index_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.State.index)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* TerminalDevice_LogicalChannels_Channel_State::release_index() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.State.index)
  
  ::ywrapper::UintValue* temp = index_;
  index_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* TerminalDevice_LogicalChannels_Channel_State::mutable_index() {
  
  if (index_ == NULL) {
    index_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.State.index)
  return index_;
}
inline void TerminalDevice_LogicalChannels_Channel_State::set_allocated_index(::ywrapper::UintValue* index) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(index_);
  }
  if (index) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      index = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, index, submessage_arena);
    }
    
  } else {
    
  }
  index_ = index;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.State.index)
}

// .openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.State.LinkState link_state = 264729618 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/state/link-state"];
inline void TerminalDevice_LogicalChannels_Channel_State::clear_link_state() {
  link_state_ = 0;
}
inline ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_State_LinkState TerminalDevice_LogicalChannels_Channel_State::link_state() const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.State.link_state)
  return static_cast< ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_State_LinkState >(link_state_);
}
inline void TerminalDevice_LogicalChannels_Channel_State::set_link_state(::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_State_LinkState value) {
  
  link_state_ = value;
  // @@protoc_insertion_point(field_set:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.State.link_state)
}

// .openconfig.enums.OpenconfigTransportTypesLOGICALELEMENTPROTOCOLTYPE logical_channel_type = 81142 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/state/logical-channel-type"];
inline void TerminalDevice_LogicalChannels_Channel_State::clear_logical_channel_type() {
  logical_channel_type_ = 0;
}
inline ::openconfig::enums::OpenconfigTransportTypesLOGICALELEMENTPROTOCOLTYPE TerminalDevice_LogicalChannels_Channel_State::logical_channel_type() const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.State.logical_channel_type)
  return static_cast< ::openconfig::enums::OpenconfigTransportTypesLOGICALELEMENTPROTOCOLTYPE >(logical_channel_type_);
}
inline void TerminalDevice_LogicalChannels_Channel_State::set_logical_channel_type(::openconfig::enums::OpenconfigTransportTypesLOGICALELEMENTPROTOCOLTYPE value) {
  
  logical_channel_type_ = value;
  // @@protoc_insertion_point(field_set:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.State.logical_channel_type)
}

// .openconfig.enums.OpenconfigTerminalDeviceLoopbackModeType loopback_mode = 525273123 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/state/loopback-mode"];
inline void TerminalDevice_LogicalChannels_Channel_State::clear_loopback_mode() {
  loopback_mode_ = 0;
}
inline ::openconfig::enums::OpenconfigTerminalDeviceLoopbackModeType TerminalDevice_LogicalChannels_Channel_State::loopback_mode() const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.State.loopback_mode)
  return static_cast< ::openconfig::enums::OpenconfigTerminalDeviceLoopbackModeType >(loopback_mode_);
}
inline void TerminalDevice_LogicalChannels_Channel_State::set_loopback_mode(::openconfig::enums::OpenconfigTerminalDeviceLoopbackModeType value) {
  
  loopback_mode_ = value;
  // @@protoc_insertion_point(field_set:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.State.loopback_mode)
}

// .openconfig.enums.OpenconfigTransportTypesTRIBUTARYRATECLASSTYPE rate_class = 232587011 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/state/rate-class"];
inline void TerminalDevice_LogicalChannels_Channel_State::clear_rate_class() {
  rate_class_ = 0;
}
inline ::openconfig::enums::OpenconfigTransportTypesTRIBUTARYRATECLASSTYPE TerminalDevice_LogicalChannels_Channel_State::rate_class() const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.State.rate_class)
  return static_cast< ::openconfig::enums::OpenconfigTransportTypesTRIBUTARYRATECLASSTYPE >(rate_class_);
}
inline void TerminalDevice_LogicalChannels_Channel_State::set_rate_class(::openconfig::enums::OpenconfigTransportTypesTRIBUTARYRATECLASSTYPE value) {
  
  rate_class_ = value;
  // @@protoc_insertion_point(field_set:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.State.rate_class)
}

// .ywrapper.BoolValue test_signal = 412085659 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/state/test-signal"];
inline bool TerminalDevice_LogicalChannels_Channel_State::has_test_signal() const {
  return this != internal_default_instance() && test_signal_ != NULL;
}
inline const ::ywrapper::BoolValue& TerminalDevice_LogicalChannels_Channel_State::test_signal() const {
  const ::ywrapper::BoolValue* p = test_signal_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.State.test_signal)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::BoolValue*>(
      &::ywrapper::_BoolValue_default_instance_);
}
inline ::ywrapper::BoolValue* TerminalDevice_LogicalChannels_Channel_State::release_test_signal() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.State.test_signal)
  
  ::ywrapper::BoolValue* temp = test_signal_;
  test_signal_ = NULL;
  return temp;
}
inline ::ywrapper::BoolValue* TerminalDevice_LogicalChannels_Channel_State::mutable_test_signal() {
  
  if (test_signal_ == NULL) {
    test_signal_ = new ::ywrapper::BoolValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.State.test_signal)
  return test_signal_;
}
inline void TerminalDevice_LogicalChannels_Channel_State::set_allocated_test_signal(::ywrapper::BoolValue* test_signal) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(test_signal_);
  }
  if (test_signal) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      test_signal = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, test_signal, submessage_arena);
    }
    
  } else {
    
  }
  test_signal_ = test_signal;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.State.test_signal)
}

// .openconfig.enums.OpenconfigTransportTypesTRIBUTARYPROTOCOLTYPE trib_protocol = 455160550 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/state/trib-protocol"];
inline void TerminalDevice_LogicalChannels_Channel_State::clear_trib_protocol() {
  trib_protocol_ = 0;
}
inline ::openconfig::enums::OpenconfigTransportTypesTRIBUTARYPROTOCOLTYPE TerminalDevice_LogicalChannels_Channel_State::trib_protocol() const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.State.trib_protocol)
  return static_cast< ::openconfig::enums::OpenconfigTransportTypesTRIBUTARYPROTOCOLTYPE >(trib_protocol_);
}
inline void TerminalDevice_LogicalChannels_Channel_State::set_trib_protocol(::openconfig::enums::OpenconfigTransportTypesTRIBUTARYPROTOCOLTYPE value) {
  
  trib_protocol_ = value;
  // @@protoc_insertion_point(field_set:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.State.trib_protocol)
}

// -------------------------------------------------------------------

// TerminalDevice_LogicalChannels_Channel

// .openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Config config = 375716998 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/config"];
inline bool TerminalDevice_LogicalChannels_Channel::has_config() const {
  return this != internal_default_instance() && config_ != NULL;
}
inline void TerminalDevice_LogicalChannels_Channel::clear_config() {
  if (GetArenaNoVirtual() == NULL && config_ != NULL) {
    delete config_;
  }
  config_ = NULL;
}
inline const ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Config& TerminalDevice_LogicalChannels_Channel::config() const {
  const ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Config* p = config_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.config)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Config*>(
      &::openconfig::openconfig_terminal_device::_TerminalDevice_LogicalChannels_Channel_Config_default_instance_);
}
inline ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Config* TerminalDevice_LogicalChannels_Channel::release_config() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.config)
  
  ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Config* temp = config_;
  config_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Config* TerminalDevice_LogicalChannels_Channel::mutable_config() {
  
  if (config_ == NULL) {
    config_ = new ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Config;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.config)
  return config_;
}
inline void TerminalDevice_LogicalChannels_Channel::set_allocated_config(::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Config* config) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete config_;
  }
  if (config) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      config = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, config, submessage_arena);
    }
    
  } else {
    
  }
  config_ = config;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.config)
}

// .openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Ethernet ethernet = 53959837 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/ethernet"];
inline bool TerminalDevice_LogicalChannels_Channel::has_ethernet() const {
  return this != internal_default_instance() && ethernet_ != NULL;
}
inline void TerminalDevice_LogicalChannels_Channel::clear_ethernet() {
  if (GetArenaNoVirtual() == NULL && ethernet_ != NULL) {
    delete ethernet_;
  }
  ethernet_ = NULL;
}
inline const ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Ethernet& TerminalDevice_LogicalChannels_Channel::ethernet() const {
  const ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Ethernet* p = ethernet_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.ethernet)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Ethernet*>(
      &::openconfig::openconfig_terminal_device::_TerminalDevice_LogicalChannels_Channel_Ethernet_default_instance_);
}
inline ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Ethernet* TerminalDevice_LogicalChannels_Channel::release_ethernet() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.ethernet)
  
  ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Ethernet* temp = ethernet_;
  ethernet_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Ethernet* TerminalDevice_LogicalChannels_Channel::mutable_ethernet() {
  
  if (ethernet_ == NULL) {
    ethernet_ = new ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Ethernet;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.ethernet)
  return ethernet_;
}
inline void TerminalDevice_LogicalChannels_Channel::set_allocated_ethernet(::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Ethernet* ethernet) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete ethernet_;
  }
  if (ethernet) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      ethernet = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, ethernet, submessage_arena);
    }
    
  } else {
    
  }
  ethernet_ = ethernet;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.ethernet)
}

// .openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Ingress ingress = 121136753 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/ingress"];
inline bool TerminalDevice_LogicalChannels_Channel::has_ingress() const {
  return this != internal_default_instance() && ingress_ != NULL;
}
inline void TerminalDevice_LogicalChannels_Channel::clear_ingress() {
  if (GetArenaNoVirtual() == NULL && ingress_ != NULL) {
    delete ingress_;
  }
  ingress_ = NULL;
}
inline const ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Ingress& TerminalDevice_LogicalChannels_Channel::ingress() const {
  const ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Ingress* p = ingress_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.ingress)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Ingress*>(
      &::openconfig::openconfig_terminal_device::_TerminalDevice_LogicalChannels_Channel_Ingress_default_instance_);
}
inline ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Ingress* TerminalDevice_LogicalChannels_Channel::release_ingress() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.ingress)
  
  ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Ingress* temp = ingress_;
  ingress_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Ingress* TerminalDevice_LogicalChannels_Channel::mutable_ingress() {
  
  if (ingress_ == NULL) {
    ingress_ = new ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Ingress;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.ingress)
  return ingress_;
}
inline void TerminalDevice_LogicalChannels_Channel::set_allocated_ingress(::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Ingress* ingress) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete ingress_;
  }
  if (ingress) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      ingress = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, ingress, submessage_arena);
    }
    
  } else {
    
  }
  ingress_ = ingress;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.ingress)
}

// .openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.LogicalChannelAssignments logical_channel_assignments = 383032150 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/logical-channel-assignments"];
inline bool TerminalDevice_LogicalChannels_Channel::has_logical_channel_assignments() const {
  return this != internal_default_instance() && logical_channel_assignments_ != NULL;
}
inline void TerminalDevice_LogicalChannels_Channel::clear_logical_channel_assignments() {
  if (GetArenaNoVirtual() == NULL && logical_channel_assignments_ != NULL) {
    delete logical_channel_assignments_;
  }
  logical_channel_assignments_ = NULL;
}
inline const ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments& TerminalDevice_LogicalChannels_Channel::logical_channel_assignments() const {
  const ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments* p = logical_channel_assignments_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.logical_channel_assignments)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments*>(
      &::openconfig::openconfig_terminal_device::_TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_default_instance_);
}
inline ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments* TerminalDevice_LogicalChannels_Channel::release_logical_channel_assignments() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.logical_channel_assignments)
  
  ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments* temp = logical_channel_assignments_;
  logical_channel_assignments_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments* TerminalDevice_LogicalChannels_Channel::mutable_logical_channel_assignments() {
  
  if (logical_channel_assignments_ == NULL) {
    logical_channel_assignments_ = new ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.logical_channel_assignments)
  return logical_channel_assignments_;
}
inline void TerminalDevice_LogicalChannels_Channel::set_allocated_logical_channel_assignments(::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments* logical_channel_assignments) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete logical_channel_assignments_;
  }
  if (logical_channel_assignments) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      logical_channel_assignments = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, logical_channel_assignments, submessage_arena);
    }
    
  } else {
    
  }
  logical_channel_assignments_ = logical_channel_assignments;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.logical_channel_assignments)
}

// .openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn otn = 25263425 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn"];
inline bool TerminalDevice_LogicalChannels_Channel::has_otn() const {
  return this != internal_default_instance() && otn_ != NULL;
}
inline void TerminalDevice_LogicalChannels_Channel::clear_otn() {
  if (GetArenaNoVirtual() == NULL && otn_ != NULL) {
    delete otn_;
  }
  otn_ = NULL;
}
inline const ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Otn& TerminalDevice_LogicalChannels_Channel::otn() const {
  const ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Otn* p = otn_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.otn)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Otn*>(
      &::openconfig::openconfig_terminal_device::_TerminalDevice_LogicalChannels_Channel_Otn_default_instance_);
}
inline ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Otn* TerminalDevice_LogicalChannels_Channel::release_otn() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.otn)
  
  ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Otn* temp = otn_;
  otn_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Otn* TerminalDevice_LogicalChannels_Channel::mutable_otn() {
  
  if (otn_ == NULL) {
    otn_ = new ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Otn;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.otn)
  return otn_;
}
inline void TerminalDevice_LogicalChannels_Channel::set_allocated_otn(::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Otn* otn) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete otn_;
  }
  if (otn) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      otn = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, otn, submessage_arena);
    }
    
  } else {
    
  }
  otn_ = otn;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.otn)
}

// .openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.State state = 310909555 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/state"];
inline bool TerminalDevice_LogicalChannels_Channel::has_state() const {
  return this != internal_default_instance() && state_ != NULL;
}
inline void TerminalDevice_LogicalChannels_Channel::clear_state() {
  if (GetArenaNoVirtual() == NULL && state_ != NULL) {
    delete state_;
  }
  state_ = NULL;
}
inline const ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_State& TerminalDevice_LogicalChannels_Channel::state() const {
  const ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_State* p = state_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.state)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_State*>(
      &::openconfig::openconfig_terminal_device::_TerminalDevice_LogicalChannels_Channel_State_default_instance_);
}
inline ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_State* TerminalDevice_LogicalChannels_Channel::release_state() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.state)
  
  ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_State* temp = state_;
  state_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_State* TerminalDevice_LogicalChannels_Channel::mutable_state() {
  
  if (state_ == NULL) {
    state_ = new ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_State;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.state)
  return state_;
}
inline void TerminalDevice_LogicalChannels_Channel::set_allocated_state(::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_State* state) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete state_;
  }
  if (state) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      state = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, state, submessage_arena);
    }
    
  } else {
    
  }
  state_ = state;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.state)
}

// -------------------------------------------------------------------

// TerminalDevice_LogicalChannels_ChannelKey

// uint64 index = 1 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/index"];
inline void TerminalDevice_LogicalChannels_ChannelKey::clear_index() {
  index_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 TerminalDevice_LogicalChannels_ChannelKey::index() const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.ChannelKey.index)
  return index_;
}
inline void TerminalDevice_LogicalChannels_ChannelKey::set_index(::google::protobuf::uint64 value) {
  
  index_ = value;
  // @@protoc_insertion_point(field_set:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.ChannelKey.index)
}

// .openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel channel = 2;
inline bool TerminalDevice_LogicalChannels_ChannelKey::has_channel() const {
  return this != internal_default_instance() && channel_ != NULL;
}
inline void TerminalDevice_LogicalChannels_ChannelKey::clear_channel() {
  if (GetArenaNoVirtual() == NULL && channel_ != NULL) {
    delete channel_;
  }
  channel_ = NULL;
}
inline const ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel& TerminalDevice_LogicalChannels_ChannelKey::channel() const {
  const ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel* p = channel_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.ChannelKey.channel)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel*>(
      &::openconfig::openconfig_terminal_device::_TerminalDevice_LogicalChannels_Channel_default_instance_);
}
inline ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel* TerminalDevice_LogicalChannels_ChannelKey::release_channel() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.ChannelKey.channel)
  
  ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel* temp = channel_;
  channel_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel* TerminalDevice_LogicalChannels_ChannelKey::mutable_channel() {
  
  if (channel_ == NULL) {
    channel_ = new ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.ChannelKey.channel)
  return channel_;
}
inline void TerminalDevice_LogicalChannels_ChannelKey::set_allocated_channel(::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel* channel) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete channel_;
  }
  if (channel) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      channel = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, channel, submessage_arena);
    }
    
  } else {
    
  }
  channel_ = channel;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.ChannelKey.channel)
}

// -------------------------------------------------------------------

// TerminalDevice_LogicalChannels

// repeated .openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.ChannelKey channel = 528903937 [(.yext.schemapath) = "/terminal-device/logical-channels/channel"];
inline int TerminalDevice_LogicalChannels::channel_size() const {
  return channel_.size();
}
inline void TerminalDevice_LogicalChannels::clear_channel() {
  channel_.Clear();
}
inline const ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_ChannelKey& TerminalDevice_LogicalChannels::channel(int index) const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.channel)
  return channel_.Get(index);
}
inline ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_ChannelKey* TerminalDevice_LogicalChannels::mutable_channel(int index) {
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.channel)
  return channel_.Mutable(index);
}
inline ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_ChannelKey* TerminalDevice_LogicalChannels::add_channel() {
  // @@protoc_insertion_point(field_add:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.channel)
  return channel_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_ChannelKey >*
TerminalDevice_LogicalChannels::mutable_channel() {
  // @@protoc_insertion_point(field_mutable_list:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.channel)
  return &channel_;
}
inline const ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_ChannelKey >&
TerminalDevice_LogicalChannels::channel() const {
  // @@protoc_insertion_point(field_list:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.channel)
  return channel_;
}

// -------------------------------------------------------------------

// TerminalDevice_OperationalModes_Mode_Config

// -------------------------------------------------------------------

// TerminalDevice_OperationalModes_Mode_State

// .ywrapper.StringValue description = 107447685 [(.yext.schemapath) = "/terminal-device/operational-modes/mode/state/description"];
inline bool TerminalDevice_OperationalModes_Mode_State::has_description() const {
  return this != internal_default_instance() && description_ != NULL;
}
inline const ::ywrapper::StringValue& TerminalDevice_OperationalModes_Mode_State::description() const {
  const ::ywrapper::StringValue* p = description_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_terminal_device.TerminalDevice.OperationalModes.Mode.State.description)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::StringValue*>(
      &::ywrapper::_StringValue_default_instance_);
}
inline ::ywrapper::StringValue* TerminalDevice_OperationalModes_Mode_State::release_description() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_terminal_device.TerminalDevice.OperationalModes.Mode.State.description)
  
  ::ywrapper::StringValue* temp = description_;
  description_ = NULL;
  return temp;
}
inline ::ywrapper::StringValue* TerminalDevice_OperationalModes_Mode_State::mutable_description() {
  
  if (description_ == NULL) {
    description_ = new ::ywrapper::StringValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_terminal_device.TerminalDevice.OperationalModes.Mode.State.description)
  return description_;
}
inline void TerminalDevice_OperationalModes_Mode_State::set_allocated_description(::ywrapper::StringValue* description) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(description_);
  }
  if (description) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      description = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, description, submessage_arena);
    }
    
  } else {
    
  }
  description_ = description;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_terminal_device.TerminalDevice.OperationalModes.Mode.State.description)
}

// .ywrapper.UintValue mode_id = 74994658 [(.yext.schemapath) = "/terminal-device/operational-modes/mode/state/mode-id"];
inline bool TerminalDevice_OperationalModes_Mode_State::has_mode_id() const {
  return this != internal_default_instance() && mode_id_ != NULL;
}
inline const ::ywrapper::UintValue& TerminalDevice_OperationalModes_Mode_State::mode_id() const {
  const ::ywrapper::UintValue* p = mode_id_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_terminal_device.TerminalDevice.OperationalModes.Mode.State.mode_id)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* TerminalDevice_OperationalModes_Mode_State::release_mode_id() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_terminal_device.TerminalDevice.OperationalModes.Mode.State.mode_id)
  
  ::ywrapper::UintValue* temp = mode_id_;
  mode_id_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* TerminalDevice_OperationalModes_Mode_State::mutable_mode_id() {
  
  if (mode_id_ == NULL) {
    mode_id_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_terminal_device.TerminalDevice.OperationalModes.Mode.State.mode_id)
  return mode_id_;
}
inline void TerminalDevice_OperationalModes_Mode_State::set_allocated_mode_id(::ywrapper::UintValue* mode_id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(mode_id_);
  }
  if (mode_id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      mode_id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, mode_id, submessage_arena);
    }
    
  } else {
    
  }
  mode_id_ = mode_id;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_terminal_device.TerminalDevice.OperationalModes.Mode.State.mode_id)
}

// .ywrapper.StringValue vendor_id = 526782251 [(.yext.schemapath) = "/terminal-device/operational-modes/mode/state/vendor-id"];
inline bool TerminalDevice_OperationalModes_Mode_State::has_vendor_id() const {
  return this != internal_default_instance() && vendor_id_ != NULL;
}
inline const ::ywrapper::StringValue& TerminalDevice_OperationalModes_Mode_State::vendor_id() const {
  const ::ywrapper::StringValue* p = vendor_id_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_terminal_device.TerminalDevice.OperationalModes.Mode.State.vendor_id)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::StringValue*>(
      &::ywrapper::_StringValue_default_instance_);
}
inline ::ywrapper::StringValue* TerminalDevice_OperationalModes_Mode_State::release_vendor_id() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_terminal_device.TerminalDevice.OperationalModes.Mode.State.vendor_id)
  
  ::ywrapper::StringValue* temp = vendor_id_;
  vendor_id_ = NULL;
  return temp;
}
inline ::ywrapper::StringValue* TerminalDevice_OperationalModes_Mode_State::mutable_vendor_id() {
  
  if (vendor_id_ == NULL) {
    vendor_id_ = new ::ywrapper::StringValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_terminal_device.TerminalDevice.OperationalModes.Mode.State.vendor_id)
  return vendor_id_;
}
inline void TerminalDevice_OperationalModes_Mode_State::set_allocated_vendor_id(::ywrapper::StringValue* vendor_id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(vendor_id_);
  }
  if (vendor_id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      vendor_id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, vendor_id, submessage_arena);
    }
    
  } else {
    
  }
  vendor_id_ = vendor_id;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_terminal_device.TerminalDevice.OperationalModes.Mode.State.vendor_id)
}

// -------------------------------------------------------------------

// TerminalDevice_OperationalModes_Mode

// .openconfig.openconfig_terminal_device.TerminalDevice.OperationalModes.Mode.Config config = 187786493 [(.yext.schemapath) = "/terminal-device/operational-modes/mode/config"];
inline bool TerminalDevice_OperationalModes_Mode::has_config() const {
  return this != internal_default_instance() && config_ != NULL;
}
inline void TerminalDevice_OperationalModes_Mode::clear_config() {
  if (GetArenaNoVirtual() == NULL && config_ != NULL) {
    delete config_;
  }
  config_ = NULL;
}
inline const ::openconfig::openconfig_terminal_device::TerminalDevice_OperationalModes_Mode_Config& TerminalDevice_OperationalModes_Mode::config() const {
  const ::openconfig::openconfig_terminal_device::TerminalDevice_OperationalModes_Mode_Config* p = config_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_terminal_device.TerminalDevice.OperationalModes.Mode.config)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_terminal_device::TerminalDevice_OperationalModes_Mode_Config*>(
      &::openconfig::openconfig_terminal_device::_TerminalDevice_OperationalModes_Mode_Config_default_instance_);
}
inline ::openconfig::openconfig_terminal_device::TerminalDevice_OperationalModes_Mode_Config* TerminalDevice_OperationalModes_Mode::release_config() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_terminal_device.TerminalDevice.OperationalModes.Mode.config)
  
  ::openconfig::openconfig_terminal_device::TerminalDevice_OperationalModes_Mode_Config* temp = config_;
  config_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_terminal_device::TerminalDevice_OperationalModes_Mode_Config* TerminalDevice_OperationalModes_Mode::mutable_config() {
  
  if (config_ == NULL) {
    config_ = new ::openconfig::openconfig_terminal_device::TerminalDevice_OperationalModes_Mode_Config;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_terminal_device.TerminalDevice.OperationalModes.Mode.config)
  return config_;
}
inline void TerminalDevice_OperationalModes_Mode::set_allocated_config(::openconfig::openconfig_terminal_device::TerminalDevice_OperationalModes_Mode_Config* config) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete config_;
  }
  if (config) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      config = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, config, submessage_arena);
    }
    
  } else {
    
  }
  config_ = config;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_terminal_device.TerminalDevice.OperationalModes.Mode.config)
}

// .openconfig.openconfig_terminal_device.TerminalDevice.OperationalModes.Mode.State state = 208910962 [(.yext.schemapath) = "/terminal-device/operational-modes/mode/state"];
inline bool TerminalDevice_OperationalModes_Mode::has_state() const {
  return this != internal_default_instance() && state_ != NULL;
}
inline void TerminalDevice_OperationalModes_Mode::clear_state() {
  if (GetArenaNoVirtual() == NULL && state_ != NULL) {
    delete state_;
  }
  state_ = NULL;
}
inline const ::openconfig::openconfig_terminal_device::TerminalDevice_OperationalModes_Mode_State& TerminalDevice_OperationalModes_Mode::state() const {
  const ::openconfig::openconfig_terminal_device::TerminalDevice_OperationalModes_Mode_State* p = state_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_terminal_device.TerminalDevice.OperationalModes.Mode.state)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_terminal_device::TerminalDevice_OperationalModes_Mode_State*>(
      &::openconfig::openconfig_terminal_device::_TerminalDevice_OperationalModes_Mode_State_default_instance_);
}
inline ::openconfig::openconfig_terminal_device::TerminalDevice_OperationalModes_Mode_State* TerminalDevice_OperationalModes_Mode::release_state() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_terminal_device.TerminalDevice.OperationalModes.Mode.state)
  
  ::openconfig::openconfig_terminal_device::TerminalDevice_OperationalModes_Mode_State* temp = state_;
  state_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_terminal_device::TerminalDevice_OperationalModes_Mode_State* TerminalDevice_OperationalModes_Mode::mutable_state() {
  
  if (state_ == NULL) {
    state_ = new ::openconfig::openconfig_terminal_device::TerminalDevice_OperationalModes_Mode_State;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_terminal_device.TerminalDevice.OperationalModes.Mode.state)
  return state_;
}
inline void TerminalDevice_OperationalModes_Mode::set_allocated_state(::openconfig::openconfig_terminal_device::TerminalDevice_OperationalModes_Mode_State* state) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete state_;
  }
  if (state) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      state = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, state, submessage_arena);
    }
    
  } else {
    
  }
  state_ = state;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_terminal_device.TerminalDevice.OperationalModes.Mode.state)
}

// -------------------------------------------------------------------

// TerminalDevice_OperationalModes_ModeKey

// uint64 mode_id = 1 [(.yext.schemapath) = "/terminal-device/operational-modes/mode/mode-id"];
inline void TerminalDevice_OperationalModes_ModeKey::clear_mode_id() {
  mode_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 TerminalDevice_OperationalModes_ModeKey::mode_id() const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_terminal_device.TerminalDevice.OperationalModes.ModeKey.mode_id)
  return mode_id_;
}
inline void TerminalDevice_OperationalModes_ModeKey::set_mode_id(::google::protobuf::uint64 value) {
  
  mode_id_ = value;
  // @@protoc_insertion_point(field_set:openconfig.openconfig_terminal_device.TerminalDevice.OperationalModes.ModeKey.mode_id)
}

// .openconfig.openconfig_terminal_device.TerminalDevice.OperationalModes.Mode mode = 2;
inline bool TerminalDevice_OperationalModes_ModeKey::has_mode() const {
  return this != internal_default_instance() && mode_ != NULL;
}
inline void TerminalDevice_OperationalModes_ModeKey::clear_mode() {
  if (GetArenaNoVirtual() == NULL && mode_ != NULL) {
    delete mode_;
  }
  mode_ = NULL;
}
inline const ::openconfig::openconfig_terminal_device::TerminalDevice_OperationalModes_Mode& TerminalDevice_OperationalModes_ModeKey::mode() const {
  const ::openconfig::openconfig_terminal_device::TerminalDevice_OperationalModes_Mode* p = mode_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_terminal_device.TerminalDevice.OperationalModes.ModeKey.mode)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_terminal_device::TerminalDevice_OperationalModes_Mode*>(
      &::openconfig::openconfig_terminal_device::_TerminalDevice_OperationalModes_Mode_default_instance_);
}
inline ::openconfig::openconfig_terminal_device::TerminalDevice_OperationalModes_Mode* TerminalDevice_OperationalModes_ModeKey::release_mode() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_terminal_device.TerminalDevice.OperationalModes.ModeKey.mode)
  
  ::openconfig::openconfig_terminal_device::TerminalDevice_OperationalModes_Mode* temp = mode_;
  mode_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_terminal_device::TerminalDevice_OperationalModes_Mode* TerminalDevice_OperationalModes_ModeKey::mutable_mode() {
  
  if (mode_ == NULL) {
    mode_ = new ::openconfig::openconfig_terminal_device::TerminalDevice_OperationalModes_Mode;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_terminal_device.TerminalDevice.OperationalModes.ModeKey.mode)
  return mode_;
}
inline void TerminalDevice_OperationalModes_ModeKey::set_allocated_mode(::openconfig::openconfig_terminal_device::TerminalDevice_OperationalModes_Mode* mode) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete mode_;
  }
  if (mode) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      mode = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, mode, submessage_arena);
    }
    
  } else {
    
  }
  mode_ = mode;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_terminal_device.TerminalDevice.OperationalModes.ModeKey.mode)
}

// -------------------------------------------------------------------

// TerminalDevice_OperationalModes

// repeated .openconfig.openconfig_terminal_device.TerminalDevice.OperationalModes.ModeKey mode = 507936888 [(.yext.schemapath) = "/terminal-device/operational-modes/mode"];
inline int TerminalDevice_OperationalModes::mode_size() const {
  return mode_.size();
}
inline void TerminalDevice_OperationalModes::clear_mode() {
  mode_.Clear();
}
inline const ::openconfig::openconfig_terminal_device::TerminalDevice_OperationalModes_ModeKey& TerminalDevice_OperationalModes::mode(int index) const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_terminal_device.TerminalDevice.OperationalModes.mode)
  return mode_.Get(index);
}
inline ::openconfig::openconfig_terminal_device::TerminalDevice_OperationalModes_ModeKey* TerminalDevice_OperationalModes::mutable_mode(int index) {
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_terminal_device.TerminalDevice.OperationalModes.mode)
  return mode_.Mutable(index);
}
inline ::openconfig::openconfig_terminal_device::TerminalDevice_OperationalModes_ModeKey* TerminalDevice_OperationalModes::add_mode() {
  // @@protoc_insertion_point(field_add:openconfig.openconfig_terminal_device.TerminalDevice.OperationalModes.mode)
  return mode_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_terminal_device::TerminalDevice_OperationalModes_ModeKey >*
TerminalDevice_OperationalModes::mutable_mode() {
  // @@protoc_insertion_point(field_mutable_list:openconfig.openconfig_terminal_device.TerminalDevice.OperationalModes.mode)
  return &mode_;
}
inline const ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_terminal_device::TerminalDevice_OperationalModes_ModeKey >&
TerminalDevice_OperationalModes::mode() const {
  // @@protoc_insertion_point(field_list:openconfig.openconfig_terminal_device.TerminalDevice.OperationalModes.mode)
  return mode_;
}

// -------------------------------------------------------------------

// TerminalDevice_State

// -------------------------------------------------------------------

// TerminalDevice

// .openconfig.openconfig_terminal_device.TerminalDevice.Config config = 4498449 [(.yext.schemapath) = "/terminal-device/config"];
inline bool TerminalDevice::has_config() const {
  return this != internal_default_instance() && config_ != NULL;
}
inline void TerminalDevice::clear_config() {
  if (GetArenaNoVirtual() == NULL && config_ != NULL) {
    delete config_;
  }
  config_ = NULL;
}
inline const ::openconfig::openconfig_terminal_device::TerminalDevice_Config& TerminalDevice::config() const {
  const ::openconfig::openconfig_terminal_device::TerminalDevice_Config* p = config_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_terminal_device.TerminalDevice.config)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_terminal_device::TerminalDevice_Config*>(
      &::openconfig::openconfig_terminal_device::_TerminalDevice_Config_default_instance_);
}
inline ::openconfig::openconfig_terminal_device::TerminalDevice_Config* TerminalDevice::release_config() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_terminal_device.TerminalDevice.config)
  
  ::openconfig::openconfig_terminal_device::TerminalDevice_Config* temp = config_;
  config_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_terminal_device::TerminalDevice_Config* TerminalDevice::mutable_config() {
  
  if (config_ == NULL) {
    config_ = new ::openconfig::openconfig_terminal_device::TerminalDevice_Config;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_terminal_device.TerminalDevice.config)
  return config_;
}
inline void TerminalDevice::set_allocated_config(::openconfig::openconfig_terminal_device::TerminalDevice_Config* config) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete config_;
  }
  if (config) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      config = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, config, submessage_arena);
    }
    
  } else {
    
  }
  config_ = config;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_terminal_device.TerminalDevice.config)
}

// .openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels logical_channels = 495167037 [(.yext.schemapath) = "/terminal-device/logical-channels"];
inline bool TerminalDevice::has_logical_channels() const {
  return this != internal_default_instance() && logical_channels_ != NULL;
}
inline void TerminalDevice::clear_logical_channels() {
  if (GetArenaNoVirtual() == NULL && logical_channels_ != NULL) {
    delete logical_channels_;
  }
  logical_channels_ = NULL;
}
inline const ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels& TerminalDevice::logical_channels() const {
  const ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels* p = logical_channels_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_terminal_device.TerminalDevice.logical_channels)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels*>(
      &::openconfig::openconfig_terminal_device::_TerminalDevice_LogicalChannels_default_instance_);
}
inline ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels* TerminalDevice::release_logical_channels() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_terminal_device.TerminalDevice.logical_channels)
  
  ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels* temp = logical_channels_;
  logical_channels_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels* TerminalDevice::mutable_logical_channels() {
  
  if (logical_channels_ == NULL) {
    logical_channels_ = new ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_terminal_device.TerminalDevice.logical_channels)
  return logical_channels_;
}
inline void TerminalDevice::set_allocated_logical_channels(::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels* logical_channels) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete logical_channels_;
  }
  if (logical_channels) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      logical_channels = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, logical_channels, submessage_arena);
    }
    
  } else {
    
  }
  logical_channels_ = logical_channels;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_terminal_device.TerminalDevice.logical_channels)
}

// .openconfig.openconfig_terminal_device.TerminalDevice.OperationalModes operational_modes = 54138558 [(.yext.schemapath) = "/terminal-device/operational-modes"];
inline bool TerminalDevice::has_operational_modes() const {
  return this != internal_default_instance() && operational_modes_ != NULL;
}
inline void TerminalDevice::clear_operational_modes() {
  if (GetArenaNoVirtual() == NULL && operational_modes_ != NULL) {
    delete operational_modes_;
  }
  operational_modes_ = NULL;
}
inline const ::openconfig::openconfig_terminal_device::TerminalDevice_OperationalModes& TerminalDevice::operational_modes() const {
  const ::openconfig::openconfig_terminal_device::TerminalDevice_OperationalModes* p = operational_modes_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_terminal_device.TerminalDevice.operational_modes)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_terminal_device::TerminalDevice_OperationalModes*>(
      &::openconfig::openconfig_terminal_device::_TerminalDevice_OperationalModes_default_instance_);
}
inline ::openconfig::openconfig_terminal_device::TerminalDevice_OperationalModes* TerminalDevice::release_operational_modes() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_terminal_device.TerminalDevice.operational_modes)
  
  ::openconfig::openconfig_terminal_device::TerminalDevice_OperationalModes* temp = operational_modes_;
  operational_modes_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_terminal_device::TerminalDevice_OperationalModes* TerminalDevice::mutable_operational_modes() {
  
  if (operational_modes_ == NULL) {
    operational_modes_ = new ::openconfig::openconfig_terminal_device::TerminalDevice_OperationalModes;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_terminal_device.TerminalDevice.operational_modes)
  return operational_modes_;
}
inline void TerminalDevice::set_allocated_operational_modes(::openconfig::openconfig_terminal_device::TerminalDevice_OperationalModes* operational_modes) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete operational_modes_;
  }
  if (operational_modes) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      operational_modes = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, operational_modes, submessage_arena);
    }
    
  } else {
    
  }
  operational_modes_ = operational_modes;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_terminal_device.TerminalDevice.operational_modes)
}

// .openconfig.openconfig_terminal_device.TerminalDevice.State state = 150416646 [(.yext.schemapath) = "/terminal-device/state"];
inline bool TerminalDevice::has_state() const {
  return this != internal_default_instance() && state_ != NULL;
}
inline void TerminalDevice::clear_state() {
  if (GetArenaNoVirtual() == NULL && state_ != NULL) {
    delete state_;
  }
  state_ = NULL;
}
inline const ::openconfig::openconfig_terminal_device::TerminalDevice_State& TerminalDevice::state() const {
  const ::openconfig::openconfig_terminal_device::TerminalDevice_State* p = state_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_terminal_device.TerminalDevice.state)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_terminal_device::TerminalDevice_State*>(
      &::openconfig::openconfig_terminal_device::_TerminalDevice_State_default_instance_);
}
inline ::openconfig::openconfig_terminal_device::TerminalDevice_State* TerminalDevice::release_state() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_terminal_device.TerminalDevice.state)
  
  ::openconfig::openconfig_terminal_device::TerminalDevice_State* temp = state_;
  state_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_terminal_device::TerminalDevice_State* TerminalDevice::mutable_state() {
  
  if (state_ == NULL) {
    state_ = new ::openconfig::openconfig_terminal_device::TerminalDevice_State;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_terminal_device.TerminalDevice.state)
  return state_;
}
inline void TerminalDevice::set_allocated_state(::openconfig::openconfig_terminal_device::TerminalDevice_State* state) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete state_;
  }
  if (state) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      state = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, state, submessage_arena);
    }
    
  } else {
    
  }
  state_ = state;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_terminal_device.TerminalDevice.state)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace openconfig_terminal_device
}  // namespace openconfig

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_Config_AssignmentType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_Config_AssignmentType>() {
  return ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_Config_AssignmentType_descriptor();
}
template <> struct is_proto_enum< ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_State_AssignmentType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_State_AssignmentType>() {
  return ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_State_AssignmentType_descriptor();
}
template <> struct is_proto_enum< ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_State_LinkState> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_State_LinkState>() {
  return ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_State_LinkState_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto__INCLUDED
