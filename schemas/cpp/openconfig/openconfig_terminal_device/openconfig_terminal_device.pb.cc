// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: openconfig/openconfig_terminal_device/openconfig_terminal_device.proto

#include "openconfig/openconfig_terminal_device/openconfig_terminal_device.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace openconfig {
namespace openconfig_terminal_device {
class TerminalDevice_ConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TerminalDevice_Config>
      _instance;
} _TerminalDevice_Config_default_instance_;
class TerminalDevice_LogicalChannels_Channel_ConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TerminalDevice_LogicalChannels_Channel_Config>
      _instance;
} _TerminalDevice_LogicalChannels_Channel_Config_default_instance_;
class TerminalDevice_LogicalChannels_Channel_Ethernet_ConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TerminalDevice_LogicalChannels_Channel_Ethernet_Config>
      _instance;
} _TerminalDevice_LogicalChannels_Channel_Ethernet_Config_default_instance_;
class TerminalDevice_LogicalChannels_Channel_Ethernet_StateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TerminalDevice_LogicalChannels_Channel_Ethernet_State>
      _instance;
} _TerminalDevice_LogicalChannels_Channel_Ethernet_State_default_instance_;
class TerminalDevice_LogicalChannels_Channel_EthernetDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TerminalDevice_LogicalChannels_Channel_Ethernet>
      _instance;
} _TerminalDevice_LogicalChannels_Channel_Ethernet_default_instance_;
class TerminalDevice_LogicalChannels_Channel_Ingress_ConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TerminalDevice_LogicalChannels_Channel_Ingress_Config>
      _instance;
} _TerminalDevice_LogicalChannels_Channel_Ingress_Config_default_instance_;
class TerminalDevice_LogicalChannels_Channel_Ingress_StateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TerminalDevice_LogicalChannels_Channel_Ingress_State>
      _instance;
} _TerminalDevice_LogicalChannels_Channel_Ingress_State_default_instance_;
class TerminalDevice_LogicalChannels_Channel_IngressDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TerminalDevice_LogicalChannels_Channel_Ingress>
      _instance;
} _TerminalDevice_LogicalChannels_Channel_Ingress_default_instance_;
class TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_ConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_Config>
      _instance;
} _TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_Config_default_instance_;
class TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_StateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_State>
      _instance;
} _TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_State_default_instance_;
class TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_AssignmentDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment>
      _instance;
} _TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_default_instance_;
class TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_AssignmentKeyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_AssignmentKey>
      _instance;
} _TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_AssignmentKey_default_instance_;
class TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignmentsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments>
      _instance;
} _TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_default_instance_;
class TerminalDevice_LogicalChannels_Channel_Otn_ConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TerminalDevice_LogicalChannels_Channel_Otn_Config>
      _instance;
} _TerminalDevice_LogicalChannels_Channel_Otn_Config_default_instance_;
class TerminalDevice_LogicalChannels_Channel_Otn_State_EsnrDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TerminalDevice_LogicalChannels_Channel_Otn_State_Esnr>
      _instance;
} _TerminalDevice_LogicalChannels_Channel_Otn_State_Esnr_default_instance_;
class TerminalDevice_LogicalChannels_Channel_Otn_State_PostFecBerDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TerminalDevice_LogicalChannels_Channel_Otn_State_PostFecBer>
      _instance;
} _TerminalDevice_LogicalChannels_Channel_Otn_State_PostFecBer_default_instance_;
class TerminalDevice_LogicalChannels_Channel_Otn_State_PreFecBerDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TerminalDevice_LogicalChannels_Channel_Otn_State_PreFecBer>
      _instance;
} _TerminalDevice_LogicalChannels_Channel_Otn_State_PreFecBer_default_instance_;
class TerminalDevice_LogicalChannels_Channel_Otn_State_QValueDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TerminalDevice_LogicalChannels_Channel_Otn_State_QValue>
      _instance;
} _TerminalDevice_LogicalChannels_Channel_Otn_State_QValue_default_instance_;
class TerminalDevice_LogicalChannels_Channel_Otn_StateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TerminalDevice_LogicalChannels_Channel_Otn_State>
      _instance;
} _TerminalDevice_LogicalChannels_Channel_Otn_State_default_instance_;
class TerminalDevice_LogicalChannels_Channel_OtnDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TerminalDevice_LogicalChannels_Channel_Otn>
      _instance;
} _TerminalDevice_LogicalChannels_Channel_Otn_default_instance_;
class TerminalDevice_LogicalChannels_Channel_StateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TerminalDevice_LogicalChannels_Channel_State>
      _instance;
} _TerminalDevice_LogicalChannels_Channel_State_default_instance_;
class TerminalDevice_LogicalChannels_ChannelDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TerminalDevice_LogicalChannels_Channel>
      _instance;
} _TerminalDevice_LogicalChannels_Channel_default_instance_;
class TerminalDevice_LogicalChannels_ChannelKeyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TerminalDevice_LogicalChannels_ChannelKey>
      _instance;
} _TerminalDevice_LogicalChannels_ChannelKey_default_instance_;
class TerminalDevice_LogicalChannelsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TerminalDevice_LogicalChannels>
      _instance;
} _TerminalDevice_LogicalChannels_default_instance_;
class TerminalDevice_OperationalModes_Mode_ConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TerminalDevice_OperationalModes_Mode_Config>
      _instance;
} _TerminalDevice_OperationalModes_Mode_Config_default_instance_;
class TerminalDevice_OperationalModes_Mode_StateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TerminalDevice_OperationalModes_Mode_State>
      _instance;
} _TerminalDevice_OperationalModes_Mode_State_default_instance_;
class TerminalDevice_OperationalModes_ModeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TerminalDevice_OperationalModes_Mode>
      _instance;
} _TerminalDevice_OperationalModes_Mode_default_instance_;
class TerminalDevice_OperationalModes_ModeKeyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TerminalDevice_OperationalModes_ModeKey>
      _instance;
} _TerminalDevice_OperationalModes_ModeKey_default_instance_;
class TerminalDevice_OperationalModesDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TerminalDevice_OperationalModes>
      _instance;
} _TerminalDevice_OperationalModes_default_instance_;
class TerminalDevice_StateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TerminalDevice_State>
      _instance;
} _TerminalDevice_State_default_instance_;
class TerminalDeviceDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TerminalDevice>
      _instance;
} _TerminalDevice_default_instance_;
}  // namespace openconfig_terminal_device
}  // namespace openconfig
namespace protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto {
void InitDefaultsTerminalDevice_ConfigImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::openconfig::openconfig_terminal_device::_TerminalDevice_Config_default_instance_;
    new (ptr) ::openconfig::openconfig_terminal_device::TerminalDevice_Config();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_terminal_device::TerminalDevice_Config::InitAsDefaultInstance();
}

void InitDefaultsTerminalDevice_Config() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTerminalDevice_ConfigImpl);
}

void InitDefaultsTerminalDevice_LogicalChannels_Channel_ConfigImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsStringValue();
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsUintValue();
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsBoolValue();
  {
    void* ptr = &::openconfig::openconfig_terminal_device::_TerminalDevice_LogicalChannels_Channel_Config_default_instance_;
    new (ptr) ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Config();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Config::InitAsDefaultInstance();
}

void InitDefaultsTerminalDevice_LogicalChannels_Channel_Config() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTerminalDevice_LogicalChannels_Channel_ConfigImpl);
}

void InitDefaultsTerminalDevice_LogicalChannels_Channel_Ethernet_ConfigImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::openconfig::openconfig_terminal_device::_TerminalDevice_LogicalChannels_Channel_Ethernet_Config_default_instance_;
    new (ptr) ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Ethernet_Config();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Ethernet_Config::InitAsDefaultInstance();
}

void InitDefaultsTerminalDevice_LogicalChannels_Channel_Ethernet_Config() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTerminalDevice_LogicalChannels_Channel_Ethernet_ConfigImpl);
}

void InitDefaultsTerminalDevice_LogicalChannels_Channel_Ethernet_StateImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsUintValue();
  {
    void* ptr = &::openconfig::openconfig_terminal_device::_TerminalDevice_LogicalChannels_Channel_Ethernet_State_default_instance_;
    new (ptr) ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Ethernet_State();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Ethernet_State::InitAsDefaultInstance();
}

void InitDefaultsTerminalDevice_LogicalChannels_Channel_Ethernet_State() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTerminalDevice_LogicalChannels_Channel_Ethernet_StateImpl);
}

void InitDefaultsTerminalDevice_LogicalChannels_Channel_EthernetImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::InitDefaultsTerminalDevice_LogicalChannels_Channel_Ethernet_Config();
  protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::InitDefaultsTerminalDevice_LogicalChannels_Channel_Ethernet_State();
  {
    void* ptr = &::openconfig::openconfig_terminal_device::_TerminalDevice_LogicalChannels_Channel_Ethernet_default_instance_;
    new (ptr) ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Ethernet();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Ethernet::InitAsDefaultInstance();
}

void InitDefaultsTerminalDevice_LogicalChannels_Channel_Ethernet() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTerminalDevice_LogicalChannels_Channel_EthernetImpl);
}

void InitDefaultsTerminalDevice_LogicalChannels_Channel_Ingress_ConfigImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsUintValue();
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsStringValue();
  {
    void* ptr = &::openconfig::openconfig_terminal_device::_TerminalDevice_LogicalChannels_Channel_Ingress_Config_default_instance_;
    new (ptr) ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Ingress_Config();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Ingress_Config::InitAsDefaultInstance();
}

void InitDefaultsTerminalDevice_LogicalChannels_Channel_Ingress_Config() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTerminalDevice_LogicalChannels_Channel_Ingress_ConfigImpl);
}

void InitDefaultsTerminalDevice_LogicalChannels_Channel_Ingress_StateImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsUintValue();
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsStringValue();
  {
    void* ptr = &::openconfig::openconfig_terminal_device::_TerminalDevice_LogicalChannels_Channel_Ingress_State_default_instance_;
    new (ptr) ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Ingress_State();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Ingress_State::InitAsDefaultInstance();
}

void InitDefaultsTerminalDevice_LogicalChannels_Channel_Ingress_State() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTerminalDevice_LogicalChannels_Channel_Ingress_StateImpl);
}

void InitDefaultsTerminalDevice_LogicalChannels_Channel_IngressImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::InitDefaultsTerminalDevice_LogicalChannels_Channel_Ingress_Config();
  protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::InitDefaultsTerminalDevice_LogicalChannels_Channel_Ingress_State();
  {
    void* ptr = &::openconfig::openconfig_terminal_device::_TerminalDevice_LogicalChannels_Channel_Ingress_default_instance_;
    new (ptr) ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Ingress();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Ingress::InitAsDefaultInstance();
}

void InitDefaultsTerminalDevice_LogicalChannels_Channel_Ingress() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTerminalDevice_LogicalChannels_Channel_IngressImpl);
}

void InitDefaultsTerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_ConfigImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsDecimal64Value();
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsStringValue();
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsUintValue();
  {
    void* ptr = &::openconfig::openconfig_terminal_device::_TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_Config_default_instance_;
    new (ptr) ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_Config();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_Config::InitAsDefaultInstance();
}

void InitDefaultsTerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_Config() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_ConfigImpl);
}

void InitDefaultsTerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_StateImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsDecimal64Value();
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsStringValue();
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsUintValue();
  {
    void* ptr = &::openconfig::openconfig_terminal_device::_TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_State_default_instance_;
    new (ptr) ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_State();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_State::InitAsDefaultInstance();
}

void InitDefaultsTerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_State() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_StateImpl);
}

void InitDefaultsTerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_AssignmentImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::InitDefaultsTerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_Config();
  protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::InitDefaultsTerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_State();
  {
    void* ptr = &::openconfig::openconfig_terminal_device::_TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_default_instance_;
    new (ptr) ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment::InitAsDefaultInstance();
}

void InitDefaultsTerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_AssignmentImpl);
}

void InitDefaultsTerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_AssignmentKeyImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::InitDefaultsTerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment();
  {
    void* ptr = &::openconfig::openconfig_terminal_device::_TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_AssignmentKey_default_instance_;
    new (ptr) ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_AssignmentKey();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_AssignmentKey::InitAsDefaultInstance();
}

void InitDefaultsTerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_AssignmentKey() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_AssignmentKeyImpl);
}

void InitDefaultsTerminalDevice_LogicalChannels_Channel_LogicalChannelAssignmentsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::InitDefaultsTerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_AssignmentKey();
  {
    void* ptr = &::openconfig::openconfig_terminal_device::_TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_default_instance_;
    new (ptr) ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments::InitAsDefaultInstance();
}

void InitDefaultsTerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTerminalDevice_LogicalChannels_Channel_LogicalChannelAssignmentsImpl);
}

void InitDefaultsTerminalDevice_LogicalChannels_Channel_Otn_ConfigImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsBoolValue();
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsStringValue();
  {
    void* ptr = &::openconfig::openconfig_terminal_device::_TerminalDevice_LogicalChannels_Channel_Otn_Config_default_instance_;
    new (ptr) ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Otn_Config();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Otn_Config::InitAsDefaultInstance();
}

void InitDefaultsTerminalDevice_LogicalChannels_Channel_Otn_Config() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTerminalDevice_LogicalChannels_Channel_Otn_ConfigImpl);
}

void InitDefaultsTerminalDevice_LogicalChannels_Channel_Otn_State_EsnrImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsDecimal64Value();
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsUintValue();
  {
    void* ptr = &::openconfig::openconfig_terminal_device::_TerminalDevice_LogicalChannels_Channel_Otn_State_Esnr_default_instance_;
    new (ptr) ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Otn_State_Esnr();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Otn_State_Esnr::InitAsDefaultInstance();
}

void InitDefaultsTerminalDevice_LogicalChannels_Channel_Otn_State_Esnr() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTerminalDevice_LogicalChannels_Channel_Otn_State_EsnrImpl);
}

void InitDefaultsTerminalDevice_LogicalChannels_Channel_Otn_State_PostFecBerImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsDecimal64Value();
  {
    void* ptr = &::openconfig::openconfig_terminal_device::_TerminalDevice_LogicalChannels_Channel_Otn_State_PostFecBer_default_instance_;
    new (ptr) ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Otn_State_PostFecBer();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Otn_State_PostFecBer::InitAsDefaultInstance();
}

void InitDefaultsTerminalDevice_LogicalChannels_Channel_Otn_State_PostFecBer() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTerminalDevice_LogicalChannels_Channel_Otn_State_PostFecBerImpl);
}

void InitDefaultsTerminalDevice_LogicalChannels_Channel_Otn_State_PreFecBerImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsDecimal64Value();
  {
    void* ptr = &::openconfig::openconfig_terminal_device::_TerminalDevice_LogicalChannels_Channel_Otn_State_PreFecBer_default_instance_;
    new (ptr) ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Otn_State_PreFecBer();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Otn_State_PreFecBer::InitAsDefaultInstance();
}

void InitDefaultsTerminalDevice_LogicalChannels_Channel_Otn_State_PreFecBer() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTerminalDevice_LogicalChannels_Channel_Otn_State_PreFecBerImpl);
}

void InitDefaultsTerminalDevice_LogicalChannels_Channel_Otn_State_QValueImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsDecimal64Value();
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsUintValue();
  {
    void* ptr = &::openconfig::openconfig_terminal_device::_TerminalDevice_LogicalChannels_Channel_Otn_State_QValue_default_instance_;
    new (ptr) ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Otn_State_QValue();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Otn_State_QValue::InitAsDefaultInstance();
}

void InitDefaultsTerminalDevice_LogicalChannels_Channel_Otn_State_QValue() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTerminalDevice_LogicalChannels_Channel_Otn_State_QValueImpl);
}

void InitDefaultsTerminalDevice_LogicalChannels_Channel_Otn_StateImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsUintValue();
  protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::InitDefaultsTerminalDevice_LogicalChannels_Channel_Otn_State_Esnr();
  protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::InitDefaultsTerminalDevice_LogicalChannels_Channel_Otn_State_PostFecBer();
  protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::InitDefaultsTerminalDevice_LogicalChannels_Channel_Otn_State_PreFecBer();
  protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::InitDefaultsTerminalDevice_LogicalChannels_Channel_Otn_State_QValue();
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsStringValue();
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsBoolValue();
  {
    void* ptr = &::openconfig::openconfig_terminal_device::_TerminalDevice_LogicalChannels_Channel_Otn_State_default_instance_;
    new (ptr) ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Otn_State();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Otn_State::InitAsDefaultInstance();
}

void InitDefaultsTerminalDevice_LogicalChannels_Channel_Otn_State() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTerminalDevice_LogicalChannels_Channel_Otn_StateImpl);
}

void InitDefaultsTerminalDevice_LogicalChannels_Channel_OtnImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::InitDefaultsTerminalDevice_LogicalChannels_Channel_Otn_Config();
  protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::InitDefaultsTerminalDevice_LogicalChannels_Channel_Otn_State();
  {
    void* ptr = &::openconfig::openconfig_terminal_device::_TerminalDevice_LogicalChannels_Channel_Otn_default_instance_;
    new (ptr) ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Otn();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Otn::InitAsDefaultInstance();
}

void InitDefaultsTerminalDevice_LogicalChannels_Channel_Otn() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTerminalDevice_LogicalChannels_Channel_OtnImpl);
}

void InitDefaultsTerminalDevice_LogicalChannels_Channel_StateImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsStringValue();
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsUintValue();
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsBoolValue();
  {
    void* ptr = &::openconfig::openconfig_terminal_device::_TerminalDevice_LogicalChannels_Channel_State_default_instance_;
    new (ptr) ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_State();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_State::InitAsDefaultInstance();
}

void InitDefaultsTerminalDevice_LogicalChannels_Channel_State() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTerminalDevice_LogicalChannels_Channel_StateImpl);
}

void InitDefaultsTerminalDevice_LogicalChannels_ChannelImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::InitDefaultsTerminalDevice_LogicalChannels_Channel_Config();
  protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::InitDefaultsTerminalDevice_LogicalChannels_Channel_Ethernet();
  protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::InitDefaultsTerminalDevice_LogicalChannels_Channel_Ingress();
  protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::InitDefaultsTerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments();
  protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::InitDefaultsTerminalDevice_LogicalChannels_Channel_Otn();
  protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::InitDefaultsTerminalDevice_LogicalChannels_Channel_State();
  {
    void* ptr = &::openconfig::openconfig_terminal_device::_TerminalDevice_LogicalChannels_Channel_default_instance_;
    new (ptr) ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel::InitAsDefaultInstance();
}

void InitDefaultsTerminalDevice_LogicalChannels_Channel() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTerminalDevice_LogicalChannels_ChannelImpl);
}

void InitDefaultsTerminalDevice_LogicalChannels_ChannelKeyImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::InitDefaultsTerminalDevice_LogicalChannels_Channel();
  {
    void* ptr = &::openconfig::openconfig_terminal_device::_TerminalDevice_LogicalChannels_ChannelKey_default_instance_;
    new (ptr) ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_ChannelKey();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_ChannelKey::InitAsDefaultInstance();
}

void InitDefaultsTerminalDevice_LogicalChannels_ChannelKey() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTerminalDevice_LogicalChannels_ChannelKeyImpl);
}

void InitDefaultsTerminalDevice_LogicalChannelsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::InitDefaultsTerminalDevice_LogicalChannels_ChannelKey();
  {
    void* ptr = &::openconfig::openconfig_terminal_device::_TerminalDevice_LogicalChannels_default_instance_;
    new (ptr) ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels::InitAsDefaultInstance();
}

void InitDefaultsTerminalDevice_LogicalChannels() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTerminalDevice_LogicalChannelsImpl);
}

void InitDefaultsTerminalDevice_OperationalModes_Mode_ConfigImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::openconfig::openconfig_terminal_device::_TerminalDevice_OperationalModes_Mode_Config_default_instance_;
    new (ptr) ::openconfig::openconfig_terminal_device::TerminalDevice_OperationalModes_Mode_Config();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_terminal_device::TerminalDevice_OperationalModes_Mode_Config::InitAsDefaultInstance();
}

void InitDefaultsTerminalDevice_OperationalModes_Mode_Config() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTerminalDevice_OperationalModes_Mode_ConfigImpl);
}

void InitDefaultsTerminalDevice_OperationalModes_Mode_StateImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsStringValue();
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsUintValue();
  {
    void* ptr = &::openconfig::openconfig_terminal_device::_TerminalDevice_OperationalModes_Mode_State_default_instance_;
    new (ptr) ::openconfig::openconfig_terminal_device::TerminalDevice_OperationalModes_Mode_State();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_terminal_device::TerminalDevice_OperationalModes_Mode_State::InitAsDefaultInstance();
}

void InitDefaultsTerminalDevice_OperationalModes_Mode_State() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTerminalDevice_OperationalModes_Mode_StateImpl);
}

void InitDefaultsTerminalDevice_OperationalModes_ModeImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::InitDefaultsTerminalDevice_OperationalModes_Mode_Config();
  protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::InitDefaultsTerminalDevice_OperationalModes_Mode_State();
  {
    void* ptr = &::openconfig::openconfig_terminal_device::_TerminalDevice_OperationalModes_Mode_default_instance_;
    new (ptr) ::openconfig::openconfig_terminal_device::TerminalDevice_OperationalModes_Mode();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_terminal_device::TerminalDevice_OperationalModes_Mode::InitAsDefaultInstance();
}

void InitDefaultsTerminalDevice_OperationalModes_Mode() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTerminalDevice_OperationalModes_ModeImpl);
}

void InitDefaultsTerminalDevice_OperationalModes_ModeKeyImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::InitDefaultsTerminalDevice_OperationalModes_Mode();
  {
    void* ptr = &::openconfig::openconfig_terminal_device::_TerminalDevice_OperationalModes_ModeKey_default_instance_;
    new (ptr) ::openconfig::openconfig_terminal_device::TerminalDevice_OperationalModes_ModeKey();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_terminal_device::TerminalDevice_OperationalModes_ModeKey::InitAsDefaultInstance();
}

void InitDefaultsTerminalDevice_OperationalModes_ModeKey() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTerminalDevice_OperationalModes_ModeKeyImpl);
}

void InitDefaultsTerminalDevice_OperationalModesImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::InitDefaultsTerminalDevice_OperationalModes_ModeKey();
  {
    void* ptr = &::openconfig::openconfig_terminal_device::_TerminalDevice_OperationalModes_default_instance_;
    new (ptr) ::openconfig::openconfig_terminal_device::TerminalDevice_OperationalModes();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_terminal_device::TerminalDevice_OperationalModes::InitAsDefaultInstance();
}

void InitDefaultsTerminalDevice_OperationalModes() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTerminalDevice_OperationalModesImpl);
}

void InitDefaultsTerminalDevice_StateImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::openconfig::openconfig_terminal_device::_TerminalDevice_State_default_instance_;
    new (ptr) ::openconfig::openconfig_terminal_device::TerminalDevice_State();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_terminal_device::TerminalDevice_State::InitAsDefaultInstance();
}

void InitDefaultsTerminalDevice_State() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTerminalDevice_StateImpl);
}

void InitDefaultsTerminalDeviceImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::InitDefaultsTerminalDevice_Config();
  protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::InitDefaultsTerminalDevice_LogicalChannels();
  protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::InitDefaultsTerminalDevice_OperationalModes();
  protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::InitDefaultsTerminalDevice_State();
  {
    void* ptr = &::openconfig::openconfig_terminal_device::_TerminalDevice_default_instance_;
    new (ptr) ::openconfig::openconfig_terminal_device::TerminalDevice();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_terminal_device::TerminalDevice::InitAsDefaultInstance();
}

void InitDefaultsTerminalDevice() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTerminalDeviceImpl);
}

::google::protobuf::Metadata file_level_metadata[31];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[3];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_terminal_device::TerminalDevice_Config, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Config, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Config, admin_state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Config, description_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Config, index_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Config, logical_channel_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Config, loopback_mode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Config, rate_class_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Config, test_signal_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Config, trib_protocol_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Ethernet_Config, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Ethernet_State, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Ethernet_State, in_8021q_frames_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Ethernet_State, in_crc_errors_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Ethernet_State, in_fragment_frames_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Ethernet_State, in_jabber_frames_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Ethernet_State, in_mac_control_frames_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Ethernet_State, in_mac_pause_frames_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Ethernet_State, in_oversize_frames_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Ethernet_State, out_8021q_frames_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Ethernet_State, out_mac_control_frames_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Ethernet_State, out_mac_pause_frames_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Ethernet, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Ethernet, config_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Ethernet, state_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Ingress_Config, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Ingress_Config, physical_channel_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Ingress_Config, transceiver_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Ingress_State, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Ingress_State, physical_channel_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Ingress_State, transceiver_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Ingress, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Ingress, config_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Ingress, state_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_Config, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_Config, allocation_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_Config, assignment_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_Config, description_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_Config, index_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_Config, logical_channel_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_Config, optical_channel_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_State, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_State, allocation_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_State, assignment_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_State, description_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_State, index_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_State, logical_channel_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_State, optical_channel_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment, config_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment, state_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_AssignmentKey, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_AssignmentKey, index_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_AssignmentKey, assignment_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments, assignment_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Otn_Config, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Otn_Config, tti_msg_auto_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Otn_Config, tti_msg_expected_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Otn_Config, tti_msg_transmit_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Otn_State_Esnr, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Otn_State_Esnr, avg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Otn_State_Esnr, instant_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Otn_State_Esnr, interval_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Otn_State_Esnr, max_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Otn_State_Esnr, min_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Otn_State_PostFecBer, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Otn_State_PostFecBer, avg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Otn_State_PostFecBer, instant_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Otn_State_PostFecBer, max_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Otn_State_PostFecBer, min_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Otn_State_PreFecBer, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Otn_State_PreFecBer, avg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Otn_State_PreFecBer, instant_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Otn_State_PreFecBer, max_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Otn_State_PreFecBer, min_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Otn_State_QValue, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Otn_State_QValue, avg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Otn_State_QValue, instant_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Otn_State_QValue, interval_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Otn_State_QValue, max_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Otn_State_QValue, min_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Otn_State, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Otn_State, background_block_errors_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Otn_State, code_violations_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Otn_State, errored_seconds_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Otn_State, esnr_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Otn_State, fec_corrected_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Otn_State, fec_corrected_bytes_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Otn_State, fec_uncorrectable_words_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Otn_State, post_fec_ber_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Otn_State, pre_fec_ber_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Otn_State, q_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Otn_State, rdi_msg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Otn_State, severely_errored_seconds_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Otn_State, tti_msg_auto_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Otn_State, tti_msg_expected_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Otn_State, tti_msg_recv_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Otn_State, tti_msg_transmit_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Otn_State, unavailable_seconds_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Otn, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Otn, config_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Otn, state_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_State, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_State, admin_state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_State, description_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_State, index_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_State, link_state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_State, logical_channel_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_State, loopback_mode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_State, rate_class_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_State, test_signal_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_State, trib_protocol_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel, config_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel, ethernet_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel, ingress_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel, logical_channel_assignments_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel, otn_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel, state_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_ChannelKey, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_ChannelKey, index_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_ChannelKey, channel_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels, channel_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_terminal_device::TerminalDevice_OperationalModes_Mode_Config, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_terminal_device::TerminalDevice_OperationalModes_Mode_State, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_terminal_device::TerminalDevice_OperationalModes_Mode_State, description_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_terminal_device::TerminalDevice_OperationalModes_Mode_State, mode_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_terminal_device::TerminalDevice_OperationalModes_Mode_State, vendor_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_terminal_device::TerminalDevice_OperationalModes_Mode, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_terminal_device::TerminalDevice_OperationalModes_Mode, config_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_terminal_device::TerminalDevice_OperationalModes_Mode, state_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_terminal_device::TerminalDevice_OperationalModes_ModeKey, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_terminal_device::TerminalDevice_OperationalModes_ModeKey, mode_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_terminal_device::TerminalDevice_OperationalModes_ModeKey, mode_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_terminal_device::TerminalDevice_OperationalModes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_terminal_device::TerminalDevice_OperationalModes, mode_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_terminal_device::TerminalDevice_State, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_terminal_device::TerminalDevice, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_terminal_device::TerminalDevice, config_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_terminal_device::TerminalDevice, logical_channels_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_terminal_device::TerminalDevice, operational_modes_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_terminal_device::TerminalDevice, state_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::openconfig::openconfig_terminal_device::TerminalDevice_Config)},
  { 5, -1, sizeof(::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Config)},
  { 18, -1, sizeof(::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Ethernet_Config)},
  { 23, -1, sizeof(::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Ethernet_State)},
  { 38, -1, sizeof(::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Ethernet)},
  { 45, -1, sizeof(::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Ingress_Config)},
  { 52, -1, sizeof(::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Ingress_State)},
  { 59, -1, sizeof(::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Ingress)},
  { 66, -1, sizeof(::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_Config)},
  { 77, -1, sizeof(::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_State)},
  { 88, -1, sizeof(::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment)},
  { 95, -1, sizeof(::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_AssignmentKey)},
  { 102, -1, sizeof(::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments)},
  { 108, -1, sizeof(::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Otn_Config)},
  { 116, -1, sizeof(::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Otn_State_Esnr)},
  { 126, -1, sizeof(::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Otn_State_PostFecBer)},
  { 135, -1, sizeof(::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Otn_State_PreFecBer)},
  { 144, -1, sizeof(::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Otn_State_QValue)},
  { 154, -1, sizeof(::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Otn_State)},
  { 176, -1, sizeof(::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Otn)},
  { 183, -1, sizeof(::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_State)},
  { 197, -1, sizeof(::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel)},
  { 208, -1, sizeof(::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_ChannelKey)},
  { 215, -1, sizeof(::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels)},
  { 221, -1, sizeof(::openconfig::openconfig_terminal_device::TerminalDevice_OperationalModes_Mode_Config)},
  { 226, -1, sizeof(::openconfig::openconfig_terminal_device::TerminalDevice_OperationalModes_Mode_State)},
  { 234, -1, sizeof(::openconfig::openconfig_terminal_device::TerminalDevice_OperationalModes_Mode)},
  { 241, -1, sizeof(::openconfig::openconfig_terminal_device::TerminalDevice_OperationalModes_ModeKey)},
  { 248, -1, sizeof(::openconfig::openconfig_terminal_device::TerminalDevice_OperationalModes)},
  { 254, -1, sizeof(::openconfig::openconfig_terminal_device::TerminalDevice_State)},
  { 259, -1, sizeof(::openconfig::openconfig_terminal_device::TerminalDevice)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_terminal_device::_TerminalDevice_Config_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_terminal_device::_TerminalDevice_LogicalChannels_Channel_Config_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_terminal_device::_TerminalDevice_LogicalChannels_Channel_Ethernet_Config_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_terminal_device::_TerminalDevice_LogicalChannels_Channel_Ethernet_State_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_terminal_device::_TerminalDevice_LogicalChannels_Channel_Ethernet_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_terminal_device::_TerminalDevice_LogicalChannels_Channel_Ingress_Config_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_terminal_device::_TerminalDevice_LogicalChannels_Channel_Ingress_State_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_terminal_device::_TerminalDevice_LogicalChannels_Channel_Ingress_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_terminal_device::_TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_Config_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_terminal_device::_TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_State_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_terminal_device::_TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_terminal_device::_TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_AssignmentKey_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_terminal_device::_TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_terminal_device::_TerminalDevice_LogicalChannels_Channel_Otn_Config_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_terminal_device::_TerminalDevice_LogicalChannels_Channel_Otn_State_Esnr_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_terminal_device::_TerminalDevice_LogicalChannels_Channel_Otn_State_PostFecBer_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_terminal_device::_TerminalDevice_LogicalChannels_Channel_Otn_State_PreFecBer_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_terminal_device::_TerminalDevice_LogicalChannels_Channel_Otn_State_QValue_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_terminal_device::_TerminalDevice_LogicalChannels_Channel_Otn_State_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_terminal_device::_TerminalDevice_LogicalChannels_Channel_Otn_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_terminal_device::_TerminalDevice_LogicalChannels_Channel_State_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_terminal_device::_TerminalDevice_LogicalChannels_Channel_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_terminal_device::_TerminalDevice_LogicalChannels_ChannelKey_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_terminal_device::_TerminalDevice_LogicalChannels_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_terminal_device::_TerminalDevice_OperationalModes_Mode_Config_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_terminal_device::_TerminalDevice_OperationalModes_Mode_State_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_terminal_device::_TerminalDevice_OperationalModes_Mode_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_terminal_device::_TerminalDevice_OperationalModes_ModeKey_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_terminal_device::_TerminalDevice_OperationalModes_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_terminal_device::_TerminalDevice_State_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_terminal_device::_TerminalDevice_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "openconfig/openconfig_terminal_device/openconfig_terminal_device.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 31);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\nFopenconfig/openconfig_terminal_device/"
      "openconfig_terminal_device.proto\022%openco"
      "nfig.openconfig_terminal_device\0328github."
      "com/openconfig/ygot/proto/ywrapper/ywrap"
      "per.proto\0320github.com/openconfig/ygot/pr"
      "oto/yext/yext.proto\032\034openconfig/enums/en"
      "ums.proto\"\355\201\001\n\016TerminalDevice\022k\n\006config\030"
      "\221\310\222\002 \001(\0132<.openconfig.openconfig_termina"
      "l_device.TerminalDevice.ConfigB\032\202A\027/term"
      "inal-device/config\022\211\001\n\020logical_channels\030"
      "\275\314\216\354\001 \001(\0132E.openconfig.openconfig_termin"
      "al_device.TerminalDevice.LogicalChannels"
      "B$\202A!/terminal-device/logical-channels\022\213"
      "\001\n\021operational_modes\030\276\255\350\031 \001(\0132F.openconf"
      "ig.openconfig_terminal_device.TerminalDe"
      "vice.OperationalModesB%\202A\"/terminal-devi"
      "ce/operational-modes\022h\n\005state\030\206\332\334G \001(\0132;"
      ".openconfig.openconfig_terminal_device.T"
      "erminalDevice.StateB\031\202A\026/terminal-device"
      "/state\032\010\n\006Config\032\374u\n\017LogicalChannels\022\223\001\n"
      "\007channel\030\201\336\231\374\001 \003(\0132P.openconfig.openconf"
      "ig_terminal_device.TerminalDevice.Logica"
      "lChannels.ChannelKeyB,\202A)/terminal-devic"
      "e/logical-channels/channel\032\240s\n\007Channel\022\235"
      "\001\n\006config\030\206\371\223\263\001 \001(\0132T.openconfig.opencon"
      "fig_terminal_device.TerminalDevice.Logic"
      "alChannels.Channel.ConfigB3\202A0/terminal-"
      "device/logical-channels/channel/config\022\242"
      "\001\n\010ethernet\030\235\271\335\031 \001(\0132V.openconfig.openco"
      "nfig_terminal_device.TerminalDevice.Logi"
      "calChannels.Channel.EthernetB5\202A2/termin"
      "al-device/logical-channels/channel/ether"
      "net\022\237\001\n\007ingress\030\361\314\3419 \001(\0132U.openconfig.op"
      "enconfig_terminal_device.TerminalDevice."
      "LogicalChannels.Channel.IngressB4\202A1/ter"
      "minal-device/logical-channels/channel/in"
      "gress\022\332\001\n\033logical_channel_assignments\030\326\266"
      "\322\266\001 \001(\0132g.openconfig.openconfig_terminal"
      "_device.TerminalDevice.LogicalChannels.C"
      "hannel.LogicalChannelAssignmentsBH\202AE/te"
      "rminal-device/logical-channels/channel/l"
      "ogical-channel-assignments\022\223\001\n\003otn\030\301\372\205\014 "
      "\001(\0132Q.openconfig.openconfig_terminal_dev"
      "ice.TerminalDevice.LogicalChannels.Chann"
      "el.OtnB0\202A-/terminal-device/logical-chan"
      "nels/channel/otn\022\232\001\n\005state\030\363\264\240\224\001 \001(\0132S.o"
      "penconfig.openconfig_terminal_device.Ter"
      "minalDevice.LogicalChannels.Channel.Stat"
      "eB2\202A//terminal-device/logical-channels/"
      "channel/state\032\346\010\n\006Config\022\222\001\n\013admin_state"
      "\030\306\334\205\310\001 \001(\01628.openconfig.enums.Openconfig"
      "TerminalDeviceAdminStateTypeB\?\202A</termin"
      "al-device/logical-channels/channel/confi"
      "g/admin-state\022o\n\013description\030\251\352\373\334\001 \001(\0132\025"
      ".ywrapper.StringValueB\?\202A</terminal-devi"
      "ce/logical-channels/channel/config/descr"
      "iption\022a\n\005index\030\277\335\227\263\001 \001(\0132\023.ywrapper.Uin"
      "tValueB9\202A6/terminal-device/logical-chan"
      "nels/channel/config/index\022\257\001\n\024logical_ch"
      "annel_type\030\275\324\275\004 \001(\0162D.openconfig.enums.O"
      "penconfigTransportTypesLOGICALELEMENTPRO"
      "TOCOLTYPEBH\202AE/terminal-device/logical-c"
      "hannels/channel/config/logical-channel-t"
      "ype\022\230\001\n\rloopback_mode\030\226\250\254\260\001 \001(\0162:.openco"
      "nfig.enums.OpenconfigTerminalDeviceLoopb"
      "ackModeTypeBA\202A>/terminal-device/logical"
      "-channels/channel/config/loopback-mode\022\230"
      "\001\n\nrate_class\030\350\237\264\350\001 \001(\0162@.openconfig.enu"
      "ms.OpenconfigTransportTypesTRIBUTARYRATE"
      "CLASSTYPEB>\202A;/terminal-device/logical-c"
      "hannels/channel/config/rate-class\022l\n\013tes"
      "t_signal\030\336\212\347t \001(\0132\023.ywrapper.BoolValueB\?"
      "\202A</terminal-device/logical-channels/cha"
      "nnel/config/test-signal\022\234\001\n\rtrib_protoco"
      "l\030\233\227\377A \001(\0162\?.openconfig.enums.Openconfig"
      "TransportTypesTRIBUTARYPROTOCOLTYPEBA\202A>"
      "/terminal-device/logical-channels/channe"
      "l/config/trib-protocol\032\255\r\n\010Ethernet\022\256\001\n\006"
      "config\030\322\304\254\036 \001(\0132].openconfig.openconfig_"
      "terminal_device.TerminalDevice.LogicalCh"
      "annels.Channel.Ethernet.ConfigB<\202A9/term"
      "inal-device/logical-channels/channel/eth"
      "ernet/config\022\253\001\n\005state\030\317\325\235^ \001(\0132\\.openco"
      "nfig.openconfig_terminal_device.Terminal"
      "Device.LogicalChannels.Channel.Ethernet."
      "StateB;\202A8/terminal-device/logical-chann"
      "els/channel/ethernet/state\032\010\n\006Config\032\267\n\n"
      "\005State\022|\n\017in_8021q_frames\030\347\256\371D \001(\0132\023.ywr"
      "apper.UintValueBK\202AH/terminal-device/log"
      "ical-channels/channel/ethernet/state/in-"
      "8021q-frames\022y\n\rin_crc_errors\030\342\235\270\275\001 \001(\0132"
      "\023.ywrapper.UintValueBI\202AF/terminal-devic"
      "e/logical-channels/channel/ethernet/stat"
      "e/in-crc-errors\022\202\001\n\022in_fragment_frames\030\213"
      "\337\241\023 \001(\0132\023.ywrapper.UintValueBN\202AK/termin"
      "al-device/logical-channels/channel/ether"
      "net/state/in-fragment-frames\022\177\n\020in_jabbe"
      "r_frames\030\275\267\246\325\001 \001(\0132\023.ywrapper.UintValueB"
      "L\202AI/terminal-device/logical-channels/ch"
      "annel/ethernet/state/in-jabber-frames\022\211\001"
      "\n\025in_mac_control_frames\030\300\350\372\241\001 \001(\0132\023.ywra"
      "pper.UintValueBQ\202AN/terminal-device/logi"
      "cal-channels/channel/ethernet/state/in-m"
      "ac-control-frames\022\205\001\n\023in_mac_pause_frame"
      "s\030\217\245\333\314\001 \001(\0132\023.ywrapper.UintValueBO\202AL/te"
      "rminal-device/logical-channels/channel/e"
      "thernet/state/in-mac-pause-frames\022\203\001\n\022in"
      "_oversize_frames\030\224\323\201\356\001 \001(\0132\023.ywrapper.Ui"
      "ntValueBN\202AK/terminal-device/logical-cha"
      "nnels/channel/ethernet/state/in-oversize"
      "-frames\022~\n\020out_8021q_frames\030\374\343\320^ \001(\0132\023.y"
      "wrapper.UintValueBL\202AI/terminal-device/l"
      "ogical-channels/channel/ethernet/state/o"
      "ut-8021q-frames\022\212\001\n\026out_mac_control_fram"
      "es\030\257\303\222\017 \001(\0132\023.ywrapper.UintValueBR\202AO/te"
      "rminal-device/logical-channels/channel/e"
      "thernet/state/out-mac-control-frames\022\207\001\n"
      "\024out_mac_pause_frames\030\344\263\357\321\001 \001(\0132\023.ywrapp"
      "er.UintValueBP\202AM/terminal-device/logica"
      "l-channels/channel/ethernet/state/out-ma"
      "c-pause-frames\032\351\006\n\007Ingress\022\254\001\n\006config\030\226\245"
      "\212^ \001(\0132\\.openconfig.openconfig_terminal_"
      "device.TerminalDevice.LogicalChannels.Ch"
      "annel.Ingress.ConfigB;\202A8/terminal-devic"
      "e/logical-channels/channel/ingress/confi"
      "g\022\252\001\n\005state\030\303\202\211\263\001 \001(\0132[.openconfig.openc"
      "onfig_terminal_device.TerminalDevice.Log"
      "icalChannels.Channel.Ingress.StateB:\202A7/"
      "terminal-device/logical-channels/channel"
      "/ingress/state\032\200\002\n\006Config\022~\n\020physical_ch"
      "annel\030\324\256\2677 \003(\0132\023.ywrapper.UintValueBL\202AI"
      "/terminal-device/logical-channels/channe"
      "l/ingress/config/physical-channel\022v\n\013tra"
      "nsceiver\030\261\320\3044 \001(\0132\025.ywrapper.StringValue"
      "BG\202AD/terminal-device/logical-channels/c"
      "hannel/ingress/config/transceiver\032\376\001\n\005St"
      "ate\022~\n\020physical_channel\030\273\307\364\353\001 \003(\0132\023.ywra"
      "pper.UintValueBK\202AH/terminal-device/logi"
      "cal-channels/channel/ingress/state/physi"
      "cal-channel\022u\n\013transceiver\030\334\232\256L \001(\0132\025.yw"
      "rapper.StringValueBF\202AC/terminal-device/"
      "logical-channels/channel/ingress/state/t"
      "ransceiver\032\317\032\n\031LogicalChannelAssignments"
      "\022\342\001\n\nassignment\030\232\212\243\370\001 \003(\0132u.openconfig.o"
      "penconfig_terminal_device.TerminalDevice"
      ".LogicalChannels.Channel.LogicalChannelA"
      "ssignments.AssignmentKeyBS\202AP/terminal-d"
      "evice/logical-channels/channel/logical-c"
      "hannel-assignments/assignment\032\307\026\n\nAssign"
      "ment\022\351\001\n\006config\030\213\203\364\350\001 \001(\0132y.openconfig.o"
      "penconfig_terminal_device.TerminalDevice"
      ".LogicalChannels.Channel.LogicalChannelA"
      "ssignments.Assignment.ConfigBZ\202AW/termin"
      "al-device/logical-channels/channel/logic"
      "al-channel-assignments/assignment/config"
      "\022\345\001\n\005state\030\314\371\324} \001(\0132x.openconfig.opencon"
      "fig_terminal_device.TerminalDevice.Logic"
      "alChannels.Channel.LogicalChannelAssignm"
      "ents.Assignment.StateBY\202AV/terminal-devi"
      "ce/logical-channels/channel/logical-chan"
      "nel-assignments/assignment/state\032\264\t\n\006Con"
      "fig\022\227\001\n\nallocation\030\300\310\350\225\001 \001(\0132\030.ywrapper."
      "Decimal64ValueBe\202Ab/terminal-device/logi"
      "cal-channels/channel/logical-channel-ass"
      "ignments/assignment/config/allocation\022\222\002"
      "\n\017assignment_type\030\312\226\346\331\001 \001(\0162\210\001.openconfi"
      "g.openconfig_terminal_device.TerminalDev"
      "ice.LogicalChannels.Channel.LogicalChann"
      "elAssignments.Assignment.Config.Assignme"
      "ntTypeBj\202Ag/terminal-device/logical-chan"
      "nels/channel/logical-channel-assignments"
      "/assignment/config/assignment-type\022\225\001\n\013d"
      "escription\030\324\361\316; \001(\0132\025.ywrapper.StringVal"
      "ueBf\202Ac/terminal-device/logical-channels"
      "/channel/logical-channel-assignments/ass"
      "ignment/config/description\022\207\001\n\005index\030\272\263\246"
      "G \001(\0132\023.ywrapper.UintValueB`\202A]/terminal"
      "-device/logical-channels/channel/logical"
      "-channel-assignments/assignment/config/i"
      "ndex\022\233\001\n\017logical_channel\030\241\305\212, \001(\0132\023.ywra"
      "pper.UintValueBj\202Ag/terminal-device/logi"
      "cal-channels/channel/logical-channel-ass"
      "ignments/assignment/config/logical-chann"
      "el\022\235\001\n\017optical_channel\030\264\320\312S \001(\0132\025.ywrapp"
      "er.StringValueBj\202Ag/terminal-device/logi"
      "cal-channels/channel/logical-channel-ass"
      "ignments/assignment/config/optical-chann"
      "el\"\232\001\n\016AssignmentType\022\030\n\024ASSIGNMENTTYPE_"
      "UNSET\020\000\0226\n\036ASSIGNMENTTYPE_LOGICAL_CHANNE"
      "L\020\001\032\022\202A\017LOGICAL_CHANNEL\0226\n\036ASSIGNMENTTYP"
      "E_OPTICAL_CHANNEL\020\002\032\022\202A\017OPTICAL_CHANNEL\032"
      "\255\t\n\005State\022\225\001\n\nallocation\030\221\352\250\021 \001(\0132\030.ywra"
      "pper.Decimal64ValueBd\202Aa/terminal-device"
      "/logical-channels/channel/logical-channe"
      "l-assignments/assignment/state/allocatio"
      "n\022\220\002\n\017assignment_type\030\231\243\361\205\001 \001(\0162\207\001.openc"
      "onfig.openconfig_terminal_device.Termina"
      "lDevice.LogicalChannels.Channel.LogicalC"
      "hannelAssignments.Assignment.State.Assig"
      "nmentTypeBi\202Af/terminal-device/logical-c"
      "hannels/channel/logical-channel-assignme"
      "nts/assignment/state/assignment-type\022\225\001\n"
      "\013description\030\267\211\307\251\001 \001(\0132\025.ywrapper.String"
      "ValueBe\202Ab/terminal-device/logical-chann"
      "els/channel/logical-channel-assignments/"
      "assignment/state/description\022\206\001\n\005index\030\375"
      "\354\2313 \001(\0132\023.ywrapper.UintValueB_\202A\\/termin"
      "al-device/logical-channels/channel/logic"
      "al-channel-assignments/assignment/state/"
      "index\022\232\001\n\017logical_channel\030\312\250\3752 \001(\0132\023.ywr"
      "apper.UintValueBi\202Af/terminal-device/log"
      "ical-channels/channel/logical-channel-as"
      "signments/assignment/state/logical-chann"
      "el\022\235\001\n\017optical_channel\030\273\223\243\305\001 \001(\0132\025.ywrap"
      "per.StringValueBi\202Af/terminal-device/log"
      "ical-channels/channel/logical-channel-as"
      "signments/assignment/state/optical-chann"
      "el\"\232\001\n\016AssignmentType\022\030\n\024ASSIGNMENTTYPE_"
      "UNSET\020\000\0226\n\036ASSIGNMENTTYPE_LOGICAL_CHANNE"
      "L\020\001\032\022\202A\017LOGICAL_CHANNEL\0226\n\036ASSIGNMENTTYP"
      "E_OPTICAL_CHANNEL\020\002\032\022\202A\017OPTICAL_CHANNEL\032"
      "\202\002\n\rAssignmentKey\022h\n\005index\030\001 \001(\004BY\202AV/te"
      "rminal-device/logical-channels/channel/l"
      "ogical-channel-assignments/assignment/in"
      "dex\022\206\001\n\nassignment\030\002 \001(\0132r.openconfig.op"
      "enconfig_terminal_device.TerminalDevice."
      "LogicalChannels.Channel.LogicalChannelAs"
      "signments.Assignment\032\332(\n\003Otn\022\244\001\n\006config\030"
      "\306\316\316: \001(\0132X.openconfig.openconfig_termina"
      "l_device.TerminalDevice.LogicalChannels."
      "Channel.Otn.ConfigB7\202A4/terminal-device/"
      "logical-channels/channel/otn/config\022\242\001\n\005"
      "state\030\263\210\354\315\001 \001(\0132W.openconfig.openconfig_"
      "terminal_device.TerminalDevice.LogicalCh"
      "annels.Channel.Otn.StateB6\202A3/terminal-d"
      "evice/logical-channels/channel/otn/state"
      "\032\370\002\n\006Config\022r\n\014tti_msg_auto\030\212\341\255D \001(\0132\023.y"
      "wrapper.BoolValueBD\202AA/terminal-device/l"
      "ogical-channels/channel/otn/config/tti-m"
      "sg-auto\022|\n\020tti_msg_expected\030\273\275\306\n \001(\0132\025.y"
      "wrapper.StringValueBH\202AE/terminal-device"
      "/logical-channels/channel/otn/config/tti"
      "-msg-expected\022|\n\020tti_msg_transmit\030\353\372\316= \001"
      "(\0132\025.ywrapper.StringValueBH\202AE/terminal-"
      "device/logical-channels/channel/otn/conf"
      "ig/tti-msg-transmit\032\213#\n\005State\022\207\001\n\027backgr"
      "ound_block_errors\030\262\254\301k \001(\0132\023.ywrapper.Ui"
      "ntValueBN\202AK/terminal-device/logical-cha"
      "nnels/channel/otn/state/background-block"
      "-errors\022w\n\017code_violations\030\236\360\247\007 \001(\0132\023.yw"
      "rapper.UintValueBF\202AC/terminal-device/lo"
      "gical-channels/channel/otn/state/code-vi"
      "olations\022w\n\017errored_seconds\030\207\207\2440 \001(\0132\023.y"
      "wrapper.UintValueBF\202AC/terminal-device/l"
      "ogical-channels/channel/otn/state/errore"
      "d-seconds\022\253\001\n\004esnr\030\206\272\332\343\001 \001(\0132\\.openconfi"
      "g.openconfig_terminal_device.TerminalDev"
      "ice.LogicalChannels.Channel.Otn.State.Es"
      "nrB;\202A8/terminal-device/logical-channels"
      "/channel/otn/state/esnr\022~\n\022fec_corrected"
      "_bits\030\343\263\326\245\001 \001(\0132\023.ywrapper.UintValueBI\202A"
      "F/terminal-device/logical-channels/chann"
      "el/otn/state/fec-corrected-bits\022\200\001\n\023fec_"
      "corrected_bytes\030\214\323\372\342\001 \001(\0132\023.ywrapper.Uin"
      "tValueBJ\202AG/terminal-device/logical-chan"
      "nels/channel/otn/state/fec-corrected-byt"
      "es\022\207\001\n\027fec_uncorrectable_words\030\206\240\301Z \001(\0132"
      "\023.ywrapper.UintValueBN\202AK/terminal-devic"
      "e/logical-channels/channel/otn/state/fec"
      "-uncorrectable-words\022\301\001\n\014post_fec_ber\030\351\340"
      "\267\364\001 \001(\0132b.openconfig.openconfig_terminal"
      "_device.TerminalDevice.LogicalChannels.C"
      "hannel.Otn.State.PostFecBerBC\202A@/termina"
      "l-device/logical-channels/channel/otn/st"
      "ate/post-fec-ber\022\275\001\n\013pre_fec_ber\030\304\320\365\013 \001("
      "\0132a.openconfig.openconfig_terminal_devic"
      "e.TerminalDevice.LogicalChannels.Channel"
      ".Otn.State.PreFecBerBB\202A\?/terminal-devic"
      "e/logical-channels/channel/otn/state/pre"
      "-fec-ber\022\262\001\n\007q_value\030\267\243\367I \001(\0132^.openconf"
      "ig.openconfig_terminal_device.TerminalDe"
      "vice.LogicalChannels.Channel.Otn.State.Q"
      "ValueB>\202A;/terminal-device/logical-chann"
      "els/channel/otn/state/q-value\022j\n\007rdi_msg"
      "\030\361\315\276\261\001 \001(\0132\025.ywrapper.StringValueB>\202A;/t"
      "erminal-device/logical-channels/channel/"
      "otn/state/rdi-msg\022\211\001\n\030severely_errored_s"
      "econds\030\365\341\301\010 \001(\0132\023.ywrapper.UintValueBO\202A"
      "L/terminal-device/logical-channels/chann"
      "el/otn/state/severely-errored-seconds\022q\n"
      "\014tti_msg_auto\030\355\241\214] \001(\0132\023.ywrapper.BoolVa"
      "lueBC\202A@/terminal-device/logical-channel"
      "s/channel/otn/state/tti-msg-auto\022{\n\020tti_"
      "msg_expected\030\260\275\216\030 \001(\0132\025.ywrapper.StringV"
      "alueBG\202AD/terminal-device/logical-channe"
      "ls/channel/otn/state/tti-msg-expected\022s\n"
      "\014tti_msg_recv\030\330\204\262\030 \001(\0132\025.ywrapper.String"
      "ValueBC\202A@/terminal-device/logical-chann"
      "els/channel/otn/state/tti-msg-recv\022{\n\020tt"
      "i_msg_transmit\030\260\240\201B \001(\0132\025.ywrapper.Strin"
      "gValueBG\202AD/terminal-device/logical-chan"
      "nels/channel/otn/state/tti-msg-transmit\022"
      "\177\n\023unavailable_seconds\030\230\261\355\034 \001(\0132\023.ywrapp"
      "er.UintValueBJ\202AG/terminal-device/logica"
      "l-channels/channel/otn/state/unavailable"
      "-seconds\032\257\004\n\004Esnr\022j\n\003avg\030\253\306\274\235\001 \001(\0132\030.ywr"
      "apper.Decimal64ValueB\?\202A</terminal-devic"
      "e/logical-channels/channel/otn/state/esn"
      "r/avg\022r\n\007instant\030\264\242\343\235\001 \001(\0132\030.ywrapper.De"
      "cimal64ValueBC\202A@/terminal-device/logica"
      "l-channels/channel/otn/state/esnr/instan"
      "t\022o\n\010interval\030\322\242\326\240\001 \001(\0132\023.ywrapper.UintV"
      "alueBD\202AA/terminal-device/logical-channe"
      "ls/channel/otn/state/esnr/interval\022j\n\003ma"
      "x\030\365\334\347\325\001 \001(\0132\030.ywrapper.Decimal64ValueB\?\202"
      "A</terminal-device/logical-channels/chan"
      "nel/otn/state/esnr/max\022j\n\003min\030\233\302\347\225\001 \001(\0132"
      "\030.ywrapper.Decimal64ValueB\?\202A</terminal-"
      "device/logical-channels/channel/otn/stat"
      "e/esnr/min\032\342\003\n\nPostFecBer\022q\n\003avg\030\364\323\370Y \001("
      "\0132\030.ywrapper.Decimal64ValueBG\202AD/termina"
      "l-device/logical-channels/channel/otn/st"
      "ate/post-fec-ber/avg\022z\n\007instant\030\317\236\213\231\001 \001("
      "\0132\030.ywrapper.Decimal64ValueBK\202AH/termina"
      "l-device/logical-channels/channel/otn/st"
      "ate/post-fec-ber/instant\022r\n\003max\030\216\367\206\301\001 \001("
      "\0132\030.ywrapper.Decimal64ValueBG\202AD/termina"
      "l-device/logical-channels/channel/otn/st"
      "ate/post-fec-ber/max\022q\n\003min\030\340\221\207\001 \001(\0132\030.y"
      "wrapper.Decimal64ValueBG\202AD/terminal-dev"
      "ice/logical-channels/channel/otn/state/p"
      "ost-fec-ber/min\032\335\003\n\tPreFecBer\022q\n\003avg\030\335\371\306"
      "\312\001 \001(\0132\030.ywrapper.Decimal64ValueBF\202AC/te"
      "rminal-device/logical-channels/channel/o"
      "tn/state/pre-fec-ber/avg\022y\n\007instant\030\212\274\215\307"
      "\001 \001(\0132\030.ywrapper.Decimal64ValueBJ\202AG/ter"
      "minal-device/logical-channels/channel/ot"
      "n/state/pre-fec-ber/instant\022p\n\003max\030\277\300\243b "
      "\001(\0132\030.ywrapper.Decimal64ValueBF\202AC/termi"
      "nal-device/logical-channels/channel/otn/"
      "state/pre-fec-ber/max\022p\n\003min\030\301\247\243\" \001(\0132\030."
      "ywrapper.Decimal64ValueBF\202AC/terminal-de"
      "vice/logical-channels/channel/otn/state/"
      "pre-fec-ber/min\032\277\004\n\006QValue\022m\n\003avg\030\266\263\325\321\001 "
      "\001(\0132\030.ywrapper.Decimal64ValueBB\202A\?/termi"
      "nal-device/logical-channels/channel/otn/"
      "state/q-value/avg\022u\n\007instant\030\265\375\344\276\001 \001(\0132\030"
      ".ywrapper.Decimal64ValueBF\202AC/terminal-d"
      "evice/logical-channels/channel/otn/state"
      "/q-value/instant\022r\n\010interval\030\311\343\253\271\001 \001(\0132\023"
      ".ywrapper.UintValueBG\202AD/terminal-device"
      "/logical-channels/channel/otn/state/q-va"
      "lue/interval\022l\n\003max\030\220\313\343\030 \001(\0132\030.ywrapper."
      "Decimal64ValueBB\202A\?/terminal-device/logi"
      "cal-channels/channel/otn/state/q-value/m"
      "ax\022m\n\003min\030\276\262\343\330\001 \001(\0132\030.ywrapper.Decimal64"
      "ValueBB\202A\?/terminal-device/logical-chann"
      "els/channel/otn/state/q-value/min\032\351\n\n\005St"
      "ate\022\220\001\n\013admin_state\030\263\372\275< \001(\01628.openconfi"
      "g.enums.OpenconfigTerminalDeviceAdminSta"
      "teTypeB>\202A;/terminal-device/logical-chan"
      "nels/channel/state/admin-state\022n\n\013descri"
      "ption\030\354\216\334\201\001 \001(\0132\025.ywrapper.StringValueB>"
      "\202A;/terminal-device/logical-channels/cha"
      "nnel/state/description\022_\n\005index\030\302\305\2648 \001(\013"
      "2\023.ywrapper.UintValueB8\202A5/terminal-devi"
      "ce/logical-channels/channel/state/index\022"
      "\263\001\n\nlink_state\030\222\350\235~ \001(\0162].openconfig.ope"
      "nconfig_terminal_device.TerminalDevice.L"
      "ogicalChannels.Channel.State.LinkStateB="
      "\202A:/terminal-device/logical-channels/cha"
      "nnel/state/link-state\022\255\001\n\024logical_channe"
      "l_type\030\366\371\004 \001(\0162D.openconfig.enums.Openco"
      "nfigTransportTypesLOGICALELEMENTPROTOCOL"
      "TYPEBG\202AD/terminal-device/logical-channe"
      "ls/channel/state/logical-channel-type\022\227\001"
      "\n\rloopback_mode\030\243\220\274\372\001 \001(\0162:.openconfig.e"
      "nums.OpenconfigTerminalDeviceLoopbackMod"
      "eTypeB@\202A=/terminal-device/logical-chann"
      "els/channel/state/loopback-mode\022\226\001\n\nrate"
      "_class\030\203\376\363n \001(\0162@.openconfig.enums.Openc"
      "onfigTransportTypesTRIBUTARYRATECLASSTYP"
      "EB=\202A:/terminal-device/logical-channels/"
      "channel/state/rate-class\022l\n\013test_signal\030"
      "\233\333\277\304\001 \001(\0132\023.ywrapper.BoolValueB>\202A;/term"
      "inal-device/logical-channels/channel/sta"
      "te/test-signal\022\234\001\n\rtrib_protocol\030\346\345\204\331\001 \001"
      "(\0162\?.openconfig.enums.OpenconfigTranspor"
      "tTypesTRIBUTARYPROTOCOLTYPEB@\202A=/termina"
      "l-device/logical-channels/channel/state/"
      "trib-protocol\"V\n\tLinkState\022\023\n\017LINKSTATE_"
      "UNSET\020\000\022\027\n\014LINKSTATE_UP\020\001\032\005\202A\002UP\022\033\n\016LINK"
      "STATE_DOWN\020\002\032\007\202A\004DOWN\032\257\001\n\nChannelKey\022A\n\005"
      "index\030\001 \001(\004B2\202A//terminal-device/logical"
      "-channels/channel/index\022^\n\007channel\030\002 \001(\013"
      "2M.openconfig.openconfig_terminal_device"
      ".TerminalDevice.LogicalChannels.Channel\032"
      "\327\007\n\020OperationalModes\022\214\001\n\004mode\030\370\200\232\362\001 \003(\0132"
      "N.openconfig.openconfig_terminal_device."
      "TerminalDevice.OperationalModes.ModeKeyB"
      "*\202A\'/terminal-device/operational-modes/m"
      "ode\032\207\005\n\004Mode\022\230\001\n\006config\030\375\311\305Y \001(\0132R.openc"
      "onfig.openconfig_terminal_device.Termina"
      "lDevice.OperationalModes.Mode.ConfigB1\202A"
      "./terminal-device/operational-modes/mode"
      "/config\022\225\001\n\005state\030\362\364\316c \001(\0132Q.openconfig."
      "openconfig_terminal_device.TerminalDevic"
      "e.OperationalModes.Mode.StateB0\202A-/termi"
      "nal-device/operational-modes/mode/state\032"
      "\010\n\006Config\032\301\002\n\005State\022k\n\013description\030\205\213\2363 "
      "\001(\0132\025.ywrapper.StringValueB<\202A9/terminal"
      "-device/operational-modes/mode/state/des"
      "cription\022a\n\007mode_id\030\342\247\341# \001(\0132\023.ywrapper."
      "UintValueB8\202A5/terminal-device/operation"
      "al-modes/mode/state/mode-id\022h\n\tvendor_id"
      "\030\253\236\230\373\001 \001(\0132\025.ywrapper.StringValueB:\202A7/t"
      "erminal-device/operational-modes/mode/st"
      "ate/vendor-id\032\251\001\n\007ModeKey\022C\n\007mode_id\030\001 \001"
      "(\004B2\202A//terminal-device/operational-mode"
      "s/mode/mode-id\022Y\n\004mode\030\002 \001(\0132K.openconfi"
      "g.openconfig_terminal_device.TerminalDev"
      "ice.OperationalModes.Mode\032\007\n\005Stateb\006prot"
      "o3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 16882);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "openconfig/openconfig_terminal_device/openconfig_terminal_device.proto", &protobuf_RegisterTypes);
  ::protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::AddDescriptors();
  ::protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fyext_2fyext_2eproto::AddDescriptors();
  ::protobuf_openconfig_2fenums_2fenums_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto
namespace openconfig {
namespace openconfig_terminal_device {
const ::google::protobuf::EnumDescriptor* TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_Config_AssignmentType_descriptor() {
  protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::file_level_enum_descriptors[0];
}
bool TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_Config_AssignmentType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_Config_AssignmentType TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_Config::ASSIGNMENTTYPE_UNSET;
const TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_Config_AssignmentType TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_Config::ASSIGNMENTTYPE_LOGICAL_CHANNEL;
const TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_Config_AssignmentType TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_Config::ASSIGNMENTTYPE_OPTICAL_CHANNEL;
const TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_Config_AssignmentType TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_Config::AssignmentType_MIN;
const TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_Config_AssignmentType TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_Config::AssignmentType_MAX;
const int TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_Config::AssignmentType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_State_AssignmentType_descriptor() {
  protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::file_level_enum_descriptors[1];
}
bool TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_State_AssignmentType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_State_AssignmentType TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_State::ASSIGNMENTTYPE_UNSET;
const TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_State_AssignmentType TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_State::ASSIGNMENTTYPE_LOGICAL_CHANNEL;
const TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_State_AssignmentType TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_State::ASSIGNMENTTYPE_OPTICAL_CHANNEL;
const TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_State_AssignmentType TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_State::AssignmentType_MIN;
const TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_State_AssignmentType TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_State::AssignmentType_MAX;
const int TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_State::AssignmentType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* TerminalDevice_LogicalChannels_Channel_State_LinkState_descriptor() {
  protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::file_level_enum_descriptors[2];
}
bool TerminalDevice_LogicalChannels_Channel_State_LinkState_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const TerminalDevice_LogicalChannels_Channel_State_LinkState TerminalDevice_LogicalChannels_Channel_State::LINKSTATE_UNSET;
const TerminalDevice_LogicalChannels_Channel_State_LinkState TerminalDevice_LogicalChannels_Channel_State::LINKSTATE_UP;
const TerminalDevice_LogicalChannels_Channel_State_LinkState TerminalDevice_LogicalChannels_Channel_State::LINKSTATE_DOWN;
const TerminalDevice_LogicalChannels_Channel_State_LinkState TerminalDevice_LogicalChannels_Channel_State::LinkState_MIN;
const TerminalDevice_LogicalChannels_Channel_State_LinkState TerminalDevice_LogicalChannels_Channel_State::LinkState_MAX;
const int TerminalDevice_LogicalChannels_Channel_State::LinkState_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void TerminalDevice_Config::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TerminalDevice_Config::TerminalDevice_Config()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::InitDefaultsTerminalDevice_Config();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_terminal_device.TerminalDevice.Config)
}
TerminalDevice_Config::TerminalDevice_Config(const TerminalDevice_Config& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_terminal_device.TerminalDevice.Config)
}

void TerminalDevice_Config::SharedCtor() {
  _cached_size_ = 0;
}

TerminalDevice_Config::~TerminalDevice_Config() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_terminal_device.TerminalDevice.Config)
  SharedDtor();
}

void TerminalDevice_Config::SharedDtor() {
}

void TerminalDevice_Config::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TerminalDevice_Config::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TerminalDevice_Config& TerminalDevice_Config::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::InitDefaultsTerminalDevice_Config();
  return *internal_default_instance();
}

TerminalDevice_Config* TerminalDevice_Config::New(::google::protobuf::Arena* arena) const {
  TerminalDevice_Config* n = new TerminalDevice_Config;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TerminalDevice_Config::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_terminal_device.TerminalDevice.Config)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool TerminalDevice_Config::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_terminal_device.TerminalDevice.Config)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_terminal_device.TerminalDevice.Config)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_terminal_device.TerminalDevice.Config)
  return false;
#undef DO_
}

void TerminalDevice_Config::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_terminal_device.TerminalDevice.Config)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_terminal_device.TerminalDevice.Config)
}

::google::protobuf::uint8* TerminalDevice_Config::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_terminal_device.TerminalDevice.Config)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_terminal_device.TerminalDevice.Config)
  return target;
}

size_t TerminalDevice_Config::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_terminal_device.TerminalDevice.Config)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TerminalDevice_Config::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_terminal_device.TerminalDevice.Config)
  GOOGLE_DCHECK_NE(&from, this);
  const TerminalDevice_Config* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TerminalDevice_Config>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_terminal_device.TerminalDevice.Config)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_terminal_device.TerminalDevice.Config)
    MergeFrom(*source);
  }
}

void TerminalDevice_Config::MergeFrom(const TerminalDevice_Config& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_terminal_device.TerminalDevice.Config)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void TerminalDevice_Config::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_terminal_device.TerminalDevice.Config)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TerminalDevice_Config::CopyFrom(const TerminalDevice_Config& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_terminal_device.TerminalDevice.Config)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TerminalDevice_Config::IsInitialized() const {
  return true;
}

void TerminalDevice_Config::Swap(TerminalDevice_Config* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TerminalDevice_Config::InternalSwap(TerminalDevice_Config* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TerminalDevice_Config::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TerminalDevice_LogicalChannels_Channel_Config::InitAsDefaultInstance() {
  ::openconfig::openconfig_terminal_device::_TerminalDevice_LogicalChannels_Channel_Config_default_instance_._instance.get_mutable()->description_ = const_cast< ::ywrapper::StringValue*>(
      ::ywrapper::StringValue::internal_default_instance());
  ::openconfig::openconfig_terminal_device::_TerminalDevice_LogicalChannels_Channel_Config_default_instance_._instance.get_mutable()->index_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
  ::openconfig::openconfig_terminal_device::_TerminalDevice_LogicalChannels_Channel_Config_default_instance_._instance.get_mutable()->test_signal_ = const_cast< ::ywrapper::BoolValue*>(
      ::ywrapper::BoolValue::internal_default_instance());
}
void TerminalDevice_LogicalChannels_Channel_Config::clear_description() {
  if (GetArenaNoVirtual() == NULL && description_ != NULL) {
    delete description_;
  }
  description_ = NULL;
}
void TerminalDevice_LogicalChannels_Channel_Config::clear_index() {
  if (GetArenaNoVirtual() == NULL && index_ != NULL) {
    delete index_;
  }
  index_ = NULL;
}
void TerminalDevice_LogicalChannels_Channel_Config::clear_test_signal() {
  if (GetArenaNoVirtual() == NULL && test_signal_ != NULL) {
    delete test_signal_;
  }
  test_signal_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TerminalDevice_LogicalChannels_Channel_Config::kAdminStateFieldNumber;
const int TerminalDevice_LogicalChannels_Channel_Config::kDescriptionFieldNumber;
const int TerminalDevice_LogicalChannels_Channel_Config::kIndexFieldNumber;
const int TerminalDevice_LogicalChannels_Channel_Config::kLogicalChannelTypeFieldNumber;
const int TerminalDevice_LogicalChannels_Channel_Config::kLoopbackModeFieldNumber;
const int TerminalDevice_LogicalChannels_Channel_Config::kRateClassFieldNumber;
const int TerminalDevice_LogicalChannels_Channel_Config::kTestSignalFieldNumber;
const int TerminalDevice_LogicalChannels_Channel_Config::kTribProtocolFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TerminalDevice_LogicalChannels_Channel_Config::TerminalDevice_LogicalChannels_Channel_Config()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::InitDefaultsTerminalDevice_LogicalChannels_Channel_Config();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Config)
}
TerminalDevice_LogicalChannels_Channel_Config::TerminalDevice_LogicalChannels_Channel_Config(const TerminalDevice_LogicalChannels_Channel_Config& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_test_signal()) {
    test_signal_ = new ::ywrapper::BoolValue(*from.test_signal_);
  } else {
    test_signal_ = NULL;
  }
  if (from.has_index()) {
    index_ = new ::ywrapper::UintValue(*from.index_);
  } else {
    index_ = NULL;
  }
  if (from.has_description()) {
    description_ = new ::ywrapper::StringValue(*from.description_);
  } else {
    description_ = NULL;
  }
  ::memcpy(&rate_class_, &from.rate_class_,
    static_cast<size_t>(reinterpret_cast<char*>(&admin_state_) -
    reinterpret_cast<char*>(&rate_class_)) + sizeof(admin_state_));
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Config)
}

void TerminalDevice_LogicalChannels_Channel_Config::SharedCtor() {
  ::memset(&test_signal_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&admin_state_) -
      reinterpret_cast<char*>(&test_signal_)) + sizeof(admin_state_));
  _cached_size_ = 0;
}

TerminalDevice_LogicalChannels_Channel_Config::~TerminalDevice_LogicalChannels_Channel_Config() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Config)
  SharedDtor();
}

void TerminalDevice_LogicalChannels_Channel_Config::SharedDtor() {
  if (this != internal_default_instance()) delete test_signal_;
  if (this != internal_default_instance()) delete index_;
  if (this != internal_default_instance()) delete description_;
}

void TerminalDevice_LogicalChannels_Channel_Config::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TerminalDevice_LogicalChannels_Channel_Config::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TerminalDevice_LogicalChannels_Channel_Config& TerminalDevice_LogicalChannels_Channel_Config::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::InitDefaultsTerminalDevice_LogicalChannels_Channel_Config();
  return *internal_default_instance();
}

TerminalDevice_LogicalChannels_Channel_Config* TerminalDevice_LogicalChannels_Channel_Config::New(::google::protobuf::Arena* arena) const {
  TerminalDevice_LogicalChannels_Channel_Config* n = new TerminalDevice_LogicalChannels_Channel_Config;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TerminalDevice_LogicalChannels_Channel_Config::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Config)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && test_signal_ != NULL) {
    delete test_signal_;
  }
  test_signal_ = NULL;
  if (GetArenaNoVirtual() == NULL && index_ != NULL) {
    delete index_;
  }
  index_ = NULL;
  if (GetArenaNoVirtual() == NULL && description_ != NULL) {
    delete description_;
  }
  description_ = NULL;
  ::memset(&rate_class_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&admin_state_) -
      reinterpret_cast<char*>(&rate_class_)) + sizeof(admin_state_));
  _internal_metadata_.Clear();
}

bool TerminalDevice_LogicalChannels_Channel_Config::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Config)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(3899162432u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .openconfig.enums.OpenconfigTransportTypesLOGICALELEMENTPROTOCOLTYPE logical_channel_type = 9398845 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/config/logical-channel-type"];
      case 9398845: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(232u /* 75190760 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_logical_channel_type(static_cast< ::openconfig::enums::OpenconfigTransportTypesLOGICALELEMENTPROTOCOLTYPE >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.enums.OpenconfigTransportTypesTRIBUTARYPROTOCOLTYPE trib_protocol = 138398619 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/config/trib-protocol"];
      case 138398619: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(216u /* 1107188952 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_trib_protocol(static_cast< ::openconfig::enums::OpenconfigTransportTypesTRIBUTARYPROTOCOLTYPE >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.BoolValue test_signal = 244958558 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/config/test-signal"];
      case 244958558: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(242u /* 1959668466 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_test_signal()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.enums.OpenconfigTerminalDeviceLoopbackModeType loopback_mode = 369824790 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/config/loopback-mode"];
      case 369824790: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(176u /* 2958598320 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_loopback_mode(static_cast< ::openconfig::enums::OpenconfigTerminalDeviceLoopbackModeType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.UintValue index = 375779007 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/config/index"];
      case 375779007: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(250u /* 3006232058 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_index()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.enums.OpenconfigTerminalDeviceAdminStateType admin_state = 419524166 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/config/admin-state"];
      case 419524166: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 3356193328 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_admin_state(static_cast< ::openconfig::enums::OpenconfigTerminalDeviceAdminStateType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.StringValue description = 463402281 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/config/description"];
      case 463402281: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 3707218250 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_description()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.enums.OpenconfigTransportTypesTRIBUTARYRATECLASSTYPE rate_class = 487395304 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/config/rate-class"];
      case 487395304: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 3899162432 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_rate_class(static_cast< ::openconfig::enums::OpenconfigTransportTypesTRIBUTARYRATECLASSTYPE >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Config)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Config)
  return false;
#undef DO_
}

void TerminalDevice_LogicalChannels_Channel_Config::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Config)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .openconfig.enums.OpenconfigTransportTypesLOGICALELEMENTPROTOCOLTYPE logical_channel_type = 9398845 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/config/logical-channel-type"];
  if (this->logical_channel_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      9398845, this->logical_channel_type(), output);
  }

  // .openconfig.enums.OpenconfigTransportTypesTRIBUTARYPROTOCOLTYPE trib_protocol = 138398619 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/config/trib-protocol"];
  if (this->trib_protocol() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      138398619, this->trib_protocol(), output);
  }

  // .ywrapper.BoolValue test_signal = 244958558 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/config/test-signal"];
  if (this->has_test_signal()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      244958558, *this->test_signal_, output);
  }

  // .openconfig.enums.OpenconfigTerminalDeviceLoopbackModeType loopback_mode = 369824790 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/config/loopback-mode"];
  if (this->loopback_mode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      369824790, this->loopback_mode(), output);
  }

  // .ywrapper.UintValue index = 375779007 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/config/index"];
  if (this->has_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      375779007, *this->index_, output);
  }

  // .openconfig.enums.OpenconfigTerminalDeviceAdminStateType admin_state = 419524166 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/config/admin-state"];
  if (this->admin_state() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      419524166, this->admin_state(), output);
  }

  // .ywrapper.StringValue description = 463402281 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/config/description"];
  if (this->has_description()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      463402281, *this->description_, output);
  }

  // .openconfig.enums.OpenconfigTransportTypesTRIBUTARYRATECLASSTYPE rate_class = 487395304 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/config/rate-class"];
  if (this->rate_class() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      487395304, this->rate_class(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Config)
}

::google::protobuf::uint8* TerminalDevice_LogicalChannels_Channel_Config::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Config)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .openconfig.enums.OpenconfigTransportTypesLOGICALELEMENTPROTOCOLTYPE logical_channel_type = 9398845 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/config/logical-channel-type"];
  if (this->logical_channel_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      9398845, this->logical_channel_type(), target);
  }

  // .openconfig.enums.OpenconfigTransportTypesTRIBUTARYPROTOCOLTYPE trib_protocol = 138398619 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/config/trib-protocol"];
  if (this->trib_protocol() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      138398619, this->trib_protocol(), target);
  }

  // .ywrapper.BoolValue test_signal = 244958558 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/config/test-signal"];
  if (this->has_test_signal()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        244958558, *this->test_signal_, deterministic, target);
  }

  // .openconfig.enums.OpenconfigTerminalDeviceLoopbackModeType loopback_mode = 369824790 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/config/loopback-mode"];
  if (this->loopback_mode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      369824790, this->loopback_mode(), target);
  }

  // .ywrapper.UintValue index = 375779007 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/config/index"];
  if (this->has_index()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        375779007, *this->index_, deterministic, target);
  }

  // .openconfig.enums.OpenconfigTerminalDeviceAdminStateType admin_state = 419524166 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/config/admin-state"];
  if (this->admin_state() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      419524166, this->admin_state(), target);
  }

  // .ywrapper.StringValue description = 463402281 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/config/description"];
  if (this->has_description()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        463402281, *this->description_, deterministic, target);
  }

  // .openconfig.enums.OpenconfigTransportTypesTRIBUTARYRATECLASSTYPE rate_class = 487395304 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/config/rate-class"];
  if (this->rate_class() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      487395304, this->rate_class(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Config)
  return target;
}

size_t TerminalDevice_LogicalChannels_Channel_Config::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Config)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .ywrapper.BoolValue test_signal = 244958558 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/config/test-signal"];
  if (this->has_test_signal()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->test_signal_);
  }

  // .ywrapper.UintValue index = 375779007 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/config/index"];
  if (this->has_index()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->index_);
  }

  // .ywrapper.StringValue description = 463402281 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/config/description"];
  if (this->has_description()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->description_);
  }

  // .openconfig.enums.OpenconfigTransportTypesTRIBUTARYRATECLASSTYPE rate_class = 487395304 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/config/rate-class"];
  if (this->rate_class() != 0) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->rate_class());
  }

  // .openconfig.enums.OpenconfigTransportTypesLOGICALELEMENTPROTOCOLTYPE logical_channel_type = 9398845 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/config/logical-channel-type"];
  if (this->logical_channel_type() != 0) {
    total_size += 4 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->logical_channel_type());
  }

  // .openconfig.enums.OpenconfigTransportTypesTRIBUTARYPROTOCOLTYPE trib_protocol = 138398619 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/config/trib-protocol"];
  if (this->trib_protocol() != 0) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->trib_protocol());
  }

  // .openconfig.enums.OpenconfigTerminalDeviceLoopbackModeType loopback_mode = 369824790 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/config/loopback-mode"];
  if (this->loopback_mode() != 0) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->loopback_mode());
  }

  // .openconfig.enums.OpenconfigTerminalDeviceAdminStateType admin_state = 419524166 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/config/admin-state"];
  if (this->admin_state() != 0) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->admin_state());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TerminalDevice_LogicalChannels_Channel_Config::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Config)
  GOOGLE_DCHECK_NE(&from, this);
  const TerminalDevice_LogicalChannels_Channel_Config* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TerminalDevice_LogicalChannels_Channel_Config>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Config)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Config)
    MergeFrom(*source);
  }
}

void TerminalDevice_LogicalChannels_Channel_Config::MergeFrom(const TerminalDevice_LogicalChannels_Channel_Config& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Config)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_test_signal()) {
    mutable_test_signal()->::ywrapper::BoolValue::MergeFrom(from.test_signal());
  }
  if (from.has_index()) {
    mutable_index()->::ywrapper::UintValue::MergeFrom(from.index());
  }
  if (from.has_description()) {
    mutable_description()->::ywrapper::StringValue::MergeFrom(from.description());
  }
  if (from.rate_class() != 0) {
    set_rate_class(from.rate_class());
  }
  if (from.logical_channel_type() != 0) {
    set_logical_channel_type(from.logical_channel_type());
  }
  if (from.trib_protocol() != 0) {
    set_trib_protocol(from.trib_protocol());
  }
  if (from.loopback_mode() != 0) {
    set_loopback_mode(from.loopback_mode());
  }
  if (from.admin_state() != 0) {
    set_admin_state(from.admin_state());
  }
}

void TerminalDevice_LogicalChannels_Channel_Config::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Config)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TerminalDevice_LogicalChannels_Channel_Config::CopyFrom(const TerminalDevice_LogicalChannels_Channel_Config& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Config)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TerminalDevice_LogicalChannels_Channel_Config::IsInitialized() const {
  return true;
}

void TerminalDevice_LogicalChannels_Channel_Config::Swap(TerminalDevice_LogicalChannels_Channel_Config* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TerminalDevice_LogicalChannels_Channel_Config::InternalSwap(TerminalDevice_LogicalChannels_Channel_Config* other) {
  using std::swap;
  swap(test_signal_, other->test_signal_);
  swap(index_, other->index_);
  swap(description_, other->description_);
  swap(rate_class_, other->rate_class_);
  swap(logical_channel_type_, other->logical_channel_type_);
  swap(trib_protocol_, other->trib_protocol_);
  swap(loopback_mode_, other->loopback_mode_);
  swap(admin_state_, other->admin_state_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TerminalDevice_LogicalChannels_Channel_Config::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TerminalDevice_LogicalChannels_Channel_Ethernet_Config::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TerminalDevice_LogicalChannels_Channel_Ethernet_Config::TerminalDevice_LogicalChannels_Channel_Ethernet_Config()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::InitDefaultsTerminalDevice_LogicalChannels_Channel_Ethernet_Config();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Ethernet.Config)
}
TerminalDevice_LogicalChannels_Channel_Ethernet_Config::TerminalDevice_LogicalChannels_Channel_Ethernet_Config(const TerminalDevice_LogicalChannels_Channel_Ethernet_Config& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Ethernet.Config)
}

void TerminalDevice_LogicalChannels_Channel_Ethernet_Config::SharedCtor() {
  _cached_size_ = 0;
}

TerminalDevice_LogicalChannels_Channel_Ethernet_Config::~TerminalDevice_LogicalChannels_Channel_Ethernet_Config() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Ethernet.Config)
  SharedDtor();
}

void TerminalDevice_LogicalChannels_Channel_Ethernet_Config::SharedDtor() {
}

void TerminalDevice_LogicalChannels_Channel_Ethernet_Config::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TerminalDevice_LogicalChannels_Channel_Ethernet_Config::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TerminalDevice_LogicalChannels_Channel_Ethernet_Config& TerminalDevice_LogicalChannels_Channel_Ethernet_Config::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::InitDefaultsTerminalDevice_LogicalChannels_Channel_Ethernet_Config();
  return *internal_default_instance();
}

TerminalDevice_LogicalChannels_Channel_Ethernet_Config* TerminalDevice_LogicalChannels_Channel_Ethernet_Config::New(::google::protobuf::Arena* arena) const {
  TerminalDevice_LogicalChannels_Channel_Ethernet_Config* n = new TerminalDevice_LogicalChannels_Channel_Ethernet_Config;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TerminalDevice_LogicalChannels_Channel_Ethernet_Config::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Ethernet.Config)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool TerminalDevice_LogicalChannels_Channel_Ethernet_Config::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Ethernet.Config)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Ethernet.Config)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Ethernet.Config)
  return false;
#undef DO_
}

void TerminalDevice_LogicalChannels_Channel_Ethernet_Config::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Ethernet.Config)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Ethernet.Config)
}

::google::protobuf::uint8* TerminalDevice_LogicalChannels_Channel_Ethernet_Config::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Ethernet.Config)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Ethernet.Config)
  return target;
}

size_t TerminalDevice_LogicalChannels_Channel_Ethernet_Config::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Ethernet.Config)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TerminalDevice_LogicalChannels_Channel_Ethernet_Config::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Ethernet.Config)
  GOOGLE_DCHECK_NE(&from, this);
  const TerminalDevice_LogicalChannels_Channel_Ethernet_Config* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TerminalDevice_LogicalChannels_Channel_Ethernet_Config>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Ethernet.Config)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Ethernet.Config)
    MergeFrom(*source);
  }
}

void TerminalDevice_LogicalChannels_Channel_Ethernet_Config::MergeFrom(const TerminalDevice_LogicalChannels_Channel_Ethernet_Config& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Ethernet.Config)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void TerminalDevice_LogicalChannels_Channel_Ethernet_Config::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Ethernet.Config)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TerminalDevice_LogicalChannels_Channel_Ethernet_Config::CopyFrom(const TerminalDevice_LogicalChannels_Channel_Ethernet_Config& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Ethernet.Config)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TerminalDevice_LogicalChannels_Channel_Ethernet_Config::IsInitialized() const {
  return true;
}

void TerminalDevice_LogicalChannels_Channel_Ethernet_Config::Swap(TerminalDevice_LogicalChannels_Channel_Ethernet_Config* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TerminalDevice_LogicalChannels_Channel_Ethernet_Config::InternalSwap(TerminalDevice_LogicalChannels_Channel_Ethernet_Config* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TerminalDevice_LogicalChannels_Channel_Ethernet_Config::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TerminalDevice_LogicalChannels_Channel_Ethernet_State::InitAsDefaultInstance() {
  ::openconfig::openconfig_terminal_device::_TerminalDevice_LogicalChannels_Channel_Ethernet_State_default_instance_._instance.get_mutable()->in_8021q_frames_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
  ::openconfig::openconfig_terminal_device::_TerminalDevice_LogicalChannels_Channel_Ethernet_State_default_instance_._instance.get_mutable()->in_crc_errors_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
  ::openconfig::openconfig_terminal_device::_TerminalDevice_LogicalChannels_Channel_Ethernet_State_default_instance_._instance.get_mutable()->in_fragment_frames_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
  ::openconfig::openconfig_terminal_device::_TerminalDevice_LogicalChannels_Channel_Ethernet_State_default_instance_._instance.get_mutable()->in_jabber_frames_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
  ::openconfig::openconfig_terminal_device::_TerminalDevice_LogicalChannels_Channel_Ethernet_State_default_instance_._instance.get_mutable()->in_mac_control_frames_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
  ::openconfig::openconfig_terminal_device::_TerminalDevice_LogicalChannels_Channel_Ethernet_State_default_instance_._instance.get_mutable()->in_mac_pause_frames_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
  ::openconfig::openconfig_terminal_device::_TerminalDevice_LogicalChannels_Channel_Ethernet_State_default_instance_._instance.get_mutable()->in_oversize_frames_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
  ::openconfig::openconfig_terminal_device::_TerminalDevice_LogicalChannels_Channel_Ethernet_State_default_instance_._instance.get_mutable()->out_8021q_frames_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
  ::openconfig::openconfig_terminal_device::_TerminalDevice_LogicalChannels_Channel_Ethernet_State_default_instance_._instance.get_mutable()->out_mac_control_frames_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
  ::openconfig::openconfig_terminal_device::_TerminalDevice_LogicalChannels_Channel_Ethernet_State_default_instance_._instance.get_mutable()->out_mac_pause_frames_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
}
void TerminalDevice_LogicalChannels_Channel_Ethernet_State::clear_in_8021q_frames() {
  if (GetArenaNoVirtual() == NULL && in_8021q_frames_ != NULL) {
    delete in_8021q_frames_;
  }
  in_8021q_frames_ = NULL;
}
void TerminalDevice_LogicalChannels_Channel_Ethernet_State::clear_in_crc_errors() {
  if (GetArenaNoVirtual() == NULL && in_crc_errors_ != NULL) {
    delete in_crc_errors_;
  }
  in_crc_errors_ = NULL;
}
void TerminalDevice_LogicalChannels_Channel_Ethernet_State::clear_in_fragment_frames() {
  if (GetArenaNoVirtual() == NULL && in_fragment_frames_ != NULL) {
    delete in_fragment_frames_;
  }
  in_fragment_frames_ = NULL;
}
void TerminalDevice_LogicalChannels_Channel_Ethernet_State::clear_in_jabber_frames() {
  if (GetArenaNoVirtual() == NULL && in_jabber_frames_ != NULL) {
    delete in_jabber_frames_;
  }
  in_jabber_frames_ = NULL;
}
void TerminalDevice_LogicalChannels_Channel_Ethernet_State::clear_in_mac_control_frames() {
  if (GetArenaNoVirtual() == NULL && in_mac_control_frames_ != NULL) {
    delete in_mac_control_frames_;
  }
  in_mac_control_frames_ = NULL;
}
void TerminalDevice_LogicalChannels_Channel_Ethernet_State::clear_in_mac_pause_frames() {
  if (GetArenaNoVirtual() == NULL && in_mac_pause_frames_ != NULL) {
    delete in_mac_pause_frames_;
  }
  in_mac_pause_frames_ = NULL;
}
void TerminalDevice_LogicalChannels_Channel_Ethernet_State::clear_in_oversize_frames() {
  if (GetArenaNoVirtual() == NULL && in_oversize_frames_ != NULL) {
    delete in_oversize_frames_;
  }
  in_oversize_frames_ = NULL;
}
void TerminalDevice_LogicalChannels_Channel_Ethernet_State::clear_out_8021q_frames() {
  if (GetArenaNoVirtual() == NULL && out_8021q_frames_ != NULL) {
    delete out_8021q_frames_;
  }
  out_8021q_frames_ = NULL;
}
void TerminalDevice_LogicalChannels_Channel_Ethernet_State::clear_out_mac_control_frames() {
  if (GetArenaNoVirtual() == NULL && out_mac_control_frames_ != NULL) {
    delete out_mac_control_frames_;
  }
  out_mac_control_frames_ = NULL;
}
void TerminalDevice_LogicalChannels_Channel_Ethernet_State::clear_out_mac_pause_frames() {
  if (GetArenaNoVirtual() == NULL && out_mac_pause_frames_ != NULL) {
    delete out_mac_pause_frames_;
  }
  out_mac_pause_frames_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TerminalDevice_LogicalChannels_Channel_Ethernet_State::kIn8021QFramesFieldNumber;
const int TerminalDevice_LogicalChannels_Channel_Ethernet_State::kInCrcErrorsFieldNumber;
const int TerminalDevice_LogicalChannels_Channel_Ethernet_State::kInFragmentFramesFieldNumber;
const int TerminalDevice_LogicalChannels_Channel_Ethernet_State::kInJabberFramesFieldNumber;
const int TerminalDevice_LogicalChannels_Channel_Ethernet_State::kInMacControlFramesFieldNumber;
const int TerminalDevice_LogicalChannels_Channel_Ethernet_State::kInMacPauseFramesFieldNumber;
const int TerminalDevice_LogicalChannels_Channel_Ethernet_State::kInOversizeFramesFieldNumber;
const int TerminalDevice_LogicalChannels_Channel_Ethernet_State::kOut8021QFramesFieldNumber;
const int TerminalDevice_LogicalChannels_Channel_Ethernet_State::kOutMacControlFramesFieldNumber;
const int TerminalDevice_LogicalChannels_Channel_Ethernet_State::kOutMacPauseFramesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TerminalDevice_LogicalChannels_Channel_Ethernet_State::TerminalDevice_LogicalChannels_Channel_Ethernet_State()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::InitDefaultsTerminalDevice_LogicalChannels_Channel_Ethernet_State();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Ethernet.State)
}
TerminalDevice_LogicalChannels_Channel_Ethernet_State::TerminalDevice_LogicalChannels_Channel_Ethernet_State(const TerminalDevice_LogicalChannels_Channel_Ethernet_State& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_out_mac_control_frames()) {
    out_mac_control_frames_ = new ::ywrapper::UintValue(*from.out_mac_control_frames_);
  } else {
    out_mac_control_frames_ = NULL;
  }
  if (from.has_in_fragment_frames()) {
    in_fragment_frames_ = new ::ywrapper::UintValue(*from.in_fragment_frames_);
  } else {
    in_fragment_frames_ = NULL;
  }
  if (from.has_in_8021q_frames()) {
    in_8021q_frames_ = new ::ywrapper::UintValue(*from.in_8021q_frames_);
  } else {
    in_8021q_frames_ = NULL;
  }
  if (from.has_out_8021q_frames()) {
    out_8021q_frames_ = new ::ywrapper::UintValue(*from.out_8021q_frames_);
  } else {
    out_8021q_frames_ = NULL;
  }
  if (from.has_in_mac_control_frames()) {
    in_mac_control_frames_ = new ::ywrapper::UintValue(*from.in_mac_control_frames_);
  } else {
    in_mac_control_frames_ = NULL;
  }
  if (from.has_in_crc_errors()) {
    in_crc_errors_ = new ::ywrapper::UintValue(*from.in_crc_errors_);
  } else {
    in_crc_errors_ = NULL;
  }
  if (from.has_in_mac_pause_frames()) {
    in_mac_pause_frames_ = new ::ywrapper::UintValue(*from.in_mac_pause_frames_);
  } else {
    in_mac_pause_frames_ = NULL;
  }
  if (from.has_out_mac_pause_frames()) {
    out_mac_pause_frames_ = new ::ywrapper::UintValue(*from.out_mac_pause_frames_);
  } else {
    out_mac_pause_frames_ = NULL;
  }
  if (from.has_in_jabber_frames()) {
    in_jabber_frames_ = new ::ywrapper::UintValue(*from.in_jabber_frames_);
  } else {
    in_jabber_frames_ = NULL;
  }
  if (from.has_in_oversize_frames()) {
    in_oversize_frames_ = new ::ywrapper::UintValue(*from.in_oversize_frames_);
  } else {
    in_oversize_frames_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Ethernet.State)
}

void TerminalDevice_LogicalChannels_Channel_Ethernet_State::SharedCtor() {
  ::memset(&out_mac_control_frames_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&in_oversize_frames_) -
      reinterpret_cast<char*>(&out_mac_control_frames_)) + sizeof(in_oversize_frames_));
  _cached_size_ = 0;
}

TerminalDevice_LogicalChannels_Channel_Ethernet_State::~TerminalDevice_LogicalChannels_Channel_Ethernet_State() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Ethernet.State)
  SharedDtor();
}

void TerminalDevice_LogicalChannels_Channel_Ethernet_State::SharedDtor() {
  if (this != internal_default_instance()) delete out_mac_control_frames_;
  if (this != internal_default_instance()) delete in_fragment_frames_;
  if (this != internal_default_instance()) delete in_8021q_frames_;
  if (this != internal_default_instance()) delete out_8021q_frames_;
  if (this != internal_default_instance()) delete in_mac_control_frames_;
  if (this != internal_default_instance()) delete in_crc_errors_;
  if (this != internal_default_instance()) delete in_mac_pause_frames_;
  if (this != internal_default_instance()) delete out_mac_pause_frames_;
  if (this != internal_default_instance()) delete in_jabber_frames_;
  if (this != internal_default_instance()) delete in_oversize_frames_;
}

void TerminalDevice_LogicalChannels_Channel_Ethernet_State::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TerminalDevice_LogicalChannels_Channel_Ethernet_State::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TerminalDevice_LogicalChannels_Channel_Ethernet_State& TerminalDevice_LogicalChannels_Channel_Ethernet_State::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::InitDefaultsTerminalDevice_LogicalChannels_Channel_Ethernet_State();
  return *internal_default_instance();
}

TerminalDevice_LogicalChannels_Channel_Ethernet_State* TerminalDevice_LogicalChannels_Channel_Ethernet_State::New(::google::protobuf::Arena* arena) const {
  TerminalDevice_LogicalChannels_Channel_Ethernet_State* n = new TerminalDevice_LogicalChannels_Channel_Ethernet_State;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TerminalDevice_LogicalChannels_Channel_Ethernet_State::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Ethernet.State)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && out_mac_control_frames_ != NULL) {
    delete out_mac_control_frames_;
  }
  out_mac_control_frames_ = NULL;
  if (GetArenaNoVirtual() == NULL && in_fragment_frames_ != NULL) {
    delete in_fragment_frames_;
  }
  in_fragment_frames_ = NULL;
  if (GetArenaNoVirtual() == NULL && in_8021q_frames_ != NULL) {
    delete in_8021q_frames_;
  }
  in_8021q_frames_ = NULL;
  if (GetArenaNoVirtual() == NULL && out_8021q_frames_ != NULL) {
    delete out_8021q_frames_;
  }
  out_8021q_frames_ = NULL;
  if (GetArenaNoVirtual() == NULL && in_mac_control_frames_ != NULL) {
    delete in_mac_control_frames_;
  }
  in_mac_control_frames_ = NULL;
  if (GetArenaNoVirtual() == NULL && in_crc_errors_ != NULL) {
    delete in_crc_errors_;
  }
  in_crc_errors_ = NULL;
  if (GetArenaNoVirtual() == NULL && in_mac_pause_frames_ != NULL) {
    delete in_mac_pause_frames_;
  }
  in_mac_pause_frames_ = NULL;
  if (GetArenaNoVirtual() == NULL && out_mac_pause_frames_ != NULL) {
    delete out_mac_pause_frames_;
  }
  out_mac_pause_frames_ = NULL;
  if (GetArenaNoVirtual() == NULL && in_jabber_frames_ != NULL) {
    delete in_jabber_frames_;
  }
  in_jabber_frames_ = NULL;
  if (GetArenaNoVirtual() == NULL && in_oversize_frames_ != NULL) {
    delete in_oversize_frames_;
  }
  in_oversize_frames_ = NULL;
  _internal_metadata_.Clear();
}

bool TerminalDevice_LogicalChannels_Channel_Ethernet_State::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Ethernet.State)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(3993193634u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .ywrapper.UintValue out_mac_control_frames = 31760815 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/ethernet/state/out-mac-control-frames"];
      case 31760815: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 254086522 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_out_mac_control_frames()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.UintValue in_fragment_frames = 40398731 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/ethernet/state/in-fragment-frames"];
      case 40398731: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 323189850 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_in_fragment_frames()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.UintValue in_8021q_frames = 144594791 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/ethernet/state/in-8021q-frames"];
      case 144594791: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 1156758330 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_in_8021q_frames()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.UintValue out_8021q_frames = 198455804 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/ethernet/state/out-8021q-frames"];
      case 198455804: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(226u /* 1587646434 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_out_8021q_frames()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.UintValue in_mac_control_frames = 339653696 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/ethernet/state/in-mac-control-frames"];
      case 339653696: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(2u /* 2717229570 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_in_mac_control_frames()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.UintValue in_crc_errors = 397283042 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/ethernet/state/in-crc-errors"];
      case 397283042: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 3178264338 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_in_crc_errors()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.UintValue in_mac_pause_frames = 429314703 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/ethernet/state/in-mac-pause-frames"];
      case 429314703: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 3434517626 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_in_mac_pause_frames()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.UintValue out_mac_pause_frames = 440130020 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/ethernet/state/out-mac-pause-frames"];
      case 440130020: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 3521040162 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_out_mac_pause_frames()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.UintValue in_jabber_frames = 447323069 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/ethernet/state/in-jabber-frames"];
      case 447323069: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(234u /* 3578584554 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_in_jabber_frames()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.UintValue in_oversize_frames = 499149204 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/ethernet/state/in-oversize-frames"];
      case 499149204: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 3993193634 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_in_oversize_frames()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Ethernet.State)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Ethernet.State)
  return false;
#undef DO_
}

void TerminalDevice_LogicalChannels_Channel_Ethernet_State::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Ethernet.State)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ywrapper.UintValue out_mac_control_frames = 31760815 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/ethernet/state/out-mac-control-frames"];
  if (this->has_out_mac_control_frames()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      31760815, *this->out_mac_control_frames_, output);
  }

  // .ywrapper.UintValue in_fragment_frames = 40398731 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/ethernet/state/in-fragment-frames"];
  if (this->has_in_fragment_frames()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      40398731, *this->in_fragment_frames_, output);
  }

  // .ywrapper.UintValue in_8021q_frames = 144594791 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/ethernet/state/in-8021q-frames"];
  if (this->has_in_8021q_frames()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      144594791, *this->in_8021q_frames_, output);
  }

  // .ywrapper.UintValue out_8021q_frames = 198455804 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/ethernet/state/out-8021q-frames"];
  if (this->has_out_8021q_frames()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      198455804, *this->out_8021q_frames_, output);
  }

  // .ywrapper.UintValue in_mac_control_frames = 339653696 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/ethernet/state/in-mac-control-frames"];
  if (this->has_in_mac_control_frames()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      339653696, *this->in_mac_control_frames_, output);
  }

  // .ywrapper.UintValue in_crc_errors = 397283042 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/ethernet/state/in-crc-errors"];
  if (this->has_in_crc_errors()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      397283042, *this->in_crc_errors_, output);
  }

  // .ywrapper.UintValue in_mac_pause_frames = 429314703 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/ethernet/state/in-mac-pause-frames"];
  if (this->has_in_mac_pause_frames()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      429314703, *this->in_mac_pause_frames_, output);
  }

  // .ywrapper.UintValue out_mac_pause_frames = 440130020 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/ethernet/state/out-mac-pause-frames"];
  if (this->has_out_mac_pause_frames()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      440130020, *this->out_mac_pause_frames_, output);
  }

  // .ywrapper.UintValue in_jabber_frames = 447323069 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/ethernet/state/in-jabber-frames"];
  if (this->has_in_jabber_frames()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      447323069, *this->in_jabber_frames_, output);
  }

  // .ywrapper.UintValue in_oversize_frames = 499149204 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/ethernet/state/in-oversize-frames"];
  if (this->has_in_oversize_frames()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      499149204, *this->in_oversize_frames_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Ethernet.State)
}

::google::protobuf::uint8* TerminalDevice_LogicalChannels_Channel_Ethernet_State::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Ethernet.State)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ywrapper.UintValue out_mac_control_frames = 31760815 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/ethernet/state/out-mac-control-frames"];
  if (this->has_out_mac_control_frames()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        31760815, *this->out_mac_control_frames_, deterministic, target);
  }

  // .ywrapper.UintValue in_fragment_frames = 40398731 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/ethernet/state/in-fragment-frames"];
  if (this->has_in_fragment_frames()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        40398731, *this->in_fragment_frames_, deterministic, target);
  }

  // .ywrapper.UintValue in_8021q_frames = 144594791 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/ethernet/state/in-8021q-frames"];
  if (this->has_in_8021q_frames()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        144594791, *this->in_8021q_frames_, deterministic, target);
  }

  // .ywrapper.UintValue out_8021q_frames = 198455804 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/ethernet/state/out-8021q-frames"];
  if (this->has_out_8021q_frames()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        198455804, *this->out_8021q_frames_, deterministic, target);
  }

  // .ywrapper.UintValue in_mac_control_frames = 339653696 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/ethernet/state/in-mac-control-frames"];
  if (this->has_in_mac_control_frames()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        339653696, *this->in_mac_control_frames_, deterministic, target);
  }

  // .ywrapper.UintValue in_crc_errors = 397283042 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/ethernet/state/in-crc-errors"];
  if (this->has_in_crc_errors()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        397283042, *this->in_crc_errors_, deterministic, target);
  }

  // .ywrapper.UintValue in_mac_pause_frames = 429314703 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/ethernet/state/in-mac-pause-frames"];
  if (this->has_in_mac_pause_frames()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        429314703, *this->in_mac_pause_frames_, deterministic, target);
  }

  // .ywrapper.UintValue out_mac_pause_frames = 440130020 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/ethernet/state/out-mac-pause-frames"];
  if (this->has_out_mac_pause_frames()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        440130020, *this->out_mac_pause_frames_, deterministic, target);
  }

  // .ywrapper.UintValue in_jabber_frames = 447323069 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/ethernet/state/in-jabber-frames"];
  if (this->has_in_jabber_frames()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        447323069, *this->in_jabber_frames_, deterministic, target);
  }

  // .ywrapper.UintValue in_oversize_frames = 499149204 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/ethernet/state/in-oversize-frames"];
  if (this->has_in_oversize_frames()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        499149204, *this->in_oversize_frames_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Ethernet.State)
  return target;
}

size_t TerminalDevice_LogicalChannels_Channel_Ethernet_State::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Ethernet.State)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .ywrapper.UintValue out_mac_control_frames = 31760815 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/ethernet/state/out-mac-control-frames"];
  if (this->has_out_mac_control_frames()) {
    total_size += 4 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->out_mac_control_frames_);
  }

  // .ywrapper.UintValue in_fragment_frames = 40398731 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/ethernet/state/in-fragment-frames"];
  if (this->has_in_fragment_frames()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->in_fragment_frames_);
  }

  // .ywrapper.UintValue in_8021q_frames = 144594791 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/ethernet/state/in-8021q-frames"];
  if (this->has_in_8021q_frames()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->in_8021q_frames_);
  }

  // .ywrapper.UintValue out_8021q_frames = 198455804 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/ethernet/state/out-8021q-frames"];
  if (this->has_out_8021q_frames()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->out_8021q_frames_);
  }

  // .ywrapper.UintValue in_mac_control_frames = 339653696 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/ethernet/state/in-mac-control-frames"];
  if (this->has_in_mac_control_frames()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->in_mac_control_frames_);
  }

  // .ywrapper.UintValue in_crc_errors = 397283042 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/ethernet/state/in-crc-errors"];
  if (this->has_in_crc_errors()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->in_crc_errors_);
  }

  // .ywrapper.UintValue in_mac_pause_frames = 429314703 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/ethernet/state/in-mac-pause-frames"];
  if (this->has_in_mac_pause_frames()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->in_mac_pause_frames_);
  }

  // .ywrapper.UintValue out_mac_pause_frames = 440130020 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/ethernet/state/out-mac-pause-frames"];
  if (this->has_out_mac_pause_frames()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->out_mac_pause_frames_);
  }

  // .ywrapper.UintValue in_jabber_frames = 447323069 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/ethernet/state/in-jabber-frames"];
  if (this->has_in_jabber_frames()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->in_jabber_frames_);
  }

  // .ywrapper.UintValue in_oversize_frames = 499149204 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/ethernet/state/in-oversize-frames"];
  if (this->has_in_oversize_frames()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->in_oversize_frames_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TerminalDevice_LogicalChannels_Channel_Ethernet_State::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Ethernet.State)
  GOOGLE_DCHECK_NE(&from, this);
  const TerminalDevice_LogicalChannels_Channel_Ethernet_State* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TerminalDevice_LogicalChannels_Channel_Ethernet_State>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Ethernet.State)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Ethernet.State)
    MergeFrom(*source);
  }
}

void TerminalDevice_LogicalChannels_Channel_Ethernet_State::MergeFrom(const TerminalDevice_LogicalChannels_Channel_Ethernet_State& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Ethernet.State)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_out_mac_control_frames()) {
    mutable_out_mac_control_frames()->::ywrapper::UintValue::MergeFrom(from.out_mac_control_frames());
  }
  if (from.has_in_fragment_frames()) {
    mutable_in_fragment_frames()->::ywrapper::UintValue::MergeFrom(from.in_fragment_frames());
  }
  if (from.has_in_8021q_frames()) {
    mutable_in_8021q_frames()->::ywrapper::UintValue::MergeFrom(from.in_8021q_frames());
  }
  if (from.has_out_8021q_frames()) {
    mutable_out_8021q_frames()->::ywrapper::UintValue::MergeFrom(from.out_8021q_frames());
  }
  if (from.has_in_mac_control_frames()) {
    mutable_in_mac_control_frames()->::ywrapper::UintValue::MergeFrom(from.in_mac_control_frames());
  }
  if (from.has_in_crc_errors()) {
    mutable_in_crc_errors()->::ywrapper::UintValue::MergeFrom(from.in_crc_errors());
  }
  if (from.has_in_mac_pause_frames()) {
    mutable_in_mac_pause_frames()->::ywrapper::UintValue::MergeFrom(from.in_mac_pause_frames());
  }
  if (from.has_out_mac_pause_frames()) {
    mutable_out_mac_pause_frames()->::ywrapper::UintValue::MergeFrom(from.out_mac_pause_frames());
  }
  if (from.has_in_jabber_frames()) {
    mutable_in_jabber_frames()->::ywrapper::UintValue::MergeFrom(from.in_jabber_frames());
  }
  if (from.has_in_oversize_frames()) {
    mutable_in_oversize_frames()->::ywrapper::UintValue::MergeFrom(from.in_oversize_frames());
  }
}

void TerminalDevice_LogicalChannels_Channel_Ethernet_State::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Ethernet.State)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TerminalDevice_LogicalChannels_Channel_Ethernet_State::CopyFrom(const TerminalDevice_LogicalChannels_Channel_Ethernet_State& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Ethernet.State)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TerminalDevice_LogicalChannels_Channel_Ethernet_State::IsInitialized() const {
  return true;
}

void TerminalDevice_LogicalChannels_Channel_Ethernet_State::Swap(TerminalDevice_LogicalChannels_Channel_Ethernet_State* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TerminalDevice_LogicalChannels_Channel_Ethernet_State::InternalSwap(TerminalDevice_LogicalChannels_Channel_Ethernet_State* other) {
  using std::swap;
  swap(out_mac_control_frames_, other->out_mac_control_frames_);
  swap(in_fragment_frames_, other->in_fragment_frames_);
  swap(in_8021q_frames_, other->in_8021q_frames_);
  swap(out_8021q_frames_, other->out_8021q_frames_);
  swap(in_mac_control_frames_, other->in_mac_control_frames_);
  swap(in_crc_errors_, other->in_crc_errors_);
  swap(in_mac_pause_frames_, other->in_mac_pause_frames_);
  swap(out_mac_pause_frames_, other->out_mac_pause_frames_);
  swap(in_jabber_frames_, other->in_jabber_frames_);
  swap(in_oversize_frames_, other->in_oversize_frames_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TerminalDevice_LogicalChannels_Channel_Ethernet_State::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TerminalDevice_LogicalChannels_Channel_Ethernet::InitAsDefaultInstance() {
  ::openconfig::openconfig_terminal_device::_TerminalDevice_LogicalChannels_Channel_Ethernet_default_instance_._instance.get_mutable()->config_ = const_cast< ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Ethernet_Config*>(
      ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Ethernet_Config::internal_default_instance());
  ::openconfig::openconfig_terminal_device::_TerminalDevice_LogicalChannels_Channel_Ethernet_default_instance_._instance.get_mutable()->state_ = const_cast< ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Ethernet_State*>(
      ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Ethernet_State::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TerminalDevice_LogicalChannels_Channel_Ethernet::kConfigFieldNumber;
const int TerminalDevice_LogicalChannels_Channel_Ethernet::kStateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TerminalDevice_LogicalChannels_Channel_Ethernet::TerminalDevice_LogicalChannels_Channel_Ethernet()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::InitDefaultsTerminalDevice_LogicalChannels_Channel_Ethernet();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Ethernet)
}
TerminalDevice_LogicalChannels_Channel_Ethernet::TerminalDevice_LogicalChannels_Channel_Ethernet(const TerminalDevice_LogicalChannels_Channel_Ethernet& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_config()) {
    config_ = new ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Ethernet_Config(*from.config_);
  } else {
    config_ = NULL;
  }
  if (from.has_state()) {
    state_ = new ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Ethernet_State(*from.state_);
  } else {
    state_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Ethernet)
}

void TerminalDevice_LogicalChannels_Channel_Ethernet::SharedCtor() {
  ::memset(&config_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&state_) -
      reinterpret_cast<char*>(&config_)) + sizeof(state_));
  _cached_size_ = 0;
}

TerminalDevice_LogicalChannels_Channel_Ethernet::~TerminalDevice_LogicalChannels_Channel_Ethernet() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Ethernet)
  SharedDtor();
}

void TerminalDevice_LogicalChannels_Channel_Ethernet::SharedDtor() {
  if (this != internal_default_instance()) delete config_;
  if (this != internal_default_instance()) delete state_;
}

void TerminalDevice_LogicalChannels_Channel_Ethernet::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TerminalDevice_LogicalChannels_Channel_Ethernet::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TerminalDevice_LogicalChannels_Channel_Ethernet& TerminalDevice_LogicalChannels_Channel_Ethernet::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::InitDefaultsTerminalDevice_LogicalChannels_Channel_Ethernet();
  return *internal_default_instance();
}

TerminalDevice_LogicalChannels_Channel_Ethernet* TerminalDevice_LogicalChannels_Channel_Ethernet::New(::google::protobuf::Arena* arena) const {
  TerminalDevice_LogicalChannels_Channel_Ethernet* n = new TerminalDevice_LogicalChannels_Channel_Ethernet;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TerminalDevice_LogicalChannels_Channel_Ethernet::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Ethernet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && config_ != NULL) {
    delete config_;
  }
  config_ = NULL;
  if (GetArenaNoVirtual() == NULL && state_ != NULL) {
    delete state_;
  }
  state_ = NULL;
  _internal_metadata_.Clear();
}

bool TerminalDevice_LogicalChannels_Channel_Ethernet::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Ethernet)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(1580947066u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Ethernet.Config config = 63644242 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/ethernet/config"];
      case 63644242: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u /* 509153938 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Ethernet.State state = 197618383 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/ethernet/state"];
      case 197618383: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 1580947066 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_state()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Ethernet)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Ethernet)
  return false;
#undef DO_
}

void TerminalDevice_LogicalChannels_Channel_Ethernet::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Ethernet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Ethernet.Config config = 63644242 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/ethernet/config"];
  if (this->has_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      63644242, *this->config_, output);
  }

  // .openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Ethernet.State state = 197618383 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/ethernet/state"];
  if (this->has_state()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      197618383, *this->state_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Ethernet)
}

::google::protobuf::uint8* TerminalDevice_LogicalChannels_Channel_Ethernet::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Ethernet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Ethernet.Config config = 63644242 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/ethernet/config"];
  if (this->has_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        63644242, *this->config_, deterministic, target);
  }

  // .openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Ethernet.State state = 197618383 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/ethernet/state"];
  if (this->has_state()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        197618383, *this->state_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Ethernet)
  return target;
}

size_t TerminalDevice_LogicalChannels_Channel_Ethernet::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Ethernet)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Ethernet.Config config = 63644242 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/ethernet/config"];
  if (this->has_config()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->config_);
  }

  // .openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Ethernet.State state = 197618383 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/ethernet/state"];
  if (this->has_state()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->state_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TerminalDevice_LogicalChannels_Channel_Ethernet::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Ethernet)
  GOOGLE_DCHECK_NE(&from, this);
  const TerminalDevice_LogicalChannels_Channel_Ethernet* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TerminalDevice_LogicalChannels_Channel_Ethernet>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Ethernet)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Ethernet)
    MergeFrom(*source);
  }
}

void TerminalDevice_LogicalChannels_Channel_Ethernet::MergeFrom(const TerminalDevice_LogicalChannels_Channel_Ethernet& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Ethernet)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_config()) {
    mutable_config()->::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Ethernet_Config::MergeFrom(from.config());
  }
  if (from.has_state()) {
    mutable_state()->::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Ethernet_State::MergeFrom(from.state());
  }
}

void TerminalDevice_LogicalChannels_Channel_Ethernet::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Ethernet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TerminalDevice_LogicalChannels_Channel_Ethernet::CopyFrom(const TerminalDevice_LogicalChannels_Channel_Ethernet& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Ethernet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TerminalDevice_LogicalChannels_Channel_Ethernet::IsInitialized() const {
  return true;
}

void TerminalDevice_LogicalChannels_Channel_Ethernet::Swap(TerminalDevice_LogicalChannels_Channel_Ethernet* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TerminalDevice_LogicalChannels_Channel_Ethernet::InternalSwap(TerminalDevice_LogicalChannels_Channel_Ethernet* other) {
  using std::swap;
  swap(config_, other->config_);
  swap(state_, other->state_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TerminalDevice_LogicalChannels_Channel_Ethernet::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TerminalDevice_LogicalChannels_Channel_Ingress_Config::InitAsDefaultInstance() {
  ::openconfig::openconfig_terminal_device::_TerminalDevice_LogicalChannels_Channel_Ingress_Config_default_instance_._instance.get_mutable()->transceiver_ = const_cast< ::ywrapper::StringValue*>(
      ::ywrapper::StringValue::internal_default_instance());
}
void TerminalDevice_LogicalChannels_Channel_Ingress_Config::clear_physical_channel() {
  physical_channel_.Clear();
}
void TerminalDevice_LogicalChannels_Channel_Ingress_Config::clear_transceiver() {
  if (GetArenaNoVirtual() == NULL && transceiver_ != NULL) {
    delete transceiver_;
  }
  transceiver_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TerminalDevice_LogicalChannels_Channel_Ingress_Config::kPhysicalChannelFieldNumber;
const int TerminalDevice_LogicalChannels_Channel_Ingress_Config::kTransceiverFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TerminalDevice_LogicalChannels_Channel_Ingress_Config::TerminalDevice_LogicalChannels_Channel_Ingress_Config()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::InitDefaultsTerminalDevice_LogicalChannels_Channel_Ingress_Config();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Ingress.Config)
}
TerminalDevice_LogicalChannels_Channel_Ingress_Config::TerminalDevice_LogicalChannels_Channel_Ingress_Config(const TerminalDevice_LogicalChannels_Channel_Ingress_Config& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      physical_channel_(from.physical_channel_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_transceiver()) {
    transceiver_ = new ::ywrapper::StringValue(*from.transceiver_);
  } else {
    transceiver_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Ingress.Config)
}

void TerminalDevice_LogicalChannels_Channel_Ingress_Config::SharedCtor() {
  transceiver_ = NULL;
  _cached_size_ = 0;
}

TerminalDevice_LogicalChannels_Channel_Ingress_Config::~TerminalDevice_LogicalChannels_Channel_Ingress_Config() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Ingress.Config)
  SharedDtor();
}

void TerminalDevice_LogicalChannels_Channel_Ingress_Config::SharedDtor() {
  if (this != internal_default_instance()) delete transceiver_;
}

void TerminalDevice_LogicalChannels_Channel_Ingress_Config::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TerminalDevice_LogicalChannels_Channel_Ingress_Config::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TerminalDevice_LogicalChannels_Channel_Ingress_Config& TerminalDevice_LogicalChannels_Channel_Ingress_Config::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::InitDefaultsTerminalDevice_LogicalChannels_Channel_Ingress_Config();
  return *internal_default_instance();
}

TerminalDevice_LogicalChannels_Channel_Ingress_Config* TerminalDevice_LogicalChannels_Channel_Ingress_Config::New(::google::protobuf::Arena* arena) const {
  TerminalDevice_LogicalChannels_Channel_Ingress_Config* n = new TerminalDevice_LogicalChannels_Channel_Ingress_Config;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TerminalDevice_LogicalChannels_Channel_Ingress_Config::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Ingress.Config)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  physical_channel_.Clear();
  if (GetArenaNoVirtual() == NULL && transceiver_ != NULL) {
    delete transceiver_;
  }
  transceiver_ = NULL;
  _internal_metadata_.Clear();
}

bool TerminalDevice_LogicalChannels_Channel_Ingress_Config::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Ingress.Config)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(930003618u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .ywrapper.StringValue transceiver = 110176305 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/ingress/config/transceiver"];
      case 110176305: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u /* 881410442 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_transceiver()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .ywrapper.UintValue physical_channel = 116250452 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/ingress/config/physical-channel"];
      case 116250452: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 930003618 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_physical_channel()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Ingress.Config)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Ingress.Config)
  return false;
#undef DO_
}

void TerminalDevice_LogicalChannels_Channel_Ingress_Config::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Ingress.Config)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ywrapper.StringValue transceiver = 110176305 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/ingress/config/transceiver"];
  if (this->has_transceiver()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      110176305, *this->transceiver_, output);
  }

  // repeated .ywrapper.UintValue physical_channel = 116250452 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/ingress/config/physical-channel"];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->physical_channel_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      116250452, this->physical_channel(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Ingress.Config)
}

::google::protobuf::uint8* TerminalDevice_LogicalChannels_Channel_Ingress_Config::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Ingress.Config)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ywrapper.StringValue transceiver = 110176305 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/ingress/config/transceiver"];
  if (this->has_transceiver()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        110176305, *this->transceiver_, deterministic, target);
  }

  // repeated .ywrapper.UintValue physical_channel = 116250452 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/ingress/config/physical-channel"];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->physical_channel_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        116250452, this->physical_channel(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Ingress.Config)
  return target;
}

size_t TerminalDevice_LogicalChannels_Channel_Ingress_Config::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Ingress.Config)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .ywrapper.UintValue physical_channel = 116250452 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/ingress/config/physical-channel"];
  {
    unsigned int count = static_cast<unsigned int>(this->physical_channel_size());
    total_size += 5UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->physical_channel(static_cast<int>(i)));
    }
  }

  // .ywrapper.StringValue transceiver = 110176305 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/ingress/config/transceiver"];
  if (this->has_transceiver()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->transceiver_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TerminalDevice_LogicalChannels_Channel_Ingress_Config::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Ingress.Config)
  GOOGLE_DCHECK_NE(&from, this);
  const TerminalDevice_LogicalChannels_Channel_Ingress_Config* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TerminalDevice_LogicalChannels_Channel_Ingress_Config>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Ingress.Config)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Ingress.Config)
    MergeFrom(*source);
  }
}

void TerminalDevice_LogicalChannels_Channel_Ingress_Config::MergeFrom(const TerminalDevice_LogicalChannels_Channel_Ingress_Config& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Ingress.Config)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  physical_channel_.MergeFrom(from.physical_channel_);
  if (from.has_transceiver()) {
    mutable_transceiver()->::ywrapper::StringValue::MergeFrom(from.transceiver());
  }
}

void TerminalDevice_LogicalChannels_Channel_Ingress_Config::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Ingress.Config)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TerminalDevice_LogicalChannels_Channel_Ingress_Config::CopyFrom(const TerminalDevice_LogicalChannels_Channel_Ingress_Config& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Ingress.Config)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TerminalDevice_LogicalChannels_Channel_Ingress_Config::IsInitialized() const {
  return true;
}

void TerminalDevice_LogicalChannels_Channel_Ingress_Config::Swap(TerminalDevice_LogicalChannels_Channel_Ingress_Config* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TerminalDevice_LogicalChannels_Channel_Ingress_Config::InternalSwap(TerminalDevice_LogicalChannels_Channel_Ingress_Config* other) {
  using std::swap;
  physical_channel_.InternalSwap(&other->physical_channel_);
  swap(transceiver_, other->transceiver_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TerminalDevice_LogicalChannels_Channel_Ingress_Config::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TerminalDevice_LogicalChannels_Channel_Ingress_State::InitAsDefaultInstance() {
  ::openconfig::openconfig_terminal_device::_TerminalDevice_LogicalChannels_Channel_Ingress_State_default_instance_._instance.get_mutable()->transceiver_ = const_cast< ::ywrapper::StringValue*>(
      ::ywrapper::StringValue::internal_default_instance());
}
void TerminalDevice_LogicalChannels_Channel_Ingress_State::clear_physical_channel() {
  physical_channel_.Clear();
}
void TerminalDevice_LogicalChannels_Channel_Ingress_State::clear_transceiver() {
  if (GetArenaNoVirtual() == NULL && transceiver_ != NULL) {
    delete transceiver_;
  }
  transceiver_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TerminalDevice_LogicalChannels_Channel_Ingress_State::kPhysicalChannelFieldNumber;
const int TerminalDevice_LogicalChannels_Channel_Ingress_State::kTransceiverFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TerminalDevice_LogicalChannels_Channel_Ingress_State::TerminalDevice_LogicalChannels_Channel_Ingress_State()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::InitDefaultsTerminalDevice_LogicalChannels_Channel_Ingress_State();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Ingress.State)
}
TerminalDevice_LogicalChannels_Channel_Ingress_State::TerminalDevice_LogicalChannels_Channel_Ingress_State(const TerminalDevice_LogicalChannels_Channel_Ingress_State& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      physical_channel_(from.physical_channel_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_transceiver()) {
    transceiver_ = new ::ywrapper::StringValue(*from.transceiver_);
  } else {
    transceiver_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Ingress.State)
}

void TerminalDevice_LogicalChannels_Channel_Ingress_State::SharedCtor() {
  transceiver_ = NULL;
  _cached_size_ = 0;
}

TerminalDevice_LogicalChannels_Channel_Ingress_State::~TerminalDevice_LogicalChannels_Channel_Ingress_State() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Ingress.State)
  SharedDtor();
}

void TerminalDevice_LogicalChannels_Channel_Ingress_State::SharedDtor() {
  if (this != internal_default_instance()) delete transceiver_;
}

void TerminalDevice_LogicalChannels_Channel_Ingress_State::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TerminalDevice_LogicalChannels_Channel_Ingress_State::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TerminalDevice_LogicalChannels_Channel_Ingress_State& TerminalDevice_LogicalChannels_Channel_Ingress_State::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::InitDefaultsTerminalDevice_LogicalChannels_Channel_Ingress_State();
  return *internal_default_instance();
}

TerminalDevice_LogicalChannels_Channel_Ingress_State* TerminalDevice_LogicalChannels_Channel_Ingress_State::New(::google::protobuf::Arena* arena) const {
  TerminalDevice_LogicalChannels_Channel_Ingress_State* n = new TerminalDevice_LogicalChannels_Channel_Ingress_State;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TerminalDevice_LogicalChannels_Channel_Ingress_State::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Ingress.State)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  physical_channel_.Clear();
  if (GetArenaNoVirtual() == NULL && transceiver_ != NULL) {
    delete transceiver_;
  }
  transceiver_ = NULL;
  _internal_metadata_.Clear();
}

bool TerminalDevice_LogicalChannels_Channel_Ingress_State::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Ingress.State)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(3957923290u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .ywrapper.StringValue transceiver = 160140636 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/ingress/state/transceiver"];
      case 160140636: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(226u /* 1281125090 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_transceiver()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .ywrapper.UintValue physical_channel = 494740411 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/ingress/state/physical-channel"];
      case 494740411: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(218u /* 3957923290 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_physical_channel()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Ingress.State)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Ingress.State)
  return false;
#undef DO_
}

void TerminalDevice_LogicalChannels_Channel_Ingress_State::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Ingress.State)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ywrapper.StringValue transceiver = 160140636 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/ingress/state/transceiver"];
  if (this->has_transceiver()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      160140636, *this->transceiver_, output);
  }

  // repeated .ywrapper.UintValue physical_channel = 494740411 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/ingress/state/physical-channel"];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->physical_channel_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      494740411, this->physical_channel(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Ingress.State)
}

::google::protobuf::uint8* TerminalDevice_LogicalChannels_Channel_Ingress_State::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Ingress.State)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ywrapper.StringValue transceiver = 160140636 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/ingress/state/transceiver"];
  if (this->has_transceiver()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        160140636, *this->transceiver_, deterministic, target);
  }

  // repeated .ywrapper.UintValue physical_channel = 494740411 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/ingress/state/physical-channel"];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->physical_channel_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        494740411, this->physical_channel(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Ingress.State)
  return target;
}

size_t TerminalDevice_LogicalChannels_Channel_Ingress_State::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Ingress.State)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .ywrapper.UintValue physical_channel = 494740411 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/ingress/state/physical-channel"];
  {
    unsigned int count = static_cast<unsigned int>(this->physical_channel_size());
    total_size += 5UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->physical_channel(static_cast<int>(i)));
    }
  }

  // .ywrapper.StringValue transceiver = 160140636 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/ingress/state/transceiver"];
  if (this->has_transceiver()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->transceiver_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TerminalDevice_LogicalChannels_Channel_Ingress_State::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Ingress.State)
  GOOGLE_DCHECK_NE(&from, this);
  const TerminalDevice_LogicalChannels_Channel_Ingress_State* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TerminalDevice_LogicalChannels_Channel_Ingress_State>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Ingress.State)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Ingress.State)
    MergeFrom(*source);
  }
}

void TerminalDevice_LogicalChannels_Channel_Ingress_State::MergeFrom(const TerminalDevice_LogicalChannels_Channel_Ingress_State& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Ingress.State)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  physical_channel_.MergeFrom(from.physical_channel_);
  if (from.has_transceiver()) {
    mutable_transceiver()->::ywrapper::StringValue::MergeFrom(from.transceiver());
  }
}

void TerminalDevice_LogicalChannels_Channel_Ingress_State::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Ingress.State)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TerminalDevice_LogicalChannels_Channel_Ingress_State::CopyFrom(const TerminalDevice_LogicalChannels_Channel_Ingress_State& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Ingress.State)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TerminalDevice_LogicalChannels_Channel_Ingress_State::IsInitialized() const {
  return true;
}

void TerminalDevice_LogicalChannels_Channel_Ingress_State::Swap(TerminalDevice_LogicalChannels_Channel_Ingress_State* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TerminalDevice_LogicalChannels_Channel_Ingress_State::InternalSwap(TerminalDevice_LogicalChannels_Channel_Ingress_State* other) {
  using std::swap;
  physical_channel_.InternalSwap(&other->physical_channel_);
  swap(transceiver_, other->transceiver_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TerminalDevice_LogicalChannels_Channel_Ingress_State::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TerminalDevice_LogicalChannels_Channel_Ingress::InitAsDefaultInstance() {
  ::openconfig::openconfig_terminal_device::_TerminalDevice_LogicalChannels_Channel_Ingress_default_instance_._instance.get_mutable()->config_ = const_cast< ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Ingress_Config*>(
      ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Ingress_Config::internal_default_instance());
  ::openconfig::openconfig_terminal_device::_TerminalDevice_LogicalChannels_Channel_Ingress_default_instance_._instance.get_mutable()->state_ = const_cast< ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Ingress_State*>(
      ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Ingress_State::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TerminalDevice_LogicalChannels_Channel_Ingress::kConfigFieldNumber;
const int TerminalDevice_LogicalChannels_Channel_Ingress::kStateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TerminalDevice_LogicalChannels_Channel_Ingress::TerminalDevice_LogicalChannels_Channel_Ingress()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::InitDefaultsTerminalDevice_LogicalChannels_Channel_Ingress();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Ingress)
}
TerminalDevice_LogicalChannels_Channel_Ingress::TerminalDevice_LogicalChannels_Channel_Ingress(const TerminalDevice_LogicalChannels_Channel_Ingress& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_config()) {
    config_ = new ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Ingress_Config(*from.config_);
  } else {
    config_ = NULL;
  }
  if (from.has_state()) {
    state_ = new ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Ingress_State(*from.state_);
  } else {
    state_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Ingress)
}

void TerminalDevice_LogicalChannels_Channel_Ingress::SharedCtor() {
  ::memset(&config_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&state_) -
      reinterpret_cast<char*>(&config_)) + sizeof(state_));
  _cached_size_ = 0;
}

TerminalDevice_LogicalChannels_Channel_Ingress::~TerminalDevice_LogicalChannels_Channel_Ingress() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Ingress)
  SharedDtor();
}

void TerminalDevice_LogicalChannels_Channel_Ingress::SharedDtor() {
  if (this != internal_default_instance()) delete config_;
  if (this != internal_default_instance()) delete state_;
}

void TerminalDevice_LogicalChannels_Channel_Ingress::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TerminalDevice_LogicalChannels_Channel_Ingress::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TerminalDevice_LogicalChannels_Channel_Ingress& TerminalDevice_LogicalChannels_Channel_Ingress::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::InitDefaultsTerminalDevice_LogicalChannels_Channel_Ingress();
  return *internal_default_instance();
}

TerminalDevice_LogicalChannels_Channel_Ingress* TerminalDevice_LogicalChannels_Channel_Ingress::New(::google::protobuf::Arena* arena) const {
  TerminalDevice_LogicalChannels_Channel_Ingress* n = new TerminalDevice_LogicalChannels_Channel_Ingress;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TerminalDevice_LogicalChannels_Channel_Ingress::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Ingress)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && config_ != NULL) {
    delete config_;
  }
  config_ = NULL;
  if (GetArenaNoVirtual() == NULL && state_ != NULL) {
    delete state_;
  }
  state_ = NULL;
  _internal_metadata_.Clear();
}

bool TerminalDevice_LogicalChannels_Channel_Ingress::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Ingress)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(3004303898u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Ingress.Config config = 197300886 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/ingress/config"];
      case 197300886: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(178u /* 1578407090 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Ingress.State state = 375537987 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/ingress/state"];
      case 375537987: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 3004303898 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_state()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Ingress)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Ingress)
  return false;
#undef DO_
}

void TerminalDevice_LogicalChannels_Channel_Ingress::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Ingress)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Ingress.Config config = 197300886 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/ingress/config"];
  if (this->has_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      197300886, *this->config_, output);
  }

  // .openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Ingress.State state = 375537987 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/ingress/state"];
  if (this->has_state()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      375537987, *this->state_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Ingress)
}

::google::protobuf::uint8* TerminalDevice_LogicalChannels_Channel_Ingress::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Ingress)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Ingress.Config config = 197300886 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/ingress/config"];
  if (this->has_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        197300886, *this->config_, deterministic, target);
  }

  // .openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Ingress.State state = 375537987 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/ingress/state"];
  if (this->has_state()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        375537987, *this->state_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Ingress)
  return target;
}

size_t TerminalDevice_LogicalChannels_Channel_Ingress::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Ingress)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Ingress.Config config = 197300886 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/ingress/config"];
  if (this->has_config()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->config_);
  }

  // .openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Ingress.State state = 375537987 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/ingress/state"];
  if (this->has_state()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->state_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TerminalDevice_LogicalChannels_Channel_Ingress::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Ingress)
  GOOGLE_DCHECK_NE(&from, this);
  const TerminalDevice_LogicalChannels_Channel_Ingress* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TerminalDevice_LogicalChannels_Channel_Ingress>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Ingress)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Ingress)
    MergeFrom(*source);
  }
}

void TerminalDevice_LogicalChannels_Channel_Ingress::MergeFrom(const TerminalDevice_LogicalChannels_Channel_Ingress& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Ingress)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_config()) {
    mutable_config()->::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Ingress_Config::MergeFrom(from.config());
  }
  if (from.has_state()) {
    mutable_state()->::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Ingress_State::MergeFrom(from.state());
  }
}

void TerminalDevice_LogicalChannels_Channel_Ingress::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Ingress)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TerminalDevice_LogicalChannels_Channel_Ingress::CopyFrom(const TerminalDevice_LogicalChannels_Channel_Ingress& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Ingress)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TerminalDevice_LogicalChannels_Channel_Ingress::IsInitialized() const {
  return true;
}

void TerminalDevice_LogicalChannels_Channel_Ingress::Swap(TerminalDevice_LogicalChannels_Channel_Ingress* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TerminalDevice_LogicalChannels_Channel_Ingress::InternalSwap(TerminalDevice_LogicalChannels_Channel_Ingress* other) {
  using std::swap;
  swap(config_, other->config_);
  swap(state_, other->state_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TerminalDevice_LogicalChannels_Channel_Ingress::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_Config::InitAsDefaultInstance() {
  ::openconfig::openconfig_terminal_device::_TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_Config_default_instance_._instance.get_mutable()->allocation_ = const_cast< ::ywrapper::Decimal64Value*>(
      ::ywrapper::Decimal64Value::internal_default_instance());
  ::openconfig::openconfig_terminal_device::_TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_Config_default_instance_._instance.get_mutable()->description_ = const_cast< ::ywrapper::StringValue*>(
      ::ywrapper::StringValue::internal_default_instance());
  ::openconfig::openconfig_terminal_device::_TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_Config_default_instance_._instance.get_mutable()->index_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
  ::openconfig::openconfig_terminal_device::_TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_Config_default_instance_._instance.get_mutable()->logical_channel_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
  ::openconfig::openconfig_terminal_device::_TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_Config_default_instance_._instance.get_mutable()->optical_channel_ = const_cast< ::ywrapper::StringValue*>(
      ::ywrapper::StringValue::internal_default_instance());
}
void TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_Config::clear_allocation() {
  if (GetArenaNoVirtual() == NULL && allocation_ != NULL) {
    delete allocation_;
  }
  allocation_ = NULL;
}
void TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_Config::clear_description() {
  if (GetArenaNoVirtual() == NULL && description_ != NULL) {
    delete description_;
  }
  description_ = NULL;
}
void TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_Config::clear_index() {
  if (GetArenaNoVirtual() == NULL && index_ != NULL) {
    delete index_;
  }
  index_ = NULL;
}
void TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_Config::clear_logical_channel() {
  if (GetArenaNoVirtual() == NULL && logical_channel_ != NULL) {
    delete logical_channel_;
  }
  logical_channel_ = NULL;
}
void TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_Config::clear_optical_channel() {
  if (GetArenaNoVirtual() == NULL && optical_channel_ != NULL) {
    delete optical_channel_;
  }
  optical_channel_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_Config::kAllocationFieldNumber;
const int TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_Config::kAssignmentTypeFieldNumber;
const int TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_Config::kDescriptionFieldNumber;
const int TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_Config::kIndexFieldNumber;
const int TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_Config::kLogicalChannelFieldNumber;
const int TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_Config::kOpticalChannelFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_Config::TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_Config()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::InitDefaultsTerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_Config();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.LogicalChannelAssignments.Assignment.Config)
}
TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_Config::TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_Config(const TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_Config& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_logical_channel()) {
    logical_channel_ = new ::ywrapper::UintValue(*from.logical_channel_);
  } else {
    logical_channel_ = NULL;
  }
  if (from.has_description()) {
    description_ = new ::ywrapper::StringValue(*from.description_);
  } else {
    description_ = NULL;
  }
  if (from.has_index()) {
    index_ = new ::ywrapper::UintValue(*from.index_);
  } else {
    index_ = NULL;
  }
  if (from.has_optical_channel()) {
    optical_channel_ = new ::ywrapper::StringValue(*from.optical_channel_);
  } else {
    optical_channel_ = NULL;
  }
  if (from.has_allocation()) {
    allocation_ = new ::ywrapper::Decimal64Value(*from.allocation_);
  } else {
    allocation_ = NULL;
  }
  assignment_type_ = from.assignment_type_;
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.LogicalChannelAssignments.Assignment.Config)
}

void TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_Config::SharedCtor() {
  ::memset(&logical_channel_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&assignment_type_) -
      reinterpret_cast<char*>(&logical_channel_)) + sizeof(assignment_type_));
  _cached_size_ = 0;
}

TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_Config::~TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_Config() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.LogicalChannelAssignments.Assignment.Config)
  SharedDtor();
}

void TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_Config::SharedDtor() {
  if (this != internal_default_instance()) delete logical_channel_;
  if (this != internal_default_instance()) delete description_;
  if (this != internal_default_instance()) delete index_;
  if (this != internal_default_instance()) delete optical_channel_;
  if (this != internal_default_instance()) delete allocation_;
}

void TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_Config::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_Config::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_Config& TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_Config::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::InitDefaultsTerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_Config();
  return *internal_default_instance();
}

TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_Config* TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_Config::New(::google::protobuf::Arena* arena) const {
  TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_Config* n = new TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_Config;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_Config::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.LogicalChannelAssignments.Assignment.Config)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && logical_channel_ != NULL) {
    delete logical_channel_;
  }
  logical_channel_ = NULL;
  if (GetArenaNoVirtual() == NULL && description_ != NULL) {
    delete description_;
  }
  description_ = NULL;
  if (GetArenaNoVirtual() == NULL && index_ != NULL) {
    delete index_;
  }
  index_ = NULL;
  if (GetArenaNoVirtual() == NULL && optical_channel_ != NULL) {
    delete optical_channel_;
  }
  optical_channel_ = NULL;
  if (GetArenaNoVirtual() == NULL && allocation_ != NULL) {
    delete allocation_;
  }
  allocation_ = NULL;
  assignment_type_ = 0;
  _internal_metadata_.Clear();
}

bool TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_Config::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.LogicalChannelAssignments.Assignment.Config)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(3654048336u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .ywrapper.UintValue logical_channel = 92447393 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/logical-channel-assignments/assignment/config/logical-channel"];
      case 92447393: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 739579146 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_logical_channel()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.StringValue description = 125024468 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/logical-channel-assignments/assignment/config/description"];
      case 125024468: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 1000195746 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_description()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.UintValue index = 149526970 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/logical-channel-assignments/assignment/config/index"];
      case 149526970: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(210u /* 1196215762 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_index()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.StringValue optical_channel = 175286324 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/logical-channel-assignments/assignment/config/optical-channel"];
      case 175286324: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 1402290594 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_optical_channel()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.Decimal64Value allocation = 314188864 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/logical-channel-assignments/assignment/config/allocation"];
      case 314188864: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(2u /* 2513510914 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_allocation()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.LogicalChannelAssignments.Assignment.Config.AssignmentType assignment_type = 456756042 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/logical-channel-assignments/assignment/config/assignment-type"];
      case 456756042: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 3654048336 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_assignment_type(static_cast< ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_Config_AssignmentType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.LogicalChannelAssignments.Assignment.Config)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.LogicalChannelAssignments.Assignment.Config)
  return false;
#undef DO_
}

void TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_Config::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.LogicalChannelAssignments.Assignment.Config)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ywrapper.UintValue logical_channel = 92447393 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/logical-channel-assignments/assignment/config/logical-channel"];
  if (this->has_logical_channel()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      92447393, *this->logical_channel_, output);
  }

  // .ywrapper.StringValue description = 125024468 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/logical-channel-assignments/assignment/config/description"];
  if (this->has_description()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      125024468, *this->description_, output);
  }

  // .ywrapper.UintValue index = 149526970 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/logical-channel-assignments/assignment/config/index"];
  if (this->has_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      149526970, *this->index_, output);
  }

  // .ywrapper.StringValue optical_channel = 175286324 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/logical-channel-assignments/assignment/config/optical-channel"];
  if (this->has_optical_channel()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      175286324, *this->optical_channel_, output);
  }

  // .ywrapper.Decimal64Value allocation = 314188864 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/logical-channel-assignments/assignment/config/allocation"];
  if (this->has_allocation()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      314188864, *this->allocation_, output);
  }

  // .openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.LogicalChannelAssignments.Assignment.Config.AssignmentType assignment_type = 456756042 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/logical-channel-assignments/assignment/config/assignment-type"];
  if (this->assignment_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      456756042, this->assignment_type(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.LogicalChannelAssignments.Assignment.Config)
}

::google::protobuf::uint8* TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_Config::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.LogicalChannelAssignments.Assignment.Config)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ywrapper.UintValue logical_channel = 92447393 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/logical-channel-assignments/assignment/config/logical-channel"];
  if (this->has_logical_channel()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        92447393, *this->logical_channel_, deterministic, target);
  }

  // .ywrapper.StringValue description = 125024468 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/logical-channel-assignments/assignment/config/description"];
  if (this->has_description()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        125024468, *this->description_, deterministic, target);
  }

  // .ywrapper.UintValue index = 149526970 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/logical-channel-assignments/assignment/config/index"];
  if (this->has_index()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        149526970, *this->index_, deterministic, target);
  }

  // .ywrapper.StringValue optical_channel = 175286324 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/logical-channel-assignments/assignment/config/optical-channel"];
  if (this->has_optical_channel()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        175286324, *this->optical_channel_, deterministic, target);
  }

  // .ywrapper.Decimal64Value allocation = 314188864 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/logical-channel-assignments/assignment/config/allocation"];
  if (this->has_allocation()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        314188864, *this->allocation_, deterministic, target);
  }

  // .openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.LogicalChannelAssignments.Assignment.Config.AssignmentType assignment_type = 456756042 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/logical-channel-assignments/assignment/config/assignment-type"];
  if (this->assignment_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      456756042, this->assignment_type(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.LogicalChannelAssignments.Assignment.Config)
  return target;
}

size_t TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_Config::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.LogicalChannelAssignments.Assignment.Config)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .ywrapper.UintValue logical_channel = 92447393 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/logical-channel-assignments/assignment/config/logical-channel"];
  if (this->has_logical_channel()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->logical_channel_);
  }

  // .ywrapper.StringValue description = 125024468 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/logical-channel-assignments/assignment/config/description"];
  if (this->has_description()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->description_);
  }

  // .ywrapper.UintValue index = 149526970 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/logical-channel-assignments/assignment/config/index"];
  if (this->has_index()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->index_);
  }

  // .ywrapper.StringValue optical_channel = 175286324 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/logical-channel-assignments/assignment/config/optical-channel"];
  if (this->has_optical_channel()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->optical_channel_);
  }

  // .ywrapper.Decimal64Value allocation = 314188864 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/logical-channel-assignments/assignment/config/allocation"];
  if (this->has_allocation()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->allocation_);
  }

  // .openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.LogicalChannelAssignments.Assignment.Config.AssignmentType assignment_type = 456756042 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/logical-channel-assignments/assignment/config/assignment-type"];
  if (this->assignment_type() != 0) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->assignment_type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_Config::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.LogicalChannelAssignments.Assignment.Config)
  GOOGLE_DCHECK_NE(&from, this);
  const TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_Config* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_Config>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.LogicalChannelAssignments.Assignment.Config)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.LogicalChannelAssignments.Assignment.Config)
    MergeFrom(*source);
  }
}

void TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_Config::MergeFrom(const TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_Config& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.LogicalChannelAssignments.Assignment.Config)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_logical_channel()) {
    mutable_logical_channel()->::ywrapper::UintValue::MergeFrom(from.logical_channel());
  }
  if (from.has_description()) {
    mutable_description()->::ywrapper::StringValue::MergeFrom(from.description());
  }
  if (from.has_index()) {
    mutable_index()->::ywrapper::UintValue::MergeFrom(from.index());
  }
  if (from.has_optical_channel()) {
    mutable_optical_channel()->::ywrapper::StringValue::MergeFrom(from.optical_channel());
  }
  if (from.has_allocation()) {
    mutable_allocation()->::ywrapper::Decimal64Value::MergeFrom(from.allocation());
  }
  if (from.assignment_type() != 0) {
    set_assignment_type(from.assignment_type());
  }
}

void TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_Config::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.LogicalChannelAssignments.Assignment.Config)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_Config::CopyFrom(const TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_Config& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.LogicalChannelAssignments.Assignment.Config)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_Config::IsInitialized() const {
  return true;
}

void TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_Config::Swap(TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_Config* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_Config::InternalSwap(TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_Config* other) {
  using std::swap;
  swap(logical_channel_, other->logical_channel_);
  swap(description_, other->description_);
  swap(index_, other->index_);
  swap(optical_channel_, other->optical_channel_);
  swap(allocation_, other->allocation_);
  swap(assignment_type_, other->assignment_type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_Config::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_State::InitAsDefaultInstance() {
  ::openconfig::openconfig_terminal_device::_TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_State_default_instance_._instance.get_mutable()->allocation_ = const_cast< ::ywrapper::Decimal64Value*>(
      ::ywrapper::Decimal64Value::internal_default_instance());
  ::openconfig::openconfig_terminal_device::_TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_State_default_instance_._instance.get_mutable()->description_ = const_cast< ::ywrapper::StringValue*>(
      ::ywrapper::StringValue::internal_default_instance());
  ::openconfig::openconfig_terminal_device::_TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_State_default_instance_._instance.get_mutable()->index_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
  ::openconfig::openconfig_terminal_device::_TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_State_default_instance_._instance.get_mutable()->logical_channel_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
  ::openconfig::openconfig_terminal_device::_TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_State_default_instance_._instance.get_mutable()->optical_channel_ = const_cast< ::ywrapper::StringValue*>(
      ::ywrapper::StringValue::internal_default_instance());
}
void TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_State::clear_allocation() {
  if (GetArenaNoVirtual() == NULL && allocation_ != NULL) {
    delete allocation_;
  }
  allocation_ = NULL;
}
void TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_State::clear_description() {
  if (GetArenaNoVirtual() == NULL && description_ != NULL) {
    delete description_;
  }
  description_ = NULL;
}
void TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_State::clear_index() {
  if (GetArenaNoVirtual() == NULL && index_ != NULL) {
    delete index_;
  }
  index_ = NULL;
}
void TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_State::clear_logical_channel() {
  if (GetArenaNoVirtual() == NULL && logical_channel_ != NULL) {
    delete logical_channel_;
  }
  logical_channel_ = NULL;
}
void TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_State::clear_optical_channel() {
  if (GetArenaNoVirtual() == NULL && optical_channel_ != NULL) {
    delete optical_channel_;
  }
  optical_channel_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_State::kAllocationFieldNumber;
const int TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_State::kAssignmentTypeFieldNumber;
const int TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_State::kDescriptionFieldNumber;
const int TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_State::kIndexFieldNumber;
const int TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_State::kLogicalChannelFieldNumber;
const int TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_State::kOpticalChannelFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_State::TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_State()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::InitDefaultsTerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_State();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.LogicalChannelAssignments.Assignment.State)
}
TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_State::TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_State(const TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_State& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_allocation()) {
    allocation_ = new ::ywrapper::Decimal64Value(*from.allocation_);
  } else {
    allocation_ = NULL;
  }
  if (from.has_logical_channel()) {
    logical_channel_ = new ::ywrapper::UintValue(*from.logical_channel_);
  } else {
    logical_channel_ = NULL;
  }
  if (from.has_index()) {
    index_ = new ::ywrapper::UintValue(*from.index_);
  } else {
    index_ = NULL;
  }
  if (from.has_description()) {
    description_ = new ::ywrapper::StringValue(*from.description_);
  } else {
    description_ = NULL;
  }
  if (from.has_optical_channel()) {
    optical_channel_ = new ::ywrapper::StringValue(*from.optical_channel_);
  } else {
    optical_channel_ = NULL;
  }
  assignment_type_ = from.assignment_type_;
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.LogicalChannelAssignments.Assignment.State)
}

void TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_State::SharedCtor() {
  ::memset(&allocation_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&assignment_type_) -
      reinterpret_cast<char*>(&allocation_)) + sizeof(assignment_type_));
  _cached_size_ = 0;
}

TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_State::~TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_State() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.LogicalChannelAssignments.Assignment.State)
  SharedDtor();
}

void TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_State::SharedDtor() {
  if (this != internal_default_instance()) delete allocation_;
  if (this != internal_default_instance()) delete logical_channel_;
  if (this != internal_default_instance()) delete index_;
  if (this != internal_default_instance()) delete description_;
  if (this != internal_default_instance()) delete optical_channel_;
}

void TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_State::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_State::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_State& TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_State::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::InitDefaultsTerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_State();
  return *internal_default_instance();
}

TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_State* TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_State::New(::google::protobuf::Arena* arena) const {
  TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_State* n = new TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_State;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_State::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.LogicalChannelAssignments.Assignment.State)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && allocation_ != NULL) {
    delete allocation_;
  }
  allocation_ = NULL;
  if (GetArenaNoVirtual() == NULL && logical_channel_ != NULL) {
    delete logical_channel_;
  }
  logical_channel_ = NULL;
  if (GetArenaNoVirtual() == NULL && index_ != NULL) {
    delete index_;
  }
  index_ = NULL;
  if (GetArenaNoVirtual() == NULL && description_ != NULL) {
    delete description_;
  }
  description_ = NULL;
  if (GetArenaNoVirtual() == NULL && optical_channel_ != NULL) {
    delete optical_channel_;
  }
  optical_channel_ = NULL;
  assignment_type_ = 0;
  _internal_metadata_.Clear();
}

bool TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_State::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.LogicalChannelAssignments.Assignment.State)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(3309719002u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .ywrapper.Decimal64Value allocation = 36320529 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/logical-channel-assignments/assignment/state/allocation"];
      case 36320529: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u /* 290564234 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_allocation()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.UintValue logical_channel = 106910794 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/logical-channel-assignments/assignment/state/logical-channel"];
      case 106910794: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 855286354 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_logical_channel()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.UintValue index = 107378301 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/logical-channel-assignments/assignment/state/index"];
      case 107378301: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(234u /* 859026410 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_index()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.LogicalChannelAssignments.Assignment.State.AssignmentType assignment_type = 280777113 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/logical-channel-assignments/assignment/state/assignment-type"];
      case 280777113: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(200u /* 2246216904 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_assignment_type(static_cast< ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_State_AssignmentType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.StringValue description = 355583159 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/logical-channel-assignments/assignment/state/description"];
      case 355583159: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(186u /* 2844665274 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_description()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.StringValue optical_channel = 413714875 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/logical-channel-assignments/assignment/state/optical-channel"];
      case 413714875: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(218u /* 3309719002 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_optical_channel()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.LogicalChannelAssignments.Assignment.State)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.LogicalChannelAssignments.Assignment.State)
  return false;
#undef DO_
}

void TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_State::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.LogicalChannelAssignments.Assignment.State)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ywrapper.Decimal64Value allocation = 36320529 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/logical-channel-assignments/assignment/state/allocation"];
  if (this->has_allocation()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      36320529, *this->allocation_, output);
  }

  // .ywrapper.UintValue logical_channel = 106910794 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/logical-channel-assignments/assignment/state/logical-channel"];
  if (this->has_logical_channel()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      106910794, *this->logical_channel_, output);
  }

  // .ywrapper.UintValue index = 107378301 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/logical-channel-assignments/assignment/state/index"];
  if (this->has_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      107378301, *this->index_, output);
  }

  // .openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.LogicalChannelAssignments.Assignment.State.AssignmentType assignment_type = 280777113 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/logical-channel-assignments/assignment/state/assignment-type"];
  if (this->assignment_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      280777113, this->assignment_type(), output);
  }

  // .ywrapper.StringValue description = 355583159 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/logical-channel-assignments/assignment/state/description"];
  if (this->has_description()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      355583159, *this->description_, output);
  }

  // .ywrapper.StringValue optical_channel = 413714875 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/logical-channel-assignments/assignment/state/optical-channel"];
  if (this->has_optical_channel()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      413714875, *this->optical_channel_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.LogicalChannelAssignments.Assignment.State)
}

::google::protobuf::uint8* TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_State::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.LogicalChannelAssignments.Assignment.State)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ywrapper.Decimal64Value allocation = 36320529 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/logical-channel-assignments/assignment/state/allocation"];
  if (this->has_allocation()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        36320529, *this->allocation_, deterministic, target);
  }

  // .ywrapper.UintValue logical_channel = 106910794 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/logical-channel-assignments/assignment/state/logical-channel"];
  if (this->has_logical_channel()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        106910794, *this->logical_channel_, deterministic, target);
  }

  // .ywrapper.UintValue index = 107378301 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/logical-channel-assignments/assignment/state/index"];
  if (this->has_index()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        107378301, *this->index_, deterministic, target);
  }

  // .openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.LogicalChannelAssignments.Assignment.State.AssignmentType assignment_type = 280777113 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/logical-channel-assignments/assignment/state/assignment-type"];
  if (this->assignment_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      280777113, this->assignment_type(), target);
  }

  // .ywrapper.StringValue description = 355583159 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/logical-channel-assignments/assignment/state/description"];
  if (this->has_description()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        355583159, *this->description_, deterministic, target);
  }

  // .ywrapper.StringValue optical_channel = 413714875 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/logical-channel-assignments/assignment/state/optical-channel"];
  if (this->has_optical_channel()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        413714875, *this->optical_channel_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.LogicalChannelAssignments.Assignment.State)
  return target;
}

size_t TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_State::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.LogicalChannelAssignments.Assignment.State)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .ywrapper.Decimal64Value allocation = 36320529 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/logical-channel-assignments/assignment/state/allocation"];
  if (this->has_allocation()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->allocation_);
  }

  // .ywrapper.UintValue logical_channel = 106910794 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/logical-channel-assignments/assignment/state/logical-channel"];
  if (this->has_logical_channel()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->logical_channel_);
  }

  // .ywrapper.UintValue index = 107378301 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/logical-channel-assignments/assignment/state/index"];
  if (this->has_index()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->index_);
  }

  // .ywrapper.StringValue description = 355583159 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/logical-channel-assignments/assignment/state/description"];
  if (this->has_description()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->description_);
  }

  // .ywrapper.StringValue optical_channel = 413714875 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/logical-channel-assignments/assignment/state/optical-channel"];
  if (this->has_optical_channel()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->optical_channel_);
  }

  // .openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.LogicalChannelAssignments.Assignment.State.AssignmentType assignment_type = 280777113 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/logical-channel-assignments/assignment/state/assignment-type"];
  if (this->assignment_type() != 0) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->assignment_type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_State::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.LogicalChannelAssignments.Assignment.State)
  GOOGLE_DCHECK_NE(&from, this);
  const TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_State* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_State>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.LogicalChannelAssignments.Assignment.State)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.LogicalChannelAssignments.Assignment.State)
    MergeFrom(*source);
  }
}

void TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_State::MergeFrom(const TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_State& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.LogicalChannelAssignments.Assignment.State)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_allocation()) {
    mutable_allocation()->::ywrapper::Decimal64Value::MergeFrom(from.allocation());
  }
  if (from.has_logical_channel()) {
    mutable_logical_channel()->::ywrapper::UintValue::MergeFrom(from.logical_channel());
  }
  if (from.has_index()) {
    mutable_index()->::ywrapper::UintValue::MergeFrom(from.index());
  }
  if (from.has_description()) {
    mutable_description()->::ywrapper::StringValue::MergeFrom(from.description());
  }
  if (from.has_optical_channel()) {
    mutable_optical_channel()->::ywrapper::StringValue::MergeFrom(from.optical_channel());
  }
  if (from.assignment_type() != 0) {
    set_assignment_type(from.assignment_type());
  }
}

void TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_State::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.LogicalChannelAssignments.Assignment.State)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_State::CopyFrom(const TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_State& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.LogicalChannelAssignments.Assignment.State)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_State::IsInitialized() const {
  return true;
}

void TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_State::Swap(TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_State* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_State::InternalSwap(TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_State* other) {
  using std::swap;
  swap(allocation_, other->allocation_);
  swap(logical_channel_, other->logical_channel_);
  swap(index_, other->index_);
  swap(description_, other->description_);
  swap(optical_channel_, other->optical_channel_);
  swap(assignment_type_, other->assignment_type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_State::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment::InitAsDefaultInstance() {
  ::openconfig::openconfig_terminal_device::_TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_default_instance_._instance.get_mutable()->config_ = const_cast< ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_Config*>(
      ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_Config::internal_default_instance());
  ::openconfig::openconfig_terminal_device::_TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_default_instance_._instance.get_mutable()->state_ = const_cast< ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_State*>(
      ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_State::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment::kConfigFieldNumber;
const int TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment::kStateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment::TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::InitDefaultsTerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.LogicalChannelAssignments.Assignment)
}
TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment::TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment(const TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_state()) {
    state_ = new ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_State(*from.state_);
  } else {
    state_ = NULL;
  }
  if (from.has_config()) {
    config_ = new ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_Config(*from.config_);
  } else {
    config_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.LogicalChannelAssignments.Assignment)
}

void TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment::SharedCtor() {
  ::memset(&state_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&config_) -
      reinterpret_cast<char*>(&state_)) + sizeof(config_));
  _cached_size_ = 0;
}

TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment::~TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.LogicalChannelAssignments.Assignment)
  SharedDtor();
}

void TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment::SharedDtor() {
  if (this != internal_default_instance()) delete state_;
  if (this != internal_default_instance()) delete config_;
}

void TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment& TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::InitDefaultsTerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment();
  return *internal_default_instance();
}

TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment* TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment::New(::google::protobuf::Arena* arena) const {
  TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment* n = new TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.LogicalChannelAssignments.Assignment)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && state_ != NULL) {
    delete state_;
  }
  state_ = NULL;
  if (GetArenaNoVirtual() == NULL && config_ != NULL) {
    delete config_;
  }
  config_ = NULL;
  _internal_metadata_.Clear();
}

bool TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.LogicalChannelAssignments.Assignment)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(3907521626u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.LogicalChannelAssignments.Assignment.State state = 263535820 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/logical-channel-assignments/assignment/state"];
      case 263535820: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 2108286562 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_state()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.LogicalChannelAssignments.Assignment.Config config = 488440203 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/logical-channel-assignments/assignment/config"];
      case 488440203: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 3907521626 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.LogicalChannelAssignments.Assignment)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.LogicalChannelAssignments.Assignment)
  return false;
#undef DO_
}

void TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.LogicalChannelAssignments.Assignment)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.LogicalChannelAssignments.Assignment.State state = 263535820 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/logical-channel-assignments/assignment/state"];
  if (this->has_state()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      263535820, *this->state_, output);
  }

  // .openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.LogicalChannelAssignments.Assignment.Config config = 488440203 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/logical-channel-assignments/assignment/config"];
  if (this->has_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      488440203, *this->config_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.LogicalChannelAssignments.Assignment)
}

::google::protobuf::uint8* TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.LogicalChannelAssignments.Assignment)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.LogicalChannelAssignments.Assignment.State state = 263535820 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/logical-channel-assignments/assignment/state"];
  if (this->has_state()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        263535820, *this->state_, deterministic, target);
  }

  // .openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.LogicalChannelAssignments.Assignment.Config config = 488440203 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/logical-channel-assignments/assignment/config"];
  if (this->has_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        488440203, *this->config_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.LogicalChannelAssignments.Assignment)
  return target;
}

size_t TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.LogicalChannelAssignments.Assignment)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.LogicalChannelAssignments.Assignment.State state = 263535820 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/logical-channel-assignments/assignment/state"];
  if (this->has_state()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->state_);
  }

  // .openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.LogicalChannelAssignments.Assignment.Config config = 488440203 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/logical-channel-assignments/assignment/config"];
  if (this->has_config()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->config_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.LogicalChannelAssignments.Assignment)
  GOOGLE_DCHECK_NE(&from, this);
  const TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.LogicalChannelAssignments.Assignment)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.LogicalChannelAssignments.Assignment)
    MergeFrom(*source);
  }
}

void TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment::MergeFrom(const TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.LogicalChannelAssignments.Assignment)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_state()) {
    mutable_state()->::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_State::MergeFrom(from.state());
  }
  if (from.has_config()) {
    mutable_config()->::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment_Config::MergeFrom(from.config());
  }
}

void TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.LogicalChannelAssignments.Assignment)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment::CopyFrom(const TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.LogicalChannelAssignments.Assignment)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment::IsInitialized() const {
  return true;
}

void TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment::Swap(TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment::InternalSwap(TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment* other) {
  using std::swap;
  swap(state_, other->state_);
  swap(config_, other->config_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_AssignmentKey::InitAsDefaultInstance() {
  ::openconfig::openconfig_terminal_device::_TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_AssignmentKey_default_instance_._instance.get_mutable()->assignment_ = const_cast< ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment*>(
      ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_AssignmentKey::kIndexFieldNumber;
const int TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_AssignmentKey::kAssignmentFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_AssignmentKey::TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_AssignmentKey()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::InitDefaultsTerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_AssignmentKey();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.LogicalChannelAssignments.AssignmentKey)
}
TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_AssignmentKey::TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_AssignmentKey(const TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_AssignmentKey& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_assignment()) {
    assignment_ = new ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment(*from.assignment_);
  } else {
    assignment_ = NULL;
  }
  index_ = from.index_;
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.LogicalChannelAssignments.AssignmentKey)
}

void TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_AssignmentKey::SharedCtor() {
  ::memset(&assignment_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&index_) -
      reinterpret_cast<char*>(&assignment_)) + sizeof(index_));
  _cached_size_ = 0;
}

TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_AssignmentKey::~TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_AssignmentKey() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.LogicalChannelAssignments.AssignmentKey)
  SharedDtor();
}

void TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_AssignmentKey::SharedDtor() {
  if (this != internal_default_instance()) delete assignment_;
}

void TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_AssignmentKey::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_AssignmentKey::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_AssignmentKey& TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_AssignmentKey::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::InitDefaultsTerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_AssignmentKey();
  return *internal_default_instance();
}

TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_AssignmentKey* TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_AssignmentKey::New(::google::protobuf::Arena* arena) const {
  TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_AssignmentKey* n = new TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_AssignmentKey;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_AssignmentKey::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.LogicalChannelAssignments.AssignmentKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && assignment_ != NULL) {
    delete assignment_;
  }
  assignment_ = NULL;
  index_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_AssignmentKey::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.LogicalChannelAssignments.AssignmentKey)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 index = 1 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/logical-channel-assignments/assignment/index"];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.LogicalChannelAssignments.Assignment assignment = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_assignment()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.LogicalChannelAssignments.AssignmentKey)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.LogicalChannelAssignments.AssignmentKey)
  return false;
#undef DO_
}

void TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_AssignmentKey::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.LogicalChannelAssignments.AssignmentKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 index = 1 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/logical-channel-assignments/assignment/index"];
  if (this->index() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->index(), output);
  }

  // .openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.LogicalChannelAssignments.Assignment assignment = 2;
  if (this->has_assignment()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->assignment_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.LogicalChannelAssignments.AssignmentKey)
}

::google::protobuf::uint8* TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_AssignmentKey::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.LogicalChannelAssignments.AssignmentKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 index = 1 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/logical-channel-assignments/assignment/index"];
  if (this->index() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->index(), target);
  }

  // .openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.LogicalChannelAssignments.Assignment assignment = 2;
  if (this->has_assignment()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->assignment_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.LogicalChannelAssignments.AssignmentKey)
  return target;
}

size_t TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_AssignmentKey::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.LogicalChannelAssignments.AssignmentKey)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.LogicalChannelAssignments.Assignment assignment = 2;
  if (this->has_assignment()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->assignment_);
  }

  // uint64 index = 1 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/logical-channel-assignments/assignment/index"];
  if (this->index() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->index());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_AssignmentKey::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.LogicalChannelAssignments.AssignmentKey)
  GOOGLE_DCHECK_NE(&from, this);
  const TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_AssignmentKey* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_AssignmentKey>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.LogicalChannelAssignments.AssignmentKey)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.LogicalChannelAssignments.AssignmentKey)
    MergeFrom(*source);
  }
}

void TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_AssignmentKey::MergeFrom(const TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_AssignmentKey& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.LogicalChannelAssignments.AssignmentKey)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_assignment()) {
    mutable_assignment()->::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_Assignment::MergeFrom(from.assignment());
  }
  if (from.index() != 0) {
    set_index(from.index());
  }
}

void TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_AssignmentKey::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.LogicalChannelAssignments.AssignmentKey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_AssignmentKey::CopyFrom(const TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_AssignmentKey& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.LogicalChannelAssignments.AssignmentKey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_AssignmentKey::IsInitialized() const {
  return true;
}

void TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_AssignmentKey::Swap(TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_AssignmentKey* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_AssignmentKey::InternalSwap(TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_AssignmentKey* other) {
  using std::swap;
  swap(assignment_, other->assignment_);
  swap(index_, other->index_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments_AssignmentKey::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments::kAssignmentFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments::TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::InitDefaultsTerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.LogicalChannelAssignments)
}
TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments::TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments(const TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      assignment_(from.assignment_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.LogicalChannelAssignments)
}

void TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments::SharedCtor() {
  _cached_size_ = 0;
}

TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments::~TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.LogicalChannelAssignments)
  SharedDtor();
}

void TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments::SharedDtor() {
}

void TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments& TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::InitDefaultsTerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments();
  return *internal_default_instance();
}

TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments* TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments::New(::google::protobuf::Arena* arena) const {
  TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments* n = new TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.LogicalChannelAssignments)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  assignment_.Clear();
  _internal_metadata_.Clear();
}

bool TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.LogicalChannelAssignments)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(4165347538u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.LogicalChannelAssignments.AssignmentKey assignment = 520668442 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/logical-channel-assignments/assignment"];
      case 520668442: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(210u /* 4165347538 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_assignment()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.LogicalChannelAssignments)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.LogicalChannelAssignments)
  return false;
#undef DO_
}

void TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.LogicalChannelAssignments)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.LogicalChannelAssignments.AssignmentKey assignment = 520668442 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/logical-channel-assignments/assignment"];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->assignment_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      520668442, this->assignment(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.LogicalChannelAssignments)
}

::google::protobuf::uint8* TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.LogicalChannelAssignments)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.LogicalChannelAssignments.AssignmentKey assignment = 520668442 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/logical-channel-assignments/assignment"];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->assignment_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        520668442, this->assignment(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.LogicalChannelAssignments)
  return target;
}

size_t TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.LogicalChannelAssignments)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.LogicalChannelAssignments.AssignmentKey assignment = 520668442 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/logical-channel-assignments/assignment"];
  {
    unsigned int count = static_cast<unsigned int>(this->assignment_size());
    total_size += 5UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->assignment(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.LogicalChannelAssignments)
  GOOGLE_DCHECK_NE(&from, this);
  const TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.LogicalChannelAssignments)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.LogicalChannelAssignments)
    MergeFrom(*source);
  }
}

void TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments::MergeFrom(const TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.LogicalChannelAssignments)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  assignment_.MergeFrom(from.assignment_);
}

void TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.LogicalChannelAssignments)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments::CopyFrom(const TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.LogicalChannelAssignments)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments::IsInitialized() const {
  return true;
}

void TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments::Swap(TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments::InternalSwap(TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments* other) {
  using std::swap;
  assignment_.InternalSwap(&other->assignment_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TerminalDevice_LogicalChannels_Channel_Otn_Config::InitAsDefaultInstance() {
  ::openconfig::openconfig_terminal_device::_TerminalDevice_LogicalChannels_Channel_Otn_Config_default_instance_._instance.get_mutable()->tti_msg_auto_ = const_cast< ::ywrapper::BoolValue*>(
      ::ywrapper::BoolValue::internal_default_instance());
  ::openconfig::openconfig_terminal_device::_TerminalDevice_LogicalChannels_Channel_Otn_Config_default_instance_._instance.get_mutable()->tti_msg_expected_ = const_cast< ::ywrapper::StringValue*>(
      ::ywrapper::StringValue::internal_default_instance());
  ::openconfig::openconfig_terminal_device::_TerminalDevice_LogicalChannels_Channel_Otn_Config_default_instance_._instance.get_mutable()->tti_msg_transmit_ = const_cast< ::ywrapper::StringValue*>(
      ::ywrapper::StringValue::internal_default_instance());
}
void TerminalDevice_LogicalChannels_Channel_Otn_Config::clear_tti_msg_auto() {
  if (GetArenaNoVirtual() == NULL && tti_msg_auto_ != NULL) {
    delete tti_msg_auto_;
  }
  tti_msg_auto_ = NULL;
}
void TerminalDevice_LogicalChannels_Channel_Otn_Config::clear_tti_msg_expected() {
  if (GetArenaNoVirtual() == NULL && tti_msg_expected_ != NULL) {
    delete tti_msg_expected_;
  }
  tti_msg_expected_ = NULL;
}
void TerminalDevice_LogicalChannels_Channel_Otn_Config::clear_tti_msg_transmit() {
  if (GetArenaNoVirtual() == NULL && tti_msg_transmit_ != NULL) {
    delete tti_msg_transmit_;
  }
  tti_msg_transmit_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TerminalDevice_LogicalChannels_Channel_Otn_Config::kTtiMsgAutoFieldNumber;
const int TerminalDevice_LogicalChannels_Channel_Otn_Config::kTtiMsgExpectedFieldNumber;
const int TerminalDevice_LogicalChannels_Channel_Otn_Config::kTtiMsgTransmitFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TerminalDevice_LogicalChannels_Channel_Otn_Config::TerminalDevice_LogicalChannels_Channel_Otn_Config()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::InitDefaultsTerminalDevice_LogicalChannels_Channel_Otn_Config();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.Config)
}
TerminalDevice_LogicalChannels_Channel_Otn_Config::TerminalDevice_LogicalChannels_Channel_Otn_Config(const TerminalDevice_LogicalChannels_Channel_Otn_Config& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_tti_msg_expected()) {
    tti_msg_expected_ = new ::ywrapper::StringValue(*from.tti_msg_expected_);
  } else {
    tti_msg_expected_ = NULL;
  }
  if (from.has_tti_msg_transmit()) {
    tti_msg_transmit_ = new ::ywrapper::StringValue(*from.tti_msg_transmit_);
  } else {
    tti_msg_transmit_ = NULL;
  }
  if (from.has_tti_msg_auto()) {
    tti_msg_auto_ = new ::ywrapper::BoolValue(*from.tti_msg_auto_);
  } else {
    tti_msg_auto_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.Config)
}

void TerminalDevice_LogicalChannels_Channel_Otn_Config::SharedCtor() {
  ::memset(&tti_msg_expected_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&tti_msg_auto_) -
      reinterpret_cast<char*>(&tti_msg_expected_)) + sizeof(tti_msg_auto_));
  _cached_size_ = 0;
}

TerminalDevice_LogicalChannels_Channel_Otn_Config::~TerminalDevice_LogicalChannels_Channel_Otn_Config() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.Config)
  SharedDtor();
}

void TerminalDevice_LogicalChannels_Channel_Otn_Config::SharedDtor() {
  if (this != internal_default_instance()) delete tti_msg_expected_;
  if (this != internal_default_instance()) delete tti_msg_transmit_;
  if (this != internal_default_instance()) delete tti_msg_auto_;
}

void TerminalDevice_LogicalChannels_Channel_Otn_Config::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TerminalDevice_LogicalChannels_Channel_Otn_Config::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TerminalDevice_LogicalChannels_Channel_Otn_Config& TerminalDevice_LogicalChannels_Channel_Otn_Config::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::InitDefaultsTerminalDevice_LogicalChannels_Channel_Otn_Config();
  return *internal_default_instance();
}

TerminalDevice_LogicalChannels_Channel_Otn_Config* TerminalDevice_LogicalChannels_Channel_Otn_Config::New(::google::protobuf::Arena* arena) const {
  TerminalDevice_LogicalChannels_Channel_Otn_Config* n = new TerminalDevice_LogicalChannels_Channel_Otn_Config;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TerminalDevice_LogicalChannels_Channel_Otn_Config::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.Config)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && tti_msg_expected_ != NULL) {
    delete tti_msg_expected_;
  }
  tti_msg_expected_ = NULL;
  if (GetArenaNoVirtual() == NULL && tti_msg_transmit_ != NULL) {
    delete tti_msg_transmit_;
  }
  tti_msg_transmit_ = NULL;
  if (GetArenaNoVirtual() == NULL && tti_msg_auto_ != NULL) {
    delete tti_msg_auto_;
  }
  tti_msg_auto_ = NULL;
  _internal_metadata_.Clear();
}

bool TerminalDevice_LogicalChannels_Channel_Otn_Config::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.Config)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(1146848338u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .ywrapper.StringValue tti_msg_expected = 22126267 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/config/tti-msg-expected"];
      case 22126267: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(218u /* 177010138 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_tti_msg_expected()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.StringValue tti_msg_transmit = 129219947 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/config/tti-msg-transmit"];
      case 129219947: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 1033759578 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_tti_msg_transmit()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.BoolValue tti_msg_auto = 143356042 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/config/tti-msg-auto"];
      case 143356042: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 1146848338 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_tti_msg_auto()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.Config)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.Config)
  return false;
#undef DO_
}

void TerminalDevice_LogicalChannels_Channel_Otn_Config::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.Config)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ywrapper.StringValue tti_msg_expected = 22126267 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/config/tti-msg-expected"];
  if (this->has_tti_msg_expected()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      22126267, *this->tti_msg_expected_, output);
  }

  // .ywrapper.StringValue tti_msg_transmit = 129219947 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/config/tti-msg-transmit"];
  if (this->has_tti_msg_transmit()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      129219947, *this->tti_msg_transmit_, output);
  }

  // .ywrapper.BoolValue tti_msg_auto = 143356042 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/config/tti-msg-auto"];
  if (this->has_tti_msg_auto()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      143356042, *this->tti_msg_auto_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.Config)
}

::google::protobuf::uint8* TerminalDevice_LogicalChannels_Channel_Otn_Config::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.Config)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ywrapper.StringValue tti_msg_expected = 22126267 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/config/tti-msg-expected"];
  if (this->has_tti_msg_expected()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        22126267, *this->tti_msg_expected_, deterministic, target);
  }

  // .ywrapper.StringValue tti_msg_transmit = 129219947 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/config/tti-msg-transmit"];
  if (this->has_tti_msg_transmit()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        129219947, *this->tti_msg_transmit_, deterministic, target);
  }

  // .ywrapper.BoolValue tti_msg_auto = 143356042 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/config/tti-msg-auto"];
  if (this->has_tti_msg_auto()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        143356042, *this->tti_msg_auto_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.Config)
  return target;
}

size_t TerminalDevice_LogicalChannels_Channel_Otn_Config::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.Config)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .ywrapper.StringValue tti_msg_expected = 22126267 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/config/tti-msg-expected"];
  if (this->has_tti_msg_expected()) {
    total_size += 4 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->tti_msg_expected_);
  }

  // .ywrapper.StringValue tti_msg_transmit = 129219947 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/config/tti-msg-transmit"];
  if (this->has_tti_msg_transmit()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->tti_msg_transmit_);
  }

  // .ywrapper.BoolValue tti_msg_auto = 143356042 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/config/tti-msg-auto"];
  if (this->has_tti_msg_auto()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->tti_msg_auto_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TerminalDevice_LogicalChannels_Channel_Otn_Config::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.Config)
  GOOGLE_DCHECK_NE(&from, this);
  const TerminalDevice_LogicalChannels_Channel_Otn_Config* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TerminalDevice_LogicalChannels_Channel_Otn_Config>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.Config)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.Config)
    MergeFrom(*source);
  }
}

void TerminalDevice_LogicalChannels_Channel_Otn_Config::MergeFrom(const TerminalDevice_LogicalChannels_Channel_Otn_Config& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.Config)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_tti_msg_expected()) {
    mutable_tti_msg_expected()->::ywrapper::StringValue::MergeFrom(from.tti_msg_expected());
  }
  if (from.has_tti_msg_transmit()) {
    mutable_tti_msg_transmit()->::ywrapper::StringValue::MergeFrom(from.tti_msg_transmit());
  }
  if (from.has_tti_msg_auto()) {
    mutable_tti_msg_auto()->::ywrapper::BoolValue::MergeFrom(from.tti_msg_auto());
  }
}

void TerminalDevice_LogicalChannels_Channel_Otn_Config::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.Config)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TerminalDevice_LogicalChannels_Channel_Otn_Config::CopyFrom(const TerminalDevice_LogicalChannels_Channel_Otn_Config& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.Config)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TerminalDevice_LogicalChannels_Channel_Otn_Config::IsInitialized() const {
  return true;
}

void TerminalDevice_LogicalChannels_Channel_Otn_Config::Swap(TerminalDevice_LogicalChannels_Channel_Otn_Config* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TerminalDevice_LogicalChannels_Channel_Otn_Config::InternalSwap(TerminalDevice_LogicalChannels_Channel_Otn_Config* other) {
  using std::swap;
  swap(tti_msg_expected_, other->tti_msg_expected_);
  swap(tti_msg_transmit_, other->tti_msg_transmit_);
  swap(tti_msg_auto_, other->tti_msg_auto_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TerminalDevice_LogicalChannels_Channel_Otn_Config::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TerminalDevice_LogicalChannels_Channel_Otn_State_Esnr::InitAsDefaultInstance() {
  ::openconfig::openconfig_terminal_device::_TerminalDevice_LogicalChannels_Channel_Otn_State_Esnr_default_instance_._instance.get_mutable()->avg_ = const_cast< ::ywrapper::Decimal64Value*>(
      ::ywrapper::Decimal64Value::internal_default_instance());
  ::openconfig::openconfig_terminal_device::_TerminalDevice_LogicalChannels_Channel_Otn_State_Esnr_default_instance_._instance.get_mutable()->instant_ = const_cast< ::ywrapper::Decimal64Value*>(
      ::ywrapper::Decimal64Value::internal_default_instance());
  ::openconfig::openconfig_terminal_device::_TerminalDevice_LogicalChannels_Channel_Otn_State_Esnr_default_instance_._instance.get_mutable()->interval_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
  ::openconfig::openconfig_terminal_device::_TerminalDevice_LogicalChannels_Channel_Otn_State_Esnr_default_instance_._instance.get_mutable()->max_ = const_cast< ::ywrapper::Decimal64Value*>(
      ::ywrapper::Decimal64Value::internal_default_instance());
  ::openconfig::openconfig_terminal_device::_TerminalDevice_LogicalChannels_Channel_Otn_State_Esnr_default_instance_._instance.get_mutable()->min_ = const_cast< ::ywrapper::Decimal64Value*>(
      ::ywrapper::Decimal64Value::internal_default_instance());
}
void TerminalDevice_LogicalChannels_Channel_Otn_State_Esnr::clear_avg() {
  if (GetArenaNoVirtual() == NULL && avg_ != NULL) {
    delete avg_;
  }
  avg_ = NULL;
}
void TerminalDevice_LogicalChannels_Channel_Otn_State_Esnr::clear_instant() {
  if (GetArenaNoVirtual() == NULL && instant_ != NULL) {
    delete instant_;
  }
  instant_ = NULL;
}
void TerminalDevice_LogicalChannels_Channel_Otn_State_Esnr::clear_interval() {
  if (GetArenaNoVirtual() == NULL && interval_ != NULL) {
    delete interval_;
  }
  interval_ = NULL;
}
void TerminalDevice_LogicalChannels_Channel_Otn_State_Esnr::clear_max() {
  if (GetArenaNoVirtual() == NULL && max_ != NULL) {
    delete max_;
  }
  max_ = NULL;
}
void TerminalDevice_LogicalChannels_Channel_Otn_State_Esnr::clear_min() {
  if (GetArenaNoVirtual() == NULL && min_ != NULL) {
    delete min_;
  }
  min_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TerminalDevice_LogicalChannels_Channel_Otn_State_Esnr::kAvgFieldNumber;
const int TerminalDevice_LogicalChannels_Channel_Otn_State_Esnr::kInstantFieldNumber;
const int TerminalDevice_LogicalChannels_Channel_Otn_State_Esnr::kIntervalFieldNumber;
const int TerminalDevice_LogicalChannels_Channel_Otn_State_Esnr::kMaxFieldNumber;
const int TerminalDevice_LogicalChannels_Channel_Otn_State_Esnr::kMinFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TerminalDevice_LogicalChannels_Channel_Otn_State_Esnr::TerminalDevice_LogicalChannels_Channel_Otn_State_Esnr()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::InitDefaultsTerminalDevice_LogicalChannels_Channel_Otn_State_Esnr();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.Esnr)
}
TerminalDevice_LogicalChannels_Channel_Otn_State_Esnr::TerminalDevice_LogicalChannels_Channel_Otn_State_Esnr(const TerminalDevice_LogicalChannels_Channel_Otn_State_Esnr& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_min()) {
    min_ = new ::ywrapper::Decimal64Value(*from.min_);
  } else {
    min_ = NULL;
  }
  if (from.has_avg()) {
    avg_ = new ::ywrapper::Decimal64Value(*from.avg_);
  } else {
    avg_ = NULL;
  }
  if (from.has_instant()) {
    instant_ = new ::ywrapper::Decimal64Value(*from.instant_);
  } else {
    instant_ = NULL;
  }
  if (from.has_interval()) {
    interval_ = new ::ywrapper::UintValue(*from.interval_);
  } else {
    interval_ = NULL;
  }
  if (from.has_max()) {
    max_ = new ::ywrapper::Decimal64Value(*from.max_);
  } else {
    max_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.Esnr)
}

void TerminalDevice_LogicalChannels_Channel_Otn_State_Esnr::SharedCtor() {
  ::memset(&min_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&max_) -
      reinterpret_cast<char*>(&min_)) + sizeof(max_));
  _cached_size_ = 0;
}

TerminalDevice_LogicalChannels_Channel_Otn_State_Esnr::~TerminalDevice_LogicalChannels_Channel_Otn_State_Esnr() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.Esnr)
  SharedDtor();
}

void TerminalDevice_LogicalChannels_Channel_Otn_State_Esnr::SharedDtor() {
  if (this != internal_default_instance()) delete min_;
  if (this != internal_default_instance()) delete avg_;
  if (this != internal_default_instance()) delete instant_;
  if (this != internal_default_instance()) delete interval_;
  if (this != internal_default_instance()) delete max_;
}

void TerminalDevice_LogicalChannels_Channel_Otn_State_Esnr::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TerminalDevice_LogicalChannels_Channel_Otn_State_Esnr::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TerminalDevice_LogicalChannels_Channel_Otn_State_Esnr& TerminalDevice_LogicalChannels_Channel_Otn_State_Esnr::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::InitDefaultsTerminalDevice_LogicalChannels_Channel_Otn_State_Esnr();
  return *internal_default_instance();
}

TerminalDevice_LogicalChannels_Channel_Otn_State_Esnr* TerminalDevice_LogicalChannels_Channel_Otn_State_Esnr::New(::google::protobuf::Arena* arena) const {
  TerminalDevice_LogicalChannels_Channel_Otn_State_Esnr* n = new TerminalDevice_LogicalChannels_Channel_Otn_State_Esnr;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TerminalDevice_LogicalChannels_Channel_Otn_State_Esnr::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.Esnr)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && min_ != NULL) {
    delete min_;
  }
  min_ = NULL;
  if (GetArenaNoVirtual() == NULL && avg_ != NULL) {
    delete avg_;
  }
  avg_ = NULL;
  if (GetArenaNoVirtual() == NULL && instant_ != NULL) {
    delete instant_;
  }
  instant_ = NULL;
  if (GetArenaNoVirtual() == NULL && interval_ != NULL) {
    delete interval_;
  }
  interval_ = NULL;
  if (GetArenaNoVirtual() == NULL && max_ != NULL) {
    delete max_;
  }
  max_ = NULL;
  _internal_metadata_.Clear();
}

bool TerminalDevice_LogicalChannels_Channel_Otn_State_Esnr::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.Esnr)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(3587142570u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .ywrapper.Decimal64Value min = 314171675 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/state/esnr/min"];
      case 314171675: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(218u /* 2513373402 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_min()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.Decimal64Value avg = 330244907 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/state/esnr/avg"];
      case 330244907: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 2641959258 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_avg()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.Decimal64Value instant = 330879284 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/state/esnr/instant"];
      case 330879284: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 2647034274 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_instant()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.UintValue interval = 336957778 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/state/esnr/interval"];
      case 336957778: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u /* 2695662226 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_interval()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.Decimal64Value max = 448392821 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/state/esnr/max"];
      case 448392821: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(170u /* 3587142570 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_max()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.Esnr)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.Esnr)
  return false;
#undef DO_
}

void TerminalDevice_LogicalChannels_Channel_Otn_State_Esnr::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.Esnr)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ywrapper.Decimal64Value min = 314171675 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/state/esnr/min"];
  if (this->has_min()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      314171675, *this->min_, output);
  }

  // .ywrapper.Decimal64Value avg = 330244907 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/state/esnr/avg"];
  if (this->has_avg()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      330244907, *this->avg_, output);
  }

  // .ywrapper.Decimal64Value instant = 330879284 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/state/esnr/instant"];
  if (this->has_instant()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      330879284, *this->instant_, output);
  }

  // .ywrapper.UintValue interval = 336957778 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/state/esnr/interval"];
  if (this->has_interval()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      336957778, *this->interval_, output);
  }

  // .ywrapper.Decimal64Value max = 448392821 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/state/esnr/max"];
  if (this->has_max()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      448392821, *this->max_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.Esnr)
}

::google::protobuf::uint8* TerminalDevice_LogicalChannels_Channel_Otn_State_Esnr::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.Esnr)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ywrapper.Decimal64Value min = 314171675 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/state/esnr/min"];
  if (this->has_min()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        314171675, *this->min_, deterministic, target);
  }

  // .ywrapper.Decimal64Value avg = 330244907 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/state/esnr/avg"];
  if (this->has_avg()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        330244907, *this->avg_, deterministic, target);
  }

  // .ywrapper.Decimal64Value instant = 330879284 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/state/esnr/instant"];
  if (this->has_instant()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        330879284, *this->instant_, deterministic, target);
  }

  // .ywrapper.UintValue interval = 336957778 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/state/esnr/interval"];
  if (this->has_interval()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        336957778, *this->interval_, deterministic, target);
  }

  // .ywrapper.Decimal64Value max = 448392821 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/state/esnr/max"];
  if (this->has_max()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        448392821, *this->max_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.Esnr)
  return target;
}

size_t TerminalDevice_LogicalChannels_Channel_Otn_State_Esnr::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.Esnr)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .ywrapper.Decimal64Value min = 314171675 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/state/esnr/min"];
  if (this->has_min()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->min_);
  }

  // .ywrapper.Decimal64Value avg = 330244907 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/state/esnr/avg"];
  if (this->has_avg()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->avg_);
  }

  // .ywrapper.Decimal64Value instant = 330879284 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/state/esnr/instant"];
  if (this->has_instant()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->instant_);
  }

  // .ywrapper.UintValue interval = 336957778 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/state/esnr/interval"];
  if (this->has_interval()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->interval_);
  }

  // .ywrapper.Decimal64Value max = 448392821 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/state/esnr/max"];
  if (this->has_max()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->max_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TerminalDevice_LogicalChannels_Channel_Otn_State_Esnr::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.Esnr)
  GOOGLE_DCHECK_NE(&from, this);
  const TerminalDevice_LogicalChannels_Channel_Otn_State_Esnr* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TerminalDevice_LogicalChannels_Channel_Otn_State_Esnr>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.Esnr)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.Esnr)
    MergeFrom(*source);
  }
}

void TerminalDevice_LogicalChannels_Channel_Otn_State_Esnr::MergeFrom(const TerminalDevice_LogicalChannels_Channel_Otn_State_Esnr& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.Esnr)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_min()) {
    mutable_min()->::ywrapper::Decimal64Value::MergeFrom(from.min());
  }
  if (from.has_avg()) {
    mutable_avg()->::ywrapper::Decimal64Value::MergeFrom(from.avg());
  }
  if (from.has_instant()) {
    mutable_instant()->::ywrapper::Decimal64Value::MergeFrom(from.instant());
  }
  if (from.has_interval()) {
    mutable_interval()->::ywrapper::UintValue::MergeFrom(from.interval());
  }
  if (from.has_max()) {
    mutable_max()->::ywrapper::Decimal64Value::MergeFrom(from.max());
  }
}

void TerminalDevice_LogicalChannels_Channel_Otn_State_Esnr::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.Esnr)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TerminalDevice_LogicalChannels_Channel_Otn_State_Esnr::CopyFrom(const TerminalDevice_LogicalChannels_Channel_Otn_State_Esnr& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.Esnr)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TerminalDevice_LogicalChannels_Channel_Otn_State_Esnr::IsInitialized() const {
  return true;
}

void TerminalDevice_LogicalChannels_Channel_Otn_State_Esnr::Swap(TerminalDevice_LogicalChannels_Channel_Otn_State_Esnr* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TerminalDevice_LogicalChannels_Channel_Otn_State_Esnr::InternalSwap(TerminalDevice_LogicalChannels_Channel_Otn_State_Esnr* other) {
  using std::swap;
  swap(min_, other->min_);
  swap(avg_, other->avg_);
  swap(instant_, other->instant_);
  swap(interval_, other->interval_);
  swap(max_, other->max_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TerminalDevice_LogicalChannels_Channel_Otn_State_Esnr::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TerminalDevice_LogicalChannels_Channel_Otn_State_PostFecBer::InitAsDefaultInstance() {
  ::openconfig::openconfig_terminal_device::_TerminalDevice_LogicalChannels_Channel_Otn_State_PostFecBer_default_instance_._instance.get_mutable()->avg_ = const_cast< ::ywrapper::Decimal64Value*>(
      ::ywrapper::Decimal64Value::internal_default_instance());
  ::openconfig::openconfig_terminal_device::_TerminalDevice_LogicalChannels_Channel_Otn_State_PostFecBer_default_instance_._instance.get_mutable()->instant_ = const_cast< ::ywrapper::Decimal64Value*>(
      ::ywrapper::Decimal64Value::internal_default_instance());
  ::openconfig::openconfig_terminal_device::_TerminalDevice_LogicalChannels_Channel_Otn_State_PostFecBer_default_instance_._instance.get_mutable()->max_ = const_cast< ::ywrapper::Decimal64Value*>(
      ::ywrapper::Decimal64Value::internal_default_instance());
  ::openconfig::openconfig_terminal_device::_TerminalDevice_LogicalChannels_Channel_Otn_State_PostFecBer_default_instance_._instance.get_mutable()->min_ = const_cast< ::ywrapper::Decimal64Value*>(
      ::ywrapper::Decimal64Value::internal_default_instance());
}
void TerminalDevice_LogicalChannels_Channel_Otn_State_PostFecBer::clear_avg() {
  if (GetArenaNoVirtual() == NULL && avg_ != NULL) {
    delete avg_;
  }
  avg_ = NULL;
}
void TerminalDevice_LogicalChannels_Channel_Otn_State_PostFecBer::clear_instant() {
  if (GetArenaNoVirtual() == NULL && instant_ != NULL) {
    delete instant_;
  }
  instant_ = NULL;
}
void TerminalDevice_LogicalChannels_Channel_Otn_State_PostFecBer::clear_max() {
  if (GetArenaNoVirtual() == NULL && max_ != NULL) {
    delete max_;
  }
  max_ = NULL;
}
void TerminalDevice_LogicalChannels_Channel_Otn_State_PostFecBer::clear_min() {
  if (GetArenaNoVirtual() == NULL && min_ != NULL) {
    delete min_;
  }
  min_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TerminalDevice_LogicalChannels_Channel_Otn_State_PostFecBer::kAvgFieldNumber;
const int TerminalDevice_LogicalChannels_Channel_Otn_State_PostFecBer::kInstantFieldNumber;
const int TerminalDevice_LogicalChannels_Channel_Otn_State_PostFecBer::kMaxFieldNumber;
const int TerminalDevice_LogicalChannels_Channel_Otn_State_PostFecBer::kMinFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TerminalDevice_LogicalChannels_Channel_Otn_State_PostFecBer::TerminalDevice_LogicalChannels_Channel_Otn_State_PostFecBer()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::InitDefaultsTerminalDevice_LogicalChannels_Channel_Otn_State_PostFecBer();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.PostFecBer)
}
TerminalDevice_LogicalChannels_Channel_Otn_State_PostFecBer::TerminalDevice_LogicalChannels_Channel_Otn_State_PostFecBer(const TerminalDevice_LogicalChannels_Channel_Otn_State_PostFecBer& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_min()) {
    min_ = new ::ywrapper::Decimal64Value(*from.min_);
  } else {
    min_ = NULL;
  }
  if (from.has_avg()) {
    avg_ = new ::ywrapper::Decimal64Value(*from.avg_);
  } else {
    avg_ = NULL;
  }
  if (from.has_instant()) {
    instant_ = new ::ywrapper::Decimal64Value(*from.instant_);
  } else {
    instant_ = NULL;
  }
  if (from.has_max()) {
    max_ = new ::ywrapper::Decimal64Value(*from.max_);
  } else {
    max_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.PostFecBer)
}

void TerminalDevice_LogicalChannels_Channel_Otn_State_PostFecBer::SharedCtor() {
  ::memset(&min_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&max_) -
      reinterpret_cast<char*>(&min_)) + sizeof(max_));
  _cached_size_ = 0;
}

TerminalDevice_LogicalChannels_Channel_Otn_State_PostFecBer::~TerminalDevice_LogicalChannels_Channel_Otn_State_PostFecBer() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.PostFecBer)
  SharedDtor();
}

void TerminalDevice_LogicalChannels_Channel_Otn_State_PostFecBer::SharedDtor() {
  if (this != internal_default_instance()) delete min_;
  if (this != internal_default_instance()) delete avg_;
  if (this != internal_default_instance()) delete instant_;
  if (this != internal_default_instance()) delete max_;
}

void TerminalDevice_LogicalChannels_Channel_Otn_State_PostFecBer::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TerminalDevice_LogicalChannels_Channel_Otn_State_PostFecBer::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TerminalDevice_LogicalChannels_Channel_Otn_State_PostFecBer& TerminalDevice_LogicalChannels_Channel_Otn_State_PostFecBer::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::InitDefaultsTerminalDevice_LogicalChannels_Channel_Otn_State_PostFecBer();
  return *internal_default_instance();
}

TerminalDevice_LogicalChannels_Channel_Otn_State_PostFecBer* TerminalDevice_LogicalChannels_Channel_Otn_State_PostFecBer::New(::google::protobuf::Arena* arena) const {
  TerminalDevice_LogicalChannels_Channel_Otn_State_PostFecBer* n = new TerminalDevice_LogicalChannels_Channel_Otn_State_PostFecBer;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TerminalDevice_LogicalChannels_Channel_Otn_State_PostFecBer::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.PostFecBer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && min_ != NULL) {
    delete min_;
  }
  min_ = NULL;
  if (GetArenaNoVirtual() == NULL && avg_ != NULL) {
    delete avg_;
  }
  avg_ = NULL;
  if (GetArenaNoVirtual() == NULL && instant_ != NULL) {
    delete instant_;
  }
  instant_ = NULL;
  if (GetArenaNoVirtual() == NULL && max_ != NULL) {
    delete max_;
  }
  max_ = NULL;
  _internal_metadata_.Clear();
}

bool TerminalDevice_LogicalChannels_Channel_Otn_State_PostFecBer::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.PostFecBer)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(3238911090u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .ywrapper.Decimal64Value min = 2214112 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/state/post-fec-ber/min"];
      case 2214112: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(2u /* 17712898 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_min()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.Decimal64Value avg = 188623348 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/state/post-fec-ber/avg"];
      case 188623348: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 1508986786 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_avg()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.Decimal64Value instant = 321048399 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/state/post-fec-ber/instant"];
      case 321048399: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 2568387194 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_instant()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.Decimal64Value max = 404863886 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/state/post-fec-ber/max"];
      case 404863886: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 3238911090 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_max()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.PostFecBer)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.PostFecBer)
  return false;
#undef DO_
}

void TerminalDevice_LogicalChannels_Channel_Otn_State_PostFecBer::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.PostFecBer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ywrapper.Decimal64Value min = 2214112 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/state/post-fec-ber/min"];
  if (this->has_min()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2214112, *this->min_, output);
  }

  // .ywrapper.Decimal64Value avg = 188623348 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/state/post-fec-ber/avg"];
  if (this->has_avg()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      188623348, *this->avg_, output);
  }

  // .ywrapper.Decimal64Value instant = 321048399 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/state/post-fec-ber/instant"];
  if (this->has_instant()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      321048399, *this->instant_, output);
  }

  // .ywrapper.Decimal64Value max = 404863886 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/state/post-fec-ber/max"];
  if (this->has_max()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      404863886, *this->max_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.PostFecBer)
}

::google::protobuf::uint8* TerminalDevice_LogicalChannels_Channel_Otn_State_PostFecBer::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.PostFecBer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ywrapper.Decimal64Value min = 2214112 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/state/post-fec-ber/min"];
  if (this->has_min()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2214112, *this->min_, deterministic, target);
  }

  // .ywrapper.Decimal64Value avg = 188623348 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/state/post-fec-ber/avg"];
  if (this->has_avg()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        188623348, *this->avg_, deterministic, target);
  }

  // .ywrapper.Decimal64Value instant = 321048399 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/state/post-fec-ber/instant"];
  if (this->has_instant()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        321048399, *this->instant_, deterministic, target);
  }

  // .ywrapper.Decimal64Value max = 404863886 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/state/post-fec-ber/max"];
  if (this->has_max()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        404863886, *this->max_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.PostFecBer)
  return target;
}

size_t TerminalDevice_LogicalChannels_Channel_Otn_State_PostFecBer::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.PostFecBer)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .ywrapper.Decimal64Value min = 2214112 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/state/post-fec-ber/min"];
  if (this->has_min()) {
    total_size += 4 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->min_);
  }

  // .ywrapper.Decimal64Value avg = 188623348 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/state/post-fec-ber/avg"];
  if (this->has_avg()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->avg_);
  }

  // .ywrapper.Decimal64Value instant = 321048399 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/state/post-fec-ber/instant"];
  if (this->has_instant()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->instant_);
  }

  // .ywrapper.Decimal64Value max = 404863886 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/state/post-fec-ber/max"];
  if (this->has_max()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->max_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TerminalDevice_LogicalChannels_Channel_Otn_State_PostFecBer::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.PostFecBer)
  GOOGLE_DCHECK_NE(&from, this);
  const TerminalDevice_LogicalChannels_Channel_Otn_State_PostFecBer* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TerminalDevice_LogicalChannels_Channel_Otn_State_PostFecBer>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.PostFecBer)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.PostFecBer)
    MergeFrom(*source);
  }
}

void TerminalDevice_LogicalChannels_Channel_Otn_State_PostFecBer::MergeFrom(const TerminalDevice_LogicalChannels_Channel_Otn_State_PostFecBer& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.PostFecBer)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_min()) {
    mutable_min()->::ywrapper::Decimal64Value::MergeFrom(from.min());
  }
  if (from.has_avg()) {
    mutable_avg()->::ywrapper::Decimal64Value::MergeFrom(from.avg());
  }
  if (from.has_instant()) {
    mutable_instant()->::ywrapper::Decimal64Value::MergeFrom(from.instant());
  }
  if (from.has_max()) {
    mutable_max()->::ywrapper::Decimal64Value::MergeFrom(from.max());
  }
}

void TerminalDevice_LogicalChannels_Channel_Otn_State_PostFecBer::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.PostFecBer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TerminalDevice_LogicalChannels_Channel_Otn_State_PostFecBer::CopyFrom(const TerminalDevice_LogicalChannels_Channel_Otn_State_PostFecBer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.PostFecBer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TerminalDevice_LogicalChannels_Channel_Otn_State_PostFecBer::IsInitialized() const {
  return true;
}

void TerminalDevice_LogicalChannels_Channel_Otn_State_PostFecBer::Swap(TerminalDevice_LogicalChannels_Channel_Otn_State_PostFecBer* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TerminalDevice_LogicalChannels_Channel_Otn_State_PostFecBer::InternalSwap(TerminalDevice_LogicalChannels_Channel_Otn_State_PostFecBer* other) {
  using std::swap;
  swap(min_, other->min_);
  swap(avg_, other->avg_);
  swap(instant_, other->instant_);
  swap(max_, other->max_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TerminalDevice_LogicalChannels_Channel_Otn_State_PostFecBer::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TerminalDevice_LogicalChannels_Channel_Otn_State_PreFecBer::InitAsDefaultInstance() {
  ::openconfig::openconfig_terminal_device::_TerminalDevice_LogicalChannels_Channel_Otn_State_PreFecBer_default_instance_._instance.get_mutable()->avg_ = const_cast< ::ywrapper::Decimal64Value*>(
      ::ywrapper::Decimal64Value::internal_default_instance());
  ::openconfig::openconfig_terminal_device::_TerminalDevice_LogicalChannels_Channel_Otn_State_PreFecBer_default_instance_._instance.get_mutable()->instant_ = const_cast< ::ywrapper::Decimal64Value*>(
      ::ywrapper::Decimal64Value::internal_default_instance());
  ::openconfig::openconfig_terminal_device::_TerminalDevice_LogicalChannels_Channel_Otn_State_PreFecBer_default_instance_._instance.get_mutable()->max_ = const_cast< ::ywrapper::Decimal64Value*>(
      ::ywrapper::Decimal64Value::internal_default_instance());
  ::openconfig::openconfig_terminal_device::_TerminalDevice_LogicalChannels_Channel_Otn_State_PreFecBer_default_instance_._instance.get_mutable()->min_ = const_cast< ::ywrapper::Decimal64Value*>(
      ::ywrapper::Decimal64Value::internal_default_instance());
}
void TerminalDevice_LogicalChannels_Channel_Otn_State_PreFecBer::clear_avg() {
  if (GetArenaNoVirtual() == NULL && avg_ != NULL) {
    delete avg_;
  }
  avg_ = NULL;
}
void TerminalDevice_LogicalChannels_Channel_Otn_State_PreFecBer::clear_instant() {
  if (GetArenaNoVirtual() == NULL && instant_ != NULL) {
    delete instant_;
  }
  instant_ = NULL;
}
void TerminalDevice_LogicalChannels_Channel_Otn_State_PreFecBer::clear_max() {
  if (GetArenaNoVirtual() == NULL && max_ != NULL) {
    delete max_;
  }
  max_ = NULL;
}
void TerminalDevice_LogicalChannels_Channel_Otn_State_PreFecBer::clear_min() {
  if (GetArenaNoVirtual() == NULL && min_ != NULL) {
    delete min_;
  }
  min_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TerminalDevice_LogicalChannels_Channel_Otn_State_PreFecBer::kAvgFieldNumber;
const int TerminalDevice_LogicalChannels_Channel_Otn_State_PreFecBer::kInstantFieldNumber;
const int TerminalDevice_LogicalChannels_Channel_Otn_State_PreFecBer::kMaxFieldNumber;
const int TerminalDevice_LogicalChannels_Channel_Otn_State_PreFecBer::kMinFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TerminalDevice_LogicalChannels_Channel_Otn_State_PreFecBer::TerminalDevice_LogicalChannels_Channel_Otn_State_PreFecBer()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::InitDefaultsTerminalDevice_LogicalChannels_Channel_Otn_State_PreFecBer();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.PreFecBer)
}
TerminalDevice_LogicalChannels_Channel_Otn_State_PreFecBer::TerminalDevice_LogicalChannels_Channel_Otn_State_PreFecBer(const TerminalDevice_LogicalChannels_Channel_Otn_State_PreFecBer& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_min()) {
    min_ = new ::ywrapper::Decimal64Value(*from.min_);
  } else {
    min_ = NULL;
  }
  if (from.has_max()) {
    max_ = new ::ywrapper::Decimal64Value(*from.max_);
  } else {
    max_ = NULL;
  }
  if (from.has_instant()) {
    instant_ = new ::ywrapper::Decimal64Value(*from.instant_);
  } else {
    instant_ = NULL;
  }
  if (from.has_avg()) {
    avg_ = new ::ywrapper::Decimal64Value(*from.avg_);
  } else {
    avg_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.PreFecBer)
}

void TerminalDevice_LogicalChannels_Channel_Otn_State_PreFecBer::SharedCtor() {
  ::memset(&min_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&avg_) -
      reinterpret_cast<char*>(&min_)) + sizeof(avg_));
  _cached_size_ = 0;
}

TerminalDevice_LogicalChannels_Channel_Otn_State_PreFecBer::~TerminalDevice_LogicalChannels_Channel_Otn_State_PreFecBer() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.PreFecBer)
  SharedDtor();
}

void TerminalDevice_LogicalChannels_Channel_Otn_State_PreFecBer::SharedDtor() {
  if (this != internal_default_instance()) delete min_;
  if (this != internal_default_instance()) delete max_;
  if (this != internal_default_instance()) delete instant_;
  if (this != internal_default_instance()) delete avg_;
}

void TerminalDevice_LogicalChannels_Channel_Otn_State_PreFecBer::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TerminalDevice_LogicalChannels_Channel_Otn_State_PreFecBer::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TerminalDevice_LogicalChannels_Channel_Otn_State_PreFecBer& TerminalDevice_LogicalChannels_Channel_Otn_State_PreFecBer::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::InitDefaultsTerminalDevice_LogicalChannels_Channel_Otn_State_PreFecBer();
  return *internal_default_instance();
}

TerminalDevice_LogicalChannels_Channel_Otn_State_PreFecBer* TerminalDevice_LogicalChannels_Channel_Otn_State_PreFecBer::New(::google::protobuf::Arena* arena) const {
  TerminalDevice_LogicalChannels_Channel_Otn_State_PreFecBer* n = new TerminalDevice_LogicalChannels_Channel_Otn_State_PreFecBer;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TerminalDevice_LogicalChannels_Channel_Otn_State_PreFecBer::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.PreFecBer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && min_ != NULL) {
    delete min_;
  }
  min_ = NULL;
  if (GetArenaNoVirtual() == NULL && max_ != NULL) {
    delete max_;
  }
  max_ = NULL;
  if (GetArenaNoVirtual() == NULL && instant_ != NULL) {
    delete instant_;
  }
  instant_ = NULL;
  if (GetArenaNoVirtual() == NULL && avg_ != NULL) {
    delete avg_;
  }
  avg_ = NULL;
  _internal_metadata_.Clear();
}

bool TerminalDevice_LogicalChannels_Channel_Otn_State_PreFecBer::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.PreFecBer)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(3398297322u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .ywrapper.Decimal64Value min = 71881665 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/state/pre-fec-ber/min"];
      case 71881665: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 575053322 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_min()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.Decimal64Value max = 206102591 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/state/pre-fec-ber/max"];
      case 206102591: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(250u /* 1648820730 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_max()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.Decimal64Value instant = 417553930 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/state/pre-fec-ber/instant"];
      case 417553930: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 3340431442 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_instant()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.Decimal64Value avg = 424787165 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/state/pre-fec-ber/avg"];
      case 424787165: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(234u /* 3398297322 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_avg()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.PreFecBer)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.PreFecBer)
  return false;
#undef DO_
}

void TerminalDevice_LogicalChannels_Channel_Otn_State_PreFecBer::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.PreFecBer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ywrapper.Decimal64Value min = 71881665 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/state/pre-fec-ber/min"];
  if (this->has_min()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      71881665, *this->min_, output);
  }

  // .ywrapper.Decimal64Value max = 206102591 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/state/pre-fec-ber/max"];
  if (this->has_max()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      206102591, *this->max_, output);
  }

  // .ywrapper.Decimal64Value instant = 417553930 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/state/pre-fec-ber/instant"];
  if (this->has_instant()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      417553930, *this->instant_, output);
  }

  // .ywrapper.Decimal64Value avg = 424787165 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/state/pre-fec-ber/avg"];
  if (this->has_avg()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      424787165, *this->avg_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.PreFecBer)
}

::google::protobuf::uint8* TerminalDevice_LogicalChannels_Channel_Otn_State_PreFecBer::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.PreFecBer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ywrapper.Decimal64Value min = 71881665 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/state/pre-fec-ber/min"];
  if (this->has_min()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        71881665, *this->min_, deterministic, target);
  }

  // .ywrapper.Decimal64Value max = 206102591 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/state/pre-fec-ber/max"];
  if (this->has_max()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        206102591, *this->max_, deterministic, target);
  }

  // .ywrapper.Decimal64Value instant = 417553930 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/state/pre-fec-ber/instant"];
  if (this->has_instant()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        417553930, *this->instant_, deterministic, target);
  }

  // .ywrapper.Decimal64Value avg = 424787165 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/state/pre-fec-ber/avg"];
  if (this->has_avg()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        424787165, *this->avg_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.PreFecBer)
  return target;
}

size_t TerminalDevice_LogicalChannels_Channel_Otn_State_PreFecBer::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.PreFecBer)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .ywrapper.Decimal64Value min = 71881665 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/state/pre-fec-ber/min"];
  if (this->has_min()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->min_);
  }

  // .ywrapper.Decimal64Value max = 206102591 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/state/pre-fec-ber/max"];
  if (this->has_max()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->max_);
  }

  // .ywrapper.Decimal64Value instant = 417553930 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/state/pre-fec-ber/instant"];
  if (this->has_instant()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->instant_);
  }

  // .ywrapper.Decimal64Value avg = 424787165 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/state/pre-fec-ber/avg"];
  if (this->has_avg()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->avg_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TerminalDevice_LogicalChannels_Channel_Otn_State_PreFecBer::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.PreFecBer)
  GOOGLE_DCHECK_NE(&from, this);
  const TerminalDevice_LogicalChannels_Channel_Otn_State_PreFecBer* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TerminalDevice_LogicalChannels_Channel_Otn_State_PreFecBer>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.PreFecBer)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.PreFecBer)
    MergeFrom(*source);
  }
}

void TerminalDevice_LogicalChannels_Channel_Otn_State_PreFecBer::MergeFrom(const TerminalDevice_LogicalChannels_Channel_Otn_State_PreFecBer& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.PreFecBer)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_min()) {
    mutable_min()->::ywrapper::Decimal64Value::MergeFrom(from.min());
  }
  if (from.has_max()) {
    mutable_max()->::ywrapper::Decimal64Value::MergeFrom(from.max());
  }
  if (from.has_instant()) {
    mutable_instant()->::ywrapper::Decimal64Value::MergeFrom(from.instant());
  }
  if (from.has_avg()) {
    mutable_avg()->::ywrapper::Decimal64Value::MergeFrom(from.avg());
  }
}

void TerminalDevice_LogicalChannels_Channel_Otn_State_PreFecBer::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.PreFecBer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TerminalDevice_LogicalChannels_Channel_Otn_State_PreFecBer::CopyFrom(const TerminalDevice_LogicalChannels_Channel_Otn_State_PreFecBer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.PreFecBer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TerminalDevice_LogicalChannels_Channel_Otn_State_PreFecBer::IsInitialized() const {
  return true;
}

void TerminalDevice_LogicalChannels_Channel_Otn_State_PreFecBer::Swap(TerminalDevice_LogicalChannels_Channel_Otn_State_PreFecBer* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TerminalDevice_LogicalChannels_Channel_Otn_State_PreFecBer::InternalSwap(TerminalDevice_LogicalChannels_Channel_Otn_State_PreFecBer* other) {
  using std::swap;
  swap(min_, other->min_);
  swap(max_, other->max_);
  swap(instant_, other->instant_);
  swap(avg_, other->avg_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TerminalDevice_LogicalChannels_Channel_Otn_State_PreFecBer::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TerminalDevice_LogicalChannels_Channel_Otn_State_QValue::InitAsDefaultInstance() {
  ::openconfig::openconfig_terminal_device::_TerminalDevice_LogicalChannels_Channel_Otn_State_QValue_default_instance_._instance.get_mutable()->avg_ = const_cast< ::ywrapper::Decimal64Value*>(
      ::ywrapper::Decimal64Value::internal_default_instance());
  ::openconfig::openconfig_terminal_device::_TerminalDevice_LogicalChannels_Channel_Otn_State_QValue_default_instance_._instance.get_mutable()->instant_ = const_cast< ::ywrapper::Decimal64Value*>(
      ::ywrapper::Decimal64Value::internal_default_instance());
  ::openconfig::openconfig_terminal_device::_TerminalDevice_LogicalChannels_Channel_Otn_State_QValue_default_instance_._instance.get_mutable()->interval_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
  ::openconfig::openconfig_terminal_device::_TerminalDevice_LogicalChannels_Channel_Otn_State_QValue_default_instance_._instance.get_mutable()->max_ = const_cast< ::ywrapper::Decimal64Value*>(
      ::ywrapper::Decimal64Value::internal_default_instance());
  ::openconfig::openconfig_terminal_device::_TerminalDevice_LogicalChannels_Channel_Otn_State_QValue_default_instance_._instance.get_mutable()->min_ = const_cast< ::ywrapper::Decimal64Value*>(
      ::ywrapper::Decimal64Value::internal_default_instance());
}
void TerminalDevice_LogicalChannels_Channel_Otn_State_QValue::clear_avg() {
  if (GetArenaNoVirtual() == NULL && avg_ != NULL) {
    delete avg_;
  }
  avg_ = NULL;
}
void TerminalDevice_LogicalChannels_Channel_Otn_State_QValue::clear_instant() {
  if (GetArenaNoVirtual() == NULL && instant_ != NULL) {
    delete instant_;
  }
  instant_ = NULL;
}
void TerminalDevice_LogicalChannels_Channel_Otn_State_QValue::clear_interval() {
  if (GetArenaNoVirtual() == NULL && interval_ != NULL) {
    delete interval_;
  }
  interval_ = NULL;
}
void TerminalDevice_LogicalChannels_Channel_Otn_State_QValue::clear_max() {
  if (GetArenaNoVirtual() == NULL && max_ != NULL) {
    delete max_;
  }
  max_ = NULL;
}
void TerminalDevice_LogicalChannels_Channel_Otn_State_QValue::clear_min() {
  if (GetArenaNoVirtual() == NULL && min_ != NULL) {
    delete min_;
  }
  min_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TerminalDevice_LogicalChannels_Channel_Otn_State_QValue::kAvgFieldNumber;
const int TerminalDevice_LogicalChannels_Channel_Otn_State_QValue::kInstantFieldNumber;
const int TerminalDevice_LogicalChannels_Channel_Otn_State_QValue::kIntervalFieldNumber;
const int TerminalDevice_LogicalChannels_Channel_Otn_State_QValue::kMaxFieldNumber;
const int TerminalDevice_LogicalChannels_Channel_Otn_State_QValue::kMinFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TerminalDevice_LogicalChannels_Channel_Otn_State_QValue::TerminalDevice_LogicalChannels_Channel_Otn_State_QValue()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::InitDefaultsTerminalDevice_LogicalChannels_Channel_Otn_State_QValue();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.QValue)
}
TerminalDevice_LogicalChannels_Channel_Otn_State_QValue::TerminalDevice_LogicalChannels_Channel_Otn_State_QValue(const TerminalDevice_LogicalChannels_Channel_Otn_State_QValue& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_max()) {
    max_ = new ::ywrapper::Decimal64Value(*from.max_);
  } else {
    max_ = NULL;
  }
  if (from.has_interval()) {
    interval_ = new ::ywrapper::UintValue(*from.interval_);
  } else {
    interval_ = NULL;
  }
  if (from.has_instant()) {
    instant_ = new ::ywrapper::Decimal64Value(*from.instant_);
  } else {
    instant_ = NULL;
  }
  if (from.has_avg()) {
    avg_ = new ::ywrapper::Decimal64Value(*from.avg_);
  } else {
    avg_ = NULL;
  }
  if (from.has_min()) {
    min_ = new ::ywrapper::Decimal64Value(*from.min_);
  } else {
    min_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.QValue)
}

void TerminalDevice_LogicalChannels_Channel_Otn_State_QValue::SharedCtor() {
  ::memset(&max_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&min_) -
      reinterpret_cast<char*>(&max_)) + sizeof(min_));
  _cached_size_ = 0;
}

TerminalDevice_LogicalChannels_Channel_Otn_State_QValue::~TerminalDevice_LogicalChannels_Channel_Otn_State_QValue() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.QValue)
  SharedDtor();
}

void TerminalDevice_LogicalChannels_Channel_Otn_State_QValue::SharedDtor() {
  if (this != internal_default_instance()) delete max_;
  if (this != internal_default_instance()) delete interval_;
  if (this != internal_default_instance()) delete instant_;
  if (this != internal_default_instance()) delete avg_;
  if (this != internal_default_instance()) delete min_;
}

void TerminalDevice_LogicalChannels_Channel_Otn_State_QValue::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TerminalDevice_LogicalChannels_Channel_Otn_State_QValue::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TerminalDevice_LogicalChannels_Channel_Otn_State_QValue& TerminalDevice_LogicalChannels_Channel_Otn_State_QValue::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::InitDefaultsTerminalDevice_LogicalChannels_Channel_Otn_State_QValue();
  return *internal_default_instance();
}

TerminalDevice_LogicalChannels_Channel_Otn_State_QValue* TerminalDevice_LogicalChannels_Channel_Otn_State_QValue::New(::google::protobuf::Arena* arena) const {
  TerminalDevice_LogicalChannels_Channel_Otn_State_QValue* n = new TerminalDevice_LogicalChannels_Channel_Otn_State_QValue;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TerminalDevice_LogicalChannels_Channel_Otn_State_QValue::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.QValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && max_ != NULL) {
    delete max_;
  }
  max_ = NULL;
  if (GetArenaNoVirtual() == NULL && interval_ != NULL) {
    delete interval_;
  }
  interval_ = NULL;
  if (GetArenaNoVirtual() == NULL && instant_ != NULL) {
    delete instant_;
  }
  instant_ = NULL;
  if (GetArenaNoVirtual() == NULL && avg_ != NULL) {
    delete avg_;
  }
  avg_ = NULL;
  if (GetArenaNoVirtual() == NULL && min_ != NULL) {
    delete min_;
  }
  min_ = NULL;
  _internal_metadata_.Clear();
}

bool TerminalDevice_LogicalChannels_Channel_Otn_State_QValue::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.QValue)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(3636906482u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .ywrapper.Decimal64Value max = 51963280 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/state/q-value/max"];
      case 51963280: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u /* 415706242 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_max()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.UintValue interval = 388690377 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/state/q-value/interval"];
      case 388690377: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 3109523018 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_interval()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.Decimal64Value instant = 400113333 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/state/q-value/instant"];
      case 400113333: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(170u /* 3200906666 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_instant()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.Decimal64Value avg = 439703990 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/state/q-value/avg"];
      case 439703990: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(178u /* 3517631922 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_avg()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.Decimal64Value min = 454613310 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/state/q-value/min"];
      case 454613310: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(242u /* 3636906482 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_min()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.QValue)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.QValue)
  return false;
#undef DO_
}

void TerminalDevice_LogicalChannels_Channel_Otn_State_QValue::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.QValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ywrapper.Decimal64Value max = 51963280 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/state/q-value/max"];
  if (this->has_max()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      51963280, *this->max_, output);
  }

  // .ywrapper.UintValue interval = 388690377 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/state/q-value/interval"];
  if (this->has_interval()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      388690377, *this->interval_, output);
  }

  // .ywrapper.Decimal64Value instant = 400113333 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/state/q-value/instant"];
  if (this->has_instant()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      400113333, *this->instant_, output);
  }

  // .ywrapper.Decimal64Value avg = 439703990 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/state/q-value/avg"];
  if (this->has_avg()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      439703990, *this->avg_, output);
  }

  // .ywrapper.Decimal64Value min = 454613310 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/state/q-value/min"];
  if (this->has_min()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      454613310, *this->min_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.QValue)
}

::google::protobuf::uint8* TerminalDevice_LogicalChannels_Channel_Otn_State_QValue::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.QValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ywrapper.Decimal64Value max = 51963280 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/state/q-value/max"];
  if (this->has_max()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        51963280, *this->max_, deterministic, target);
  }

  // .ywrapper.UintValue interval = 388690377 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/state/q-value/interval"];
  if (this->has_interval()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        388690377, *this->interval_, deterministic, target);
  }

  // .ywrapper.Decimal64Value instant = 400113333 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/state/q-value/instant"];
  if (this->has_instant()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        400113333, *this->instant_, deterministic, target);
  }

  // .ywrapper.Decimal64Value avg = 439703990 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/state/q-value/avg"];
  if (this->has_avg()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        439703990, *this->avg_, deterministic, target);
  }

  // .ywrapper.Decimal64Value min = 454613310 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/state/q-value/min"];
  if (this->has_min()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        454613310, *this->min_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.QValue)
  return target;
}

size_t TerminalDevice_LogicalChannels_Channel_Otn_State_QValue::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.QValue)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .ywrapper.Decimal64Value max = 51963280 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/state/q-value/max"];
  if (this->has_max()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->max_);
  }

  // .ywrapper.UintValue interval = 388690377 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/state/q-value/interval"];
  if (this->has_interval()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->interval_);
  }

  // .ywrapper.Decimal64Value instant = 400113333 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/state/q-value/instant"];
  if (this->has_instant()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->instant_);
  }

  // .ywrapper.Decimal64Value avg = 439703990 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/state/q-value/avg"];
  if (this->has_avg()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->avg_);
  }

  // .ywrapper.Decimal64Value min = 454613310 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/state/q-value/min"];
  if (this->has_min()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->min_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TerminalDevice_LogicalChannels_Channel_Otn_State_QValue::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.QValue)
  GOOGLE_DCHECK_NE(&from, this);
  const TerminalDevice_LogicalChannels_Channel_Otn_State_QValue* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TerminalDevice_LogicalChannels_Channel_Otn_State_QValue>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.QValue)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.QValue)
    MergeFrom(*source);
  }
}

void TerminalDevice_LogicalChannels_Channel_Otn_State_QValue::MergeFrom(const TerminalDevice_LogicalChannels_Channel_Otn_State_QValue& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.QValue)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_max()) {
    mutable_max()->::ywrapper::Decimal64Value::MergeFrom(from.max());
  }
  if (from.has_interval()) {
    mutable_interval()->::ywrapper::UintValue::MergeFrom(from.interval());
  }
  if (from.has_instant()) {
    mutable_instant()->::ywrapper::Decimal64Value::MergeFrom(from.instant());
  }
  if (from.has_avg()) {
    mutable_avg()->::ywrapper::Decimal64Value::MergeFrom(from.avg());
  }
  if (from.has_min()) {
    mutable_min()->::ywrapper::Decimal64Value::MergeFrom(from.min());
  }
}

void TerminalDevice_LogicalChannels_Channel_Otn_State_QValue::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.QValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TerminalDevice_LogicalChannels_Channel_Otn_State_QValue::CopyFrom(const TerminalDevice_LogicalChannels_Channel_Otn_State_QValue& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.QValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TerminalDevice_LogicalChannels_Channel_Otn_State_QValue::IsInitialized() const {
  return true;
}

void TerminalDevice_LogicalChannels_Channel_Otn_State_QValue::Swap(TerminalDevice_LogicalChannels_Channel_Otn_State_QValue* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TerminalDevice_LogicalChannels_Channel_Otn_State_QValue::InternalSwap(TerminalDevice_LogicalChannels_Channel_Otn_State_QValue* other) {
  using std::swap;
  swap(max_, other->max_);
  swap(interval_, other->interval_);
  swap(instant_, other->instant_);
  swap(avg_, other->avg_);
  swap(min_, other->min_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TerminalDevice_LogicalChannels_Channel_Otn_State_QValue::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TerminalDevice_LogicalChannels_Channel_Otn_State::InitAsDefaultInstance() {
  ::openconfig::openconfig_terminal_device::_TerminalDevice_LogicalChannels_Channel_Otn_State_default_instance_._instance.get_mutable()->background_block_errors_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
  ::openconfig::openconfig_terminal_device::_TerminalDevice_LogicalChannels_Channel_Otn_State_default_instance_._instance.get_mutable()->code_violations_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
  ::openconfig::openconfig_terminal_device::_TerminalDevice_LogicalChannels_Channel_Otn_State_default_instance_._instance.get_mutable()->errored_seconds_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
  ::openconfig::openconfig_terminal_device::_TerminalDevice_LogicalChannels_Channel_Otn_State_default_instance_._instance.get_mutable()->esnr_ = const_cast< ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Otn_State_Esnr*>(
      ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Otn_State_Esnr::internal_default_instance());
  ::openconfig::openconfig_terminal_device::_TerminalDevice_LogicalChannels_Channel_Otn_State_default_instance_._instance.get_mutable()->fec_corrected_bits_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
  ::openconfig::openconfig_terminal_device::_TerminalDevice_LogicalChannels_Channel_Otn_State_default_instance_._instance.get_mutable()->fec_corrected_bytes_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
  ::openconfig::openconfig_terminal_device::_TerminalDevice_LogicalChannels_Channel_Otn_State_default_instance_._instance.get_mutable()->fec_uncorrectable_words_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
  ::openconfig::openconfig_terminal_device::_TerminalDevice_LogicalChannels_Channel_Otn_State_default_instance_._instance.get_mutable()->post_fec_ber_ = const_cast< ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Otn_State_PostFecBer*>(
      ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Otn_State_PostFecBer::internal_default_instance());
  ::openconfig::openconfig_terminal_device::_TerminalDevice_LogicalChannels_Channel_Otn_State_default_instance_._instance.get_mutable()->pre_fec_ber_ = const_cast< ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Otn_State_PreFecBer*>(
      ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Otn_State_PreFecBer::internal_default_instance());
  ::openconfig::openconfig_terminal_device::_TerminalDevice_LogicalChannels_Channel_Otn_State_default_instance_._instance.get_mutable()->q_value_ = const_cast< ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Otn_State_QValue*>(
      ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Otn_State_QValue::internal_default_instance());
  ::openconfig::openconfig_terminal_device::_TerminalDevice_LogicalChannels_Channel_Otn_State_default_instance_._instance.get_mutable()->rdi_msg_ = const_cast< ::ywrapper::StringValue*>(
      ::ywrapper::StringValue::internal_default_instance());
  ::openconfig::openconfig_terminal_device::_TerminalDevice_LogicalChannels_Channel_Otn_State_default_instance_._instance.get_mutable()->severely_errored_seconds_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
  ::openconfig::openconfig_terminal_device::_TerminalDevice_LogicalChannels_Channel_Otn_State_default_instance_._instance.get_mutable()->tti_msg_auto_ = const_cast< ::ywrapper::BoolValue*>(
      ::ywrapper::BoolValue::internal_default_instance());
  ::openconfig::openconfig_terminal_device::_TerminalDevice_LogicalChannels_Channel_Otn_State_default_instance_._instance.get_mutable()->tti_msg_expected_ = const_cast< ::ywrapper::StringValue*>(
      ::ywrapper::StringValue::internal_default_instance());
  ::openconfig::openconfig_terminal_device::_TerminalDevice_LogicalChannels_Channel_Otn_State_default_instance_._instance.get_mutable()->tti_msg_recv_ = const_cast< ::ywrapper::StringValue*>(
      ::ywrapper::StringValue::internal_default_instance());
  ::openconfig::openconfig_terminal_device::_TerminalDevice_LogicalChannels_Channel_Otn_State_default_instance_._instance.get_mutable()->tti_msg_transmit_ = const_cast< ::ywrapper::StringValue*>(
      ::ywrapper::StringValue::internal_default_instance());
  ::openconfig::openconfig_terminal_device::_TerminalDevice_LogicalChannels_Channel_Otn_State_default_instance_._instance.get_mutable()->unavailable_seconds_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
}
void TerminalDevice_LogicalChannels_Channel_Otn_State::clear_background_block_errors() {
  if (GetArenaNoVirtual() == NULL && background_block_errors_ != NULL) {
    delete background_block_errors_;
  }
  background_block_errors_ = NULL;
}
void TerminalDevice_LogicalChannels_Channel_Otn_State::clear_code_violations() {
  if (GetArenaNoVirtual() == NULL && code_violations_ != NULL) {
    delete code_violations_;
  }
  code_violations_ = NULL;
}
void TerminalDevice_LogicalChannels_Channel_Otn_State::clear_errored_seconds() {
  if (GetArenaNoVirtual() == NULL && errored_seconds_ != NULL) {
    delete errored_seconds_;
  }
  errored_seconds_ = NULL;
}
void TerminalDevice_LogicalChannels_Channel_Otn_State::clear_fec_corrected_bits() {
  if (GetArenaNoVirtual() == NULL && fec_corrected_bits_ != NULL) {
    delete fec_corrected_bits_;
  }
  fec_corrected_bits_ = NULL;
}
void TerminalDevice_LogicalChannels_Channel_Otn_State::clear_fec_corrected_bytes() {
  if (GetArenaNoVirtual() == NULL && fec_corrected_bytes_ != NULL) {
    delete fec_corrected_bytes_;
  }
  fec_corrected_bytes_ = NULL;
}
void TerminalDevice_LogicalChannels_Channel_Otn_State::clear_fec_uncorrectable_words() {
  if (GetArenaNoVirtual() == NULL && fec_uncorrectable_words_ != NULL) {
    delete fec_uncorrectable_words_;
  }
  fec_uncorrectable_words_ = NULL;
}
void TerminalDevice_LogicalChannels_Channel_Otn_State::clear_rdi_msg() {
  if (GetArenaNoVirtual() == NULL && rdi_msg_ != NULL) {
    delete rdi_msg_;
  }
  rdi_msg_ = NULL;
}
void TerminalDevice_LogicalChannels_Channel_Otn_State::clear_severely_errored_seconds() {
  if (GetArenaNoVirtual() == NULL && severely_errored_seconds_ != NULL) {
    delete severely_errored_seconds_;
  }
  severely_errored_seconds_ = NULL;
}
void TerminalDevice_LogicalChannels_Channel_Otn_State::clear_tti_msg_auto() {
  if (GetArenaNoVirtual() == NULL && tti_msg_auto_ != NULL) {
    delete tti_msg_auto_;
  }
  tti_msg_auto_ = NULL;
}
void TerminalDevice_LogicalChannels_Channel_Otn_State::clear_tti_msg_expected() {
  if (GetArenaNoVirtual() == NULL && tti_msg_expected_ != NULL) {
    delete tti_msg_expected_;
  }
  tti_msg_expected_ = NULL;
}
void TerminalDevice_LogicalChannels_Channel_Otn_State::clear_tti_msg_recv() {
  if (GetArenaNoVirtual() == NULL && tti_msg_recv_ != NULL) {
    delete tti_msg_recv_;
  }
  tti_msg_recv_ = NULL;
}
void TerminalDevice_LogicalChannels_Channel_Otn_State::clear_tti_msg_transmit() {
  if (GetArenaNoVirtual() == NULL && tti_msg_transmit_ != NULL) {
    delete tti_msg_transmit_;
  }
  tti_msg_transmit_ = NULL;
}
void TerminalDevice_LogicalChannels_Channel_Otn_State::clear_unavailable_seconds() {
  if (GetArenaNoVirtual() == NULL && unavailable_seconds_ != NULL) {
    delete unavailable_seconds_;
  }
  unavailable_seconds_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TerminalDevice_LogicalChannels_Channel_Otn_State::kBackgroundBlockErrorsFieldNumber;
const int TerminalDevice_LogicalChannels_Channel_Otn_State::kCodeViolationsFieldNumber;
const int TerminalDevice_LogicalChannels_Channel_Otn_State::kErroredSecondsFieldNumber;
const int TerminalDevice_LogicalChannels_Channel_Otn_State::kEsnrFieldNumber;
const int TerminalDevice_LogicalChannels_Channel_Otn_State::kFecCorrectedBitsFieldNumber;
const int TerminalDevice_LogicalChannels_Channel_Otn_State::kFecCorrectedBytesFieldNumber;
const int TerminalDevice_LogicalChannels_Channel_Otn_State::kFecUncorrectableWordsFieldNumber;
const int TerminalDevice_LogicalChannels_Channel_Otn_State::kPostFecBerFieldNumber;
const int TerminalDevice_LogicalChannels_Channel_Otn_State::kPreFecBerFieldNumber;
const int TerminalDevice_LogicalChannels_Channel_Otn_State::kQValueFieldNumber;
const int TerminalDevice_LogicalChannels_Channel_Otn_State::kRdiMsgFieldNumber;
const int TerminalDevice_LogicalChannels_Channel_Otn_State::kSeverelyErroredSecondsFieldNumber;
const int TerminalDevice_LogicalChannels_Channel_Otn_State::kTtiMsgAutoFieldNumber;
const int TerminalDevice_LogicalChannels_Channel_Otn_State::kTtiMsgExpectedFieldNumber;
const int TerminalDevice_LogicalChannels_Channel_Otn_State::kTtiMsgRecvFieldNumber;
const int TerminalDevice_LogicalChannels_Channel_Otn_State::kTtiMsgTransmitFieldNumber;
const int TerminalDevice_LogicalChannels_Channel_Otn_State::kUnavailableSecondsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TerminalDevice_LogicalChannels_Channel_Otn_State::TerminalDevice_LogicalChannels_Channel_Otn_State()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::InitDefaultsTerminalDevice_LogicalChannels_Channel_Otn_State();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State)
}
TerminalDevice_LogicalChannels_Channel_Otn_State::TerminalDevice_LogicalChannels_Channel_Otn_State(const TerminalDevice_LogicalChannels_Channel_Otn_State& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_code_violations()) {
    code_violations_ = new ::ywrapper::UintValue(*from.code_violations_);
  } else {
    code_violations_ = NULL;
  }
  if (from.has_severely_errored_seconds()) {
    severely_errored_seconds_ = new ::ywrapper::UintValue(*from.severely_errored_seconds_);
  } else {
    severely_errored_seconds_ = NULL;
  }
  if (from.has_pre_fec_ber()) {
    pre_fec_ber_ = new ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Otn_State_PreFecBer(*from.pre_fec_ber_);
  } else {
    pre_fec_ber_ = NULL;
  }
  if (from.has_tti_msg_expected()) {
    tti_msg_expected_ = new ::ywrapper::StringValue(*from.tti_msg_expected_);
  } else {
    tti_msg_expected_ = NULL;
  }
  if (from.has_tti_msg_recv()) {
    tti_msg_recv_ = new ::ywrapper::StringValue(*from.tti_msg_recv_);
  } else {
    tti_msg_recv_ = NULL;
  }
  if (from.has_unavailable_seconds()) {
    unavailable_seconds_ = new ::ywrapper::UintValue(*from.unavailable_seconds_);
  } else {
    unavailable_seconds_ = NULL;
  }
  if (from.has_errored_seconds()) {
    errored_seconds_ = new ::ywrapper::UintValue(*from.errored_seconds_);
  } else {
    errored_seconds_ = NULL;
  }
  if (from.has_tti_msg_transmit()) {
    tti_msg_transmit_ = new ::ywrapper::StringValue(*from.tti_msg_transmit_);
  } else {
    tti_msg_transmit_ = NULL;
  }
  if (from.has_q_value()) {
    q_value_ = new ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Otn_State_QValue(*from.q_value_);
  } else {
    q_value_ = NULL;
  }
  if (from.has_fec_uncorrectable_words()) {
    fec_uncorrectable_words_ = new ::ywrapper::UintValue(*from.fec_uncorrectable_words_);
  } else {
    fec_uncorrectable_words_ = NULL;
  }
  if (from.has_tti_msg_auto()) {
    tti_msg_auto_ = new ::ywrapper::BoolValue(*from.tti_msg_auto_);
  } else {
    tti_msg_auto_ = NULL;
  }
  if (from.has_background_block_errors()) {
    background_block_errors_ = new ::ywrapper::UintValue(*from.background_block_errors_);
  } else {
    background_block_errors_ = NULL;
  }
  if (from.has_fec_corrected_bits()) {
    fec_corrected_bits_ = new ::ywrapper::UintValue(*from.fec_corrected_bits_);
  } else {
    fec_corrected_bits_ = NULL;
  }
  if (from.has_rdi_msg()) {
    rdi_msg_ = new ::ywrapper::StringValue(*from.rdi_msg_);
  } else {
    rdi_msg_ = NULL;
  }
  if (from.has_fec_corrected_bytes()) {
    fec_corrected_bytes_ = new ::ywrapper::UintValue(*from.fec_corrected_bytes_);
  } else {
    fec_corrected_bytes_ = NULL;
  }
  if (from.has_esnr()) {
    esnr_ = new ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Otn_State_Esnr(*from.esnr_);
  } else {
    esnr_ = NULL;
  }
  if (from.has_post_fec_ber()) {
    post_fec_ber_ = new ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Otn_State_PostFecBer(*from.post_fec_ber_);
  } else {
    post_fec_ber_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State)
}

void TerminalDevice_LogicalChannels_Channel_Otn_State::SharedCtor() {
  ::memset(&code_violations_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&post_fec_ber_) -
      reinterpret_cast<char*>(&code_violations_)) + sizeof(post_fec_ber_));
  _cached_size_ = 0;
}

TerminalDevice_LogicalChannels_Channel_Otn_State::~TerminalDevice_LogicalChannels_Channel_Otn_State() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State)
  SharedDtor();
}

void TerminalDevice_LogicalChannels_Channel_Otn_State::SharedDtor() {
  if (this != internal_default_instance()) delete code_violations_;
  if (this != internal_default_instance()) delete severely_errored_seconds_;
  if (this != internal_default_instance()) delete pre_fec_ber_;
  if (this != internal_default_instance()) delete tti_msg_expected_;
  if (this != internal_default_instance()) delete tti_msg_recv_;
  if (this != internal_default_instance()) delete unavailable_seconds_;
  if (this != internal_default_instance()) delete errored_seconds_;
  if (this != internal_default_instance()) delete tti_msg_transmit_;
  if (this != internal_default_instance()) delete q_value_;
  if (this != internal_default_instance()) delete fec_uncorrectable_words_;
  if (this != internal_default_instance()) delete tti_msg_auto_;
  if (this != internal_default_instance()) delete background_block_errors_;
  if (this != internal_default_instance()) delete fec_corrected_bits_;
  if (this != internal_default_instance()) delete rdi_msg_;
  if (this != internal_default_instance()) delete fec_corrected_bytes_;
  if (this != internal_default_instance()) delete esnr_;
  if (this != internal_default_instance()) delete post_fec_ber_;
}

void TerminalDevice_LogicalChannels_Channel_Otn_State::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TerminalDevice_LogicalChannels_Channel_Otn_State::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TerminalDevice_LogicalChannels_Channel_Otn_State& TerminalDevice_LogicalChannels_Channel_Otn_State::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::InitDefaultsTerminalDevice_LogicalChannels_Channel_Otn_State();
  return *internal_default_instance();
}

TerminalDevice_LogicalChannels_Channel_Otn_State* TerminalDevice_LogicalChannels_Channel_Otn_State::New(::google::protobuf::Arena* arena) const {
  TerminalDevice_LogicalChannels_Channel_Otn_State* n = new TerminalDevice_LogicalChannels_Channel_Otn_State;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TerminalDevice_LogicalChannels_Channel_Otn_State::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && code_violations_ != NULL) {
    delete code_violations_;
  }
  code_violations_ = NULL;
  if (GetArenaNoVirtual() == NULL && severely_errored_seconds_ != NULL) {
    delete severely_errored_seconds_;
  }
  severely_errored_seconds_ = NULL;
  if (GetArenaNoVirtual() == NULL && pre_fec_ber_ != NULL) {
    delete pre_fec_ber_;
  }
  pre_fec_ber_ = NULL;
  if (GetArenaNoVirtual() == NULL && tti_msg_expected_ != NULL) {
    delete tti_msg_expected_;
  }
  tti_msg_expected_ = NULL;
  if (GetArenaNoVirtual() == NULL && tti_msg_recv_ != NULL) {
    delete tti_msg_recv_;
  }
  tti_msg_recv_ = NULL;
  if (GetArenaNoVirtual() == NULL && unavailable_seconds_ != NULL) {
    delete unavailable_seconds_;
  }
  unavailable_seconds_ = NULL;
  if (GetArenaNoVirtual() == NULL && errored_seconds_ != NULL) {
    delete errored_seconds_;
  }
  errored_seconds_ = NULL;
  if (GetArenaNoVirtual() == NULL && tti_msg_transmit_ != NULL) {
    delete tti_msg_transmit_;
  }
  tti_msg_transmit_ = NULL;
  if (GetArenaNoVirtual() == NULL && q_value_ != NULL) {
    delete q_value_;
  }
  q_value_ = NULL;
  if (GetArenaNoVirtual() == NULL && fec_uncorrectable_words_ != NULL) {
    delete fec_uncorrectable_words_;
  }
  fec_uncorrectable_words_ = NULL;
  if (GetArenaNoVirtual() == NULL && tti_msg_auto_ != NULL) {
    delete tti_msg_auto_;
  }
  tti_msg_auto_ = NULL;
  if (GetArenaNoVirtual() == NULL && background_block_errors_ != NULL) {
    delete background_block_errors_;
  }
  background_block_errors_ = NULL;
  if (GetArenaNoVirtual() == NULL && fec_corrected_bits_ != NULL) {
    delete fec_corrected_bits_;
  }
  fec_corrected_bits_ = NULL;
  if (GetArenaNoVirtual() == NULL && rdi_msg_ != NULL) {
    delete rdi_msg_;
  }
  rdi_msg_ = NULL;
  if (GetArenaNoVirtual() == NULL && fec_corrected_bytes_ != NULL) {
    delete fec_corrected_bytes_;
  }
  fec_corrected_bytes_ = NULL;
  if (GetArenaNoVirtual() == NULL && esnr_ != NULL) {
    delete esnr_;
  }
  esnr_ = NULL;
  if (GetArenaNoVirtual() == NULL && post_fec_ber_ != NULL) {
    delete post_fec_ber_;
  }
  post_fec_ber_ = NULL;
  _internal_metadata_.Clear();
}

bool TerminalDevice_LogicalChannels_Channel_Otn_State::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(4100948810u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .ywrapper.UintValue code_violations = 15333406 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/state/code-violations"];
      case 15333406: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(242u /* 122667250 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_code_violations()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.UintValue severely_errored_seconds = 17854709 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/state/severely-errored-seconds"];
      case 17854709: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(170u /* 142837674 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_severely_errored_seconds()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.PreFecBer pre_fec_ber = 24995908 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/state/pre-fec-ber"];
      case 24995908: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 199967266 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pre_fec_ber()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.StringValue tti_msg_expected = 50568880 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/state/tti-msg-expected"];
      case 50568880: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u /* 404551042 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_tti_msg_expected()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.StringValue tti_msg_recv = 51151448 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/state/tti-msg-recv"];
      case 51151448: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(194u /* 409211586 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_tti_msg_recv()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.UintValue unavailable_seconds = 60512408 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/state/unavailable-seconds"];
      case 60512408: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(194u /* 484099266 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_unavailable_seconds()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.UintValue errored_seconds = 101254023 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/state/errored-seconds"];
      case 101254023: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 810032186 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_errored_seconds()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.StringValue tti_msg_transmit = 138432560 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/state/tti-msg-transmit"];
      case 138432560: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u /* 1107460482 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_tti_msg_transmit()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.QValue q_value = 155046327 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/state/q-value"];
      case 155046327: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(186u /* 1240370618 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_q_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.UintValue fec_uncorrectable_words = 189812742 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/state/fec-uncorrectable-words"];
      case 189812742: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 1518501938 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_fec_uncorrectable_words()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.BoolValue tti_msg_auto = 195236077 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/state/tti-msg-auto"];
      case 195236077: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 1561888618 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_tti_msg_auto()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.UintValue background_block_errors = 225465906 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/state/background-block-errors"];
      case 225465906: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u /* 1803727250 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_background_block_errors()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.UintValue fec_corrected_bits = 347445731 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/state/fec-corrected-bits"];
      case 347445731: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 2779565850 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_fec_corrected_bits()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.StringValue rdi_msg = 372221681 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/state/rdi-msg"];
      case 372221681: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u /* 2977773450 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_rdi_msg()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.UintValue fec_corrected_bytes = 475965836 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/state/fec-corrected-bytes"];
      case 475965836: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 3807726690 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_fec_corrected_bytes()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.Esnr esnr = 477535494 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/state/esnr"];
      case 477535494: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 3820283954 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_esnr()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.PostFecBer post_fec_ber = 512618601 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/state/post-fec-ber"];
      case 512618601: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 4100948810 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_post_fec_ber()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State)
  return false;
#undef DO_
}

void TerminalDevice_LogicalChannels_Channel_Otn_State::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ywrapper.UintValue code_violations = 15333406 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/state/code-violations"];
  if (this->has_code_violations()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      15333406, *this->code_violations_, output);
  }

  // .ywrapper.UintValue severely_errored_seconds = 17854709 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/state/severely-errored-seconds"];
  if (this->has_severely_errored_seconds()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      17854709, *this->severely_errored_seconds_, output);
  }

  // .openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.PreFecBer pre_fec_ber = 24995908 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/state/pre-fec-ber"];
  if (this->has_pre_fec_ber()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      24995908, *this->pre_fec_ber_, output);
  }

  // .ywrapper.StringValue tti_msg_expected = 50568880 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/state/tti-msg-expected"];
  if (this->has_tti_msg_expected()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      50568880, *this->tti_msg_expected_, output);
  }

  // .ywrapper.StringValue tti_msg_recv = 51151448 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/state/tti-msg-recv"];
  if (this->has_tti_msg_recv()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      51151448, *this->tti_msg_recv_, output);
  }

  // .ywrapper.UintValue unavailable_seconds = 60512408 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/state/unavailable-seconds"];
  if (this->has_unavailable_seconds()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      60512408, *this->unavailable_seconds_, output);
  }

  // .ywrapper.UintValue errored_seconds = 101254023 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/state/errored-seconds"];
  if (this->has_errored_seconds()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      101254023, *this->errored_seconds_, output);
  }

  // .ywrapper.StringValue tti_msg_transmit = 138432560 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/state/tti-msg-transmit"];
  if (this->has_tti_msg_transmit()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      138432560, *this->tti_msg_transmit_, output);
  }

  // .openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.QValue q_value = 155046327 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/state/q-value"];
  if (this->has_q_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      155046327, *this->q_value_, output);
  }

  // .ywrapper.UintValue fec_uncorrectable_words = 189812742 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/state/fec-uncorrectable-words"];
  if (this->has_fec_uncorrectable_words()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      189812742, *this->fec_uncorrectable_words_, output);
  }

  // .ywrapper.BoolValue tti_msg_auto = 195236077 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/state/tti-msg-auto"];
  if (this->has_tti_msg_auto()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      195236077, *this->tti_msg_auto_, output);
  }

  // .ywrapper.UintValue background_block_errors = 225465906 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/state/background-block-errors"];
  if (this->has_background_block_errors()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      225465906, *this->background_block_errors_, output);
  }

  // .ywrapper.UintValue fec_corrected_bits = 347445731 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/state/fec-corrected-bits"];
  if (this->has_fec_corrected_bits()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      347445731, *this->fec_corrected_bits_, output);
  }

  // .ywrapper.StringValue rdi_msg = 372221681 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/state/rdi-msg"];
  if (this->has_rdi_msg()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      372221681, *this->rdi_msg_, output);
  }

  // .ywrapper.UintValue fec_corrected_bytes = 475965836 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/state/fec-corrected-bytes"];
  if (this->has_fec_corrected_bytes()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      475965836, *this->fec_corrected_bytes_, output);
  }

  // .openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.Esnr esnr = 477535494 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/state/esnr"];
  if (this->has_esnr()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      477535494, *this->esnr_, output);
  }

  // .openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.PostFecBer post_fec_ber = 512618601 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/state/post-fec-ber"];
  if (this->has_post_fec_ber()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      512618601, *this->post_fec_ber_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State)
}

::google::protobuf::uint8* TerminalDevice_LogicalChannels_Channel_Otn_State::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ywrapper.UintValue code_violations = 15333406 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/state/code-violations"];
  if (this->has_code_violations()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        15333406, *this->code_violations_, deterministic, target);
  }

  // .ywrapper.UintValue severely_errored_seconds = 17854709 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/state/severely-errored-seconds"];
  if (this->has_severely_errored_seconds()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        17854709, *this->severely_errored_seconds_, deterministic, target);
  }

  // .openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.PreFecBer pre_fec_ber = 24995908 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/state/pre-fec-ber"];
  if (this->has_pre_fec_ber()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        24995908, *this->pre_fec_ber_, deterministic, target);
  }

  // .ywrapper.StringValue tti_msg_expected = 50568880 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/state/tti-msg-expected"];
  if (this->has_tti_msg_expected()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        50568880, *this->tti_msg_expected_, deterministic, target);
  }

  // .ywrapper.StringValue tti_msg_recv = 51151448 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/state/tti-msg-recv"];
  if (this->has_tti_msg_recv()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        51151448, *this->tti_msg_recv_, deterministic, target);
  }

  // .ywrapper.UintValue unavailable_seconds = 60512408 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/state/unavailable-seconds"];
  if (this->has_unavailable_seconds()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        60512408, *this->unavailable_seconds_, deterministic, target);
  }

  // .ywrapper.UintValue errored_seconds = 101254023 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/state/errored-seconds"];
  if (this->has_errored_seconds()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        101254023, *this->errored_seconds_, deterministic, target);
  }

  // .ywrapper.StringValue tti_msg_transmit = 138432560 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/state/tti-msg-transmit"];
  if (this->has_tti_msg_transmit()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        138432560, *this->tti_msg_transmit_, deterministic, target);
  }

  // .openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.QValue q_value = 155046327 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/state/q-value"];
  if (this->has_q_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        155046327, *this->q_value_, deterministic, target);
  }

  // .ywrapper.UintValue fec_uncorrectable_words = 189812742 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/state/fec-uncorrectable-words"];
  if (this->has_fec_uncorrectable_words()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        189812742, *this->fec_uncorrectable_words_, deterministic, target);
  }

  // .ywrapper.BoolValue tti_msg_auto = 195236077 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/state/tti-msg-auto"];
  if (this->has_tti_msg_auto()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        195236077, *this->tti_msg_auto_, deterministic, target);
  }

  // .ywrapper.UintValue background_block_errors = 225465906 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/state/background-block-errors"];
  if (this->has_background_block_errors()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        225465906, *this->background_block_errors_, deterministic, target);
  }

  // .ywrapper.UintValue fec_corrected_bits = 347445731 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/state/fec-corrected-bits"];
  if (this->has_fec_corrected_bits()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        347445731, *this->fec_corrected_bits_, deterministic, target);
  }

  // .ywrapper.StringValue rdi_msg = 372221681 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/state/rdi-msg"];
  if (this->has_rdi_msg()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        372221681, *this->rdi_msg_, deterministic, target);
  }

  // .ywrapper.UintValue fec_corrected_bytes = 475965836 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/state/fec-corrected-bytes"];
  if (this->has_fec_corrected_bytes()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        475965836, *this->fec_corrected_bytes_, deterministic, target);
  }

  // .openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.Esnr esnr = 477535494 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/state/esnr"];
  if (this->has_esnr()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        477535494, *this->esnr_, deterministic, target);
  }

  // .openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.PostFecBer post_fec_ber = 512618601 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/state/post-fec-ber"];
  if (this->has_post_fec_ber()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        512618601, *this->post_fec_ber_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State)
  return target;
}

size_t TerminalDevice_LogicalChannels_Channel_Otn_State::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .ywrapper.UintValue code_violations = 15333406 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/state/code-violations"];
  if (this->has_code_violations()) {
    total_size += 4 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->code_violations_);
  }

  // .ywrapper.UintValue severely_errored_seconds = 17854709 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/state/severely-errored-seconds"];
  if (this->has_severely_errored_seconds()) {
    total_size += 4 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->severely_errored_seconds_);
  }

  // .openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.PreFecBer pre_fec_ber = 24995908 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/state/pre-fec-ber"];
  if (this->has_pre_fec_ber()) {
    total_size += 4 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->pre_fec_ber_);
  }

  // .ywrapper.StringValue tti_msg_expected = 50568880 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/state/tti-msg-expected"];
  if (this->has_tti_msg_expected()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->tti_msg_expected_);
  }

  // .ywrapper.StringValue tti_msg_recv = 51151448 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/state/tti-msg-recv"];
  if (this->has_tti_msg_recv()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->tti_msg_recv_);
  }

  // .ywrapper.UintValue unavailable_seconds = 60512408 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/state/unavailable-seconds"];
  if (this->has_unavailable_seconds()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->unavailable_seconds_);
  }

  // .ywrapper.UintValue errored_seconds = 101254023 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/state/errored-seconds"];
  if (this->has_errored_seconds()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->errored_seconds_);
  }

  // .ywrapper.StringValue tti_msg_transmit = 138432560 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/state/tti-msg-transmit"];
  if (this->has_tti_msg_transmit()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->tti_msg_transmit_);
  }

  // .openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.QValue q_value = 155046327 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/state/q-value"];
  if (this->has_q_value()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->q_value_);
  }

  // .ywrapper.UintValue fec_uncorrectable_words = 189812742 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/state/fec-uncorrectable-words"];
  if (this->has_fec_uncorrectable_words()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->fec_uncorrectable_words_);
  }

  // .ywrapper.BoolValue tti_msg_auto = 195236077 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/state/tti-msg-auto"];
  if (this->has_tti_msg_auto()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->tti_msg_auto_);
  }

  // .ywrapper.UintValue background_block_errors = 225465906 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/state/background-block-errors"];
  if (this->has_background_block_errors()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->background_block_errors_);
  }

  // .ywrapper.UintValue fec_corrected_bits = 347445731 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/state/fec-corrected-bits"];
  if (this->has_fec_corrected_bits()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->fec_corrected_bits_);
  }

  // .ywrapper.StringValue rdi_msg = 372221681 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/state/rdi-msg"];
  if (this->has_rdi_msg()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->rdi_msg_);
  }

  // .ywrapper.UintValue fec_corrected_bytes = 475965836 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/state/fec-corrected-bytes"];
  if (this->has_fec_corrected_bytes()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->fec_corrected_bytes_);
  }

  // .openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.Esnr esnr = 477535494 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/state/esnr"];
  if (this->has_esnr()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->esnr_);
  }

  // .openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State.PostFecBer post_fec_ber = 512618601 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/state/post-fec-ber"];
  if (this->has_post_fec_ber()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->post_fec_ber_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TerminalDevice_LogicalChannels_Channel_Otn_State::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State)
  GOOGLE_DCHECK_NE(&from, this);
  const TerminalDevice_LogicalChannels_Channel_Otn_State* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TerminalDevice_LogicalChannels_Channel_Otn_State>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State)
    MergeFrom(*source);
  }
}

void TerminalDevice_LogicalChannels_Channel_Otn_State::MergeFrom(const TerminalDevice_LogicalChannels_Channel_Otn_State& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_code_violations()) {
    mutable_code_violations()->::ywrapper::UintValue::MergeFrom(from.code_violations());
  }
  if (from.has_severely_errored_seconds()) {
    mutable_severely_errored_seconds()->::ywrapper::UintValue::MergeFrom(from.severely_errored_seconds());
  }
  if (from.has_pre_fec_ber()) {
    mutable_pre_fec_ber()->::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Otn_State_PreFecBer::MergeFrom(from.pre_fec_ber());
  }
  if (from.has_tti_msg_expected()) {
    mutable_tti_msg_expected()->::ywrapper::StringValue::MergeFrom(from.tti_msg_expected());
  }
  if (from.has_tti_msg_recv()) {
    mutable_tti_msg_recv()->::ywrapper::StringValue::MergeFrom(from.tti_msg_recv());
  }
  if (from.has_unavailable_seconds()) {
    mutable_unavailable_seconds()->::ywrapper::UintValue::MergeFrom(from.unavailable_seconds());
  }
  if (from.has_errored_seconds()) {
    mutable_errored_seconds()->::ywrapper::UintValue::MergeFrom(from.errored_seconds());
  }
  if (from.has_tti_msg_transmit()) {
    mutable_tti_msg_transmit()->::ywrapper::StringValue::MergeFrom(from.tti_msg_transmit());
  }
  if (from.has_q_value()) {
    mutable_q_value()->::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Otn_State_QValue::MergeFrom(from.q_value());
  }
  if (from.has_fec_uncorrectable_words()) {
    mutable_fec_uncorrectable_words()->::ywrapper::UintValue::MergeFrom(from.fec_uncorrectable_words());
  }
  if (from.has_tti_msg_auto()) {
    mutable_tti_msg_auto()->::ywrapper::BoolValue::MergeFrom(from.tti_msg_auto());
  }
  if (from.has_background_block_errors()) {
    mutable_background_block_errors()->::ywrapper::UintValue::MergeFrom(from.background_block_errors());
  }
  if (from.has_fec_corrected_bits()) {
    mutable_fec_corrected_bits()->::ywrapper::UintValue::MergeFrom(from.fec_corrected_bits());
  }
  if (from.has_rdi_msg()) {
    mutable_rdi_msg()->::ywrapper::StringValue::MergeFrom(from.rdi_msg());
  }
  if (from.has_fec_corrected_bytes()) {
    mutable_fec_corrected_bytes()->::ywrapper::UintValue::MergeFrom(from.fec_corrected_bytes());
  }
  if (from.has_esnr()) {
    mutable_esnr()->::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Otn_State_Esnr::MergeFrom(from.esnr());
  }
  if (from.has_post_fec_ber()) {
    mutable_post_fec_ber()->::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Otn_State_PostFecBer::MergeFrom(from.post_fec_ber());
  }
}

void TerminalDevice_LogicalChannels_Channel_Otn_State::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TerminalDevice_LogicalChannels_Channel_Otn_State::CopyFrom(const TerminalDevice_LogicalChannels_Channel_Otn_State& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TerminalDevice_LogicalChannels_Channel_Otn_State::IsInitialized() const {
  return true;
}

void TerminalDevice_LogicalChannels_Channel_Otn_State::Swap(TerminalDevice_LogicalChannels_Channel_Otn_State* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TerminalDevice_LogicalChannels_Channel_Otn_State::InternalSwap(TerminalDevice_LogicalChannels_Channel_Otn_State* other) {
  using std::swap;
  swap(code_violations_, other->code_violations_);
  swap(severely_errored_seconds_, other->severely_errored_seconds_);
  swap(pre_fec_ber_, other->pre_fec_ber_);
  swap(tti_msg_expected_, other->tti_msg_expected_);
  swap(tti_msg_recv_, other->tti_msg_recv_);
  swap(unavailable_seconds_, other->unavailable_seconds_);
  swap(errored_seconds_, other->errored_seconds_);
  swap(tti_msg_transmit_, other->tti_msg_transmit_);
  swap(q_value_, other->q_value_);
  swap(fec_uncorrectable_words_, other->fec_uncorrectable_words_);
  swap(tti_msg_auto_, other->tti_msg_auto_);
  swap(background_block_errors_, other->background_block_errors_);
  swap(fec_corrected_bits_, other->fec_corrected_bits_);
  swap(rdi_msg_, other->rdi_msg_);
  swap(fec_corrected_bytes_, other->fec_corrected_bytes_);
  swap(esnr_, other->esnr_);
  swap(post_fec_ber_, other->post_fec_ber_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TerminalDevice_LogicalChannels_Channel_Otn_State::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TerminalDevice_LogicalChannels_Channel_Otn::InitAsDefaultInstance() {
  ::openconfig::openconfig_terminal_device::_TerminalDevice_LogicalChannels_Channel_Otn_default_instance_._instance.get_mutable()->config_ = const_cast< ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Otn_Config*>(
      ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Otn_Config::internal_default_instance());
  ::openconfig::openconfig_terminal_device::_TerminalDevice_LogicalChannels_Channel_Otn_default_instance_._instance.get_mutable()->state_ = const_cast< ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Otn_State*>(
      ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Otn_State::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TerminalDevice_LogicalChannels_Channel_Otn::kConfigFieldNumber;
const int TerminalDevice_LogicalChannels_Channel_Otn::kStateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TerminalDevice_LogicalChannels_Channel_Otn::TerminalDevice_LogicalChannels_Channel_Otn()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::InitDefaultsTerminalDevice_LogicalChannels_Channel_Otn();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn)
}
TerminalDevice_LogicalChannels_Channel_Otn::TerminalDevice_LogicalChannels_Channel_Otn(const TerminalDevice_LogicalChannels_Channel_Otn& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_config()) {
    config_ = new ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Otn_Config(*from.config_);
  } else {
    config_ = NULL;
  }
  if (from.has_state()) {
    state_ = new ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Otn_State(*from.state_);
  } else {
    state_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn)
}

void TerminalDevice_LogicalChannels_Channel_Otn::SharedCtor() {
  ::memset(&config_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&state_) -
      reinterpret_cast<char*>(&config_)) + sizeof(state_));
  _cached_size_ = 0;
}

TerminalDevice_LogicalChannels_Channel_Otn::~TerminalDevice_LogicalChannels_Channel_Otn() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn)
  SharedDtor();
}

void TerminalDevice_LogicalChannels_Channel_Otn::SharedDtor() {
  if (this != internal_default_instance()) delete config_;
  if (this != internal_default_instance()) delete state_;
}

void TerminalDevice_LogicalChannels_Channel_Otn::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TerminalDevice_LogicalChannels_Channel_Otn::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TerminalDevice_LogicalChannels_Channel_Otn& TerminalDevice_LogicalChannels_Channel_Otn::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::InitDefaultsTerminalDevice_LogicalChannels_Channel_Otn();
  return *internal_default_instance();
}

TerminalDevice_LogicalChannels_Channel_Otn* TerminalDevice_LogicalChannels_Channel_Otn::New(::google::protobuf::Arena* arena) const {
  TerminalDevice_LogicalChannels_Channel_Otn* n = new TerminalDevice_LogicalChannels_Channel_Otn;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TerminalDevice_LogicalChannels_Channel_Otn::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && config_ != NULL) {
    delete config_;
  }
  config_ = NULL;
  if (GetArenaNoVirtual() == NULL && state_ != NULL) {
    delete state_;
  }
  state_ = NULL;
  _internal_metadata_.Clear();
}

bool TerminalDevice_LogicalChannels_Channel_Otn::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(3453493658u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.Config config = 122922822 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/config"];
      case 122922822: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 983382578 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State state = 431686707 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/state"];
      case 431686707: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(154u /* 3453493658 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_state()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn)
  return false;
#undef DO_
}

void TerminalDevice_LogicalChannels_Channel_Otn::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.Config config = 122922822 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/config"];
  if (this->has_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      122922822, *this->config_, output);
  }

  // .openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State state = 431686707 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/state"];
  if (this->has_state()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      431686707, *this->state_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn)
}

::google::protobuf::uint8* TerminalDevice_LogicalChannels_Channel_Otn::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.Config config = 122922822 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/config"];
  if (this->has_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        122922822, *this->config_, deterministic, target);
  }

  // .openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State state = 431686707 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/state"];
  if (this->has_state()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        431686707, *this->state_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn)
  return target;
}

size_t TerminalDevice_LogicalChannels_Channel_Otn::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.Config config = 122922822 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/config"];
  if (this->has_config()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->config_);
  }

  // .openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn.State state = 431686707 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn/state"];
  if (this->has_state()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->state_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TerminalDevice_LogicalChannels_Channel_Otn::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn)
  GOOGLE_DCHECK_NE(&from, this);
  const TerminalDevice_LogicalChannels_Channel_Otn* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TerminalDevice_LogicalChannels_Channel_Otn>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn)
    MergeFrom(*source);
  }
}

void TerminalDevice_LogicalChannels_Channel_Otn::MergeFrom(const TerminalDevice_LogicalChannels_Channel_Otn& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_config()) {
    mutable_config()->::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Otn_Config::MergeFrom(from.config());
  }
  if (from.has_state()) {
    mutable_state()->::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Otn_State::MergeFrom(from.state());
  }
}

void TerminalDevice_LogicalChannels_Channel_Otn::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TerminalDevice_LogicalChannels_Channel_Otn::CopyFrom(const TerminalDevice_LogicalChannels_Channel_Otn& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TerminalDevice_LogicalChannels_Channel_Otn::IsInitialized() const {
  return true;
}

void TerminalDevice_LogicalChannels_Channel_Otn::Swap(TerminalDevice_LogicalChannels_Channel_Otn* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TerminalDevice_LogicalChannels_Channel_Otn::InternalSwap(TerminalDevice_LogicalChannels_Channel_Otn* other) {
  using std::swap;
  swap(config_, other->config_);
  swap(state_, other->state_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TerminalDevice_LogicalChannels_Channel_Otn::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TerminalDevice_LogicalChannels_Channel_State::InitAsDefaultInstance() {
  ::openconfig::openconfig_terminal_device::_TerminalDevice_LogicalChannels_Channel_State_default_instance_._instance.get_mutable()->description_ = const_cast< ::ywrapper::StringValue*>(
      ::ywrapper::StringValue::internal_default_instance());
  ::openconfig::openconfig_terminal_device::_TerminalDevice_LogicalChannels_Channel_State_default_instance_._instance.get_mutable()->index_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
  ::openconfig::openconfig_terminal_device::_TerminalDevice_LogicalChannels_Channel_State_default_instance_._instance.get_mutable()->test_signal_ = const_cast< ::ywrapper::BoolValue*>(
      ::ywrapper::BoolValue::internal_default_instance());
}
void TerminalDevice_LogicalChannels_Channel_State::clear_description() {
  if (GetArenaNoVirtual() == NULL && description_ != NULL) {
    delete description_;
  }
  description_ = NULL;
}
void TerminalDevice_LogicalChannels_Channel_State::clear_index() {
  if (GetArenaNoVirtual() == NULL && index_ != NULL) {
    delete index_;
  }
  index_ = NULL;
}
void TerminalDevice_LogicalChannels_Channel_State::clear_test_signal() {
  if (GetArenaNoVirtual() == NULL && test_signal_ != NULL) {
    delete test_signal_;
  }
  test_signal_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TerminalDevice_LogicalChannels_Channel_State::kAdminStateFieldNumber;
const int TerminalDevice_LogicalChannels_Channel_State::kDescriptionFieldNumber;
const int TerminalDevice_LogicalChannels_Channel_State::kIndexFieldNumber;
const int TerminalDevice_LogicalChannels_Channel_State::kLinkStateFieldNumber;
const int TerminalDevice_LogicalChannels_Channel_State::kLogicalChannelTypeFieldNumber;
const int TerminalDevice_LogicalChannels_Channel_State::kLoopbackModeFieldNumber;
const int TerminalDevice_LogicalChannels_Channel_State::kRateClassFieldNumber;
const int TerminalDevice_LogicalChannels_Channel_State::kTestSignalFieldNumber;
const int TerminalDevice_LogicalChannels_Channel_State::kTribProtocolFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TerminalDevice_LogicalChannels_Channel_State::TerminalDevice_LogicalChannels_Channel_State()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::InitDefaultsTerminalDevice_LogicalChannels_Channel_State();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.State)
}
TerminalDevice_LogicalChannels_Channel_State::TerminalDevice_LogicalChannels_Channel_State(const TerminalDevice_LogicalChannels_Channel_State& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_index()) {
    index_ = new ::ywrapper::UintValue(*from.index_);
  } else {
    index_ = NULL;
  }
  if (from.has_description()) {
    description_ = new ::ywrapper::StringValue(*from.description_);
  } else {
    description_ = NULL;
  }
  if (from.has_test_signal()) {
    test_signal_ = new ::ywrapper::BoolValue(*from.test_signal_);
  } else {
    test_signal_ = NULL;
  }
  ::memcpy(&logical_channel_type_, &from.logical_channel_type_,
    static_cast<size_t>(reinterpret_cast<char*>(&loopback_mode_) -
    reinterpret_cast<char*>(&logical_channel_type_)) + sizeof(loopback_mode_));
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.State)
}

void TerminalDevice_LogicalChannels_Channel_State::SharedCtor() {
  ::memset(&index_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&loopback_mode_) -
      reinterpret_cast<char*>(&index_)) + sizeof(loopback_mode_));
  _cached_size_ = 0;
}

TerminalDevice_LogicalChannels_Channel_State::~TerminalDevice_LogicalChannels_Channel_State() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.State)
  SharedDtor();
}

void TerminalDevice_LogicalChannels_Channel_State::SharedDtor() {
  if (this != internal_default_instance()) delete index_;
  if (this != internal_default_instance()) delete description_;
  if (this != internal_default_instance()) delete test_signal_;
}

void TerminalDevice_LogicalChannels_Channel_State::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TerminalDevice_LogicalChannels_Channel_State::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TerminalDevice_LogicalChannels_Channel_State& TerminalDevice_LogicalChannels_Channel_State::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::InitDefaultsTerminalDevice_LogicalChannels_Channel_State();
  return *internal_default_instance();
}

TerminalDevice_LogicalChannels_Channel_State* TerminalDevice_LogicalChannels_Channel_State::New(::google::protobuf::Arena* arena) const {
  TerminalDevice_LogicalChannels_Channel_State* n = new TerminalDevice_LogicalChannels_Channel_State;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TerminalDevice_LogicalChannels_Channel_State::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.State)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && index_ != NULL) {
    delete index_;
  }
  index_ = NULL;
  if (GetArenaNoVirtual() == NULL && description_ != NULL) {
    delete description_;
  }
  description_ = NULL;
  if (GetArenaNoVirtual() == NULL && test_signal_ != NULL) {
    delete test_signal_;
  }
  test_signal_ = NULL;
  ::memset(&logical_channel_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&loopback_mode_) -
      reinterpret_cast<char*>(&logical_channel_type_)) + sizeof(loopback_mode_));
  _internal_metadata_.Clear();
}

bool TerminalDevice_LogicalChannels_Channel_State::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.State)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(4202184984u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .openconfig.enums.OpenconfigTransportTypesLOGICALELEMENTPROTOCOLTYPE logical_channel_type = 81142 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/state/logical-channel-type"];
      case 81142: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(176u /* 649136 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_logical_channel_type(static_cast< ::openconfig::enums::OpenconfigTransportTypesLOGICALELEMENTPROTOCOLTYPE >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.UintValue index = 118301378 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/state/index"];
      case 118301378: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 946411026 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_index()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.enums.OpenconfigTerminalDeviceAdminStateType admin_state = 126844211 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/state/admin-state"];
      case 126844211: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(152u /* 1014753688 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_admin_state(static_cast< ::openconfig::enums::OpenconfigTerminalDeviceAdminStateType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.enums.OpenconfigTransportTypesTRIBUTARYRATECLASSTYPE rate_class = 232587011 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/state/rate-class"];
      case 232587011: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 1860696088 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_rate_class(static_cast< ::openconfig::enums::OpenconfigTransportTypesTRIBUTARYRATECLASSTYPE >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.State.LinkState link_state = 264729618 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/state/link-state"];
      case 264729618: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(144u /* 2117836944 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_link_state(static_cast< ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_State_LinkState >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.StringValue description = 272041836 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/state/description"];
      case 272041836: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 2176334690 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_description()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.BoolValue test_signal = 412085659 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/state/test-signal"];
      case 412085659: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(218u /* 3296685274 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_test_signal()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.enums.OpenconfigTransportTypesTRIBUTARYPROTOCOLTYPE trib_protocol = 455160550 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/state/trib-protocol"];
      case 455160550: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 3641284400 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_trib_protocol(static_cast< ::openconfig::enums::OpenconfigTransportTypesTRIBUTARYPROTOCOLTYPE >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.enums.OpenconfigTerminalDeviceLoopbackModeType loopback_mode = 525273123 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/state/loopback-mode"];
      case 525273123: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 4202184984 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_loopback_mode(static_cast< ::openconfig::enums::OpenconfigTerminalDeviceLoopbackModeType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.State)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.State)
  return false;
#undef DO_
}

void TerminalDevice_LogicalChannels_Channel_State::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.State)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .openconfig.enums.OpenconfigTransportTypesLOGICALELEMENTPROTOCOLTYPE logical_channel_type = 81142 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/state/logical-channel-type"];
  if (this->logical_channel_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      81142, this->logical_channel_type(), output);
  }

  // .ywrapper.UintValue index = 118301378 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/state/index"];
  if (this->has_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      118301378, *this->index_, output);
  }

  // .openconfig.enums.OpenconfigTerminalDeviceAdminStateType admin_state = 126844211 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/state/admin-state"];
  if (this->admin_state() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      126844211, this->admin_state(), output);
  }

  // .openconfig.enums.OpenconfigTransportTypesTRIBUTARYRATECLASSTYPE rate_class = 232587011 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/state/rate-class"];
  if (this->rate_class() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      232587011, this->rate_class(), output);
  }

  // .openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.State.LinkState link_state = 264729618 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/state/link-state"];
  if (this->link_state() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      264729618, this->link_state(), output);
  }

  // .ywrapper.StringValue description = 272041836 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/state/description"];
  if (this->has_description()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      272041836, *this->description_, output);
  }

  // .ywrapper.BoolValue test_signal = 412085659 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/state/test-signal"];
  if (this->has_test_signal()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      412085659, *this->test_signal_, output);
  }

  // .openconfig.enums.OpenconfigTransportTypesTRIBUTARYPROTOCOLTYPE trib_protocol = 455160550 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/state/trib-protocol"];
  if (this->trib_protocol() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      455160550, this->trib_protocol(), output);
  }

  // .openconfig.enums.OpenconfigTerminalDeviceLoopbackModeType loopback_mode = 525273123 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/state/loopback-mode"];
  if (this->loopback_mode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      525273123, this->loopback_mode(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.State)
}

::google::protobuf::uint8* TerminalDevice_LogicalChannels_Channel_State::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.State)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .openconfig.enums.OpenconfigTransportTypesLOGICALELEMENTPROTOCOLTYPE logical_channel_type = 81142 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/state/logical-channel-type"];
  if (this->logical_channel_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      81142, this->logical_channel_type(), target);
  }

  // .ywrapper.UintValue index = 118301378 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/state/index"];
  if (this->has_index()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        118301378, *this->index_, deterministic, target);
  }

  // .openconfig.enums.OpenconfigTerminalDeviceAdminStateType admin_state = 126844211 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/state/admin-state"];
  if (this->admin_state() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      126844211, this->admin_state(), target);
  }

  // .openconfig.enums.OpenconfigTransportTypesTRIBUTARYRATECLASSTYPE rate_class = 232587011 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/state/rate-class"];
  if (this->rate_class() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      232587011, this->rate_class(), target);
  }

  // .openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.State.LinkState link_state = 264729618 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/state/link-state"];
  if (this->link_state() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      264729618, this->link_state(), target);
  }

  // .ywrapper.StringValue description = 272041836 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/state/description"];
  if (this->has_description()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        272041836, *this->description_, deterministic, target);
  }

  // .ywrapper.BoolValue test_signal = 412085659 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/state/test-signal"];
  if (this->has_test_signal()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        412085659, *this->test_signal_, deterministic, target);
  }

  // .openconfig.enums.OpenconfigTransportTypesTRIBUTARYPROTOCOLTYPE trib_protocol = 455160550 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/state/trib-protocol"];
  if (this->trib_protocol() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      455160550, this->trib_protocol(), target);
  }

  // .openconfig.enums.OpenconfigTerminalDeviceLoopbackModeType loopback_mode = 525273123 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/state/loopback-mode"];
  if (this->loopback_mode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      525273123, this->loopback_mode(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.State)
  return target;
}

size_t TerminalDevice_LogicalChannels_Channel_State::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.State)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .ywrapper.UintValue index = 118301378 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/state/index"];
  if (this->has_index()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->index_);
  }

  // .ywrapper.StringValue description = 272041836 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/state/description"];
  if (this->has_description()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->description_);
  }

  // .ywrapper.BoolValue test_signal = 412085659 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/state/test-signal"];
  if (this->has_test_signal()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->test_signal_);
  }

  // .openconfig.enums.OpenconfigTransportTypesLOGICALELEMENTPROTOCOLTYPE logical_channel_type = 81142 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/state/logical-channel-type"];
  if (this->logical_channel_type() != 0) {
    total_size += 3 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->logical_channel_type());
  }

  // .openconfig.enums.OpenconfigTerminalDeviceAdminStateType admin_state = 126844211 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/state/admin-state"];
  if (this->admin_state() != 0) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->admin_state());
  }

  // .openconfig.enums.OpenconfigTransportTypesTRIBUTARYRATECLASSTYPE rate_class = 232587011 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/state/rate-class"];
  if (this->rate_class() != 0) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->rate_class());
  }

  // .openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.State.LinkState link_state = 264729618 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/state/link-state"];
  if (this->link_state() != 0) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->link_state());
  }

  // .openconfig.enums.OpenconfigTransportTypesTRIBUTARYPROTOCOLTYPE trib_protocol = 455160550 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/state/trib-protocol"];
  if (this->trib_protocol() != 0) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->trib_protocol());
  }

  // .openconfig.enums.OpenconfigTerminalDeviceLoopbackModeType loopback_mode = 525273123 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/state/loopback-mode"];
  if (this->loopback_mode() != 0) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->loopback_mode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TerminalDevice_LogicalChannels_Channel_State::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.State)
  GOOGLE_DCHECK_NE(&from, this);
  const TerminalDevice_LogicalChannels_Channel_State* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TerminalDevice_LogicalChannels_Channel_State>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.State)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.State)
    MergeFrom(*source);
  }
}

void TerminalDevice_LogicalChannels_Channel_State::MergeFrom(const TerminalDevice_LogicalChannels_Channel_State& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.State)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_index()) {
    mutable_index()->::ywrapper::UintValue::MergeFrom(from.index());
  }
  if (from.has_description()) {
    mutable_description()->::ywrapper::StringValue::MergeFrom(from.description());
  }
  if (from.has_test_signal()) {
    mutable_test_signal()->::ywrapper::BoolValue::MergeFrom(from.test_signal());
  }
  if (from.logical_channel_type() != 0) {
    set_logical_channel_type(from.logical_channel_type());
  }
  if (from.admin_state() != 0) {
    set_admin_state(from.admin_state());
  }
  if (from.rate_class() != 0) {
    set_rate_class(from.rate_class());
  }
  if (from.link_state() != 0) {
    set_link_state(from.link_state());
  }
  if (from.trib_protocol() != 0) {
    set_trib_protocol(from.trib_protocol());
  }
  if (from.loopback_mode() != 0) {
    set_loopback_mode(from.loopback_mode());
  }
}

void TerminalDevice_LogicalChannels_Channel_State::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.State)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TerminalDevice_LogicalChannels_Channel_State::CopyFrom(const TerminalDevice_LogicalChannels_Channel_State& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.State)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TerminalDevice_LogicalChannels_Channel_State::IsInitialized() const {
  return true;
}

void TerminalDevice_LogicalChannels_Channel_State::Swap(TerminalDevice_LogicalChannels_Channel_State* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TerminalDevice_LogicalChannels_Channel_State::InternalSwap(TerminalDevice_LogicalChannels_Channel_State* other) {
  using std::swap;
  swap(index_, other->index_);
  swap(description_, other->description_);
  swap(test_signal_, other->test_signal_);
  swap(logical_channel_type_, other->logical_channel_type_);
  swap(admin_state_, other->admin_state_);
  swap(rate_class_, other->rate_class_);
  swap(link_state_, other->link_state_);
  swap(trib_protocol_, other->trib_protocol_);
  swap(loopback_mode_, other->loopback_mode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TerminalDevice_LogicalChannels_Channel_State::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TerminalDevice_LogicalChannels_Channel::InitAsDefaultInstance() {
  ::openconfig::openconfig_terminal_device::_TerminalDevice_LogicalChannels_Channel_default_instance_._instance.get_mutable()->config_ = const_cast< ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Config*>(
      ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Config::internal_default_instance());
  ::openconfig::openconfig_terminal_device::_TerminalDevice_LogicalChannels_Channel_default_instance_._instance.get_mutable()->ethernet_ = const_cast< ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Ethernet*>(
      ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Ethernet::internal_default_instance());
  ::openconfig::openconfig_terminal_device::_TerminalDevice_LogicalChannels_Channel_default_instance_._instance.get_mutable()->ingress_ = const_cast< ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Ingress*>(
      ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Ingress::internal_default_instance());
  ::openconfig::openconfig_terminal_device::_TerminalDevice_LogicalChannels_Channel_default_instance_._instance.get_mutable()->logical_channel_assignments_ = const_cast< ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments*>(
      ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments::internal_default_instance());
  ::openconfig::openconfig_terminal_device::_TerminalDevice_LogicalChannels_Channel_default_instance_._instance.get_mutable()->otn_ = const_cast< ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Otn*>(
      ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Otn::internal_default_instance());
  ::openconfig::openconfig_terminal_device::_TerminalDevice_LogicalChannels_Channel_default_instance_._instance.get_mutable()->state_ = const_cast< ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_State*>(
      ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_State::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TerminalDevice_LogicalChannels_Channel::kConfigFieldNumber;
const int TerminalDevice_LogicalChannels_Channel::kEthernetFieldNumber;
const int TerminalDevice_LogicalChannels_Channel::kIngressFieldNumber;
const int TerminalDevice_LogicalChannels_Channel::kLogicalChannelAssignmentsFieldNumber;
const int TerminalDevice_LogicalChannels_Channel::kOtnFieldNumber;
const int TerminalDevice_LogicalChannels_Channel::kStateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TerminalDevice_LogicalChannels_Channel::TerminalDevice_LogicalChannels_Channel()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::InitDefaultsTerminalDevice_LogicalChannels_Channel();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel)
}
TerminalDevice_LogicalChannels_Channel::TerminalDevice_LogicalChannels_Channel(const TerminalDevice_LogicalChannels_Channel& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_otn()) {
    otn_ = new ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Otn(*from.otn_);
  } else {
    otn_ = NULL;
  }
  if (from.has_ethernet()) {
    ethernet_ = new ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Ethernet(*from.ethernet_);
  } else {
    ethernet_ = NULL;
  }
  if (from.has_ingress()) {
    ingress_ = new ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Ingress(*from.ingress_);
  } else {
    ingress_ = NULL;
  }
  if (from.has_state()) {
    state_ = new ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_State(*from.state_);
  } else {
    state_ = NULL;
  }
  if (from.has_config()) {
    config_ = new ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Config(*from.config_);
  } else {
    config_ = NULL;
  }
  if (from.has_logical_channel_assignments()) {
    logical_channel_assignments_ = new ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments(*from.logical_channel_assignments_);
  } else {
    logical_channel_assignments_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel)
}

void TerminalDevice_LogicalChannels_Channel::SharedCtor() {
  ::memset(&otn_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&logical_channel_assignments_) -
      reinterpret_cast<char*>(&otn_)) + sizeof(logical_channel_assignments_));
  _cached_size_ = 0;
}

TerminalDevice_LogicalChannels_Channel::~TerminalDevice_LogicalChannels_Channel() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel)
  SharedDtor();
}

void TerminalDevice_LogicalChannels_Channel::SharedDtor() {
  if (this != internal_default_instance()) delete otn_;
  if (this != internal_default_instance()) delete ethernet_;
  if (this != internal_default_instance()) delete ingress_;
  if (this != internal_default_instance()) delete state_;
  if (this != internal_default_instance()) delete config_;
  if (this != internal_default_instance()) delete logical_channel_assignments_;
}

void TerminalDevice_LogicalChannels_Channel::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TerminalDevice_LogicalChannels_Channel::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TerminalDevice_LogicalChannels_Channel& TerminalDevice_LogicalChannels_Channel::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::InitDefaultsTerminalDevice_LogicalChannels_Channel();
  return *internal_default_instance();
}

TerminalDevice_LogicalChannels_Channel* TerminalDevice_LogicalChannels_Channel::New(::google::protobuf::Arena* arena) const {
  TerminalDevice_LogicalChannels_Channel* n = new TerminalDevice_LogicalChannels_Channel;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TerminalDevice_LogicalChannels_Channel::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && otn_ != NULL) {
    delete otn_;
  }
  otn_ = NULL;
  if (GetArenaNoVirtual() == NULL && ethernet_ != NULL) {
    delete ethernet_;
  }
  ethernet_ = NULL;
  if (GetArenaNoVirtual() == NULL && ingress_ != NULL) {
    delete ingress_;
  }
  ingress_ = NULL;
  if (GetArenaNoVirtual() == NULL && state_ != NULL) {
    delete state_;
  }
  state_ = NULL;
  if (GetArenaNoVirtual() == NULL && config_ != NULL) {
    delete config_;
  }
  config_ = NULL;
  if (GetArenaNoVirtual() == NULL && logical_channel_assignments_ != NULL) {
    delete logical_channel_assignments_;
  }
  logical_channel_assignments_ = NULL;
  _internal_metadata_.Clear();
}

bool TerminalDevice_LogicalChannels_Channel::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(3064257202u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn otn = 25263425 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn"];
      case 25263425: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 202107402 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_otn()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Ethernet ethernet = 53959837 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/ethernet"];
      case 53959837: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(234u /* 431678698 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_ethernet()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Ingress ingress = 121136753 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/ingress"];
      case 121136753: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u /* 969094026 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_ingress()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.State state = 310909555 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/state"];
      case 310909555: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(154u /* 2487276442 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_state()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Config config = 375716998 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/config"];
      case 375716998: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 3005735986 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.LogicalChannelAssignments logical_channel_assignments = 383032150 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/logical-channel-assignments"];
      case 383032150: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(178u /* 3064257202 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_logical_channel_assignments()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel)
  return false;
#undef DO_
}

void TerminalDevice_LogicalChannels_Channel::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn otn = 25263425 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn"];
  if (this->has_otn()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      25263425, *this->otn_, output);
  }

  // .openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Ethernet ethernet = 53959837 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/ethernet"];
  if (this->has_ethernet()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      53959837, *this->ethernet_, output);
  }

  // .openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Ingress ingress = 121136753 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/ingress"];
  if (this->has_ingress()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      121136753, *this->ingress_, output);
  }

  // .openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.State state = 310909555 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/state"];
  if (this->has_state()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      310909555, *this->state_, output);
  }

  // .openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Config config = 375716998 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/config"];
  if (this->has_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      375716998, *this->config_, output);
  }

  // .openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.LogicalChannelAssignments logical_channel_assignments = 383032150 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/logical-channel-assignments"];
  if (this->has_logical_channel_assignments()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      383032150, *this->logical_channel_assignments_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel)
}

::google::protobuf::uint8* TerminalDevice_LogicalChannels_Channel::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn otn = 25263425 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn"];
  if (this->has_otn()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        25263425, *this->otn_, deterministic, target);
  }

  // .openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Ethernet ethernet = 53959837 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/ethernet"];
  if (this->has_ethernet()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        53959837, *this->ethernet_, deterministic, target);
  }

  // .openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Ingress ingress = 121136753 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/ingress"];
  if (this->has_ingress()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        121136753, *this->ingress_, deterministic, target);
  }

  // .openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.State state = 310909555 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/state"];
  if (this->has_state()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        310909555, *this->state_, deterministic, target);
  }

  // .openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Config config = 375716998 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/config"];
  if (this->has_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        375716998, *this->config_, deterministic, target);
  }

  // .openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.LogicalChannelAssignments logical_channel_assignments = 383032150 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/logical-channel-assignments"];
  if (this->has_logical_channel_assignments()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        383032150, *this->logical_channel_assignments_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel)
  return target;
}

size_t TerminalDevice_LogicalChannels_Channel::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Otn otn = 25263425 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/otn"];
  if (this->has_otn()) {
    total_size += 4 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->otn_);
  }

  // .openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Ethernet ethernet = 53959837 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/ethernet"];
  if (this->has_ethernet()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->ethernet_);
  }

  // .openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Ingress ingress = 121136753 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/ingress"];
  if (this->has_ingress()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->ingress_);
  }

  // .openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.State state = 310909555 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/state"];
  if (this->has_state()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->state_);
  }

  // .openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.Config config = 375716998 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/config"];
  if (this->has_config()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->config_);
  }

  // .openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel.LogicalChannelAssignments logical_channel_assignments = 383032150 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/logical-channel-assignments"];
  if (this->has_logical_channel_assignments()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->logical_channel_assignments_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TerminalDevice_LogicalChannels_Channel::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel)
  GOOGLE_DCHECK_NE(&from, this);
  const TerminalDevice_LogicalChannels_Channel* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TerminalDevice_LogicalChannels_Channel>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel)
    MergeFrom(*source);
  }
}

void TerminalDevice_LogicalChannels_Channel::MergeFrom(const TerminalDevice_LogicalChannels_Channel& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_otn()) {
    mutable_otn()->::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Otn::MergeFrom(from.otn());
  }
  if (from.has_ethernet()) {
    mutable_ethernet()->::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Ethernet::MergeFrom(from.ethernet());
  }
  if (from.has_ingress()) {
    mutable_ingress()->::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Ingress::MergeFrom(from.ingress());
  }
  if (from.has_state()) {
    mutable_state()->::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_State::MergeFrom(from.state());
  }
  if (from.has_config()) {
    mutable_config()->::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_Config::MergeFrom(from.config());
  }
  if (from.has_logical_channel_assignments()) {
    mutable_logical_channel_assignments()->::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel_LogicalChannelAssignments::MergeFrom(from.logical_channel_assignments());
  }
}

void TerminalDevice_LogicalChannels_Channel::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TerminalDevice_LogicalChannels_Channel::CopyFrom(const TerminalDevice_LogicalChannels_Channel& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TerminalDevice_LogicalChannels_Channel::IsInitialized() const {
  return true;
}

void TerminalDevice_LogicalChannels_Channel::Swap(TerminalDevice_LogicalChannels_Channel* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TerminalDevice_LogicalChannels_Channel::InternalSwap(TerminalDevice_LogicalChannels_Channel* other) {
  using std::swap;
  swap(otn_, other->otn_);
  swap(ethernet_, other->ethernet_);
  swap(ingress_, other->ingress_);
  swap(state_, other->state_);
  swap(config_, other->config_);
  swap(logical_channel_assignments_, other->logical_channel_assignments_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TerminalDevice_LogicalChannels_Channel::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TerminalDevice_LogicalChannels_ChannelKey::InitAsDefaultInstance() {
  ::openconfig::openconfig_terminal_device::_TerminalDevice_LogicalChannels_ChannelKey_default_instance_._instance.get_mutable()->channel_ = const_cast< ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel*>(
      ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TerminalDevice_LogicalChannels_ChannelKey::kIndexFieldNumber;
const int TerminalDevice_LogicalChannels_ChannelKey::kChannelFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TerminalDevice_LogicalChannels_ChannelKey::TerminalDevice_LogicalChannels_ChannelKey()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::InitDefaultsTerminalDevice_LogicalChannels_ChannelKey();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.ChannelKey)
}
TerminalDevice_LogicalChannels_ChannelKey::TerminalDevice_LogicalChannels_ChannelKey(const TerminalDevice_LogicalChannels_ChannelKey& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_channel()) {
    channel_ = new ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel(*from.channel_);
  } else {
    channel_ = NULL;
  }
  index_ = from.index_;
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.ChannelKey)
}

void TerminalDevice_LogicalChannels_ChannelKey::SharedCtor() {
  ::memset(&channel_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&index_) -
      reinterpret_cast<char*>(&channel_)) + sizeof(index_));
  _cached_size_ = 0;
}

TerminalDevice_LogicalChannels_ChannelKey::~TerminalDevice_LogicalChannels_ChannelKey() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.ChannelKey)
  SharedDtor();
}

void TerminalDevice_LogicalChannels_ChannelKey::SharedDtor() {
  if (this != internal_default_instance()) delete channel_;
}

void TerminalDevice_LogicalChannels_ChannelKey::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TerminalDevice_LogicalChannels_ChannelKey::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TerminalDevice_LogicalChannels_ChannelKey& TerminalDevice_LogicalChannels_ChannelKey::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::InitDefaultsTerminalDevice_LogicalChannels_ChannelKey();
  return *internal_default_instance();
}

TerminalDevice_LogicalChannels_ChannelKey* TerminalDevice_LogicalChannels_ChannelKey::New(::google::protobuf::Arena* arena) const {
  TerminalDevice_LogicalChannels_ChannelKey* n = new TerminalDevice_LogicalChannels_ChannelKey;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TerminalDevice_LogicalChannels_ChannelKey::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.ChannelKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && channel_ != NULL) {
    delete channel_;
  }
  channel_ = NULL;
  index_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool TerminalDevice_LogicalChannels_ChannelKey::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.ChannelKey)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 index = 1 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/index"];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel channel = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_channel()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.ChannelKey)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.ChannelKey)
  return false;
#undef DO_
}

void TerminalDevice_LogicalChannels_ChannelKey::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.ChannelKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 index = 1 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/index"];
  if (this->index() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->index(), output);
  }

  // .openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel channel = 2;
  if (this->has_channel()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->channel_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.ChannelKey)
}

::google::protobuf::uint8* TerminalDevice_LogicalChannels_ChannelKey::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.ChannelKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 index = 1 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/index"];
  if (this->index() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->index(), target);
  }

  // .openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel channel = 2;
  if (this->has_channel()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->channel_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.ChannelKey)
  return target;
}

size_t TerminalDevice_LogicalChannels_ChannelKey::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.ChannelKey)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.Channel channel = 2;
  if (this->has_channel()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->channel_);
  }

  // uint64 index = 1 [(.yext.schemapath) = "/terminal-device/logical-channels/channel/index"];
  if (this->index() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->index());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TerminalDevice_LogicalChannels_ChannelKey::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.ChannelKey)
  GOOGLE_DCHECK_NE(&from, this);
  const TerminalDevice_LogicalChannels_ChannelKey* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TerminalDevice_LogicalChannels_ChannelKey>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.ChannelKey)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.ChannelKey)
    MergeFrom(*source);
  }
}

void TerminalDevice_LogicalChannels_ChannelKey::MergeFrom(const TerminalDevice_LogicalChannels_ChannelKey& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.ChannelKey)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_channel()) {
    mutable_channel()->::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels_Channel::MergeFrom(from.channel());
  }
  if (from.index() != 0) {
    set_index(from.index());
  }
}

void TerminalDevice_LogicalChannels_ChannelKey::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.ChannelKey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TerminalDevice_LogicalChannels_ChannelKey::CopyFrom(const TerminalDevice_LogicalChannels_ChannelKey& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.ChannelKey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TerminalDevice_LogicalChannels_ChannelKey::IsInitialized() const {
  return true;
}

void TerminalDevice_LogicalChannels_ChannelKey::Swap(TerminalDevice_LogicalChannels_ChannelKey* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TerminalDevice_LogicalChannels_ChannelKey::InternalSwap(TerminalDevice_LogicalChannels_ChannelKey* other) {
  using std::swap;
  swap(channel_, other->channel_);
  swap(index_, other->index_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TerminalDevice_LogicalChannels_ChannelKey::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TerminalDevice_LogicalChannels::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TerminalDevice_LogicalChannels::kChannelFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TerminalDevice_LogicalChannels::TerminalDevice_LogicalChannels()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::InitDefaultsTerminalDevice_LogicalChannels();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels)
}
TerminalDevice_LogicalChannels::TerminalDevice_LogicalChannels(const TerminalDevice_LogicalChannels& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      channel_(from.channel_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels)
}

void TerminalDevice_LogicalChannels::SharedCtor() {
  _cached_size_ = 0;
}

TerminalDevice_LogicalChannels::~TerminalDevice_LogicalChannels() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels)
  SharedDtor();
}

void TerminalDevice_LogicalChannels::SharedDtor() {
}

void TerminalDevice_LogicalChannels::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TerminalDevice_LogicalChannels::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TerminalDevice_LogicalChannels& TerminalDevice_LogicalChannels::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::InitDefaultsTerminalDevice_LogicalChannels();
  return *internal_default_instance();
}

TerminalDevice_LogicalChannels* TerminalDevice_LogicalChannels::New(::google::protobuf::Arena* arena) const {
  TerminalDevice_LogicalChannels* n = new TerminalDevice_LogicalChannels;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TerminalDevice_LogicalChannels::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  channel_.Clear();
  _internal_metadata_.Clear();
}

bool TerminalDevice_LogicalChannels::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(4231231498u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.ChannelKey channel = 528903937 [(.yext.schemapath) = "/terminal-device/logical-channels/channel"];
      case 528903937: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 4231231498 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_channel()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels)
  return false;
#undef DO_
}

void TerminalDevice_LogicalChannels::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.ChannelKey channel = 528903937 [(.yext.schemapath) = "/terminal-device/logical-channels/channel"];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->channel_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      528903937, this->channel(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels)
}

::google::protobuf::uint8* TerminalDevice_LogicalChannels::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.ChannelKey channel = 528903937 [(.yext.schemapath) = "/terminal-device/logical-channels/channel"];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->channel_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        528903937, this->channel(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels)
  return target;
}

size_t TerminalDevice_LogicalChannels::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels.ChannelKey channel = 528903937 [(.yext.schemapath) = "/terminal-device/logical-channels/channel"];
  {
    unsigned int count = static_cast<unsigned int>(this->channel_size());
    total_size += 5UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->channel(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TerminalDevice_LogicalChannels::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels)
  GOOGLE_DCHECK_NE(&from, this);
  const TerminalDevice_LogicalChannels* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TerminalDevice_LogicalChannels>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels)
    MergeFrom(*source);
  }
}

void TerminalDevice_LogicalChannels::MergeFrom(const TerminalDevice_LogicalChannels& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  channel_.MergeFrom(from.channel_);
}

void TerminalDevice_LogicalChannels::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TerminalDevice_LogicalChannels::CopyFrom(const TerminalDevice_LogicalChannels& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TerminalDevice_LogicalChannels::IsInitialized() const {
  return true;
}

void TerminalDevice_LogicalChannels::Swap(TerminalDevice_LogicalChannels* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TerminalDevice_LogicalChannels::InternalSwap(TerminalDevice_LogicalChannels* other) {
  using std::swap;
  channel_.InternalSwap(&other->channel_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TerminalDevice_LogicalChannels::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TerminalDevice_OperationalModes_Mode_Config::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TerminalDevice_OperationalModes_Mode_Config::TerminalDevice_OperationalModes_Mode_Config()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::InitDefaultsTerminalDevice_OperationalModes_Mode_Config();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_terminal_device.TerminalDevice.OperationalModes.Mode.Config)
}
TerminalDevice_OperationalModes_Mode_Config::TerminalDevice_OperationalModes_Mode_Config(const TerminalDevice_OperationalModes_Mode_Config& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_terminal_device.TerminalDevice.OperationalModes.Mode.Config)
}

void TerminalDevice_OperationalModes_Mode_Config::SharedCtor() {
  _cached_size_ = 0;
}

TerminalDevice_OperationalModes_Mode_Config::~TerminalDevice_OperationalModes_Mode_Config() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_terminal_device.TerminalDevice.OperationalModes.Mode.Config)
  SharedDtor();
}

void TerminalDevice_OperationalModes_Mode_Config::SharedDtor() {
}

void TerminalDevice_OperationalModes_Mode_Config::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TerminalDevice_OperationalModes_Mode_Config::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TerminalDevice_OperationalModes_Mode_Config& TerminalDevice_OperationalModes_Mode_Config::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::InitDefaultsTerminalDevice_OperationalModes_Mode_Config();
  return *internal_default_instance();
}

TerminalDevice_OperationalModes_Mode_Config* TerminalDevice_OperationalModes_Mode_Config::New(::google::protobuf::Arena* arena) const {
  TerminalDevice_OperationalModes_Mode_Config* n = new TerminalDevice_OperationalModes_Mode_Config;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TerminalDevice_OperationalModes_Mode_Config::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_terminal_device.TerminalDevice.OperationalModes.Mode.Config)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool TerminalDevice_OperationalModes_Mode_Config::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_terminal_device.TerminalDevice.OperationalModes.Mode.Config)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_terminal_device.TerminalDevice.OperationalModes.Mode.Config)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_terminal_device.TerminalDevice.OperationalModes.Mode.Config)
  return false;
#undef DO_
}

void TerminalDevice_OperationalModes_Mode_Config::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_terminal_device.TerminalDevice.OperationalModes.Mode.Config)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_terminal_device.TerminalDevice.OperationalModes.Mode.Config)
}

::google::protobuf::uint8* TerminalDevice_OperationalModes_Mode_Config::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_terminal_device.TerminalDevice.OperationalModes.Mode.Config)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_terminal_device.TerminalDevice.OperationalModes.Mode.Config)
  return target;
}

size_t TerminalDevice_OperationalModes_Mode_Config::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_terminal_device.TerminalDevice.OperationalModes.Mode.Config)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TerminalDevice_OperationalModes_Mode_Config::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_terminal_device.TerminalDevice.OperationalModes.Mode.Config)
  GOOGLE_DCHECK_NE(&from, this);
  const TerminalDevice_OperationalModes_Mode_Config* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TerminalDevice_OperationalModes_Mode_Config>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_terminal_device.TerminalDevice.OperationalModes.Mode.Config)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_terminal_device.TerminalDevice.OperationalModes.Mode.Config)
    MergeFrom(*source);
  }
}

void TerminalDevice_OperationalModes_Mode_Config::MergeFrom(const TerminalDevice_OperationalModes_Mode_Config& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_terminal_device.TerminalDevice.OperationalModes.Mode.Config)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void TerminalDevice_OperationalModes_Mode_Config::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_terminal_device.TerminalDevice.OperationalModes.Mode.Config)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TerminalDevice_OperationalModes_Mode_Config::CopyFrom(const TerminalDevice_OperationalModes_Mode_Config& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_terminal_device.TerminalDevice.OperationalModes.Mode.Config)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TerminalDevice_OperationalModes_Mode_Config::IsInitialized() const {
  return true;
}

void TerminalDevice_OperationalModes_Mode_Config::Swap(TerminalDevice_OperationalModes_Mode_Config* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TerminalDevice_OperationalModes_Mode_Config::InternalSwap(TerminalDevice_OperationalModes_Mode_Config* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TerminalDevice_OperationalModes_Mode_Config::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TerminalDevice_OperationalModes_Mode_State::InitAsDefaultInstance() {
  ::openconfig::openconfig_terminal_device::_TerminalDevice_OperationalModes_Mode_State_default_instance_._instance.get_mutable()->description_ = const_cast< ::ywrapper::StringValue*>(
      ::ywrapper::StringValue::internal_default_instance());
  ::openconfig::openconfig_terminal_device::_TerminalDevice_OperationalModes_Mode_State_default_instance_._instance.get_mutable()->mode_id_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
  ::openconfig::openconfig_terminal_device::_TerminalDevice_OperationalModes_Mode_State_default_instance_._instance.get_mutable()->vendor_id_ = const_cast< ::ywrapper::StringValue*>(
      ::ywrapper::StringValue::internal_default_instance());
}
void TerminalDevice_OperationalModes_Mode_State::clear_description() {
  if (GetArenaNoVirtual() == NULL && description_ != NULL) {
    delete description_;
  }
  description_ = NULL;
}
void TerminalDevice_OperationalModes_Mode_State::clear_mode_id() {
  if (GetArenaNoVirtual() == NULL && mode_id_ != NULL) {
    delete mode_id_;
  }
  mode_id_ = NULL;
}
void TerminalDevice_OperationalModes_Mode_State::clear_vendor_id() {
  if (GetArenaNoVirtual() == NULL && vendor_id_ != NULL) {
    delete vendor_id_;
  }
  vendor_id_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TerminalDevice_OperationalModes_Mode_State::kDescriptionFieldNumber;
const int TerminalDevice_OperationalModes_Mode_State::kModeIdFieldNumber;
const int TerminalDevice_OperationalModes_Mode_State::kVendorIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TerminalDevice_OperationalModes_Mode_State::TerminalDevice_OperationalModes_Mode_State()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::InitDefaultsTerminalDevice_OperationalModes_Mode_State();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_terminal_device.TerminalDevice.OperationalModes.Mode.State)
}
TerminalDevice_OperationalModes_Mode_State::TerminalDevice_OperationalModes_Mode_State(const TerminalDevice_OperationalModes_Mode_State& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_mode_id()) {
    mode_id_ = new ::ywrapper::UintValue(*from.mode_id_);
  } else {
    mode_id_ = NULL;
  }
  if (from.has_description()) {
    description_ = new ::ywrapper::StringValue(*from.description_);
  } else {
    description_ = NULL;
  }
  if (from.has_vendor_id()) {
    vendor_id_ = new ::ywrapper::StringValue(*from.vendor_id_);
  } else {
    vendor_id_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_terminal_device.TerminalDevice.OperationalModes.Mode.State)
}

void TerminalDevice_OperationalModes_Mode_State::SharedCtor() {
  ::memset(&mode_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&vendor_id_) -
      reinterpret_cast<char*>(&mode_id_)) + sizeof(vendor_id_));
  _cached_size_ = 0;
}

TerminalDevice_OperationalModes_Mode_State::~TerminalDevice_OperationalModes_Mode_State() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_terminal_device.TerminalDevice.OperationalModes.Mode.State)
  SharedDtor();
}

void TerminalDevice_OperationalModes_Mode_State::SharedDtor() {
  if (this != internal_default_instance()) delete mode_id_;
  if (this != internal_default_instance()) delete description_;
  if (this != internal_default_instance()) delete vendor_id_;
}

void TerminalDevice_OperationalModes_Mode_State::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TerminalDevice_OperationalModes_Mode_State::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TerminalDevice_OperationalModes_Mode_State& TerminalDevice_OperationalModes_Mode_State::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::InitDefaultsTerminalDevice_OperationalModes_Mode_State();
  return *internal_default_instance();
}

TerminalDevice_OperationalModes_Mode_State* TerminalDevice_OperationalModes_Mode_State::New(::google::protobuf::Arena* arena) const {
  TerminalDevice_OperationalModes_Mode_State* n = new TerminalDevice_OperationalModes_Mode_State;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TerminalDevice_OperationalModes_Mode_State::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_terminal_device.TerminalDevice.OperationalModes.Mode.State)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && mode_id_ != NULL) {
    delete mode_id_;
  }
  mode_id_ = NULL;
  if (GetArenaNoVirtual() == NULL && description_ != NULL) {
    delete description_;
  }
  description_ = NULL;
  if (GetArenaNoVirtual() == NULL && vendor_id_ != NULL) {
    delete vendor_id_;
  }
  vendor_id_ = NULL;
  _internal_metadata_.Clear();
}

bool TerminalDevice_OperationalModes_Mode_State::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_terminal_device.TerminalDevice.OperationalModes.Mode.State)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(4214258010u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .ywrapper.UintValue mode_id = 74994658 [(.yext.schemapath) = "/terminal-device/operational-modes/mode/state/mode-id"];
      case 74994658: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 599957266 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_mode_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.StringValue description = 107447685 [(.yext.schemapath) = "/terminal-device/operational-modes/mode/state/description"];
      case 107447685: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 859581482 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_description()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.StringValue vendor_id = 526782251 [(.yext.schemapath) = "/terminal-device/operational-modes/mode/state/vendor-id"];
      case 526782251: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 4214258010 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_vendor_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_terminal_device.TerminalDevice.OperationalModes.Mode.State)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_terminal_device.TerminalDevice.OperationalModes.Mode.State)
  return false;
#undef DO_
}

void TerminalDevice_OperationalModes_Mode_State::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_terminal_device.TerminalDevice.OperationalModes.Mode.State)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ywrapper.UintValue mode_id = 74994658 [(.yext.schemapath) = "/terminal-device/operational-modes/mode/state/mode-id"];
  if (this->has_mode_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      74994658, *this->mode_id_, output);
  }

  // .ywrapper.StringValue description = 107447685 [(.yext.schemapath) = "/terminal-device/operational-modes/mode/state/description"];
  if (this->has_description()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      107447685, *this->description_, output);
  }

  // .ywrapper.StringValue vendor_id = 526782251 [(.yext.schemapath) = "/terminal-device/operational-modes/mode/state/vendor-id"];
  if (this->has_vendor_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      526782251, *this->vendor_id_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_terminal_device.TerminalDevice.OperationalModes.Mode.State)
}

::google::protobuf::uint8* TerminalDevice_OperationalModes_Mode_State::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_terminal_device.TerminalDevice.OperationalModes.Mode.State)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ywrapper.UintValue mode_id = 74994658 [(.yext.schemapath) = "/terminal-device/operational-modes/mode/state/mode-id"];
  if (this->has_mode_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        74994658, *this->mode_id_, deterministic, target);
  }

  // .ywrapper.StringValue description = 107447685 [(.yext.schemapath) = "/terminal-device/operational-modes/mode/state/description"];
  if (this->has_description()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        107447685, *this->description_, deterministic, target);
  }

  // .ywrapper.StringValue vendor_id = 526782251 [(.yext.schemapath) = "/terminal-device/operational-modes/mode/state/vendor-id"];
  if (this->has_vendor_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        526782251, *this->vendor_id_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_terminal_device.TerminalDevice.OperationalModes.Mode.State)
  return target;
}

size_t TerminalDevice_OperationalModes_Mode_State::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_terminal_device.TerminalDevice.OperationalModes.Mode.State)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .ywrapper.UintValue mode_id = 74994658 [(.yext.schemapath) = "/terminal-device/operational-modes/mode/state/mode-id"];
  if (this->has_mode_id()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->mode_id_);
  }

  // .ywrapper.StringValue description = 107447685 [(.yext.schemapath) = "/terminal-device/operational-modes/mode/state/description"];
  if (this->has_description()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->description_);
  }

  // .ywrapper.StringValue vendor_id = 526782251 [(.yext.schemapath) = "/terminal-device/operational-modes/mode/state/vendor-id"];
  if (this->has_vendor_id()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->vendor_id_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TerminalDevice_OperationalModes_Mode_State::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_terminal_device.TerminalDevice.OperationalModes.Mode.State)
  GOOGLE_DCHECK_NE(&from, this);
  const TerminalDevice_OperationalModes_Mode_State* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TerminalDevice_OperationalModes_Mode_State>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_terminal_device.TerminalDevice.OperationalModes.Mode.State)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_terminal_device.TerminalDevice.OperationalModes.Mode.State)
    MergeFrom(*source);
  }
}

void TerminalDevice_OperationalModes_Mode_State::MergeFrom(const TerminalDevice_OperationalModes_Mode_State& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_terminal_device.TerminalDevice.OperationalModes.Mode.State)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_mode_id()) {
    mutable_mode_id()->::ywrapper::UintValue::MergeFrom(from.mode_id());
  }
  if (from.has_description()) {
    mutable_description()->::ywrapper::StringValue::MergeFrom(from.description());
  }
  if (from.has_vendor_id()) {
    mutable_vendor_id()->::ywrapper::StringValue::MergeFrom(from.vendor_id());
  }
}

void TerminalDevice_OperationalModes_Mode_State::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_terminal_device.TerminalDevice.OperationalModes.Mode.State)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TerminalDevice_OperationalModes_Mode_State::CopyFrom(const TerminalDevice_OperationalModes_Mode_State& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_terminal_device.TerminalDevice.OperationalModes.Mode.State)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TerminalDevice_OperationalModes_Mode_State::IsInitialized() const {
  return true;
}

void TerminalDevice_OperationalModes_Mode_State::Swap(TerminalDevice_OperationalModes_Mode_State* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TerminalDevice_OperationalModes_Mode_State::InternalSwap(TerminalDevice_OperationalModes_Mode_State* other) {
  using std::swap;
  swap(mode_id_, other->mode_id_);
  swap(description_, other->description_);
  swap(vendor_id_, other->vendor_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TerminalDevice_OperationalModes_Mode_State::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TerminalDevice_OperationalModes_Mode::InitAsDefaultInstance() {
  ::openconfig::openconfig_terminal_device::_TerminalDevice_OperationalModes_Mode_default_instance_._instance.get_mutable()->config_ = const_cast< ::openconfig::openconfig_terminal_device::TerminalDevice_OperationalModes_Mode_Config*>(
      ::openconfig::openconfig_terminal_device::TerminalDevice_OperationalModes_Mode_Config::internal_default_instance());
  ::openconfig::openconfig_terminal_device::_TerminalDevice_OperationalModes_Mode_default_instance_._instance.get_mutable()->state_ = const_cast< ::openconfig::openconfig_terminal_device::TerminalDevice_OperationalModes_Mode_State*>(
      ::openconfig::openconfig_terminal_device::TerminalDevice_OperationalModes_Mode_State::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TerminalDevice_OperationalModes_Mode::kConfigFieldNumber;
const int TerminalDevice_OperationalModes_Mode::kStateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TerminalDevice_OperationalModes_Mode::TerminalDevice_OperationalModes_Mode()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::InitDefaultsTerminalDevice_OperationalModes_Mode();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_terminal_device.TerminalDevice.OperationalModes.Mode)
}
TerminalDevice_OperationalModes_Mode::TerminalDevice_OperationalModes_Mode(const TerminalDevice_OperationalModes_Mode& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_config()) {
    config_ = new ::openconfig::openconfig_terminal_device::TerminalDevice_OperationalModes_Mode_Config(*from.config_);
  } else {
    config_ = NULL;
  }
  if (from.has_state()) {
    state_ = new ::openconfig::openconfig_terminal_device::TerminalDevice_OperationalModes_Mode_State(*from.state_);
  } else {
    state_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_terminal_device.TerminalDevice.OperationalModes.Mode)
}

void TerminalDevice_OperationalModes_Mode::SharedCtor() {
  ::memset(&config_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&state_) -
      reinterpret_cast<char*>(&config_)) + sizeof(state_));
  _cached_size_ = 0;
}

TerminalDevice_OperationalModes_Mode::~TerminalDevice_OperationalModes_Mode() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_terminal_device.TerminalDevice.OperationalModes.Mode)
  SharedDtor();
}

void TerminalDevice_OperationalModes_Mode::SharedDtor() {
  if (this != internal_default_instance()) delete config_;
  if (this != internal_default_instance()) delete state_;
}

void TerminalDevice_OperationalModes_Mode::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TerminalDevice_OperationalModes_Mode::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TerminalDevice_OperationalModes_Mode& TerminalDevice_OperationalModes_Mode::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::InitDefaultsTerminalDevice_OperationalModes_Mode();
  return *internal_default_instance();
}

TerminalDevice_OperationalModes_Mode* TerminalDevice_OperationalModes_Mode::New(::google::protobuf::Arena* arena) const {
  TerminalDevice_OperationalModes_Mode* n = new TerminalDevice_OperationalModes_Mode;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TerminalDevice_OperationalModes_Mode::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_terminal_device.TerminalDevice.OperationalModes.Mode)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && config_ != NULL) {
    delete config_;
  }
  config_ = NULL;
  if (GetArenaNoVirtual() == NULL && state_ != NULL) {
    delete state_;
  }
  state_ = NULL;
  _internal_metadata_.Clear();
}

bool TerminalDevice_OperationalModes_Mode::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_terminal_device.TerminalDevice.OperationalModes.Mode)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(1671287698u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .openconfig.openconfig_terminal_device.TerminalDevice.OperationalModes.Mode.Config config = 187786493 [(.yext.schemapath) = "/terminal-device/operational-modes/mode/config"];
      case 187786493: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(234u /* 1502291946 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.openconfig_terminal_device.TerminalDevice.OperationalModes.Mode.State state = 208910962 [(.yext.schemapath) = "/terminal-device/operational-modes/mode/state"];
      case 208910962: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u /* 1671287698 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_state()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_terminal_device.TerminalDevice.OperationalModes.Mode)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_terminal_device.TerminalDevice.OperationalModes.Mode)
  return false;
#undef DO_
}

void TerminalDevice_OperationalModes_Mode::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_terminal_device.TerminalDevice.OperationalModes.Mode)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .openconfig.openconfig_terminal_device.TerminalDevice.OperationalModes.Mode.Config config = 187786493 [(.yext.schemapath) = "/terminal-device/operational-modes/mode/config"];
  if (this->has_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      187786493, *this->config_, output);
  }

  // .openconfig.openconfig_terminal_device.TerminalDevice.OperationalModes.Mode.State state = 208910962 [(.yext.schemapath) = "/terminal-device/operational-modes/mode/state"];
  if (this->has_state()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      208910962, *this->state_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_terminal_device.TerminalDevice.OperationalModes.Mode)
}

::google::protobuf::uint8* TerminalDevice_OperationalModes_Mode::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_terminal_device.TerminalDevice.OperationalModes.Mode)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .openconfig.openconfig_terminal_device.TerminalDevice.OperationalModes.Mode.Config config = 187786493 [(.yext.schemapath) = "/terminal-device/operational-modes/mode/config"];
  if (this->has_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        187786493, *this->config_, deterministic, target);
  }

  // .openconfig.openconfig_terminal_device.TerminalDevice.OperationalModes.Mode.State state = 208910962 [(.yext.schemapath) = "/terminal-device/operational-modes/mode/state"];
  if (this->has_state()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        208910962, *this->state_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_terminal_device.TerminalDevice.OperationalModes.Mode)
  return target;
}

size_t TerminalDevice_OperationalModes_Mode::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_terminal_device.TerminalDevice.OperationalModes.Mode)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .openconfig.openconfig_terminal_device.TerminalDevice.OperationalModes.Mode.Config config = 187786493 [(.yext.schemapath) = "/terminal-device/operational-modes/mode/config"];
  if (this->has_config()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->config_);
  }

  // .openconfig.openconfig_terminal_device.TerminalDevice.OperationalModes.Mode.State state = 208910962 [(.yext.schemapath) = "/terminal-device/operational-modes/mode/state"];
  if (this->has_state()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->state_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TerminalDevice_OperationalModes_Mode::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_terminal_device.TerminalDevice.OperationalModes.Mode)
  GOOGLE_DCHECK_NE(&from, this);
  const TerminalDevice_OperationalModes_Mode* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TerminalDevice_OperationalModes_Mode>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_terminal_device.TerminalDevice.OperationalModes.Mode)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_terminal_device.TerminalDevice.OperationalModes.Mode)
    MergeFrom(*source);
  }
}

void TerminalDevice_OperationalModes_Mode::MergeFrom(const TerminalDevice_OperationalModes_Mode& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_terminal_device.TerminalDevice.OperationalModes.Mode)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_config()) {
    mutable_config()->::openconfig::openconfig_terminal_device::TerminalDevice_OperationalModes_Mode_Config::MergeFrom(from.config());
  }
  if (from.has_state()) {
    mutable_state()->::openconfig::openconfig_terminal_device::TerminalDevice_OperationalModes_Mode_State::MergeFrom(from.state());
  }
}

void TerminalDevice_OperationalModes_Mode::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_terminal_device.TerminalDevice.OperationalModes.Mode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TerminalDevice_OperationalModes_Mode::CopyFrom(const TerminalDevice_OperationalModes_Mode& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_terminal_device.TerminalDevice.OperationalModes.Mode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TerminalDevice_OperationalModes_Mode::IsInitialized() const {
  return true;
}

void TerminalDevice_OperationalModes_Mode::Swap(TerminalDevice_OperationalModes_Mode* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TerminalDevice_OperationalModes_Mode::InternalSwap(TerminalDevice_OperationalModes_Mode* other) {
  using std::swap;
  swap(config_, other->config_);
  swap(state_, other->state_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TerminalDevice_OperationalModes_Mode::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TerminalDevice_OperationalModes_ModeKey::InitAsDefaultInstance() {
  ::openconfig::openconfig_terminal_device::_TerminalDevice_OperationalModes_ModeKey_default_instance_._instance.get_mutable()->mode_ = const_cast< ::openconfig::openconfig_terminal_device::TerminalDevice_OperationalModes_Mode*>(
      ::openconfig::openconfig_terminal_device::TerminalDevice_OperationalModes_Mode::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TerminalDevice_OperationalModes_ModeKey::kModeIdFieldNumber;
const int TerminalDevice_OperationalModes_ModeKey::kModeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TerminalDevice_OperationalModes_ModeKey::TerminalDevice_OperationalModes_ModeKey()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::InitDefaultsTerminalDevice_OperationalModes_ModeKey();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_terminal_device.TerminalDevice.OperationalModes.ModeKey)
}
TerminalDevice_OperationalModes_ModeKey::TerminalDevice_OperationalModes_ModeKey(const TerminalDevice_OperationalModes_ModeKey& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_mode()) {
    mode_ = new ::openconfig::openconfig_terminal_device::TerminalDevice_OperationalModes_Mode(*from.mode_);
  } else {
    mode_ = NULL;
  }
  mode_id_ = from.mode_id_;
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_terminal_device.TerminalDevice.OperationalModes.ModeKey)
}

void TerminalDevice_OperationalModes_ModeKey::SharedCtor() {
  ::memset(&mode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&mode_id_) -
      reinterpret_cast<char*>(&mode_)) + sizeof(mode_id_));
  _cached_size_ = 0;
}

TerminalDevice_OperationalModes_ModeKey::~TerminalDevice_OperationalModes_ModeKey() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_terminal_device.TerminalDevice.OperationalModes.ModeKey)
  SharedDtor();
}

void TerminalDevice_OperationalModes_ModeKey::SharedDtor() {
  if (this != internal_default_instance()) delete mode_;
}

void TerminalDevice_OperationalModes_ModeKey::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TerminalDevice_OperationalModes_ModeKey::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TerminalDevice_OperationalModes_ModeKey& TerminalDevice_OperationalModes_ModeKey::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::InitDefaultsTerminalDevice_OperationalModes_ModeKey();
  return *internal_default_instance();
}

TerminalDevice_OperationalModes_ModeKey* TerminalDevice_OperationalModes_ModeKey::New(::google::protobuf::Arena* arena) const {
  TerminalDevice_OperationalModes_ModeKey* n = new TerminalDevice_OperationalModes_ModeKey;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TerminalDevice_OperationalModes_ModeKey::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_terminal_device.TerminalDevice.OperationalModes.ModeKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && mode_ != NULL) {
    delete mode_;
  }
  mode_ = NULL;
  mode_id_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool TerminalDevice_OperationalModes_ModeKey::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_terminal_device.TerminalDevice.OperationalModes.ModeKey)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 mode_id = 1 [(.yext.schemapath) = "/terminal-device/operational-modes/mode/mode-id"];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &mode_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.openconfig_terminal_device.TerminalDevice.OperationalModes.Mode mode = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_mode()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_terminal_device.TerminalDevice.OperationalModes.ModeKey)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_terminal_device.TerminalDevice.OperationalModes.ModeKey)
  return false;
#undef DO_
}

void TerminalDevice_OperationalModes_ModeKey::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_terminal_device.TerminalDevice.OperationalModes.ModeKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 mode_id = 1 [(.yext.schemapath) = "/terminal-device/operational-modes/mode/mode-id"];
  if (this->mode_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->mode_id(), output);
  }

  // .openconfig.openconfig_terminal_device.TerminalDevice.OperationalModes.Mode mode = 2;
  if (this->has_mode()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->mode_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_terminal_device.TerminalDevice.OperationalModes.ModeKey)
}

::google::protobuf::uint8* TerminalDevice_OperationalModes_ModeKey::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_terminal_device.TerminalDevice.OperationalModes.ModeKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 mode_id = 1 [(.yext.schemapath) = "/terminal-device/operational-modes/mode/mode-id"];
  if (this->mode_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->mode_id(), target);
  }

  // .openconfig.openconfig_terminal_device.TerminalDevice.OperationalModes.Mode mode = 2;
  if (this->has_mode()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->mode_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_terminal_device.TerminalDevice.OperationalModes.ModeKey)
  return target;
}

size_t TerminalDevice_OperationalModes_ModeKey::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_terminal_device.TerminalDevice.OperationalModes.ModeKey)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .openconfig.openconfig_terminal_device.TerminalDevice.OperationalModes.Mode mode = 2;
  if (this->has_mode()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->mode_);
  }

  // uint64 mode_id = 1 [(.yext.schemapath) = "/terminal-device/operational-modes/mode/mode-id"];
  if (this->mode_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->mode_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TerminalDevice_OperationalModes_ModeKey::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_terminal_device.TerminalDevice.OperationalModes.ModeKey)
  GOOGLE_DCHECK_NE(&from, this);
  const TerminalDevice_OperationalModes_ModeKey* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TerminalDevice_OperationalModes_ModeKey>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_terminal_device.TerminalDevice.OperationalModes.ModeKey)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_terminal_device.TerminalDevice.OperationalModes.ModeKey)
    MergeFrom(*source);
  }
}

void TerminalDevice_OperationalModes_ModeKey::MergeFrom(const TerminalDevice_OperationalModes_ModeKey& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_terminal_device.TerminalDevice.OperationalModes.ModeKey)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_mode()) {
    mutable_mode()->::openconfig::openconfig_terminal_device::TerminalDevice_OperationalModes_Mode::MergeFrom(from.mode());
  }
  if (from.mode_id() != 0) {
    set_mode_id(from.mode_id());
  }
}

void TerminalDevice_OperationalModes_ModeKey::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_terminal_device.TerminalDevice.OperationalModes.ModeKey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TerminalDevice_OperationalModes_ModeKey::CopyFrom(const TerminalDevice_OperationalModes_ModeKey& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_terminal_device.TerminalDevice.OperationalModes.ModeKey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TerminalDevice_OperationalModes_ModeKey::IsInitialized() const {
  return true;
}

void TerminalDevice_OperationalModes_ModeKey::Swap(TerminalDevice_OperationalModes_ModeKey* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TerminalDevice_OperationalModes_ModeKey::InternalSwap(TerminalDevice_OperationalModes_ModeKey* other) {
  using std::swap;
  swap(mode_, other->mode_);
  swap(mode_id_, other->mode_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TerminalDevice_OperationalModes_ModeKey::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TerminalDevice_OperationalModes::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TerminalDevice_OperationalModes::kModeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TerminalDevice_OperationalModes::TerminalDevice_OperationalModes()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::InitDefaultsTerminalDevice_OperationalModes();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_terminal_device.TerminalDevice.OperationalModes)
}
TerminalDevice_OperationalModes::TerminalDevice_OperationalModes(const TerminalDevice_OperationalModes& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      mode_(from.mode_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_terminal_device.TerminalDevice.OperationalModes)
}

void TerminalDevice_OperationalModes::SharedCtor() {
  _cached_size_ = 0;
}

TerminalDevice_OperationalModes::~TerminalDevice_OperationalModes() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_terminal_device.TerminalDevice.OperationalModes)
  SharedDtor();
}

void TerminalDevice_OperationalModes::SharedDtor() {
}

void TerminalDevice_OperationalModes::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TerminalDevice_OperationalModes::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TerminalDevice_OperationalModes& TerminalDevice_OperationalModes::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::InitDefaultsTerminalDevice_OperationalModes();
  return *internal_default_instance();
}

TerminalDevice_OperationalModes* TerminalDevice_OperationalModes::New(::google::protobuf::Arena* arena) const {
  TerminalDevice_OperationalModes* n = new TerminalDevice_OperationalModes;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TerminalDevice_OperationalModes::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_terminal_device.TerminalDevice.OperationalModes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  mode_.Clear();
  _internal_metadata_.Clear();
}

bool TerminalDevice_OperationalModes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_terminal_device.TerminalDevice.OperationalModes)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(4063495106u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .openconfig.openconfig_terminal_device.TerminalDevice.OperationalModes.ModeKey mode = 507936888 [(.yext.schemapath) = "/terminal-device/operational-modes/mode"];
      case 507936888: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(194u /* 4063495106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_mode()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_terminal_device.TerminalDevice.OperationalModes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_terminal_device.TerminalDevice.OperationalModes)
  return false;
#undef DO_
}

void TerminalDevice_OperationalModes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_terminal_device.TerminalDevice.OperationalModes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .openconfig.openconfig_terminal_device.TerminalDevice.OperationalModes.ModeKey mode = 507936888 [(.yext.schemapath) = "/terminal-device/operational-modes/mode"];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->mode_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      507936888, this->mode(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_terminal_device.TerminalDevice.OperationalModes)
}

::google::protobuf::uint8* TerminalDevice_OperationalModes::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_terminal_device.TerminalDevice.OperationalModes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .openconfig.openconfig_terminal_device.TerminalDevice.OperationalModes.ModeKey mode = 507936888 [(.yext.schemapath) = "/terminal-device/operational-modes/mode"];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->mode_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        507936888, this->mode(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_terminal_device.TerminalDevice.OperationalModes)
  return target;
}

size_t TerminalDevice_OperationalModes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_terminal_device.TerminalDevice.OperationalModes)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .openconfig.openconfig_terminal_device.TerminalDevice.OperationalModes.ModeKey mode = 507936888 [(.yext.schemapath) = "/terminal-device/operational-modes/mode"];
  {
    unsigned int count = static_cast<unsigned int>(this->mode_size());
    total_size += 5UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->mode(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TerminalDevice_OperationalModes::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_terminal_device.TerminalDevice.OperationalModes)
  GOOGLE_DCHECK_NE(&from, this);
  const TerminalDevice_OperationalModes* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TerminalDevice_OperationalModes>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_terminal_device.TerminalDevice.OperationalModes)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_terminal_device.TerminalDevice.OperationalModes)
    MergeFrom(*source);
  }
}

void TerminalDevice_OperationalModes::MergeFrom(const TerminalDevice_OperationalModes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_terminal_device.TerminalDevice.OperationalModes)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  mode_.MergeFrom(from.mode_);
}

void TerminalDevice_OperationalModes::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_terminal_device.TerminalDevice.OperationalModes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TerminalDevice_OperationalModes::CopyFrom(const TerminalDevice_OperationalModes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_terminal_device.TerminalDevice.OperationalModes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TerminalDevice_OperationalModes::IsInitialized() const {
  return true;
}

void TerminalDevice_OperationalModes::Swap(TerminalDevice_OperationalModes* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TerminalDevice_OperationalModes::InternalSwap(TerminalDevice_OperationalModes* other) {
  using std::swap;
  mode_.InternalSwap(&other->mode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TerminalDevice_OperationalModes::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TerminalDevice_State::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TerminalDevice_State::TerminalDevice_State()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::InitDefaultsTerminalDevice_State();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_terminal_device.TerminalDevice.State)
}
TerminalDevice_State::TerminalDevice_State(const TerminalDevice_State& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_terminal_device.TerminalDevice.State)
}

void TerminalDevice_State::SharedCtor() {
  _cached_size_ = 0;
}

TerminalDevice_State::~TerminalDevice_State() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_terminal_device.TerminalDevice.State)
  SharedDtor();
}

void TerminalDevice_State::SharedDtor() {
}

void TerminalDevice_State::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TerminalDevice_State::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TerminalDevice_State& TerminalDevice_State::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::InitDefaultsTerminalDevice_State();
  return *internal_default_instance();
}

TerminalDevice_State* TerminalDevice_State::New(::google::protobuf::Arena* arena) const {
  TerminalDevice_State* n = new TerminalDevice_State;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TerminalDevice_State::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_terminal_device.TerminalDevice.State)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool TerminalDevice_State::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_terminal_device.TerminalDevice.State)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_terminal_device.TerminalDevice.State)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_terminal_device.TerminalDevice.State)
  return false;
#undef DO_
}

void TerminalDevice_State::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_terminal_device.TerminalDevice.State)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_terminal_device.TerminalDevice.State)
}

::google::protobuf::uint8* TerminalDevice_State::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_terminal_device.TerminalDevice.State)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_terminal_device.TerminalDevice.State)
  return target;
}

size_t TerminalDevice_State::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_terminal_device.TerminalDevice.State)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TerminalDevice_State::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_terminal_device.TerminalDevice.State)
  GOOGLE_DCHECK_NE(&from, this);
  const TerminalDevice_State* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TerminalDevice_State>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_terminal_device.TerminalDevice.State)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_terminal_device.TerminalDevice.State)
    MergeFrom(*source);
  }
}

void TerminalDevice_State::MergeFrom(const TerminalDevice_State& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_terminal_device.TerminalDevice.State)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void TerminalDevice_State::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_terminal_device.TerminalDevice.State)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TerminalDevice_State::CopyFrom(const TerminalDevice_State& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_terminal_device.TerminalDevice.State)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TerminalDevice_State::IsInitialized() const {
  return true;
}

void TerminalDevice_State::Swap(TerminalDevice_State* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TerminalDevice_State::InternalSwap(TerminalDevice_State* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TerminalDevice_State::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TerminalDevice::InitAsDefaultInstance() {
  ::openconfig::openconfig_terminal_device::_TerminalDevice_default_instance_._instance.get_mutable()->config_ = const_cast< ::openconfig::openconfig_terminal_device::TerminalDevice_Config*>(
      ::openconfig::openconfig_terminal_device::TerminalDevice_Config::internal_default_instance());
  ::openconfig::openconfig_terminal_device::_TerminalDevice_default_instance_._instance.get_mutable()->logical_channels_ = const_cast< ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels*>(
      ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels::internal_default_instance());
  ::openconfig::openconfig_terminal_device::_TerminalDevice_default_instance_._instance.get_mutable()->operational_modes_ = const_cast< ::openconfig::openconfig_terminal_device::TerminalDevice_OperationalModes*>(
      ::openconfig::openconfig_terminal_device::TerminalDevice_OperationalModes::internal_default_instance());
  ::openconfig::openconfig_terminal_device::_TerminalDevice_default_instance_._instance.get_mutable()->state_ = const_cast< ::openconfig::openconfig_terminal_device::TerminalDevice_State*>(
      ::openconfig::openconfig_terminal_device::TerminalDevice_State::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TerminalDevice::kConfigFieldNumber;
const int TerminalDevice::kLogicalChannelsFieldNumber;
const int TerminalDevice::kOperationalModesFieldNumber;
const int TerminalDevice::kStateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TerminalDevice::TerminalDevice()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::InitDefaultsTerminalDevice();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_terminal_device.TerminalDevice)
}
TerminalDevice::TerminalDevice(const TerminalDevice& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_config()) {
    config_ = new ::openconfig::openconfig_terminal_device::TerminalDevice_Config(*from.config_);
  } else {
    config_ = NULL;
  }
  if (from.has_operational_modes()) {
    operational_modes_ = new ::openconfig::openconfig_terminal_device::TerminalDevice_OperationalModes(*from.operational_modes_);
  } else {
    operational_modes_ = NULL;
  }
  if (from.has_state()) {
    state_ = new ::openconfig::openconfig_terminal_device::TerminalDevice_State(*from.state_);
  } else {
    state_ = NULL;
  }
  if (from.has_logical_channels()) {
    logical_channels_ = new ::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels(*from.logical_channels_);
  } else {
    logical_channels_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_terminal_device.TerminalDevice)
}

void TerminalDevice::SharedCtor() {
  ::memset(&config_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&logical_channels_) -
      reinterpret_cast<char*>(&config_)) + sizeof(logical_channels_));
  _cached_size_ = 0;
}

TerminalDevice::~TerminalDevice() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_terminal_device.TerminalDevice)
  SharedDtor();
}

void TerminalDevice::SharedDtor() {
  if (this != internal_default_instance()) delete config_;
  if (this != internal_default_instance()) delete operational_modes_;
  if (this != internal_default_instance()) delete state_;
  if (this != internal_default_instance()) delete logical_channels_;
}

void TerminalDevice::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TerminalDevice::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TerminalDevice& TerminalDevice::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::InitDefaultsTerminalDevice();
  return *internal_default_instance();
}

TerminalDevice* TerminalDevice::New(::google::protobuf::Arena* arena) const {
  TerminalDevice* n = new TerminalDevice;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TerminalDevice::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_terminal_device.TerminalDevice)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && config_ != NULL) {
    delete config_;
  }
  config_ = NULL;
  if (GetArenaNoVirtual() == NULL && operational_modes_ != NULL) {
    delete operational_modes_;
  }
  operational_modes_ = NULL;
  if (GetArenaNoVirtual() == NULL && state_ != NULL) {
    delete state_;
  }
  state_ = NULL;
  if (GetArenaNoVirtual() == NULL && logical_channels_ != NULL) {
    delete logical_channels_;
  }
  logical_channels_ = NULL;
  _internal_metadata_.Clear();
}

bool TerminalDevice::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_terminal_device.TerminalDevice)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(3961336298u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .openconfig.openconfig_terminal_device.TerminalDevice.Config config = 4498449 [(.yext.schemapath) = "/terminal-device/config"];
      case 4498449: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u /* 35987594 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.openconfig_terminal_device.TerminalDevice.OperationalModes operational_modes = 54138558 [(.yext.schemapath) = "/terminal-device/operational-modes"];
      case 54138558: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(242u /* 433108466 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_operational_modes()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.openconfig_terminal_device.TerminalDevice.State state = 150416646 [(.yext.schemapath) = "/terminal-device/state"];
      case 150416646: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 1203333170 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_state()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels logical_channels = 495167037 [(.yext.schemapath) = "/terminal-device/logical-channels"];
      case 495167037: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(234u /* 3961336298 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_logical_channels()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_terminal_device.TerminalDevice)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_terminal_device.TerminalDevice)
  return false;
#undef DO_
}

void TerminalDevice::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_terminal_device.TerminalDevice)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .openconfig.openconfig_terminal_device.TerminalDevice.Config config = 4498449 [(.yext.schemapath) = "/terminal-device/config"];
  if (this->has_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4498449, *this->config_, output);
  }

  // .openconfig.openconfig_terminal_device.TerminalDevice.OperationalModes operational_modes = 54138558 [(.yext.schemapath) = "/terminal-device/operational-modes"];
  if (this->has_operational_modes()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      54138558, *this->operational_modes_, output);
  }

  // .openconfig.openconfig_terminal_device.TerminalDevice.State state = 150416646 [(.yext.schemapath) = "/terminal-device/state"];
  if (this->has_state()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      150416646, *this->state_, output);
  }

  // .openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels logical_channels = 495167037 [(.yext.schemapath) = "/terminal-device/logical-channels"];
  if (this->has_logical_channels()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      495167037, *this->logical_channels_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_terminal_device.TerminalDevice)
}

::google::protobuf::uint8* TerminalDevice::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_terminal_device.TerminalDevice)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .openconfig.openconfig_terminal_device.TerminalDevice.Config config = 4498449 [(.yext.schemapath) = "/terminal-device/config"];
  if (this->has_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4498449, *this->config_, deterministic, target);
  }

  // .openconfig.openconfig_terminal_device.TerminalDevice.OperationalModes operational_modes = 54138558 [(.yext.schemapath) = "/terminal-device/operational-modes"];
  if (this->has_operational_modes()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        54138558, *this->operational_modes_, deterministic, target);
  }

  // .openconfig.openconfig_terminal_device.TerminalDevice.State state = 150416646 [(.yext.schemapath) = "/terminal-device/state"];
  if (this->has_state()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        150416646, *this->state_, deterministic, target);
  }

  // .openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels logical_channels = 495167037 [(.yext.schemapath) = "/terminal-device/logical-channels"];
  if (this->has_logical_channels()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        495167037, *this->logical_channels_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_terminal_device.TerminalDevice)
  return target;
}

size_t TerminalDevice::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_terminal_device.TerminalDevice)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .openconfig.openconfig_terminal_device.TerminalDevice.Config config = 4498449 [(.yext.schemapath) = "/terminal-device/config"];
  if (this->has_config()) {
    total_size += 4 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->config_);
  }

  // .openconfig.openconfig_terminal_device.TerminalDevice.OperationalModes operational_modes = 54138558 [(.yext.schemapath) = "/terminal-device/operational-modes"];
  if (this->has_operational_modes()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->operational_modes_);
  }

  // .openconfig.openconfig_terminal_device.TerminalDevice.State state = 150416646 [(.yext.schemapath) = "/terminal-device/state"];
  if (this->has_state()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->state_);
  }

  // .openconfig.openconfig_terminal_device.TerminalDevice.LogicalChannels logical_channels = 495167037 [(.yext.schemapath) = "/terminal-device/logical-channels"];
  if (this->has_logical_channels()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->logical_channels_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TerminalDevice::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_terminal_device.TerminalDevice)
  GOOGLE_DCHECK_NE(&from, this);
  const TerminalDevice* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TerminalDevice>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_terminal_device.TerminalDevice)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_terminal_device.TerminalDevice)
    MergeFrom(*source);
  }
}

void TerminalDevice::MergeFrom(const TerminalDevice& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_terminal_device.TerminalDevice)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_config()) {
    mutable_config()->::openconfig::openconfig_terminal_device::TerminalDevice_Config::MergeFrom(from.config());
  }
  if (from.has_operational_modes()) {
    mutable_operational_modes()->::openconfig::openconfig_terminal_device::TerminalDevice_OperationalModes::MergeFrom(from.operational_modes());
  }
  if (from.has_state()) {
    mutable_state()->::openconfig::openconfig_terminal_device::TerminalDevice_State::MergeFrom(from.state());
  }
  if (from.has_logical_channels()) {
    mutable_logical_channels()->::openconfig::openconfig_terminal_device::TerminalDevice_LogicalChannels::MergeFrom(from.logical_channels());
  }
}

void TerminalDevice::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_terminal_device.TerminalDevice)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TerminalDevice::CopyFrom(const TerminalDevice& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_terminal_device.TerminalDevice)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TerminalDevice::IsInitialized() const {
  return true;
}

void TerminalDevice::Swap(TerminalDevice* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TerminalDevice::InternalSwap(TerminalDevice* other) {
  using std::swap;
  swap(config_, other->config_);
  swap(operational_modes_, other->operational_modes_);
  swap(state_, other->state_);
  swap(logical_channels_, other->logical_channels_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TerminalDevice::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fterminal_5fdevice_2fopenconfig_5fterminal_5fdevice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace openconfig_terminal_device
}  // namespace openconfig

// @@protoc_insertion_point(global_scope)
